
traverse.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000027e  00800100  0000416a  000041fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000416a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000118  0080037e  0080037e  0000447c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000447c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000044d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000560  00000000  00000000  00004518  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000cb9c  00000000  00000000  00004a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000028a5  00000000  00000000  00011614  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000039de  00000000  00000000  00013eb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001494  00000000  00000000  00017898  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003233  00000000  00000000  00018d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000056f6  00000000  00000000  0001bf5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004f0  00000000  00000000  00021655  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__dtors_end>
       4:	0c 94 87 0a 	jmp	0x150e	; 0x150e <__vector_1>
       8:	0c 94 b8 0a 	jmp	0x1570	; 0x1570 <__vector_2>
       c:	0c 94 e9 0a 	jmp	0x15d2	; 0x15d2 <__vector_3>
      10:	0c 94 96 0b 	jmp	0x172c	; 0x172c <__vector_4>
      14:	0c 94 43 0c 	jmp	0x1886	; 0x1886 <__vector_5>
      18:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      1c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      20:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      24:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      28:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      2c:	0c 94 fa 0d 	jmp	0x1bf4	; 0x1bf4 <__vector_11>
      30:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      34:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__vector_13>
      38:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      3c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      40:	0c 94 04 1b 	jmp	0x3608	; 0x3608 <__vector_16>
      44:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      48:	0c 94 fa 18 	jmp	0x31f4	; 0x31f4 <__vector_18>
      4c:	0c 94 2c 19 	jmp	0x3258	; 0x3258 <__vector_19>
      50:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      54:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      58:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      5c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      60:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      64:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 01       	movw	r0, r0
      6a:	02 03       	mulsu	r16, r18
      6c:	04 05       	cpc	r16, r4
      6e:	06 07       	cpc	r16, r22
      70:	00 01       	movw	r0, r0
      72:	02 03       	mulsu	r16, r18
      74:	04 05       	cpc	r16, r4
      76:	00 01       	movw	r0, r0
      78:	02 03       	mulsu	r16, r18
      7a:	04 05       	cpc	r16, r4

0000007c <digital_pin_to_bit_mask_PGM>:
      7c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      8c:	04 08 10 20                                         ... 

00000090 <digital_pin_to_port_PGM>:
      90:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      a0:	03 03 03 03                                         ....

000000a4 <port_to_input_PGM>:
      a4:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

000000ae <port_to_output_PGM>:
      ae:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000b8 <port_to_mode_PGM>:
      b8:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000c2 <__ctors_start>:
      c2:	35 16       	cp	r3, r21
      c4:	5c 19       	sub	r21, r12

000000c6 <__ctors_end>:
      c6:	42 16       	cp	r4, r18

000000c8 <__dtors_end>:
      c8:	11 24       	eor	r1, r1
      ca:	1f be       	out	0x3f, r1	; 63
      cc:	cf ef       	ldi	r28, 0xFF	; 255
      ce:	d8 e0       	ldi	r29, 0x08	; 8
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_copy_data>:
      d4:	13 e0       	ldi	r17, 0x03	; 3
      d6:	a0 e0       	ldi	r26, 0x00	; 0
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	ea e6       	ldi	r30, 0x6A	; 106
      dc:	f1 e4       	ldi	r31, 0x41	; 65
      de:	02 c0       	rjmp	.+4      	; 0xe4 <__do_copy_data+0x10>
      e0:	05 90       	lpm	r0, Z+
      e2:	0d 92       	st	X+, r0
      e4:	ae 37       	cpi	r26, 0x7E	; 126
      e6:	b1 07       	cpc	r27, r17
      e8:	d9 f7       	brne	.-10     	; 0xe0 <__do_copy_data+0xc>

000000ea <__do_clear_bss>:
      ea:	24 e0       	ldi	r18, 0x04	; 4
      ec:	ae e7       	ldi	r26, 0x7E	; 126
      ee:	b3 e0       	ldi	r27, 0x03	; 3
      f0:	01 c0       	rjmp	.+2      	; 0xf4 <.do_clear_bss_start>

000000f2 <.do_clear_bss_loop>:
      f2:	1d 92       	st	X+, r1

000000f4 <.do_clear_bss_start>:
      f4:	a6 39       	cpi	r26, 0x96	; 150
      f6:	b2 07       	cpc	r27, r18
      f8:	e1 f7       	brne	.-8      	; 0xf2 <.do_clear_bss_loop>

000000fa <__do_global_ctors>:
      fa:	10 e0       	ldi	r17, 0x00	; 0
      fc:	c3 e6       	ldi	r28, 0x63	; 99
      fe:	d0 e0       	ldi	r29, 0x00	; 0
     100:	04 c0       	rjmp	.+8      	; 0x10a <__do_global_ctors+0x10>
     102:	21 97       	sbiw	r28, 0x01	; 1
     104:	fe 01       	movw	r30, r28
     106:	0e 94 2d 1c 	call	0x385a	; 0x385a <__tablejump2__>
     10a:	c1 36       	cpi	r28, 0x61	; 97
     10c:	d1 07       	cpc	r29, r17
     10e:	c9 f7       	brne	.-14     	; 0x102 <__do_global_ctors+0x8>
     110:	0e 94 8a 19 	call	0x3314	; 0x3314 <main>
     114:	0c 94 a8 20 	jmp	0x4150	; 0x4150 <__do_global_dtors>

00000118 <__bad_interrupt>:
     118:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011c <_ZN17ADC_ConfigurationC1Ev>:

#include <Arduino.h>
#include "ADC_Configuration.h"

// default constructor
ADC_Configuration::ADC_Configuration()
     11c:	cf 93       	push	r28
     11e:	df 93       	push	r29
     120:	00 d0       	rcall	.+0      	; 0x122 <_ZN17ADC_ConfigurationC1Ev+0x6>
     122:	cd b7       	in	r28, 0x3d	; 61
     124:	de b7       	in	r29, 0x3e	; 62
     126:	9a 83       	std	Y+2, r25	; 0x02
     128:	89 83       	std	Y+1, r24	; 0x01
{
  
} //ADC_Configuration
     12a:	00 00       	nop
     12c:	0f 90       	pop	r0
     12e:	0f 90       	pop	r0
     130:	df 91       	pop	r29
     132:	cf 91       	pop	r28
     134:	08 95       	ret

00000136 <_ZN17ADC_Configuration8SetupADCEv>:

void ADC_Configuration::SetupADC(void)
  {
     136:	cf 93       	push	r28
     138:	df 93       	push	r29
     13a:	cd b7       	in	r28, 0x3d	; 61
     13c:	de b7       	in	r29, 0x3e	; 62
    #if FASTADC
    // set prescale to 16
    sbi(ADCSRA,ADPS2) ;
     13e:	8a e7       	ldi	r24, 0x7A	; 122
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	2a e7       	ldi	r18, 0x7A	; 122
     144:	30 e0       	ldi	r19, 0x00	; 0
     146:	f9 01       	movw	r30, r18
     148:	20 81       	ld	r18, Z
     14a:	24 60       	ori	r18, 0x04	; 4
     14c:	fc 01       	movw	r30, r24
     14e:	20 83       	st	Z, r18
    cbi(ADCSRA,ADPS1) ;
     150:	8a e7       	ldi	r24, 0x7A	; 122
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	2a e7       	ldi	r18, 0x7A	; 122
     156:	30 e0       	ldi	r19, 0x00	; 0
     158:	f9 01       	movw	r30, r18
     15a:	20 81       	ld	r18, Z
     15c:	2d 7f       	andi	r18, 0xFD	; 253
     15e:	fc 01       	movw	r30, r24
     160:	20 83       	st	Z, r18
    cbi(ADCSRA,ADPS0) ;
     162:	8a e7       	ldi	r24, 0x7A	; 122
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	2a e7       	ldi	r18, 0x7A	; 122
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	f9 01       	movw	r30, r18
     16c:	20 81       	ld	r18, Z
     16e:	2e 7f       	andi	r18, 0xFE	; 254
     170:	fc 01       	movw	r30, r24
     172:	20 83       	st	Z, r18
    #endif
  }
     174:	00 00       	nop
     176:	df 91       	pop	r29
     178:	cf 91       	pop	r28
     17a:	08 95       	ret

0000017c <_ZN17ADC_ConfigurationD1Ev>:


// default destructor
ADC_Configuration::~ADC_Configuration()
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	00 d0       	rcall	.+0      	; 0x182 <_ZN17ADC_ConfigurationD1Ev+0x6>
     182:	cd b7       	in	r28, 0x3d	; 61
     184:	de b7       	in	r29, 0x3e	; 62
     186:	9a 83       	std	Y+2, r25	; 0x02
     188:	89 83       	std	Y+1, r24	; 0x01
{
} //~ADC_Configuration
     18a:	00 00       	nop
     18c:	0f 90       	pop	r0
     18e:	0f 90       	pop	r0
     190:	df 91       	pop	r29
     192:	cf 91       	pop	r28
     194:	08 95       	ret

00000196 <_ZN12Math_HelpersC1Ev>:
  {
    rangedValue =  newBegin - (pow(normalizedCurVal, curve) * NewRange);
  }

  return rangedValue;
}
     196:	cf 93       	push	r28
     198:	df 93       	push	r29
     19a:	00 d0       	rcall	.+0      	; 0x19c <_ZN12Math_HelpersC1Ev+0x6>
     19c:	cd b7       	in	r28, 0x3d	; 61
     19e:	de b7       	in	r29, 0x3e	; 62
     1a0:	9a 83       	std	Y+2, r25	; 0x02
     1a2:	89 83       	std	Y+1, r24	; 0x01
     1a4:	00 00       	nop
     1a6:	0f 90       	pop	r0
     1a8:	0f 90       	pop	r0
     1aa:	df 91       	pop	r29
     1ac:	cf 91       	pop	r28
     1ae:	08 95       	ret

000001b0 <_ZN12Math_HelpersD1Ev>:

// default destructor
Math_Helpers::~Math_Helpers()
     1b0:	cf 93       	push	r28
     1b2:	df 93       	push	r29
     1b4:	00 d0       	rcall	.+0      	; 0x1b6 <_ZN12Math_HelpersD1Ev+0x6>
     1b6:	cd b7       	in	r28, 0x3d	; 61
     1b8:	de b7       	in	r29, 0x3e	; 62
     1ba:	9a 83       	std	Y+2, r25	; 0x02
     1bc:	89 83       	std	Y+1, r24	; 0x01
{
} //~Math_Helpers
     1be:	00 00       	nop
     1c0:	0f 90       	pop	r0
     1c2:	0f 90       	pop	r0
     1c4:	df 91       	pop	r29
     1c6:	cf 91       	pop	r28
     1c8:	08 95       	ret

000001ca <_ZL8Home_cmdiPcS_>:

	sprintf(output + strlen(output),"%s", s2);

	return output;

}
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	00 d0       	rcall	.+0      	; 0x1d0 <_ZL8Home_cmdiPcS_+0x6>
     1d0:	00 d0       	rcall	.+0      	; 0x1d2 <_ZL8Home_cmdiPcS_+0x8>
     1d2:	00 d0       	rcall	.+0      	; 0x1d4 <_ZL8Home_cmdiPcS_+0xa>
     1d4:	cd b7       	in	r28, 0x3d	; 61
     1d6:	de b7       	in	r29, 0x3e	; 62
     1d8:	9a 83       	std	Y+2, r25	; 0x02
     1da:	89 83       	std	Y+1, r24	; 0x01
     1dc:	7c 83       	std	Y+4, r23	; 0x04
     1de:	6b 83       	std	Y+3, r22	; 0x03
     1e0:	5e 83       	std	Y+6, r21	; 0x06
     1e2:	4d 83       	std	Y+5, r20	; 0x05
     1e4:	65 ec       	ldi	r22, 0xC5	; 197
     1e6:	71 e0       	ldi	r23, 0x01	; 1
     1e8:	8e ee       	ldi	r24, 0xEE	; 238
     1ea:	93 e0       	ldi	r25, 0x03	; 3
     1ec:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     1f0:	10 92 c2 01 	sts	0x01C2, r1	; 0x8001c2 <RUN_MODE>
     1f4:	00 00       	nop
     1f6:	26 96       	adiw	r28, 0x06	; 6
     1f8:	0f b6       	in	r0, 0x3f	; 63
     1fa:	f8 94       	cli
     1fc:	de bf       	out	0x3e, r29	; 62
     1fe:	0f be       	out	0x3f, r0	; 63
     200:	cd bf       	out	0x3d, r28	; 61
     202:	df 91       	pop	r29
     204:	cf 91       	pop	r28
     206:	08 95       	ret

00000208 <_ZL12GetSteps_cmdiPcS_>:
     208:	cf 93       	push	r28
     20a:	df 93       	push	r29
     20c:	00 d0       	rcall	.+0      	; 0x20e <_ZL12GetSteps_cmdiPcS_+0x6>
     20e:	00 d0       	rcall	.+0      	; 0x210 <_ZL12GetSteps_cmdiPcS_+0x8>
     210:	00 d0       	rcall	.+0      	; 0x212 <_ZL12GetSteps_cmdiPcS_+0xa>
     212:	cd b7       	in	r28, 0x3d	; 61
     214:	de b7       	in	r29, 0x3e	; 62
     216:	9a 83       	std	Y+2, r25	; 0x02
     218:	89 83       	std	Y+1, r24	; 0x01
     21a:	7c 83       	std	Y+4, r23	; 0x04
     21c:	6b 83       	std	Y+3, r22	; 0x03
     21e:	5e 83       	std	Y+6, r21	; 0x06
     220:	4d 83       	std	Y+5, r20	; 0x05
     222:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <STEPS>
     226:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <STEPS+0x1>
     22a:	a0 91 de 03 	lds	r26, 0x03DE	; 0x8003de <STEPS+0x2>
     22e:	b0 91 df 03 	lds	r27, 0x03DF	; 0x8003df <STEPS+0x3>
     232:	2a e0       	ldi	r18, 0x0A	; 10
     234:	30 e0       	ldi	r19, 0x00	; 0
     236:	ac 01       	movw	r20, r24
     238:	bd 01       	movw	r22, r26
     23a:	8e ee       	ldi	r24, 0xEE	; 238
     23c:	93 e0       	ldi	r25, 0x03	; 3
     23e:	0e 94 88 1a 	call	0x3510	; 0x3510 <_ZN5Print7printlnEli>
     242:	00 00       	nop
     244:	26 96       	adiw	r28, 0x06	; 6
     246:	0f b6       	in	r0, 0x3f	; 63
     248:	f8 94       	cli
     24a:	de bf       	out	0x3e, r29	; 62
     24c:	0f be       	out	0x3f, r0	; 63
     24e:	cd bf       	out	0x3d, r28	; 61
     250:	df 91       	pop	r29
     252:	cf 91       	pop	r28
     254:	08 95       	ret

00000256 <_ZL15TraverseRPM_cmdiPcS_>:
     256:	0f 93       	push	r16
     258:	1f 93       	push	r17
     25a:	cf 93       	push	r28
     25c:	df 93       	push	r29
     25e:	cd b7       	in	r28, 0x3d	; 61
     260:	de b7       	in	r29, 0x3e	; 62
     262:	c8 54       	subi	r28, 0x48	; 72
     264:	d1 09       	sbc	r29, r1
     266:	0f b6       	in	r0, 0x3f	; 63
     268:	f8 94       	cli
     26a:	de bf       	out	0x3e, r29	; 62
     26c:	0f be       	out	0x3f, r0	; 63
     26e:	cd bf       	out	0x3d, r28	; 61
     270:	9e 01       	movw	r18, r28
     272:	2d 5b       	subi	r18, 0xBD	; 189
     274:	3f 4f       	sbci	r19, 0xFF	; 255
     276:	f9 01       	movw	r30, r18
     278:	91 83       	std	Z+1, r25	; 0x01
     27a:	80 83       	st	Z, r24
     27c:	ce 01       	movw	r24, r28
     27e:	8b 5b       	subi	r24, 0xBB	; 187
     280:	9f 4f       	sbci	r25, 0xFF	; 255
     282:	fc 01       	movw	r30, r24
     284:	71 83       	std	Z+1, r23	; 0x01
     286:	60 83       	st	Z, r22
     288:	ce 01       	movw	r24, r28
     28a:	89 5b       	subi	r24, 0xB9	; 185
     28c:	9f 4f       	sbci	r25, 0xFF	; 255
     28e:	fc 01       	movw	r30, r24
     290:	51 83       	std	Z+1, r21	; 0x01
     292:	40 83       	st	Z, r20
     294:	ce 01       	movw	r24, r28
     296:	89 5b       	subi	r24, 0xB9	; 185
     298:	9f 4f       	sbci	r25, 0xFF	; 255
     29a:	fc 01       	movw	r30, r24
     29c:	80 81       	ld	r24, Z
     29e:	91 81       	ldd	r25, Z+1	; 0x01
     2a0:	89 2b       	or	r24, r25
     2a2:	09 f4       	brne	.+2      	; 0x2a6 <_ZL15TraverseRPM_cmdiPcS_+0x50>
     2a4:	6a c0       	rjmp	.+212    	; 0x37a <_ZL15TraverseRPM_cmdiPcS_+0x124>
     2a6:	1a 82       	std	Y+2, r1	; 0x02
     2a8:	19 82       	std	Y+1, r1	; 0x01
     2aa:	89 81       	ldd	r24, Y+1	; 0x01
     2ac:	9a 81       	ldd	r25, Y+2	; 0x02
     2ae:	9e 01       	movw	r18, r28
     2b0:	29 5b       	subi	r18, 0xB9	; 185
     2b2:	3f 4f       	sbci	r19, 0xFF	; 255
     2b4:	f9 01       	movw	r30, r18
     2b6:	20 81       	ld	r18, Z
     2b8:	31 81       	ldd	r19, Z+1	; 0x01
     2ba:	82 0f       	add	r24, r18
     2bc:	93 1f       	adc	r25, r19
     2be:	fc 01       	movw	r30, r24
     2c0:	80 81       	ld	r24, Z
     2c2:	88 23       	and	r24, r24
     2c4:	29 f1       	breq	.+74     	; 0x310 <_ZL15TraverseRPM_cmdiPcS_+0xba>
     2c6:	89 81       	ldd	r24, Y+1	; 0x01
     2c8:	9a 81       	ldd	r25, Y+2	; 0x02
     2ca:	9e 01       	movw	r18, r28
     2cc:	29 5b       	subi	r18, 0xB9	; 185
     2ce:	3f 4f       	sbci	r19, 0xFF	; 255
     2d0:	f9 01       	movw	r30, r18
     2d2:	20 81       	ld	r18, Z
     2d4:	31 81       	ldd	r19, Z+1	; 0x01
     2d6:	82 0f       	add	r24, r18
     2d8:	93 1f       	adc	r25, r19
     2da:	fc 01       	movw	r30, r24
     2dc:	80 81       	ld	r24, Z
     2de:	88 2f       	mov	r24, r24
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	c0 97       	sbiw	r24, 0x30	; 48
     2e4:	0a 97       	sbiw	r24, 0x0a	; 10
     2e6:	10 f0       	brcs	.+4      	; 0x2ec <_ZL15TraverseRPM_cmdiPcS_+0x96>
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	01 c0       	rjmp	.+2      	; 0x2ee <_ZL15TraverseRPM_cmdiPcS_+0x98>
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	88 23       	and	r24, r24
     2f0:	49 f0       	breq	.+18     	; 0x304 <_ZL15TraverseRPM_cmdiPcS_+0xae>
     2f2:	6b ed       	ldi	r22, 0xDB	; 219
     2f4:	71 e0       	ldi	r23, 0x01	; 1
     2f6:	8e ee       	ldi	r24, 0xEE	; 238
     2f8:	93 e0       	ldi	r25, 0x03	; 3
     2fa:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     2fe:	80 e0       	ldi	r24, 0x00	; 0
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	61 c0       	rjmp	.+194    	; 0x3c6 <_ZL15TraverseRPM_cmdiPcS_+0x170>
     304:	89 81       	ldd	r24, Y+1	; 0x01
     306:	9a 81       	ldd	r25, Y+2	; 0x02
     308:	01 96       	adiw	r24, 0x01	; 1
     30a:	9a 83       	std	Y+2, r25	; 0x02
     30c:	89 83       	std	Y+1, r24	; 0x01
     30e:	cd cf       	rjmp	.-102    	; 0x2aa <_ZL15TraverseRPM_cmdiPcS_+0x54>
     310:	ce 01       	movw	r24, r28
     312:	89 5b       	subi	r24, 0xB9	; 185
     314:	9f 4f       	sbci	r25, 0xFF	; 255
     316:	fc 01       	movw	r30, r24
     318:	80 81       	ld	r24, Z
     31a:	91 81       	ldd	r25, Z+1	; 0x01
     31c:	4a e0       	ldi	r20, 0x0A	; 10
     31e:	50 e0       	ldi	r21, 0x00	; 0
     320:	60 e0       	ldi	r22, 0x00	; 0
     322:	70 e0       	ldi	r23, 0x00	; 0
     324:	0e 94 42 1c 	call	0x3884	; 0x3884 <strtol>
     328:	dc 01       	movw	r26, r24
     32a:	cb 01       	movw	r24, r22
     32c:	8b 83       	std	Y+3, r24	; 0x03
     32e:	9c 83       	std	Y+4, r25	; 0x04
     330:	ad 83       	std	Y+5, r26	; 0x05
     332:	be 83       	std	Y+6, r27	; 0x06
     334:	8b 81       	ldd	r24, Y+3	; 0x03
     336:	9c 81       	ldd	r25, Y+4	; 0x04
     338:	ad 81       	ldd	r26, Y+5	; 0x05
     33a:	be 81       	ldd	r27, Y+6	; 0x06
     33c:	89 35       	cpi	r24, 0x59	; 89
     33e:	92 40       	sbci	r25, 0x02	; 2
     340:	a1 05       	cpc	r26, r1
     342:	b1 05       	cpc	r27, r1
     344:	68 f4       	brcc	.+26     	; 0x360 <_ZL15TraverseRPM_cmdiPcS_+0x10a>
     346:	8b 81       	ldd	r24, Y+3	; 0x03
     348:	9c 81       	ldd	r25, Y+4	; 0x04
     34a:	ad 81       	ldd	r26, Y+5	; 0x05
     34c:	be 81       	ldd	r27, Y+6	; 0x06
     34e:	80 93 e4 03 	sts	0x03E4, r24	; 0x8003e4 <TRAVERSE_RPM>
     352:	90 93 e5 03 	sts	0x03E5, r25	; 0x8003e5 <TRAVERSE_RPM+0x1>
     356:	a0 93 e6 03 	sts	0x03E6, r26	; 0x8003e6 <TRAVERSE_RPM+0x2>
     35a:	b0 93 e7 03 	sts	0x03E7, r27	; 0x8003e7 <TRAVERSE_RPM+0x3>
     35e:	33 c0       	rjmp	.+102    	; 0x3c6 <_ZL15TraverseRPM_cmdiPcS_+0x170>
     360:	88 e5       	ldi	r24, 0x58	; 88
     362:	92 e0       	ldi	r25, 0x02	; 2
     364:	a0 e0       	ldi	r26, 0x00	; 0
     366:	b0 e0       	ldi	r27, 0x00	; 0
     368:	80 93 e4 03 	sts	0x03E4, r24	; 0x8003e4 <TRAVERSE_RPM>
     36c:	90 93 e5 03 	sts	0x03E5, r25	; 0x8003e5 <TRAVERSE_RPM+0x1>
     370:	a0 93 e6 03 	sts	0x03E6, r26	; 0x8003e6 <TRAVERSE_RPM+0x2>
     374:	b0 93 e7 03 	sts	0x03E7, r27	; 0x8003e7 <TRAVERSE_RPM+0x3>
     378:	26 c0       	rjmp	.+76     	; 0x3c6 <_ZL15TraverseRPM_cmdiPcS_+0x170>
     37a:	2c e3       	ldi	r18, 0x3C	; 60
     37c:	ce 01       	movw	r24, r28
     37e:	07 96       	adiw	r24, 0x07	; 7
     380:	fc 01       	movw	r30, r24
     382:	32 2f       	mov	r19, r18
     384:	11 92       	st	Z+, r1
     386:	3a 95       	dec	r19
     388:	e9 f7       	brne	.-6      	; 0x384 <_ZL15TraverseRPM_cmdiPcS_+0x12e>
     38a:	80 91 e4 03 	lds	r24, 0x03E4	; 0x8003e4 <TRAVERSE_RPM>
     38e:	90 91 e5 03 	lds	r25, 0x03E5	; 0x8003e5 <TRAVERSE_RPM+0x1>
     392:	a0 91 e6 03 	lds	r26, 0x03E6	; 0x8003e6 <TRAVERSE_RPM+0x2>
     396:	b0 91 e7 03 	lds	r27, 0x03E7	; 0x8003e7 <TRAVERSE_RPM+0x3>
     39a:	9e 01       	movw	r18, r28
     39c:	2b 5b       	subi	r18, 0xBB	; 187
     39e:	3f 4f       	sbci	r19, 0xFF	; 255
     3a0:	f9 01       	movw	r30, r18
     3a2:	40 81       	ld	r20, Z
     3a4:	51 81       	ldd	r21, Z+1	; 0x01
     3a6:	fe 01       	movw	r30, r28
     3a8:	37 96       	adiw	r30, 0x07	; 7
     3aa:	8c 01       	movw	r16, r24
     3ac:	9d 01       	movw	r18, r26
     3ae:	63 e0       	ldi	r22, 0x03	; 3
     3b0:	70 e0       	ldi	r23, 0x00	; 0
     3b2:	cf 01       	movw	r24, r30
     3b4:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_Z17BuildSerialOutputPciS_m>
     3b8:	ce 01       	movw	r24, r28
     3ba:	07 96       	adiw	r24, 0x07	; 7
     3bc:	bc 01       	movw	r22, r24
     3be:	8e ee       	ldi	r24, 0xEE	; 238
     3c0:	93 e0       	ldi	r25, 0x03	; 3
     3c2:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     3c6:	c8 5b       	subi	r28, 0xB8	; 184
     3c8:	df 4f       	sbci	r29, 0xFF	; 255
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	f8 94       	cli
     3ce:	de bf       	out	0x3e, r29	; 62
     3d0:	0f be       	out	0x3f, r0	; 63
     3d2:	cd bf       	out	0x3d, r28	; 61
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	1f 91       	pop	r17
     3da:	0f 91       	pop	r16
     3dc:	08 95       	ret

000003de <_ZL10Status_cmdiPcS_>:
     3de:	cf 93       	push	r28
     3e0:	df 93       	push	r29
     3e2:	00 d0       	rcall	.+0      	; 0x3e4 <_ZL10Status_cmdiPcS_+0x6>
     3e4:	00 d0       	rcall	.+0      	; 0x3e6 <_ZL10Status_cmdiPcS_+0x8>
     3e6:	00 d0       	rcall	.+0      	; 0x3e8 <_ZL10Status_cmdiPcS_+0xa>
     3e8:	cd b7       	in	r28, 0x3d	; 61
     3ea:	de b7       	in	r29, 0x3e	; 62
     3ec:	9a 83       	std	Y+2, r25	; 0x02
     3ee:	89 83       	std	Y+1, r24	; 0x01
     3f0:	7c 83       	std	Y+4, r23	; 0x04
     3f2:	6b 83       	std	Y+3, r22	; 0x03
     3f4:	5e 83       	std	Y+6, r21	; 0x06
     3f6:	4d 83       	std	Y+5, r20	; 0x05
     3f8:	6e ef       	ldi	r22, 0xFE	; 254
     3fa:	71 e0       	ldi	r23, 0x01	; 1
     3fc:	8e ee       	ldi	r24, 0xEE	; 238
     3fe:	93 e0       	ldi	r25, 0x03	; 3
     400:	0e 94 d8 19 	call	0x33b0	; 0x33b0 <_ZN5Print5printEPKc>
     404:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <RUN_MODE>
     408:	81 e0       	ldi	r24, 0x01	; 1
     40a:	93 30       	cpi	r25, 0x03	; 3
     40c:	09 f0       	breq	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     40e:	80 e0       	ldi	r24, 0x00	; 0
     410:	88 23       	and	r24, r24
     412:	31 f0       	breq	.+12     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     414:	62 e1       	ldi	r22, 0x12	; 18
     416:	72 e0       	ldi	r23, 0x02	; 2
     418:	8e ee       	ldi	r24, 0xEE	; 238
     41a:	93 e0       	ldi	r25, 0x03	; 3
     41c:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     420:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <RUN_MODE>
     424:	81 e0       	ldi	r24, 0x01	; 1
     426:	94 30       	cpi	r25, 0x04	; 4
     428:	09 f0       	breq	.+2      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     42a:	80 e0       	ldi	r24, 0x00	; 0
     42c:	88 23       	and	r24, r24
     42e:	31 f0       	breq	.+12     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     430:	67 e2       	ldi	r22, 0x27	; 39
     432:	72 e0       	ldi	r23, 0x02	; 2
     434:	8e ee       	ldi	r24, 0xEE	; 238
     436:	93 e0       	ldi	r25, 0x03	; 3
     438:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     43c:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <RUN_MODE>
     440:	81 e0       	ldi	r24, 0x01	; 1
     442:	92 30       	cpi	r25, 0x02	; 2
     444:	09 f0       	breq	.+2      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     446:	80 e0       	ldi	r24, 0x00	; 0
     448:	88 23       	and	r24, r24
     44a:	31 f0       	breq	.+12     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     44c:	6c e3       	ldi	r22, 0x3C	; 60
     44e:	72 e0       	ldi	r23, 0x02	; 2
     450:	8e ee       	ldi	r24, 0xEE	; 238
     452:	93 e0       	ldi	r25, 0x03	; 3
     454:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     458:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <RUN_MODE>
     45c:	81 e0       	ldi	r24, 0x01	; 1
     45e:	99 23       	and	r25, r25
     460:	09 f0       	breq	.+2      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     462:	80 e0       	ldi	r24, 0x00	; 0
     464:	88 23       	and	r24, r24
     466:	31 f0       	breq	.+12     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
     468:	6e e4       	ldi	r22, 0x4E	; 78
     46a:	72 e0       	ldi	r23, 0x02	; 2
     46c:	8e ee       	ldi	r24, 0xEE	; 238
     46e:	93 e0       	ldi	r25, 0x03	; 3
     470:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     474:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <RUN_MODE>
     478:	81 e0       	ldi	r24, 0x01	; 1
     47a:	91 30       	cpi	r25, 0x01	; 1
     47c:	09 f0       	breq	.+2      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
     47e:	80 e0       	ldi	r24, 0x00	; 0
     480:	88 23       	and	r24, r24
     482:	31 f0       	breq	.+12     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     484:	68 e5       	ldi	r22, 0x58	; 88
     486:	72 e0       	ldi	r23, 0x02	; 2
     488:	8e ee       	ldi	r24, 0xEE	; 238
     48a:	93 e0       	ldi	r25, 0x03	; 3
     48c:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     490:	00 00       	nop
     492:	26 96       	adiw	r28, 0x06	; 6
     494:	0f b6       	in	r0, 0x3f	; 63
     496:	f8 94       	cli
     498:	de bf       	out	0x3e, r29	; 62
     49a:	0f be       	out	0x3f, r0	; 63
     49c:	cd bf       	out	0x3d, r28	; 61
     49e:	df 91       	pop	r29
     4a0:	cf 91       	pop	r28
     4a2:	08 95       	ret

000004a4 <_ZL8Stop_cmdiPcS_>:
     4a4:	cf 93       	push	r28
     4a6:	df 93       	push	r29
     4a8:	00 d0       	rcall	.+0      	; 0x4aa <_ZL8Stop_cmdiPcS_+0x6>
     4aa:	00 d0       	rcall	.+0      	; 0x4ac <_ZL8Stop_cmdiPcS_+0x8>
     4ac:	00 d0       	rcall	.+0      	; 0x4ae <_ZL8Stop_cmdiPcS_+0xa>
     4ae:	cd b7       	in	r28, 0x3d	; 61
     4b0:	de b7       	in	r29, 0x3e	; 62
     4b2:	9a 83       	std	Y+2, r25	; 0x02
     4b4:	89 83       	std	Y+1, r24	; 0x01
     4b6:	7c 83       	std	Y+4, r23	; 0x04
     4b8:	6b 83       	std	Y+3, r22	; 0x03
     4ba:	5e 83       	std	Y+6, r21	; 0x06
     4bc:	4d 83       	std	Y+5, r20	; 0x05
     4be:	81 e0       	ldi	r24, 0x01	; 1
     4c0:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <RUN_MODE>
     4c4:	00 00       	nop
     4c6:	26 96       	adiw	r28, 0x06	; 6
     4c8:	0f b6       	in	r0, 0x3f	; 63
     4ca:	f8 94       	cli
     4cc:	de bf       	out	0x3e, r29	; 62
     4ce:	0f be       	out	0x3f, r0	; 63
     4d0:	cd bf       	out	0x3d, r28	; 61
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	08 95       	ret

000004d8 <_ZL11RunMode_cmdiPcS_>:
     4d8:	0f 93       	push	r16
     4da:	1f 93       	push	r17
     4dc:	cf 93       	push	r28
     4de:	df 93       	push	r29
     4e0:	cd b7       	in	r28, 0x3d	; 61
     4e2:	de b7       	in	r29, 0x3e	; 62
     4e4:	c6 54       	subi	r28, 0x46	; 70
     4e6:	d1 09       	sbc	r29, r1
     4e8:	0f b6       	in	r0, 0x3f	; 63
     4ea:	f8 94       	cli
     4ec:	de bf       	out	0x3e, r29	; 62
     4ee:	0f be       	out	0x3f, r0	; 63
     4f0:	cd bf       	out	0x3d, r28	; 61
     4f2:	9e 01       	movw	r18, r28
     4f4:	2f 5b       	subi	r18, 0xBF	; 191
     4f6:	3f 4f       	sbci	r19, 0xFF	; 255
     4f8:	f9 01       	movw	r30, r18
     4fa:	91 83       	std	Z+1, r25	; 0x01
     4fc:	80 83       	st	Z, r24
     4fe:	ce 01       	movw	r24, r28
     500:	8d 5b       	subi	r24, 0xBD	; 189
     502:	9f 4f       	sbci	r25, 0xFF	; 255
     504:	fc 01       	movw	r30, r24
     506:	71 83       	std	Z+1, r23	; 0x01
     508:	60 83       	st	Z, r22
     50a:	ce 01       	movw	r24, r28
     50c:	8b 5b       	subi	r24, 0xBB	; 187
     50e:	9f 4f       	sbci	r25, 0xFF	; 255
     510:	fc 01       	movw	r30, r24
     512:	51 83       	std	Z+1, r21	; 0x01
     514:	40 83       	st	Z, r20
     516:	ce 01       	movw	r24, r28
     518:	8b 5b       	subi	r24, 0xBB	; 187
     51a:	9f 4f       	sbci	r25, 0xFF	; 255
     51c:	fc 01       	movw	r30, r24
     51e:	80 81       	ld	r24, Z
     520:	91 81       	ldd	r25, Z+1	; 0x01
     522:	89 2b       	or	r24, r25
     524:	09 f4       	brne	.+2      	; 0x528 <_ZL11RunMode_cmdiPcS_+0x50>
     526:	4d c0       	rjmp	.+154    	; 0x5c2 <_ZL11RunMode_cmdiPcS_+0xea>
     528:	1a 82       	std	Y+2, r1	; 0x02
     52a:	19 82       	std	Y+1, r1	; 0x01
     52c:	89 81       	ldd	r24, Y+1	; 0x01
     52e:	9a 81       	ldd	r25, Y+2	; 0x02
     530:	9e 01       	movw	r18, r28
     532:	2b 5b       	subi	r18, 0xBB	; 187
     534:	3f 4f       	sbci	r19, 0xFF	; 255
     536:	f9 01       	movw	r30, r18
     538:	20 81       	ld	r18, Z
     53a:	31 81       	ldd	r19, Z+1	; 0x01
     53c:	82 0f       	add	r24, r18
     53e:	93 1f       	adc	r25, r19
     540:	fc 01       	movw	r30, r24
     542:	80 81       	ld	r24, Z
     544:	88 23       	and	r24, r24
     546:	29 f1       	breq	.+74     	; 0x592 <_ZL11RunMode_cmdiPcS_+0xba>
     548:	89 81       	ldd	r24, Y+1	; 0x01
     54a:	9a 81       	ldd	r25, Y+2	; 0x02
     54c:	9e 01       	movw	r18, r28
     54e:	2b 5b       	subi	r18, 0xBB	; 187
     550:	3f 4f       	sbci	r19, 0xFF	; 255
     552:	f9 01       	movw	r30, r18
     554:	20 81       	ld	r18, Z
     556:	31 81       	ldd	r19, Z+1	; 0x01
     558:	82 0f       	add	r24, r18
     55a:	93 1f       	adc	r25, r19
     55c:	fc 01       	movw	r30, r24
     55e:	80 81       	ld	r24, Z
     560:	88 2f       	mov	r24, r24
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	c0 97       	sbiw	r24, 0x30	; 48
     566:	0a 97       	sbiw	r24, 0x0a	; 10
     568:	10 f0       	brcs	.+4      	; 0x56e <_ZL11RunMode_cmdiPcS_+0x96>
     56a:	81 e0       	ldi	r24, 0x01	; 1
     56c:	01 c0       	rjmp	.+2      	; 0x570 <_ZL11RunMode_cmdiPcS_+0x98>
     56e:	80 e0       	ldi	r24, 0x00	; 0
     570:	88 23       	and	r24, r24
     572:	49 f0       	breq	.+18     	; 0x586 <_ZL11RunMode_cmdiPcS_+0xae>
     574:	6b e6       	ldi	r22, 0x6B	; 107
     576:	72 e0       	ldi	r23, 0x02	; 2
     578:	8e ee       	ldi	r24, 0xEE	; 238
     57a:	93 e0       	ldi	r25, 0x03	; 3
     57c:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	42 c0       	rjmp	.+132    	; 0x60a <_ZL11RunMode_cmdiPcS_+0x132>
     586:	89 81       	ldd	r24, Y+1	; 0x01
     588:	9a 81       	ldd	r25, Y+2	; 0x02
     58a:	01 96       	adiw	r24, 0x01	; 1
     58c:	9a 83       	std	Y+2, r25	; 0x02
     58e:	89 83       	std	Y+1, r24	; 0x01
     590:	cd cf       	rjmp	.-102    	; 0x52c <_ZL11RunMode_cmdiPcS_+0x54>
     592:	ce 01       	movw	r24, r28
     594:	8b 5b       	subi	r24, 0xBB	; 187
     596:	9f 4f       	sbci	r25, 0xFF	; 255
     598:	fc 01       	movw	r30, r24
     59a:	80 81       	ld	r24, Z
     59c:	91 81       	ldd	r25, Z+1	; 0x01
     59e:	4a e0       	ldi	r20, 0x0A	; 10
     5a0:	50 e0       	ldi	r21, 0x00	; 0
     5a2:	60 e0       	ldi	r22, 0x00	; 0
     5a4:	70 e0       	ldi	r23, 0x00	; 0
     5a6:	0e 94 42 1c 	call	0x3884	; 0x3884 <strtol>
     5aa:	dc 01       	movw	r26, r24
     5ac:	cb 01       	movw	r24, r22
     5ae:	9c 83       	std	Y+4, r25	; 0x04
     5b0:	8b 83       	std	Y+3, r24	; 0x03
     5b2:	8b 81       	ldd	r24, Y+3	; 0x03
     5b4:	9c 81       	ldd	r25, Y+4	; 0x04
     5b6:	05 97       	sbiw	r24, 0x05	; 5
     5b8:	40 f5       	brcc	.+80     	; 0x60a <_ZL11RunMode_cmdiPcS_+0x132>
     5ba:	8b 81       	ldd	r24, Y+3	; 0x03
     5bc:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <RUN_MODE>
     5c0:	24 c0       	rjmp	.+72     	; 0x60a <_ZL11RunMode_cmdiPcS_+0x132>
     5c2:	2c e3       	ldi	r18, 0x3C	; 60
     5c4:	ce 01       	movw	r24, r28
     5c6:	05 96       	adiw	r24, 0x05	; 5
     5c8:	fc 01       	movw	r30, r24
     5ca:	32 2f       	mov	r19, r18
     5cc:	11 92       	st	Z+, r1
     5ce:	3a 95       	dec	r19
     5d0:	e9 f7       	brne	.-6      	; 0x5cc <_ZL11RunMode_cmdiPcS_+0xf4>
     5d2:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <RUN_MODE>
     5d6:	88 2f       	mov	r24, r24
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	a0 e0       	ldi	r26, 0x00	; 0
     5dc:	b0 e0       	ldi	r27, 0x00	; 0
     5de:	9e 01       	movw	r18, r28
     5e0:	2d 5b       	subi	r18, 0xBD	; 189
     5e2:	3f 4f       	sbci	r19, 0xFF	; 255
     5e4:	f9 01       	movw	r30, r18
     5e6:	40 81       	ld	r20, Z
     5e8:	51 81       	ldd	r21, Z+1	; 0x01
     5ea:	fe 01       	movw	r30, r28
     5ec:	35 96       	adiw	r30, 0x05	; 5
     5ee:	8c 01       	movw	r16, r24
     5f0:	9d 01       	movw	r18, r26
     5f2:	63 e0       	ldi	r22, 0x03	; 3
     5f4:	70 e0       	ldi	r23, 0x00	; 0
     5f6:	cf 01       	movw	r24, r30
     5f8:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_Z17BuildSerialOutputPciS_m>
     5fc:	ce 01       	movw	r24, r28
     5fe:	05 96       	adiw	r24, 0x05	; 5
     600:	bc 01       	movw	r22, r24
     602:	8e ee       	ldi	r24, 0xEE	; 238
     604:	93 e0       	ldi	r25, 0x03	; 3
     606:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     60a:	ca 5b       	subi	r28, 0xBA	; 186
     60c:	df 4f       	sbci	r29, 0xFF	; 255
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	1f 91       	pop	r17
     61e:	0f 91       	pop	r16
     620:	08 95       	ret

00000622 <_ZL16MoveAbsolute_cmdiPcS_>:
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	cd b7       	in	r28, 0x3d	; 61
     628:	de b7       	in	r29, 0x3e	; 62
     62a:	2c 97       	sbiw	r28, 0x0c	; 12
     62c:	0f b6       	in	r0, 0x3f	; 63
     62e:	f8 94       	cli
     630:	de bf       	out	0x3e, r29	; 62
     632:	0f be       	out	0x3f, r0	; 63
     634:	cd bf       	out	0x3d, r28	; 61
     636:	98 87       	std	Y+8, r25	; 0x08
     638:	8f 83       	std	Y+7, r24	; 0x07
     63a:	7a 87       	std	Y+10, r23	; 0x0a
     63c:	69 87       	std	Y+9, r22	; 0x09
     63e:	5c 87       	std	Y+12, r21	; 0x0c
     640:	4b 87       	std	Y+11, r20	; 0x0b
     642:	8b 85       	ldd	r24, Y+11	; 0x0b
     644:	9c 85       	ldd	r25, Y+12	; 0x0c
     646:	89 2b       	or	r24, r25
     648:	09 f4       	brne	.+2      	; 0x64c <_ZL16MoveAbsolute_cmdiPcS_+0x2a>
     64a:	a4 c0       	rjmp	.+328    	; 0x794 <_ZL16MoveAbsolute_cmdiPcS_+0x172>
     64c:	1a 82       	std	Y+2, r1	; 0x02
     64e:	19 82       	std	Y+1, r1	; 0x01
     650:	89 81       	ldd	r24, Y+1	; 0x01
     652:	9a 81       	ldd	r25, Y+2	; 0x02
     654:	2b 85       	ldd	r18, Y+11	; 0x0b
     656:	3c 85       	ldd	r19, Y+12	; 0x0c
     658:	82 0f       	add	r24, r18
     65a:	93 1f       	adc	r25, r19
     65c:	fc 01       	movw	r30, r24
     65e:	80 81       	ld	r24, Z
     660:	88 23       	and	r24, r24
     662:	09 f1       	breq	.+66     	; 0x6a6 <_ZL16MoveAbsolute_cmdiPcS_+0x84>
     664:	89 81       	ldd	r24, Y+1	; 0x01
     666:	9a 81       	ldd	r25, Y+2	; 0x02
     668:	2b 85       	ldd	r18, Y+11	; 0x0b
     66a:	3c 85       	ldd	r19, Y+12	; 0x0c
     66c:	82 0f       	add	r24, r18
     66e:	93 1f       	adc	r25, r19
     670:	fc 01       	movw	r30, r24
     672:	80 81       	ld	r24, Z
     674:	88 2f       	mov	r24, r24
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	c0 97       	sbiw	r24, 0x30	; 48
     67a:	0a 97       	sbiw	r24, 0x0a	; 10
     67c:	10 f0       	brcs	.+4      	; 0x682 <_ZL16MoveAbsolute_cmdiPcS_+0x60>
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	01 c0       	rjmp	.+2      	; 0x684 <_ZL16MoveAbsolute_cmdiPcS_+0x62>
     682:	80 e0       	ldi	r24, 0x00	; 0
     684:	88 23       	and	r24, r24
     686:	49 f0       	breq	.+18     	; 0x69a <_ZL16MoveAbsolute_cmdiPcS_+0x78>
     688:	63 e9       	ldi	r22, 0x93	; 147
     68a:	72 e0       	ldi	r23, 0x02	; 2
     68c:	8e ee       	ldi	r24, 0xEE	; 238
     68e:	93 e0       	ldi	r25, 0x03	; 3
     690:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     694:	80 e0       	ldi	r24, 0x00	; 0
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	7d c0       	rjmp	.+250    	; 0x794 <_ZL16MoveAbsolute_cmdiPcS_+0x172>
     69a:	89 81       	ldd	r24, Y+1	; 0x01
     69c:	9a 81       	ldd	r25, Y+2	; 0x02
     69e:	01 96       	adiw	r24, 0x01	; 1
     6a0:	9a 83       	std	Y+2, r25	; 0x02
     6a2:	89 83       	std	Y+1, r24	; 0x01
     6a4:	d5 cf       	rjmp	.-86     	; 0x650 <_ZL16MoveAbsolute_cmdiPcS_+0x2e>
     6a6:	8b 85       	ldd	r24, Y+11	; 0x0b
     6a8:	9c 85       	ldd	r25, Y+12	; 0x0c
     6aa:	4a e0       	ldi	r20, 0x0A	; 10
     6ac:	50 e0       	ldi	r21, 0x00	; 0
     6ae:	60 e0       	ldi	r22, 0x00	; 0
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	0e 94 42 1c 	call	0x3884	; 0x3884 <strtol>
     6b6:	dc 01       	movw	r26, r24
     6b8:	cb 01       	movw	r24, r22
     6ba:	8b 83       	std	Y+3, r24	; 0x03
     6bc:	9c 83       	std	Y+4, r25	; 0x04
     6be:	ad 83       	std	Y+5, r26	; 0x05
     6c0:	be 83       	std	Y+6, r27	; 0x06
     6c2:	2b 81       	ldd	r18, Y+3	; 0x03
     6c4:	3c 81       	ldd	r19, Y+4	; 0x04
     6c6:	4d 81       	ldd	r20, Y+5	; 0x05
     6c8:	5e 81       	ldd	r21, Y+6	; 0x06
     6ca:	88 ee       	ldi	r24, 0xE8	; 232
     6cc:	93 e0       	ldi	r25, 0x03	; 3
     6ce:	dc 01       	movw	r26, r24
     6d0:	0e 94 22 1c 	call	0x3844	; 0x3844 <__muluhisi3>
     6d4:	dc 01       	movw	r26, r24
     6d6:	cb 01       	movw	r24, r22
     6d8:	24 e3       	ldi	r18, 0x34	; 52
     6da:	36 e0       	ldi	r19, 0x06	; 6
     6dc:	40 e0       	ldi	r20, 0x00	; 0
     6de:	50 e0       	ldi	r21, 0x00	; 0
     6e0:	bc 01       	movw	r22, r24
     6e2:	cd 01       	movw	r24, r26
     6e4:	0e 94 03 1c 	call	0x3806	; 0x3806 <__divmodsi4>
     6e8:	da 01       	movw	r26, r20
     6ea:	c9 01       	movw	r24, r18
     6ec:	8b 83       	std	Y+3, r24	; 0x03
     6ee:	9c 83       	std	Y+4, r25	; 0x04
     6f0:	ad 83       	std	Y+5, r26	; 0x05
     6f2:	be 83       	std	Y+6, r27	; 0x06
     6f4:	8b 81       	ldd	r24, Y+3	; 0x03
     6f6:	9c 81       	ldd	r25, Y+4	; 0x04
     6f8:	ad 81       	ldd	r26, Y+5	; 0x05
     6fa:	be 81       	ldd	r27, Y+6	; 0x06
     6fc:	bb 23       	and	r27, r27
     6fe:	ac f0       	brlt	.+42     	; 0x72a <_ZL16MoveAbsolute_cmdiPcS_+0x108>
     700:	8b 81       	ldd	r24, Y+3	; 0x03
     702:	9c 81       	ldd	r25, Y+4	; 0x04
     704:	ad 81       	ldd	r26, Y+5	; 0x05
     706:	be 81       	ldd	r27, Y+6	; 0x06
     708:	86 3c       	cpi	r24, 0xC6	; 198
     70a:	92 42       	sbci	r25, 0x22	; 34
     70c:	a1 40       	sbci	r26, 0x01	; 1
     70e:	b1 05       	cpc	r27, r1
     710:	64 f4       	brge	.+24     	; 0x72a <_ZL16MoveAbsolute_cmdiPcS_+0x108>
     712:	8b 81       	ldd	r24, Y+3	; 0x03
     714:	9c 81       	ldd	r25, Y+4	; 0x04
     716:	ad 81       	ldd	r26, Y+5	; 0x05
     718:	be 81       	ldd	r27, Y+6	; 0x06
     71a:	80 93 e0 03 	sts	0x03E0, r24	; 0x8003e0 <DESIRED_POSITION>
     71e:	90 93 e1 03 	sts	0x03E1, r25	; 0x8003e1 <DESIRED_POSITION+0x1>
     722:	a0 93 e2 03 	sts	0x03E2, r26	; 0x8003e2 <DESIRED_POSITION+0x2>
     726:	b0 93 e3 03 	sts	0x03E3, r27	; 0x8003e3 <DESIRED_POSITION+0x3>
     72a:	20 91 e0 03 	lds	r18, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
     72e:	30 91 e1 03 	lds	r19, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
     732:	40 91 e2 03 	lds	r20, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
     736:	50 91 e3 03 	lds	r21, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
     73a:	80 e8       	ldi	r24, 0x80	; 128
     73c:	9c e0       	ldi	r25, 0x0C	; 12
     73e:	dc 01       	movw	r26, r24
     740:	0e 94 22 1c 	call	0x3844	; 0x3844 <__muluhisi3>
     744:	dc 01       	movw	r26, r24
     746:	cb 01       	movw	r24, r22
     748:	28 ee       	ldi	r18, 0xE8	; 232
     74a:	33 e0       	ldi	r19, 0x03	; 3
     74c:	40 e0       	ldi	r20, 0x00	; 0
     74e:	50 e0       	ldi	r21, 0x00	; 0
     750:	bc 01       	movw	r22, r24
     752:	cd 01       	movw	r24, r26
     754:	0e 94 03 1c 	call	0x3806	; 0x3806 <__divmodsi4>
     758:	da 01       	movw	r26, r20
     75a:	c9 01       	movw	r24, r18
     75c:	80 93 e0 03 	sts	0x03E0, r24	; 0x8003e0 <DESIRED_POSITION>
     760:	90 93 e1 03 	sts	0x03E1, r25	; 0x8003e1 <DESIRED_POSITION+0x1>
     764:	a0 93 e2 03 	sts	0x03E2, r26	; 0x8003e2 <DESIRED_POSITION+0x2>
     768:	b0 93 e3 03 	sts	0x03E3, r27	; 0x8003e3 <DESIRED_POSITION+0x3>
     76c:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
     770:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
     774:	a0 91 e2 03 	lds	r26, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
     778:	b0 91 e3 03 	lds	r27, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
     77c:	88 0f       	add	r24, r24
     77e:	99 1f       	adc	r25, r25
     780:	aa 1f       	adc	r26, r26
     782:	bb 1f       	adc	r27, r27
     784:	80 93 e0 03 	sts	0x03E0, r24	; 0x8003e0 <DESIRED_POSITION>
     788:	90 93 e1 03 	sts	0x03E1, r25	; 0x8003e1 <DESIRED_POSITION+0x1>
     78c:	a0 93 e2 03 	sts	0x03E2, r26	; 0x8003e2 <DESIRED_POSITION+0x2>
     790:	b0 93 e3 03 	sts	0x03E3, r27	; 0x8003e3 <DESIRED_POSITION+0x3>
     794:	2c 96       	adiw	r28, 0x0c	; 12
     796:	0f b6       	in	r0, 0x3f	; 63
     798:	f8 94       	cli
     79a:	de bf       	out	0x3e, r29	; 62
     79c:	0f be       	out	0x3f, r0	; 63
     79e:	cd bf       	out	0x3d, r28	; 61
     7a0:	df 91       	pop	r29
     7a2:	cf 91       	pop	r28
     7a4:	08 95       	ret

000007a6 <_ZL12SpoolRPM_cmdiPcS_>:
     7a6:	0f 93       	push	r16
     7a8:	1f 93       	push	r17
     7aa:	cf 93       	push	r28
     7ac:	df 93       	push	r29
     7ae:	cd b7       	in	r28, 0x3d	; 61
     7b0:	de b7       	in	r29, 0x3e	; 62
     7b2:	c2 54       	subi	r28, 0x42	; 66
     7b4:	d1 09       	sbc	r29, r1
     7b6:	0f b6       	in	r0, 0x3f	; 63
     7b8:	f8 94       	cli
     7ba:	de bf       	out	0x3e, r29	; 62
     7bc:	0f be       	out	0x3f, r0	; 63
     7be:	cd bf       	out	0x3d, r28	; 61
     7c0:	9e af       	std	Y+62, r25	; 0x3e
     7c2:	8d af       	std	Y+61, r24	; 0x3d
     7c4:	ce 01       	movw	r24, r28
     7c6:	cf 96       	adiw	r24, 0x3f	; 63
     7c8:	fc 01       	movw	r30, r24
     7ca:	71 83       	std	Z+1, r23	; 0x01
     7cc:	60 83       	st	Z, r22
     7ce:	ce 01       	movw	r24, r28
     7d0:	8f 5b       	subi	r24, 0xBF	; 191
     7d2:	9f 4f       	sbci	r25, 0xFF	; 255
     7d4:	fc 01       	movw	r30, r24
     7d6:	51 83       	std	Z+1, r21	; 0x01
     7d8:	40 83       	st	Z, r20
     7da:	2c e3       	ldi	r18, 0x3C	; 60
     7dc:	ce 01       	movw	r24, r28
     7de:	01 96       	adiw	r24, 0x01	; 1
     7e0:	fc 01       	movw	r30, r24
     7e2:	32 2f       	mov	r19, r18
     7e4:	11 92       	st	Z+, r1
     7e6:	3a 95       	dec	r19
     7e8:	e9 f7       	brne	.-6      	; 0x7e4 <_ZL12SpoolRPM_cmdiPcS_+0x3e>
     7ea:	80 91 e8 03 	lds	r24, 0x03E8	; 0x8003e8 <SPOOLRPM>
     7ee:	90 91 e9 03 	lds	r25, 0x03E9	; 0x8003e9 <SPOOLRPM+0x1>
     7f2:	cc 01       	movw	r24, r24
     7f4:	a0 e0       	ldi	r26, 0x00	; 0
     7f6:	b0 e0       	ldi	r27, 0x00	; 0
     7f8:	9e 01       	movw	r18, r28
     7fa:	21 5c       	subi	r18, 0xC1	; 193
     7fc:	3f 4f       	sbci	r19, 0xFF	; 255
     7fe:	f9 01       	movw	r30, r18
     800:	40 81       	ld	r20, Z
     802:	51 81       	ldd	r21, Z+1	; 0x01
     804:	8c 01       	movw	r16, r24
     806:	9d 01       	movw	r18, r26
     808:	63 e0       	ldi	r22, 0x03	; 3
     80a:	70 e0       	ldi	r23, 0x00	; 0
     80c:	ce 01       	movw	r24, r28
     80e:	01 96       	adiw	r24, 0x01	; 1
     810:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_Z17BuildSerialOutputPciS_m>
     814:	ce 01       	movw	r24, r28
     816:	01 96       	adiw	r24, 0x01	; 1
     818:	bc 01       	movw	r22, r24
     81a:	8e ee       	ldi	r24, 0xEE	; 238
     81c:	93 e0       	ldi	r25, 0x03	; 3
     81e:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     822:	00 00       	nop
     824:	ce 5b       	subi	r28, 0xBE	; 190
     826:	df 4f       	sbci	r29, 0xFF	; 255
     828:	0f b6       	in	r0, 0x3f	; 63
     82a:	f8 94       	cli
     82c:	de bf       	out	0x3e, r29	; 62
     82e:	0f be       	out	0x3f, r0	; 63
     830:	cd bf       	out	0x3d, r28	; 61
     832:	df 91       	pop	r29
     834:	cf 91       	pop	r28
     836:	1f 91       	pop	r17
     838:	0f 91       	pop	r16
     83a:	08 95       	ret

0000083c <_ZL15InnerOffset_cmdiPcS_>:
     83c:	0f 93       	push	r16
     83e:	1f 93       	push	r17
     840:	cf 93       	push	r28
     842:	df 93       	push	r29
     844:	cd b7       	in	r28, 0x3d	; 61
     846:	de b7       	in	r29, 0x3e	; 62
     848:	c4 54       	subi	r28, 0x44	; 68
     84a:	d1 09       	sbc	r29, r1
     84c:	0f b6       	in	r0, 0x3f	; 63
     84e:	f8 94       	cli
     850:	de bf       	out	0x3e, r29	; 62
     852:	0f be       	out	0x3f, r0	; 63
     854:	cd bf       	out	0x3d, r28	; 61
     856:	9e 01       	movw	r18, r28
     858:	21 5c       	subi	r18, 0xC1	; 193
     85a:	3f 4f       	sbci	r19, 0xFF	; 255
     85c:	f9 01       	movw	r30, r18
     85e:	91 83       	std	Z+1, r25	; 0x01
     860:	80 83       	st	Z, r24
     862:	ce 01       	movw	r24, r28
     864:	8f 5b       	subi	r24, 0xBF	; 191
     866:	9f 4f       	sbci	r25, 0xFF	; 255
     868:	fc 01       	movw	r30, r24
     86a:	71 83       	std	Z+1, r23	; 0x01
     86c:	60 83       	st	Z, r22
     86e:	ce 01       	movw	r24, r28
     870:	8d 5b       	subi	r24, 0xBD	; 189
     872:	9f 4f       	sbci	r25, 0xFF	; 255
     874:	fc 01       	movw	r30, r24
     876:	51 83       	std	Z+1, r21	; 0x01
     878:	40 83       	st	Z, r20
     87a:	ce 01       	movw	r24, r28
     87c:	8d 5b       	subi	r24, 0xBD	; 189
     87e:	9f 4f       	sbci	r25, 0xFF	; 255
     880:	fc 01       	movw	r30, r24
     882:	80 81       	ld	r24, Z
     884:	91 81       	ldd	r25, Z+1	; 0x01
     886:	89 2b       	or	r24, r25
     888:	09 f4       	brne	.+2      	; 0x88c <_ZL15InnerOffset_cmdiPcS_+0x50>
     88a:	4c c0       	rjmp	.+152    	; 0x924 <__stack+0x25>
     88c:	1a 82       	std	Y+2, r1	; 0x02
     88e:	19 82       	std	Y+1, r1	; 0x01
     890:	89 81       	ldd	r24, Y+1	; 0x01
     892:	9a 81       	ldd	r25, Y+2	; 0x02
     894:	9e 01       	movw	r18, r28
     896:	2d 5b       	subi	r18, 0xBD	; 189
     898:	3f 4f       	sbci	r19, 0xFF	; 255
     89a:	f9 01       	movw	r30, r18
     89c:	20 81       	ld	r18, Z
     89e:	31 81       	ldd	r19, Z+1	; 0x01
     8a0:	82 0f       	add	r24, r18
     8a2:	93 1f       	adc	r25, r19
     8a4:	fc 01       	movw	r30, r24
     8a6:	80 81       	ld	r24, Z
     8a8:	88 23       	and	r24, r24
     8aa:	29 f1       	breq	.+74     	; 0x8f6 <_ZL15InnerOffset_cmdiPcS_+0xba>
     8ac:	89 81       	ldd	r24, Y+1	; 0x01
     8ae:	9a 81       	ldd	r25, Y+2	; 0x02
     8b0:	9e 01       	movw	r18, r28
     8b2:	2d 5b       	subi	r18, 0xBD	; 189
     8b4:	3f 4f       	sbci	r19, 0xFF	; 255
     8b6:	f9 01       	movw	r30, r18
     8b8:	20 81       	ld	r18, Z
     8ba:	31 81       	ldd	r19, Z+1	; 0x01
     8bc:	82 0f       	add	r24, r18
     8be:	93 1f       	adc	r25, r19
     8c0:	fc 01       	movw	r30, r24
     8c2:	80 81       	ld	r24, Z
     8c4:	88 2f       	mov	r24, r24
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	c0 97       	sbiw	r24, 0x30	; 48
     8ca:	0a 97       	sbiw	r24, 0x0a	; 10
     8cc:	10 f0       	brcs	.+4      	; 0x8d2 <_ZL15InnerOffset_cmdiPcS_+0x96>
     8ce:	81 e0       	ldi	r24, 0x01	; 1
     8d0:	01 c0       	rjmp	.+2      	; 0x8d4 <_ZL15InnerOffset_cmdiPcS_+0x98>
     8d2:	80 e0       	ldi	r24, 0x00	; 0
     8d4:	88 23       	and	r24, r24
     8d6:	49 f0       	breq	.+18     	; 0x8ea <_ZL15InnerOffset_cmdiPcS_+0xae>
     8d8:	6b eb       	ldi	r22, 0xBB	; 187
     8da:	72 e0       	ldi	r23, 0x02	; 2
     8dc:	8e ee       	ldi	r24, 0xEE	; 238
     8de:	93 e0       	ldi	r25, 0x03	; 3
     8e0:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     8e4:	80 e0       	ldi	r24, 0x00	; 0
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	43 c0       	rjmp	.+134    	; 0x970 <__stack+0x71>
     8ea:	89 81       	ldd	r24, Y+1	; 0x01
     8ec:	9a 81       	ldd	r25, Y+2	; 0x02
     8ee:	01 96       	adiw	r24, 0x01	; 1
     8f0:	9a 83       	std	Y+2, r25	; 0x02
     8f2:	89 83       	std	Y+1, r24	; 0x01
     8f4:	cd cf       	rjmp	.-102    	; 0x890 <_ZL15InnerOffset_cmdiPcS_+0x54>
     8f6:	ce 01       	movw	r24, r28
     8f8:	8d 5b       	subi	r24, 0xBD	; 189
     8fa:	9f 4f       	sbci	r25, 0xFF	; 255
     8fc:	fc 01       	movw	r30, r24
     8fe:	80 81       	ld	r24, Z
     900:	91 81       	ldd	r25, Z+1	; 0x01
     902:	4a e0       	ldi	r20, 0x0A	; 10
     904:	50 e0       	ldi	r21, 0x00	; 0
     906:	60 e0       	ldi	r22, 0x00	; 0
     908:	70 e0       	ldi	r23, 0x00	; 0
     90a:	0e 94 42 1c 	call	0x3884	; 0x3884 <strtol>
     90e:	dc 01       	movw	r26, r24
     910:	cb 01       	movw	r24, r22
     912:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <INNER_TRAVERSE_OFFSET>
     916:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <INNER_TRAVERSE_OFFSET+0x1>
     91a:	a0 93 b8 01 	sts	0x01B8, r26	; 0x8001b8 <INNER_TRAVERSE_OFFSET+0x2>
     91e:	b0 93 b9 01 	sts	0x01B9, r27	; 0x8001b9 <INNER_TRAVERSE_OFFSET+0x3>
     922:	26 c0       	rjmp	.+76     	; 0x970 <__stack+0x71>
     924:	2c e3       	ldi	r18, 0x3C	; 60
     926:	ce 01       	movw	r24, r28
     928:	03 96       	adiw	r24, 0x03	; 3
     92a:	fc 01       	movw	r30, r24
     92c:	32 2f       	mov	r19, r18
     92e:	11 92       	st	Z+, r1
     930:	3a 95       	dec	r19
     932:	e9 f7       	brne	.-6      	; 0x92e <__stack+0x2f>
     934:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <INNER_TRAVERSE_OFFSET>
     938:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <INNER_TRAVERSE_OFFSET+0x1>
     93c:	a0 91 b8 01 	lds	r26, 0x01B8	; 0x8001b8 <INNER_TRAVERSE_OFFSET+0x2>
     940:	b0 91 b9 01 	lds	r27, 0x01B9	; 0x8001b9 <INNER_TRAVERSE_OFFSET+0x3>
     944:	9e 01       	movw	r18, r28
     946:	2f 5b       	subi	r18, 0xBF	; 191
     948:	3f 4f       	sbci	r19, 0xFF	; 255
     94a:	f9 01       	movw	r30, r18
     94c:	40 81       	ld	r20, Z
     94e:	51 81       	ldd	r21, Z+1	; 0x01
     950:	fe 01       	movw	r30, r28
     952:	33 96       	adiw	r30, 0x03	; 3
     954:	8c 01       	movw	r16, r24
     956:	9d 01       	movw	r18, r26
     958:	63 e0       	ldi	r22, 0x03	; 3
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	cf 01       	movw	r24, r30
     95e:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_Z17BuildSerialOutputPciS_m>
     962:	ce 01       	movw	r24, r28
     964:	03 96       	adiw	r24, 0x03	; 3
     966:	bc 01       	movw	r22, r24
     968:	8e ee       	ldi	r24, 0xEE	; 238
     96a:	93 e0       	ldi	r25, 0x03	; 3
     96c:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     970:	cc 5b       	subi	r28, 0xBC	; 188
     972:	df 4f       	sbci	r29, 0xFF	; 255
     974:	0f b6       	in	r0, 0x3f	; 63
     976:	f8 94       	cli
     978:	de bf       	out	0x3e, r29	; 62
     97a:	0f be       	out	0x3f, r0	; 63
     97c:	cd bf       	out	0x3d, r28	; 61
     97e:	df 91       	pop	r29
     980:	cf 91       	pop	r28
     982:	1f 91       	pop	r17
     984:	0f 91       	pop	r16
     986:	08 95       	ret

00000988 <_ZL14SpoolWidth_cmdiPcS_>:
     988:	0f 93       	push	r16
     98a:	1f 93       	push	r17
     98c:	cf 93       	push	r28
     98e:	df 93       	push	r29
     990:	cd b7       	in	r28, 0x3d	; 61
     992:	de b7       	in	r29, 0x3e	; 62
     994:	c4 54       	subi	r28, 0x44	; 68
     996:	d1 09       	sbc	r29, r1
     998:	0f b6       	in	r0, 0x3f	; 63
     99a:	f8 94       	cli
     99c:	de bf       	out	0x3e, r29	; 62
     99e:	0f be       	out	0x3f, r0	; 63
     9a0:	cd bf       	out	0x3d, r28	; 61
     9a2:	9e 01       	movw	r18, r28
     9a4:	21 5c       	subi	r18, 0xC1	; 193
     9a6:	3f 4f       	sbci	r19, 0xFF	; 255
     9a8:	f9 01       	movw	r30, r18
     9aa:	91 83       	std	Z+1, r25	; 0x01
     9ac:	80 83       	st	Z, r24
     9ae:	ce 01       	movw	r24, r28
     9b0:	8f 5b       	subi	r24, 0xBF	; 191
     9b2:	9f 4f       	sbci	r25, 0xFF	; 255
     9b4:	fc 01       	movw	r30, r24
     9b6:	71 83       	std	Z+1, r23	; 0x01
     9b8:	60 83       	st	Z, r22
     9ba:	ce 01       	movw	r24, r28
     9bc:	8d 5b       	subi	r24, 0xBD	; 189
     9be:	9f 4f       	sbci	r25, 0xFF	; 255
     9c0:	fc 01       	movw	r30, r24
     9c2:	51 83       	std	Z+1, r21	; 0x01
     9c4:	40 83       	st	Z, r20
     9c6:	ce 01       	movw	r24, r28
     9c8:	8d 5b       	subi	r24, 0xBD	; 189
     9ca:	9f 4f       	sbci	r25, 0xFF	; 255
     9cc:	fc 01       	movw	r30, r24
     9ce:	80 81       	ld	r24, Z
     9d0:	91 81       	ldd	r25, Z+1	; 0x01
     9d2:	89 2b       	or	r24, r25
     9d4:	09 f4       	brne	.+2      	; 0x9d8 <_ZL14SpoolWidth_cmdiPcS_+0x50>
     9d6:	4c c0       	rjmp	.+152    	; 0xa70 <_ZL14SpoolWidth_cmdiPcS_+0xe8>
     9d8:	1a 82       	std	Y+2, r1	; 0x02
     9da:	19 82       	std	Y+1, r1	; 0x01
     9dc:	89 81       	ldd	r24, Y+1	; 0x01
     9de:	9a 81       	ldd	r25, Y+2	; 0x02
     9e0:	9e 01       	movw	r18, r28
     9e2:	2d 5b       	subi	r18, 0xBD	; 189
     9e4:	3f 4f       	sbci	r19, 0xFF	; 255
     9e6:	f9 01       	movw	r30, r18
     9e8:	20 81       	ld	r18, Z
     9ea:	31 81       	ldd	r19, Z+1	; 0x01
     9ec:	82 0f       	add	r24, r18
     9ee:	93 1f       	adc	r25, r19
     9f0:	fc 01       	movw	r30, r24
     9f2:	80 81       	ld	r24, Z
     9f4:	88 23       	and	r24, r24
     9f6:	29 f1       	breq	.+74     	; 0xa42 <_ZL14SpoolWidth_cmdiPcS_+0xba>
     9f8:	89 81       	ldd	r24, Y+1	; 0x01
     9fa:	9a 81       	ldd	r25, Y+2	; 0x02
     9fc:	9e 01       	movw	r18, r28
     9fe:	2d 5b       	subi	r18, 0xBD	; 189
     a00:	3f 4f       	sbci	r19, 0xFF	; 255
     a02:	f9 01       	movw	r30, r18
     a04:	20 81       	ld	r18, Z
     a06:	31 81       	ldd	r19, Z+1	; 0x01
     a08:	82 0f       	add	r24, r18
     a0a:	93 1f       	adc	r25, r19
     a0c:	fc 01       	movw	r30, r24
     a0e:	80 81       	ld	r24, Z
     a10:	88 2f       	mov	r24, r24
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	c0 97       	sbiw	r24, 0x30	; 48
     a16:	0a 97       	sbiw	r24, 0x0a	; 10
     a18:	10 f0       	brcs	.+4      	; 0xa1e <_ZL14SpoolWidth_cmdiPcS_+0x96>
     a1a:	81 e0       	ldi	r24, 0x01	; 1
     a1c:	01 c0       	rjmp	.+2      	; 0xa20 <_ZL14SpoolWidth_cmdiPcS_+0x98>
     a1e:	80 e0       	ldi	r24, 0x00	; 0
     a20:	88 23       	and	r24, r24
     a22:	49 f0       	breq	.+18     	; 0xa36 <_ZL14SpoolWidth_cmdiPcS_+0xae>
     a24:	61 ee       	ldi	r22, 0xE1	; 225
     a26:	72 e0       	ldi	r23, 0x02	; 2
     a28:	8e ee       	ldi	r24, 0xEE	; 238
     a2a:	93 e0       	ldi	r25, 0x03	; 3
     a2c:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     a30:	80 e0       	ldi	r24, 0x00	; 0
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	43 c0       	rjmp	.+134    	; 0xabc <_ZL14SpoolWidth_cmdiPcS_+0x134>
     a36:	89 81       	ldd	r24, Y+1	; 0x01
     a38:	9a 81       	ldd	r25, Y+2	; 0x02
     a3a:	01 96       	adiw	r24, 0x01	; 1
     a3c:	9a 83       	std	Y+2, r25	; 0x02
     a3e:	89 83       	std	Y+1, r24	; 0x01
     a40:	cd cf       	rjmp	.-102    	; 0x9dc <_ZL14SpoolWidth_cmdiPcS_+0x54>
     a42:	ce 01       	movw	r24, r28
     a44:	8d 5b       	subi	r24, 0xBD	; 189
     a46:	9f 4f       	sbci	r25, 0xFF	; 255
     a48:	fc 01       	movw	r30, r24
     a4a:	80 81       	ld	r24, Z
     a4c:	91 81       	ldd	r25, Z+1	; 0x01
     a4e:	4a e0       	ldi	r20, 0x0A	; 10
     a50:	50 e0       	ldi	r21, 0x00	; 0
     a52:	60 e0       	ldi	r22, 0x00	; 0
     a54:	70 e0       	ldi	r23, 0x00	; 0
     a56:	0e 94 42 1c 	call	0x3884	; 0x3884 <strtol>
     a5a:	dc 01       	movw	r26, r24
     a5c:	cb 01       	movw	r24, r22
     a5e:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <SPOOL_WIDTH>
     a62:	90 93 bb 01 	sts	0x01BB, r25	; 0x8001bb <SPOOL_WIDTH+0x1>
     a66:	a0 93 bc 01 	sts	0x01BC, r26	; 0x8001bc <SPOOL_WIDTH+0x2>
     a6a:	b0 93 bd 01 	sts	0x01BD, r27	; 0x8001bd <SPOOL_WIDTH+0x3>
     a6e:	26 c0       	rjmp	.+76     	; 0xabc <_ZL14SpoolWidth_cmdiPcS_+0x134>
     a70:	2c e3       	ldi	r18, 0x3C	; 60
     a72:	ce 01       	movw	r24, r28
     a74:	03 96       	adiw	r24, 0x03	; 3
     a76:	fc 01       	movw	r30, r24
     a78:	32 2f       	mov	r19, r18
     a7a:	11 92       	st	Z+, r1
     a7c:	3a 95       	dec	r19
     a7e:	e9 f7       	brne	.-6      	; 0xa7a <_ZL14SpoolWidth_cmdiPcS_+0xf2>
     a80:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <SPOOL_WIDTH>
     a84:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <SPOOL_WIDTH+0x1>
     a88:	a0 91 bc 01 	lds	r26, 0x01BC	; 0x8001bc <SPOOL_WIDTH+0x2>
     a8c:	b0 91 bd 01 	lds	r27, 0x01BD	; 0x8001bd <SPOOL_WIDTH+0x3>
     a90:	9e 01       	movw	r18, r28
     a92:	2f 5b       	subi	r18, 0xBF	; 191
     a94:	3f 4f       	sbci	r19, 0xFF	; 255
     a96:	f9 01       	movw	r30, r18
     a98:	40 81       	ld	r20, Z
     a9a:	51 81       	ldd	r21, Z+1	; 0x01
     a9c:	fe 01       	movw	r30, r28
     a9e:	33 96       	adiw	r30, 0x03	; 3
     aa0:	8c 01       	movw	r16, r24
     aa2:	9d 01       	movw	r18, r26
     aa4:	63 e0       	ldi	r22, 0x03	; 3
     aa6:	70 e0       	ldi	r23, 0x00	; 0
     aa8:	cf 01       	movw	r24, r30
     aaa:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_Z17BuildSerialOutputPciS_m>
     aae:	ce 01       	movw	r24, r28
     ab0:	03 96       	adiw	r24, 0x03	; 3
     ab2:	bc 01       	movw	r22, r24
     ab4:	8e ee       	ldi	r24, 0xEE	; 238
     ab6:	93 e0       	ldi	r25, 0x03	; 3
     ab8:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     abc:	cc 5b       	subi	r28, 0xBC	; 188
     abe:	df 4f       	sbci	r29, 0xFF	; 255
     ac0:	0f b6       	in	r0, 0x3f	; 63
     ac2:	f8 94       	cli
     ac4:	de bf       	out	0x3e, r29	; 62
     ac6:	0f be       	out	0x3f, r0	; 63
     ac8:	cd bf       	out	0x3d, r28	; 61
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	1f 91       	pop	r17
     ad0:	0f 91       	pop	r16
     ad2:	08 95       	ret

00000ad4 <_ZL20FilamentDiameter_cmdiPcS_>:
     ad4:	0f 93       	push	r16
     ad6:	1f 93       	push	r17
     ad8:	cf 93       	push	r28
     ada:	df 93       	push	r29
     adc:	cd b7       	in	r28, 0x3d	; 61
     ade:	de b7       	in	r29, 0x3e	; 62
     ae0:	c4 54       	subi	r28, 0x44	; 68
     ae2:	d1 09       	sbc	r29, r1
     ae4:	0f b6       	in	r0, 0x3f	; 63
     ae6:	f8 94       	cli
     ae8:	de bf       	out	0x3e, r29	; 62
     aea:	0f be       	out	0x3f, r0	; 63
     aec:	cd bf       	out	0x3d, r28	; 61
     aee:	9e 01       	movw	r18, r28
     af0:	21 5c       	subi	r18, 0xC1	; 193
     af2:	3f 4f       	sbci	r19, 0xFF	; 255
     af4:	f9 01       	movw	r30, r18
     af6:	91 83       	std	Z+1, r25	; 0x01
     af8:	80 83       	st	Z, r24
     afa:	ce 01       	movw	r24, r28
     afc:	8f 5b       	subi	r24, 0xBF	; 191
     afe:	9f 4f       	sbci	r25, 0xFF	; 255
     b00:	fc 01       	movw	r30, r24
     b02:	71 83       	std	Z+1, r23	; 0x01
     b04:	60 83       	st	Z, r22
     b06:	ce 01       	movw	r24, r28
     b08:	8d 5b       	subi	r24, 0xBD	; 189
     b0a:	9f 4f       	sbci	r25, 0xFF	; 255
     b0c:	fc 01       	movw	r30, r24
     b0e:	51 83       	std	Z+1, r21	; 0x01
     b10:	40 83       	st	Z, r20
     b12:	ce 01       	movw	r24, r28
     b14:	8d 5b       	subi	r24, 0xBD	; 189
     b16:	9f 4f       	sbci	r25, 0xFF	; 255
     b18:	fc 01       	movw	r30, r24
     b1a:	80 81       	ld	r24, Z
     b1c:	91 81       	ldd	r25, Z+1	; 0x01
     b1e:	89 2b       	or	r24, r25
     b20:	09 f4       	brne	.+2      	; 0xb24 <_ZL20FilamentDiameter_cmdiPcS_+0x50>
     b22:	4c c0       	rjmp	.+152    	; 0xbbc <_ZL20FilamentDiameter_cmdiPcS_+0xe8>
     b24:	1a 82       	std	Y+2, r1	; 0x02
     b26:	19 82       	std	Y+1, r1	; 0x01
     b28:	89 81       	ldd	r24, Y+1	; 0x01
     b2a:	9a 81       	ldd	r25, Y+2	; 0x02
     b2c:	9e 01       	movw	r18, r28
     b2e:	2d 5b       	subi	r18, 0xBD	; 189
     b30:	3f 4f       	sbci	r19, 0xFF	; 255
     b32:	f9 01       	movw	r30, r18
     b34:	20 81       	ld	r18, Z
     b36:	31 81       	ldd	r19, Z+1	; 0x01
     b38:	82 0f       	add	r24, r18
     b3a:	93 1f       	adc	r25, r19
     b3c:	fc 01       	movw	r30, r24
     b3e:	80 81       	ld	r24, Z
     b40:	88 23       	and	r24, r24
     b42:	29 f1       	breq	.+74     	; 0xb8e <_ZL20FilamentDiameter_cmdiPcS_+0xba>
     b44:	89 81       	ldd	r24, Y+1	; 0x01
     b46:	9a 81       	ldd	r25, Y+2	; 0x02
     b48:	9e 01       	movw	r18, r28
     b4a:	2d 5b       	subi	r18, 0xBD	; 189
     b4c:	3f 4f       	sbci	r19, 0xFF	; 255
     b4e:	f9 01       	movw	r30, r18
     b50:	20 81       	ld	r18, Z
     b52:	31 81       	ldd	r19, Z+1	; 0x01
     b54:	82 0f       	add	r24, r18
     b56:	93 1f       	adc	r25, r19
     b58:	fc 01       	movw	r30, r24
     b5a:	80 81       	ld	r24, Z
     b5c:	88 2f       	mov	r24, r24
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	c0 97       	sbiw	r24, 0x30	; 48
     b62:	0a 97       	sbiw	r24, 0x0a	; 10
     b64:	10 f0       	brcs	.+4      	; 0xb6a <_ZL20FilamentDiameter_cmdiPcS_+0x96>
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	01 c0       	rjmp	.+2      	; 0xb6c <_ZL20FilamentDiameter_cmdiPcS_+0x98>
     b6a:	80 e0       	ldi	r24, 0x00	; 0
     b6c:	88 23       	and	r24, r24
     b6e:	49 f0       	breq	.+18     	; 0xb82 <_ZL20FilamentDiameter_cmdiPcS_+0xae>
     b70:	61 ee       	ldi	r22, 0xE1	; 225
     b72:	72 e0       	ldi	r23, 0x02	; 2
     b74:	8e ee       	ldi	r24, 0xEE	; 238
     b76:	93 e0       	ldi	r25, 0x03	; 3
     b78:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     b7c:	80 e0       	ldi	r24, 0x00	; 0
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	43 c0       	rjmp	.+134    	; 0xc08 <_ZL20FilamentDiameter_cmdiPcS_+0x134>
     b82:	89 81       	ldd	r24, Y+1	; 0x01
     b84:	9a 81       	ldd	r25, Y+2	; 0x02
     b86:	01 96       	adiw	r24, 0x01	; 1
     b88:	9a 83       	std	Y+2, r25	; 0x02
     b8a:	89 83       	std	Y+1, r24	; 0x01
     b8c:	cd cf       	rjmp	.-102    	; 0xb28 <_ZL20FilamentDiameter_cmdiPcS_+0x54>
     b8e:	ce 01       	movw	r24, r28
     b90:	8d 5b       	subi	r24, 0xBD	; 189
     b92:	9f 4f       	sbci	r25, 0xFF	; 255
     b94:	fc 01       	movw	r30, r24
     b96:	80 81       	ld	r24, Z
     b98:	91 81       	ldd	r25, Z+1	; 0x01
     b9a:	4a e0       	ldi	r20, 0x0A	; 10
     b9c:	50 e0       	ldi	r21, 0x00	; 0
     b9e:	60 e0       	ldi	r22, 0x00	; 0
     ba0:	70 e0       	ldi	r23, 0x00	; 0
     ba2:	0e 94 42 1c 	call	0x3884	; 0x3884 <strtol>
     ba6:	dc 01       	movw	r26, r24
     ba8:	cb 01       	movw	r24, r22
     baa:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <FILAMENT_DIAMETER>
     bae:	90 93 bf 01 	sts	0x01BF, r25	; 0x8001bf <FILAMENT_DIAMETER+0x1>
     bb2:	a0 93 c0 01 	sts	0x01C0, r26	; 0x8001c0 <FILAMENT_DIAMETER+0x2>
     bb6:	b0 93 c1 01 	sts	0x01C1, r27	; 0x8001c1 <FILAMENT_DIAMETER+0x3>
     bba:	26 c0       	rjmp	.+76     	; 0xc08 <_ZL20FilamentDiameter_cmdiPcS_+0x134>
     bbc:	2c e3       	ldi	r18, 0x3C	; 60
     bbe:	ce 01       	movw	r24, r28
     bc0:	03 96       	adiw	r24, 0x03	; 3
     bc2:	fc 01       	movw	r30, r24
     bc4:	32 2f       	mov	r19, r18
     bc6:	11 92       	st	Z+, r1
     bc8:	3a 95       	dec	r19
     bca:	e9 f7       	brne	.-6      	; 0xbc6 <_ZL20FilamentDiameter_cmdiPcS_+0xf2>
     bcc:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <FILAMENT_DIAMETER>
     bd0:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <FILAMENT_DIAMETER+0x1>
     bd4:	a0 91 c0 01 	lds	r26, 0x01C0	; 0x8001c0 <FILAMENT_DIAMETER+0x2>
     bd8:	b0 91 c1 01 	lds	r27, 0x01C1	; 0x8001c1 <FILAMENT_DIAMETER+0x3>
     bdc:	9e 01       	movw	r18, r28
     bde:	2f 5b       	subi	r18, 0xBF	; 191
     be0:	3f 4f       	sbci	r19, 0xFF	; 255
     be2:	f9 01       	movw	r30, r18
     be4:	40 81       	ld	r20, Z
     be6:	51 81       	ldd	r21, Z+1	; 0x01
     be8:	fe 01       	movw	r30, r28
     bea:	33 96       	adiw	r30, 0x03	; 3
     bec:	8c 01       	movw	r16, r24
     bee:	9d 01       	movw	r18, r26
     bf0:	63 e0       	ldi	r22, 0x03	; 3
     bf2:	70 e0       	ldi	r23, 0x00	; 0
     bf4:	cf 01       	movw	r24, r30
     bf6:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_Z17BuildSerialOutputPciS_m>
     bfa:	ce 01       	movw	r24, r28
     bfc:	03 96       	adiw	r24, 0x03	; 3
     bfe:	bc 01       	movw	r22, r24
     c00:	8e ee       	ldi	r24, 0xEE	; 238
     c02:	93 e0       	ldi	r25, 0x03	; 3
     c04:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
     c08:	cc 5b       	subi	r28, 0xBC	; 188
     c0a:	df 4f       	sbci	r29, 0xFF	; 255
     c0c:	0f b6       	in	r0, 0x3f	; 63
     c0e:	f8 94       	cli
     c10:	de bf       	out	0x3e, r29	; 62
     c12:	0f be       	out	0x3f, r0	; 63
     c14:	cd bf       	out	0x3d, r28	; 61
     c16:	df 91       	pop	r29
     c18:	cf 91       	pop	r28
     c1a:	1f 91       	pop	r17
     c1c:	0f 91       	pop	r16
     c1e:	08 95       	ret

00000c20 <_ZL13MoveToEnd_cmdiPcS_>:
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	00 d0       	rcall	.+0      	; 0xc26 <_ZL13MoveToEnd_cmdiPcS_+0x6>
     c26:	00 d0       	rcall	.+0      	; 0xc28 <_ZL13MoveToEnd_cmdiPcS_+0x8>
     c28:	00 d0       	rcall	.+0      	; 0xc2a <_ZL13MoveToEnd_cmdiPcS_+0xa>
     c2a:	cd b7       	in	r28, 0x3d	; 61
     c2c:	de b7       	in	r29, 0x3e	; 62
     c2e:	9a 83       	std	Y+2, r25	; 0x02
     c30:	89 83       	std	Y+1, r24	; 0x01
     c32:	7c 83       	std	Y+4, r23	; 0x04
     c34:	6b 83       	std	Y+3, r22	; 0x03
     c36:	5e 83       	std	Y+6, r21	; 0x06
     c38:	4d 83       	std	Y+5, r20	; 0x05
     c3a:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <RUN_MODE>
     c3e:	84 30       	cpi	r24, 0x04	; 4
     c40:	21 f0       	breq	.+8      	; 0xc4a <_ZL13MoveToEnd_cmdiPcS_+0x2a>
     c42:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <RUN_MODE>
     c46:	83 30       	cpi	r24, 0x03	; 3
     c48:	11 f4       	brne	.+4      	; 0xc4e <_ZL13MoveToEnd_cmdiPcS_+0x2e>
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	01 c0       	rjmp	.+2      	; 0xc50 <_ZL13MoveToEnd_cmdiPcS_+0x30>
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	88 23       	and	r24, r24
     c52:	19 f0       	breq	.+6      	; 0xc5a <_ZL13MoveToEnd_cmdiPcS_+0x3a>
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	80 93 ea 03 	sts	0x03EA, r24	; 0x8003ea <MOVE_TO_END>
     c5a:	00 00       	nop
     c5c:	26 96       	adiw	r28, 0x06	; 6
     c5e:	0f b6       	in	r0, 0x3f	; 63
     c60:	f8 94       	cli
     c62:	de bf       	out	0x3e, r29	; 62
     c64:	0f be       	out	0x3f, r0	; 63
     c66:	cd bf       	out	0x3d, r28	; 61
     c68:	df 91       	pop	r29
     c6a:	cf 91       	pop	r28
     c6c:	08 95       	ret

00000c6e <_ZN15Serial_Commands15commandsProcessEv>:
     c6e:	cf 93       	push	r28
     c70:	df 93       	push	r29
     c72:	cd b7       	in	r28, 0x3d	; 61
     c74:	de b7       	in	r29, 0x3e	; 62
     c76:	c2 58       	subi	r28, 0x82	; 130
     c78:	d1 09       	sbc	r29, r1
     c7a:	0f b6       	in	r0, 0x3f	; 63
     c7c:	f8 94       	cli
     c7e:	de bf       	out	0x3e, r29	; 62
     c80:	0f be       	out	0x3f, r0	; 63
     c82:	cd bf       	out	0x3d, r28	; 61
     c84:	9e 01       	movw	r18, r28
     c86:	2f 57       	subi	r18, 0x7F	; 127
     c88:	3f 4f       	sbci	r19, 0xFF	; 255
     c8a:	f9 01       	movw	r30, r18
     c8c:	91 83       	std	Z+1, r25	; 0x01
     c8e:	80 83       	st	Z, r24
     c90:	ce 01       	movw	r24, r28
     c92:	01 96       	adiw	r24, 0x01	; 1
     c94:	0e 94 c2 06 	call	0xd84	; 0xd84 <_ZN17Serial_ProcessingC1Ev>
     c98:	66 e7       	ldi	r22, 0x76	; 118
     c9a:	71 e0       	ldi	r23, 0x01	; 1
     c9c:	ce 01       	movw	r24, r28
     c9e:	01 96       	adiw	r24, 0x01	; 1
     ca0:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <_ZN17Serial_Processing15CommandsProcessEP8sCommand>
     ca4:	ce 01       	movw	r24, r28
     ca6:	01 96       	adiw	r24, 0x01	; 1
     ca8:	0e 94 83 08 	call	0x1106	; 0x1106 <_ZN17Serial_ProcessingD1Ev>
     cac:	00 00       	nop
     cae:	ce 57       	subi	r28, 0x7E	; 126
     cb0:	df 4f       	sbci	r29, 0xFF	; 255
     cb2:	0f b6       	in	r0, 0x3f	; 63
     cb4:	f8 94       	cli
     cb6:	de bf       	out	0x3e, r29	; 62
     cb8:	0f be       	out	0x3f, r0	; 63
     cba:	cd bf       	out	0x3d, r28	; 61
     cbc:	df 91       	pop	r29
     cbe:	cf 91       	pop	r28
     cc0:	08 95       	ret

00000cc2 <_Z17BuildSerialOutputPciS_m>:
     cc2:	0f 93       	push	r16
     cc4:	1f 93       	push	r17
     cc6:	cf 93       	push	r28
     cc8:	df 93       	push	r29
     cca:	cd b7       	in	r28, 0x3d	; 61
     ccc:	de b7       	in	r29, 0x3e	; 62
     cce:	2a 97       	sbiw	r28, 0x0a	; 10
     cd0:	0f b6       	in	r0, 0x3f	; 63
     cd2:	f8 94       	cli
     cd4:	de bf       	out	0x3e, r29	; 62
     cd6:	0f be       	out	0x3f, r0	; 63
     cd8:	cd bf       	out	0x3d, r28	; 61
     cda:	9a 83       	std	Y+2, r25	; 0x02
     cdc:	89 83       	std	Y+1, r24	; 0x01
     cde:	7c 83       	std	Y+4, r23	; 0x04
     ce0:	6b 83       	std	Y+3, r22	; 0x03
     ce2:	5e 83       	std	Y+6, r21	; 0x06
     ce4:	4d 83       	std	Y+5, r20	; 0x05
     ce6:	0f 83       	std	Y+7, r16	; 0x07
     ce8:	18 87       	std	Y+8, r17	; 0x08
     cea:	29 87       	std	Y+9, r18	; 0x09
     cec:	3a 87       	std	Y+10, r19	; 0x0a
     cee:	8a 85       	ldd	r24, Y+10	; 0x0a
     cf0:	8f 93       	push	r24
     cf2:	89 85       	ldd	r24, Y+9	; 0x09
     cf4:	8f 93       	push	r24
     cf6:	88 85       	ldd	r24, Y+8	; 0x08
     cf8:	8f 93       	push	r24
     cfa:	8f 81       	ldd	r24, Y+7	; 0x07
     cfc:	8f 93       	push	r24
     cfe:	8e 81       	ldd	r24, Y+6	; 0x06
     d00:	8f 93       	push	r24
     d02:	8d 81       	ldd	r24, Y+5	; 0x05
     d04:	8f 93       	push	r24
     d06:	8c 81       	ldd	r24, Y+4	; 0x04
     d08:	8f 93       	push	r24
     d0a:	8b 81       	ldd	r24, Y+3	; 0x03
     d0c:	8f 93       	push	r24
     d0e:	82 e1       	ldi	r24, 0x12	; 18
     d10:	93 e0       	ldi	r25, 0x03	; 3
     d12:	89 2f       	mov	r24, r25
     d14:	8f 93       	push	r24
     d16:	82 e1       	ldi	r24, 0x12	; 18
     d18:	93 e0       	ldi	r25, 0x03	; 3
     d1a:	8f 93       	push	r24
     d1c:	8a 81       	ldd	r24, Y+2	; 0x02
     d1e:	8f 93       	push	r24
     d20:	89 81       	ldd	r24, Y+1	; 0x01
     d22:	8f 93       	push	r24
     d24:	0e 94 bb 1d 	call	0x3b76	; 0x3b76 <sprintf>
     d28:	8d b7       	in	r24, 0x3d	; 61
     d2a:	9e b7       	in	r25, 0x3e	; 62
     d2c:	0c 96       	adiw	r24, 0x0c	; 12
     d2e:	0f b6       	in	r0, 0x3f	; 63
     d30:	f8 94       	cli
     d32:	de bf       	out	0x3e, r29	; 62
     d34:	0f be       	out	0x3f, r0	; 63
     d36:	cd bf       	out	0x3d, r28	; 61
     d38:	00 00       	nop
     d3a:	2a 96       	adiw	r28, 0x0a	; 10
     d3c:	0f b6       	in	r0, 0x3f	; 63
     d3e:	f8 94       	cli
     d40:	de bf       	out	0x3e, r29	; 62
     d42:	0f be       	out	0x3f, r0	; 63
     d44:	cd bf       	out	0x3d, r28	; 61
     d46:	df 91       	pop	r29
     d48:	cf 91       	pop	r28
     d4a:	1f 91       	pop	r17
     d4c:	0f 91       	pop	r16
     d4e:	08 95       	ret

00000d50 <_ZN15Serial_CommandsC1Ev>:



// default constructor
Serial_Commands::Serial_Commands()
     d50:	cf 93       	push	r28
     d52:	df 93       	push	r29
     d54:	00 d0       	rcall	.+0      	; 0xd56 <_ZN15Serial_CommandsC1Ev+0x6>
     d56:	cd b7       	in	r28, 0x3d	; 61
     d58:	de b7       	in	r29, 0x3e	; 62
     d5a:	9a 83       	std	Y+2, r25	; 0x02
     d5c:	89 83       	std	Y+1, r24	; 0x01
{
} //Serial_Commands
     d5e:	00 00       	nop
     d60:	0f 90       	pop	r0
     d62:	0f 90       	pop	r0
     d64:	df 91       	pop	r29
     d66:	cf 91       	pop	r28
     d68:	08 95       	ret

00000d6a <_ZN15Serial_CommandsD1Ev>:

// default destructor
Serial_Commands::~Serial_Commands()
     d6a:	cf 93       	push	r28
     d6c:	df 93       	push	r29
     d6e:	00 d0       	rcall	.+0      	; 0xd70 <_ZN15Serial_CommandsD1Ev+0x6>
     d70:	cd b7       	in	r28, 0x3d	; 61
     d72:	de b7       	in	r29, 0x3e	; 62
     d74:	9a 83       	std	Y+2, r25	; 0x02
     d76:	89 83       	std	Y+1, r24	; 0x01
{
} //~Serial_Commands
     d78:	00 00       	nop
     d7a:	0f 90       	pop	r0
     d7c:	0f 90       	pop	r0
     d7e:	df 91       	pop	r29
     d80:	cf 91       	pop	r28
     d82:	08 95       	ret

00000d84 <_ZN17Serial_ProcessingC1Ev>:

void Serial_Processing::Setup(void)
{
  //Serial.begin(SERIAL_BAUD);               //Set the hardware serial port speed
  //Serial.setTimeout(50);
}
     d84:	cf 93       	push	r28
     d86:	df 93       	push	r29
     d88:	00 d0       	rcall	.+0      	; 0xd8a <_ZN17Serial_ProcessingC1Ev+0x6>
     d8a:	cd b7       	in	r28, 0x3d	; 61
     d8c:	de b7       	in	r29, 0x3e	; 62
     d8e:	9a 83       	std	Y+2, r25	; 0x02
     d90:	89 83       	std	Y+1, r24	; 0x01
     d92:	89 81       	ldd	r24, Y+1	; 0x01
     d94:	9a 81       	ldd	r25, Y+2	; 0x02
     d96:	fc 01       	movw	r30, r24
     d98:	10 82       	st	Z, r1
     d9a:	89 81       	ldd	r24, Y+1	; 0x01
     d9c:	9a 81       	ldd	r25, Y+2	; 0x02
     d9e:	fc 01       	movw	r30, r24
     da0:	11 82       	std	Z+1, r1	; 0x01
     da2:	89 81       	ldd	r24, Y+1	; 0x01
     da4:	9a 81       	ldd	r25, Y+2	; 0x02
     da6:	2c e3       	ldi	r18, 0x3C	; 60
     da8:	02 96       	adiw	r24, 0x02	; 2
     daa:	fc 01       	movw	r30, r24
     dac:	32 2f       	mov	r19, r18
     dae:	11 92       	st	Z+, r1
     db0:	3a 95       	dec	r19
     db2:	e9 f7       	brne	.-6      	; 0xdae <_ZN17Serial_ProcessingC1Ev+0x2a>
     db4:	89 81       	ldd	r24, Y+1	; 0x01
     db6:	9a 81       	ldd	r25, Y+2	; 0x02
     db8:	2c e3       	ldi	r18, 0x3C	; 60
     dba:	ce 96       	adiw	r24, 0x3e	; 62
     dbc:	fc 01       	movw	r30, r24
     dbe:	32 2f       	mov	r19, r18
     dc0:	11 92       	st	Z+, r1
     dc2:	3a 95       	dec	r19
     dc4:	e9 f7       	brne	.-6      	; 0xdc0 <_ZN17Serial_ProcessingC1Ev+0x3c>
     dc6:	00 00       	nop
     dc8:	0f 90       	pop	r0
     dca:	0f 90       	pop	r0
     dcc:	df 91       	pop	r29
     dce:	cf 91       	pop	r28
     dd0:	08 95       	ret

00000dd2 <_ZN17Serial_Processing15CommandsProcessEP8sCommand>:


int Serial_Processing::CommandsProcess(sCommand *ptrCmds)
{
     dd2:	cf 93       	push	r28
     dd4:	df 93       	push	r29
     dd6:	00 d0       	rcall	.+0      	; 0xdd8 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x6>
     dd8:	00 d0       	rcall	.+0      	; 0xdda <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x8>
     dda:	cd b7       	in	r28, 0x3d	; 61
     ddc:	de b7       	in	r29, 0x3e	; 62
     dde:	9a 83       	std	Y+2, r25	; 0x02
     de0:	89 83       	std	Y+1, r24	; 0x01
     de2:	7c 83       	std	Y+4, r23	; 0x04
     de4:	6b 83       	std	Y+3, r22	; 0x03


  if (Serial.available() > 0)
     de6:	8e ee       	ldi	r24, 0xEE	; 238
     de8:	93 e0       	ldi	r25, 0x03	; 3
     dea:	0e 94 b9 17 	call	0x2f72	; 0x2f72 <_ZN14HardwareSerial9availableEv>
     dee:	21 e0       	ldi	r18, 0x01	; 1
     df0:	18 16       	cp	r1, r24
     df2:	19 06       	cpc	r1, r25
     df4:	0c f0       	brlt	.+2      	; 0xdf8 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x26>
     df6:	20 e0       	ldi	r18, 0x00	; 0
     df8:	22 23       	and	r18, r18
     dfa:	19 f1       	breq	.+70     	; 0xe42 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x70>
  {
    computer_bytes_received = Serial.readBytesUntil(10, computerdata, MAX_CMD_LENGTH); //We read the data sent from the serial monitor(pc/mac/other) until we see a <CR>. We also count how many characters have been received
     dfc:	89 81       	ldd	r24, Y+1	; 0x01
     dfe:	9a 81       	ldd	r25, Y+2	; 0x02
     e00:	02 96       	adiw	r24, 0x02	; 2
     e02:	2c e3       	ldi	r18, 0x3C	; 60
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	ac 01       	movw	r20, r24
     e08:	6a e0       	ldi	r22, 0x0A	; 10
     e0a:	8e ee       	ldi	r24, 0xEE	; 238
     e0c:	93 e0       	ldi	r25, 0x03	; 3
     e0e:	0e 94 d0 1a 	call	0x35a0	; 0x35a0 <_ZN6Stream14readBytesUntilEcPcj>
     e12:	28 2f       	mov	r18, r24
     e14:	89 81       	ldd	r24, Y+1	; 0x01
     e16:	9a 81       	ldd	r25, Y+2	; 0x02
     e18:	fc 01       	movw	r30, r24
     e1a:	20 83       	st	Z, r18
    computerdata[computer_bytes_received] = 0; //We add a 0 to the spot in the array just after the last character we received.. This will stop us from transmitting incorrect data that may have been left in the buffer
     e1c:	89 81       	ldd	r24, Y+1	; 0x01
     e1e:	9a 81       	ldd	r25, Y+2	; 0x02
     e20:	fc 01       	movw	r30, r24
     e22:	80 81       	ld	r24, Z
     e24:	88 2f       	mov	r24, r24
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	29 81       	ldd	r18, Y+1	; 0x01
     e2a:	3a 81       	ldd	r19, Y+2	; 0x02
     e2c:	82 0f       	add	r24, r18
     e2e:	93 1f       	adc	r25, r19
     e30:	02 96       	adiw	r24, 0x02	; 2
     e32:	fc 01       	movw	r30, r24
     e34:	10 82       	st	Z, r1
  else
  {
	  return 0;
  }

  if (computerdata != 0) {             //If computer_bytes_received does not equal zero
     e36:	89 81       	ldd	r24, Y+1	; 0x01
     e38:	9a 81       	ldd	r25, Y+2	; 0x02
     e3a:	02 96       	adiw	r24, 0x02	; 2
     e3c:	89 2b       	or	r24, r25
     e3e:	09 f1       	breq	.+66     	; 0xe82 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0xb0>
     e40:	03 c0       	rjmp	.+6      	; 0xe48 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x76>
    computerdata[computer_bytes_received] = 0; //We add a 0 to the spot in the array just after the last character we received.. This will stop us from transmitting incorrect data that may have been left in the buffer
	
  }
  else
  {
	  return 0;
     e42:	80 e0       	ldi	r24, 0x00	; 0
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	1f c0       	rjmp	.+62     	; 0xe86 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0xb4>
  }

  if (computerdata != 0) {             //If computer_bytes_received does not equal zero
    
    CommandParse(ptrCmds, computerdata);
     e48:	89 81       	ldd	r24, Y+1	; 0x01
     e4a:	9a 81       	ldd	r25, Y+2	; 0x02
     e4c:	ac 01       	movw	r20, r24
     e4e:	4e 5f       	subi	r20, 0xFE	; 254
     e50:	5f 4f       	sbci	r21, 0xFF	; 255
     e52:	2b 81       	ldd	r18, Y+3	; 0x03
     e54:	3c 81       	ldd	r19, Y+4	; 0x04
     e56:	89 81       	ldd	r24, Y+1	; 0x01
     e58:	9a 81       	ldd	r25, Y+2	; 0x02
     e5a:	b9 01       	movw	r22, r18
     e5c:	0e 94 4a 07 	call	0xe94	; 0xe94 <_ZN17Serial_Processing12CommandParseEP8sCommandPc>
    
    computer_bytes_received = 0;                  //Reset the var computer_bytes_received to equal 0
     e60:	89 81       	ldd	r24, Y+1	; 0x01
     e62:	9a 81       	ldd	r25, Y+2	; 0x02
     e64:	fc 01       	movw	r30, r24
     e66:	10 82       	st	Z, r1
	computerdata[computer_bytes_received] = {0};
     e68:	89 81       	ldd	r24, Y+1	; 0x01
     e6a:	9a 81       	ldd	r25, Y+2	; 0x02
     e6c:	fc 01       	movw	r30, r24
     e6e:	80 81       	ld	r24, Z
     e70:	88 2f       	mov	r24, r24
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	29 81       	ldd	r18, Y+1	; 0x01
     e76:	3a 81       	ldd	r19, Y+2	; 0x02
     e78:	82 0f       	add	r24, r18
     e7a:	93 1f       	adc	r25, r19
     e7c:	02 96       	adiw	r24, 0x02	; 2
     e7e:	fc 01       	movw	r30, r24
     e80:	10 82       	st	Z, r1
  }

  return 0;
     e82:	80 e0       	ldi	r24, 0x00	; 0
     e84:	90 e0       	ldi	r25, 0x00	; 0
}
     e86:	0f 90       	pop	r0
     e88:	0f 90       	pop	r0
     e8a:	0f 90       	pop	r0
     e8c:	0f 90       	pop	r0
     e8e:	df 91       	pop	r29
     e90:	cf 91       	pop	r28
     e92:	08 95       	ret

00000e94 <_ZN17Serial_Processing12CommandParseEP8sCommandPc>:


unsigned int Serial_Processing::CommandParse(sCommand *ptrCmds, char str[MAX_CMD_LENGTH])
{
     e94:	cf 93       	push	r28
     e96:	df 93       	push	r29
     e98:	cd b7       	in	r28, 0x3d	; 61
     e9a:	de b7       	in	r29, 0x3e	; 62
     e9c:	2e 97       	sbiw	r28, 0x0e	; 14
     e9e:	0f b6       	in	r0, 0x3f	; 63
     ea0:	f8 94       	cli
     ea2:	de bf       	out	0x3e, r29	; 62
     ea4:	0f be       	out	0x3f, r0	; 63
     ea6:	cd bf       	out	0x3d, r28	; 61
     ea8:	9a 87       	std	Y+10, r25	; 0x0a
     eaa:	89 87       	std	Y+9, r24	; 0x09
     eac:	7c 87       	std	Y+12, r23	; 0x0c
     eae:	6b 87       	std	Y+11, r22	; 0x0b
     eb0:	5e 87       	std	Y+14, r21	; 0x0e
     eb2:	4d 87       	std	Y+13, r20	; 0x0d
  hardwareType = strtok(str, DELIMITER); //hardware ID
     eb4:	8d 85       	ldd	r24, Y+13	; 0x0d
     eb6:	9e 85       	ldd	r25, Y+14	; 0x0e
     eb8:	6c e1       	ldi	r22, 0x1C	; 28
     eba:	73 e0       	ldi	r23, 0x03	; 3
     ebc:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <strtok>
     ec0:	9c 01       	movw	r18, r24
     ec2:	89 85       	ldd	r24, Y+9	; 0x09
     ec4:	9a 85       	ldd	r25, Y+10	; 0x0a
     ec6:	86 58       	subi	r24, 0x86	; 134
     ec8:	9f 4f       	sbci	r25, 0xFF	; 255
     eca:	fc 01       	movw	r30, r24
     ecc:	31 83       	std	Z+1, r19	; 0x01
     ece:	20 83       	st	Z, r18
  cmd = strtok(NULL, DELIMITER);
     ed0:	6c e1       	ldi	r22, 0x1C	; 28
     ed2:	73 e0       	ldi	r23, 0x03	; 3
     ed4:	80 e0       	ldi	r24, 0x00	; 0
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <strtok>
     edc:	9c 01       	movw	r18, r24
     ede:	89 85       	ldd	r24, Y+9	; 0x09
     ee0:	9a 85       	ldd	r25, Y+10	; 0x0a
     ee2:	84 58       	subi	r24, 0x84	; 132
     ee4:	9f 4f       	sbci	r25, 0xFF	; 255
     ee6:	fc 01       	movw	r30, r24
     ee8:	31 83       	std	Z+1, r19	; 0x01
     eea:	20 83       	st	Z, r18
  arguments = strtok(NULL, DELIMITER);
     eec:	6c e1       	ldi	r22, 0x1C	; 28
     eee:	73 e0       	ldi	r23, 0x03	; 3
     ef0:	80 e0       	ldi	r24, 0x00	; 0
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <strtok>
     ef8:	9c 01       	movw	r18, r24
     efa:	89 85       	ldd	r24, Y+9	; 0x09
     efc:	9a 85       	ldd	r25, Y+10	; 0x0a
     efe:	82 58       	subi	r24, 0x82	; 130
     f00:	9f 4f       	sbci	r25, 0xFF	; 255
     f02:	fc 01       	movw	r30, r24
     f04:	31 83       	std	Z+1, r19	; 0x01
     f06:	20 83       	st	Z, r18

  for (int i=0; hardwareType[i]!= '\0'; i++)
     f08:	1a 82       	std	Y+2, r1	; 0x02
     f0a:	19 82       	std	Y+1, r1	; 0x01
     f0c:	89 85       	ldd	r24, Y+9	; 0x09
     f0e:	9a 85       	ldd	r25, Y+10	; 0x0a
     f10:	86 58       	subi	r24, 0x86	; 134
     f12:	9f 4f       	sbci	r25, 0xFF	; 255
     f14:	fc 01       	movw	r30, r24
     f16:	20 81       	ld	r18, Z
     f18:	31 81       	ldd	r19, Z+1	; 0x01
     f1a:	89 81       	ldd	r24, Y+1	; 0x01
     f1c:	9a 81       	ldd	r25, Y+2	; 0x02
     f1e:	82 0f       	add	r24, r18
     f20:	93 1f       	adc	r25, r19
     f22:	fc 01       	movw	r30, r24
     f24:	80 81       	ld	r24, Z
     f26:	88 23       	and	r24, r24
     f28:	31 f1       	breq	.+76     	; 0xf76 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xe2>
  {
    //Serial.println(hardwareType[i]);
    if (!isdigit(hardwareType[i]) != 0)
     f2a:	89 85       	ldd	r24, Y+9	; 0x09
     f2c:	9a 85       	ldd	r25, Y+10	; 0x0a
     f2e:	86 58       	subi	r24, 0x86	; 134
     f30:	9f 4f       	sbci	r25, 0xFF	; 255
     f32:	fc 01       	movw	r30, r24
     f34:	20 81       	ld	r18, Z
     f36:	31 81       	ldd	r19, Z+1	; 0x01
     f38:	89 81       	ldd	r24, Y+1	; 0x01
     f3a:	9a 81       	ldd	r25, Y+2	; 0x02
     f3c:	82 0f       	add	r24, r18
     f3e:	93 1f       	adc	r25, r19
     f40:	fc 01       	movw	r30, r24
     f42:	80 81       	ld	r24, Z
     f44:	88 2f       	mov	r24, r24
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	c0 97       	sbiw	r24, 0x30	; 48
     f4a:	0a 97       	sbiw	r24, 0x0a	; 10
     f4c:	10 f0       	brcs	.+4      	; 0xf52 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xbe>
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	01 c0       	rjmp	.+2      	; 0xf54 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xc0>
     f52:	80 e0       	ldi	r24, 0x00	; 0
     f54:	88 23       	and	r24, r24
     f56:	49 f0       	breq	.+18     	; 0xf6a <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xd6>
    {
      Serial.println("Invalid Hardware ID, number is not a digit");
     f58:	6e e1       	ldi	r22, 0x1E	; 30
     f5a:	73 e0       	ldi	r23, 0x03	; 3
     f5c:	8e ee       	ldi	r24, 0xEE	; 238
     f5e:	93 e0       	ldi	r25, 0x03	; 3
     f60:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
      return 0;
     f64:	80 e0       	ldi	r24, 0x00	; 0
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	79 c0       	rjmp	.+242    	; 0x105c <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c8>
{
  hardwareType = strtok(str, DELIMITER); //hardware ID
  cmd = strtok(NULL, DELIMITER);
  arguments = strtok(NULL, DELIMITER);

  for (int i=0; hardwareType[i]!= '\0'; i++)
     f6a:	89 81       	ldd	r24, Y+1	; 0x01
     f6c:	9a 81       	ldd	r25, Y+2	; 0x02
     f6e:	01 96       	adiw	r24, 0x01	; 1
     f70:	9a 83       	std	Y+2, r25	; 0x02
     f72:	89 83       	std	Y+1, r24	; 0x01
     f74:	cb cf       	rjmp	.-106    	; 0xf0c <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x78>
      Serial.println("Invalid Hardware ID, number is not a digit");
      return 0;
    }
  }

  if (MYHARDWARETYPE != atoi(hardwareType))
     f76:	89 85       	ldd	r24, Y+9	; 0x09
     f78:	9a 85       	ldd	r25, Y+10	; 0x0a
     f7a:	86 58       	subi	r24, 0x86	; 134
     f7c:	9f 4f       	sbci	r25, 0xFF	; 255
     f7e:	fc 01       	movw	r30, r24
     f80:	80 81       	ld	r24, Z
     f82:	91 81       	ldd	r25, Z+1	; 0x01
     f84:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <atoi>
     f88:	03 97       	sbiw	r24, 0x03	; 3
     f8a:	49 f0       	breq	.+18     	; 0xf9e <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x10a>
  {
    Serial.println("Invalid Hardware ID");
     f8c:	69 e4       	ldi	r22, 0x49	; 73
     f8e:	73 e0       	ldi	r23, 0x03	; 3
     f90:	8e ee       	ldi	r24, 0xEE	; 238
     f92:	93 e0       	ldi	r25, 0x03	; 3
     f94:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5Print7printlnEPKc>
    return 0;
     f98:	80 e0       	ldi	r24, 0x00	; 0
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	5f c0       	rjmp	.+190    	; 0x105c <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c8>
  }

  unsigned int i;
  sCommand cmd_list;
  i=0;
     f9e:	1c 82       	std	Y+4, r1	; 0x04
     fa0:	1b 82       	std	Y+3, r1	; 0x03

  memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
     fa2:	8b 81       	ldd	r24, Y+3	; 0x03
     fa4:	9c 81       	ldd	r25, Y+4	; 0x04
     fa6:	88 0f       	add	r24, r24
     fa8:	99 1f       	adc	r25, r25
     faa:	88 0f       	add	r24, r24
     fac:	99 1f       	adc	r25, r25
     fae:	2b 85       	ldd	r18, Y+11	; 0x0b
     fb0:	3c 85       	ldd	r19, Y+12	; 0x0c
     fb2:	82 0f       	add	r24, r18
     fb4:	93 1f       	adc	r25, r19
     fb6:	fc 01       	movw	r30, r24
     fb8:	80 81       	ld	r24, Z
     fba:	91 81       	ldd	r25, Z+1	; 0x01
     fbc:	a2 81       	ldd	r26, Z+2	; 0x02
     fbe:	b3 81       	ldd	r27, Z+3	; 0x03
     fc0:	8d 83       	std	Y+5, r24	; 0x05
     fc2:	9e 83       	std	Y+6, r25	; 0x06
     fc4:	af 83       	std	Y+7, r26	; 0x07
     fc6:	b8 87       	std	Y+8, r27	; 0x08
  
  
  while(cmd_list.function!=0)
     fc8:	8f 81       	ldd	r24, Y+7	; 0x07
     fca:	98 85       	ldd	r25, Y+8	; 0x08
     fcc:	89 2b       	or	r24, r25
     fce:	09 f4       	brne	.+2      	; 0xfd2 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x13e>
     fd0:	43 c0       	rjmp	.+134    	; 0x1058 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c4>
  {
    if (strcicmp(cmd,cmd_list.name)==0){
     fd2:	4d 81       	ldd	r20, Y+5	; 0x05
     fd4:	5e 81       	ldd	r21, Y+6	; 0x06
     fd6:	89 85       	ldd	r24, Y+9	; 0x09
     fd8:	9a 85       	ldd	r25, Y+10	; 0x0a
     fda:	84 58       	subi	r24, 0x84	; 132
     fdc:	9f 4f       	sbci	r25, 0xFF	; 255
     fde:	fc 01       	movw	r30, r24
     fe0:	20 81       	ld	r18, Z
     fe2:	31 81       	ldd	r19, Z+1	; 0x01
     fe4:	89 85       	ldd	r24, Y+9	; 0x09
     fe6:	9a 85       	ldd	r25, Y+10	; 0x0a
     fe8:	b9 01       	movw	r22, r18
     fea:	0e 94 37 08 	call	0x106e	; 0x106e <_ZN17Serial_Processing8strcicmpEPKcS1_>
     fee:	21 e0       	ldi	r18, 0x01	; 1
     ff0:	89 2b       	or	r24, r25
     ff2:	09 f0       	breq	.+2      	; 0xff6 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x162>
     ff4:	20 e0       	ldi	r18, 0x00	; 0
     ff6:	22 23       	and	r18, r18
     ff8:	b1 f0       	breq	.+44     	; 0x1026 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x192>
      return (*cmd_list.function)(0,cmd,arguments);
     ffa:	2f 81       	ldd	r18, Y+7	; 0x07
     ffc:	38 85       	ldd	r19, Y+8	; 0x08
     ffe:	89 85       	ldd	r24, Y+9	; 0x09
    1000:	9a 85       	ldd	r25, Y+10	; 0x0a
    1002:	82 58       	subi	r24, 0x82	; 130
    1004:	9f 4f       	sbci	r25, 0xFF	; 255
    1006:	fc 01       	movw	r30, r24
    1008:	40 81       	ld	r20, Z
    100a:	51 81       	ldd	r21, Z+1	; 0x01
    100c:	89 85       	ldd	r24, Y+9	; 0x09
    100e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1010:	84 58       	subi	r24, 0x84	; 132
    1012:	9f 4f       	sbci	r25, 0xFF	; 255
    1014:	fc 01       	movw	r30, r24
    1016:	80 81       	ld	r24, Z
    1018:	91 81       	ldd	r25, Z+1	; 0x01
    101a:	bc 01       	movw	r22, r24
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	f9 01       	movw	r30, r18
    1022:	09 95       	icall
    1024:	1b c0       	rjmp	.+54     	; 0x105c <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c8>
    }

    i=i+1;
    1026:	8b 81       	ldd	r24, Y+3	; 0x03
    1028:	9c 81       	ldd	r25, Y+4	; 0x04
    102a:	01 96       	adiw	r24, 0x01	; 1
    102c:	9c 83       	std	Y+4, r25	; 0x04
    102e:	8b 83       	std	Y+3, r24	; 0x03
    memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
    1030:	8b 81       	ldd	r24, Y+3	; 0x03
    1032:	9c 81       	ldd	r25, Y+4	; 0x04
    1034:	88 0f       	add	r24, r24
    1036:	99 1f       	adc	r25, r25
    1038:	88 0f       	add	r24, r24
    103a:	99 1f       	adc	r25, r25
    103c:	2b 85       	ldd	r18, Y+11	; 0x0b
    103e:	3c 85       	ldd	r19, Y+12	; 0x0c
    1040:	82 0f       	add	r24, r18
    1042:	93 1f       	adc	r25, r19
    1044:	fc 01       	movw	r30, r24
    1046:	80 81       	ld	r24, Z
    1048:	91 81       	ldd	r25, Z+1	; 0x01
    104a:	a2 81       	ldd	r26, Z+2	; 0x02
    104c:	b3 81       	ldd	r27, Z+3	; 0x03
    104e:	8d 83       	std	Y+5, r24	; 0x05
    1050:	9e 83       	std	Y+6, r25	; 0x06
    1052:	af 83       	std	Y+7, r26	; 0x07
    1054:	b8 87       	std	Y+8, r27	; 0x08
  i=0;

  memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
  
  
  while(cmd_list.function!=0)
    1056:	b8 cf       	rjmp	.-144    	; 0xfc8 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x134>
    i=i+1;
    memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
  }
  

  return 1;
    1058:	81 e0       	ldi	r24, 0x01	; 1
    105a:	90 e0       	ldi	r25, 0x00	; 0
}
    105c:	2e 96       	adiw	r28, 0x0e	; 14
    105e:	0f b6       	in	r0, 0x3f	; 63
    1060:	f8 94       	cli
    1062:	de bf       	out	0x3e, r29	; 62
    1064:	0f be       	out	0x3f, r0	; 63
    1066:	cd bf       	out	0x3d, r28	; 61
    1068:	df 91       	pop	r29
    106a:	cf 91       	pop	r28
    106c:	08 95       	ret

0000106e <_ZN17Serial_Processing8strcicmpEPKcS1_>:

int Serial_Processing::strcicmp(char const *a, char const *b)
{
    106e:	0f 93       	push	r16
    1070:	1f 93       	push	r17
    1072:	cf 93       	push	r28
    1074:	df 93       	push	r29
    1076:	cd b7       	in	r28, 0x3d	; 61
    1078:	de b7       	in	r29, 0x3e	; 62
    107a:	28 97       	sbiw	r28, 0x08	; 8
    107c:	0f b6       	in	r0, 0x3f	; 63
    107e:	f8 94       	cli
    1080:	de bf       	out	0x3e, r29	; 62
    1082:	0f be       	out	0x3f, r0	; 63
    1084:	cd bf       	out	0x3d, r28	; 61
    1086:	9c 83       	std	Y+4, r25	; 0x04
    1088:	8b 83       	std	Y+3, r24	; 0x03
    108a:	7e 83       	std	Y+6, r23	; 0x06
    108c:	6d 83       	std	Y+5, r22	; 0x05
    108e:	58 87       	std	Y+8, r21	; 0x08
    1090:	4f 83       	std	Y+7, r20	; 0x07
  for (;; a++, b++) {
    int d = tolower(*a) - tolower(*b);
    1092:	8d 81       	ldd	r24, Y+5	; 0x05
    1094:	9e 81       	ldd	r25, Y+6	; 0x06
    1096:	fc 01       	movw	r30, r24
    1098:	80 81       	ld	r24, Z
    109a:	88 2f       	mov	r24, r24
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	0e 94 7f 1d 	call	0x3afe	; 0x3afe <tolower>
    10a2:	8c 01       	movw	r16, r24
    10a4:	8f 81       	ldd	r24, Y+7	; 0x07
    10a6:	98 85       	ldd	r25, Y+8	; 0x08
    10a8:	fc 01       	movw	r30, r24
    10aa:	80 81       	ld	r24, Z
    10ac:	88 2f       	mov	r24, r24
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	0e 94 7f 1d 	call	0x3afe	; 0x3afe <tolower>
    10b4:	98 01       	movw	r18, r16
    10b6:	28 1b       	sub	r18, r24
    10b8:	39 0b       	sbc	r19, r25
    10ba:	c9 01       	movw	r24, r18
    10bc:	9a 83       	std	Y+2, r25	; 0x02
    10be:	89 83       	std	Y+1, r24	; 0x01
    if (d != 0 || !*a)
    10c0:	89 81       	ldd	r24, Y+1	; 0x01
    10c2:	9a 81       	ldd	r25, Y+2	; 0x02
    10c4:	89 2b       	or	r24, r25
    10c6:	31 f4       	brne	.+12     	; 0x10d4 <_ZN17Serial_Processing8strcicmpEPKcS1_+0x66>
    10c8:	8d 81       	ldd	r24, Y+5	; 0x05
    10ca:	9e 81       	ldd	r25, Y+6	; 0x06
    10cc:	fc 01       	movw	r30, r24
    10ce:	80 81       	ld	r24, Z
    10d0:	88 23       	and	r24, r24
    10d2:	19 f4       	brne	.+6      	; 0x10da <_ZN17Serial_Processing8strcicmpEPKcS1_+0x6c>
    return d;
    10d4:	89 81       	ldd	r24, Y+1	; 0x01
    10d6:	9a 81       	ldd	r25, Y+2	; 0x02
    10d8:	0b c0       	rjmp	.+22     	; 0x10f0 <_ZN17Serial_Processing8strcicmpEPKcS1_+0x82>
  return 1;
}

int Serial_Processing::strcicmp(char const *a, char const *b)
{
  for (;; a++, b++) {
    10da:	8d 81       	ldd	r24, Y+5	; 0x05
    10dc:	9e 81       	ldd	r25, Y+6	; 0x06
    10de:	01 96       	adiw	r24, 0x01	; 1
    10e0:	9e 83       	std	Y+6, r25	; 0x06
    10e2:	8d 83       	std	Y+5, r24	; 0x05
    10e4:	8f 81       	ldd	r24, Y+7	; 0x07
    10e6:	98 85       	ldd	r25, Y+8	; 0x08
    10e8:	01 96       	adiw	r24, 0x01	; 1
    10ea:	98 87       	std	Y+8, r25	; 0x08
    10ec:	8f 83       	std	Y+7, r24	; 0x07
    10ee:	d1 cf       	rjmp	.-94     	; 0x1092 <_ZN17Serial_Processing8strcicmpEPKcS1_+0x24>
    int d = tolower(*a) - tolower(*b);
    if (d != 0 || !*a)
    return d;
  }
}
    10f0:	28 96       	adiw	r28, 0x08	; 8
    10f2:	0f b6       	in	r0, 0x3f	; 63
    10f4:	f8 94       	cli
    10f6:	de bf       	out	0x3e, r29	; 62
    10f8:	0f be       	out	0x3f, r0	; 63
    10fa:	cd bf       	out	0x3d, r28	; 61
    10fc:	df 91       	pop	r29
    10fe:	cf 91       	pop	r28
    1100:	1f 91       	pop	r17
    1102:	0f 91       	pop	r16
    1104:	08 95       	ret

00001106 <_ZN17Serial_ProcessingD1Ev>:


// default destructor
Serial_Processing::~Serial_Processing()
    1106:	cf 93       	push	r28
    1108:	df 93       	push	r29
    110a:	00 d0       	rcall	.+0      	; 0x110c <_ZN17Serial_ProcessingD1Ev+0x6>
    110c:	cd b7       	in	r28, 0x3d	; 61
    110e:	de b7       	in	r29, 0x3e	; 62
    1110:	9a 83       	std	Y+2, r25	; 0x02
    1112:	89 83       	std	Y+1, r24	; 0x01
{
} //~Serial_Processing
    1114:	00 00       	nop
    1116:	0f 90       	pop	r0
    1118:	0f 90       	pop	r0
    111a:	df 91       	pop	r29
    111c:	cf 91       	pop	r28
    111e:	08 95       	ret

00001120 <_ZN14HardwareSerial5beginEm>:
	position = position / MOTOR_STEPS_PER_REV;
	position = position * SCREW_PITCH_MM;
	position = (float)(position / 1000) + 1;

	return position;
}
    1120:	cf 93       	push	r28
    1122:	df 93       	push	r29
    1124:	00 d0       	rcall	.+0      	; 0x1126 <_ZN14HardwareSerial5beginEm+0x6>
    1126:	00 d0       	rcall	.+0      	; 0x1128 <_ZN14HardwareSerial5beginEm+0x8>
    1128:	00 d0       	rcall	.+0      	; 0x112a <_ZN14HardwareSerial5beginEm+0xa>
    112a:	cd b7       	in	r28, 0x3d	; 61
    112c:	de b7       	in	r29, 0x3e	; 62
    112e:	9a 83       	std	Y+2, r25	; 0x02
    1130:	89 83       	std	Y+1, r24	; 0x01
    1132:	4b 83       	std	Y+3, r20	; 0x03
    1134:	5c 83       	std	Y+4, r21	; 0x04
    1136:	6d 83       	std	Y+5, r22	; 0x05
    1138:	7e 83       	std	Y+6, r23	; 0x06
    113a:	8b 81       	ldd	r24, Y+3	; 0x03
    113c:	9c 81       	ldd	r25, Y+4	; 0x04
    113e:	ad 81       	ldd	r26, Y+5	; 0x05
    1140:	be 81       	ldd	r27, Y+6	; 0x06
    1142:	e9 81       	ldd	r30, Y+1	; 0x01
    1144:	fa 81       	ldd	r31, Y+2	; 0x02
    1146:	26 e0       	ldi	r18, 0x06	; 6
    1148:	ac 01       	movw	r20, r24
    114a:	bd 01       	movw	r22, r26
    114c:	cf 01       	movw	r24, r30
    114e:	0e 94 95 18 	call	0x312a	; 0x312a <_ZN14HardwareSerial5beginEmh>
    1152:	00 00       	nop
    1154:	26 96       	adiw	r28, 0x06	; 6
    1156:	0f b6       	in	r0, 0x3f	; 63
    1158:	f8 94       	cli
    115a:	de bf       	out	0x3e, r29	; 62
    115c:	0f be       	out	0x3f, r0	; 63
    115e:	cd bf       	out	0x3d, r28	; 61
    1160:	df 91       	pop	r29
    1162:	cf 91       	pop	r28
    1164:	08 95       	ret

00001166 <_Z15enableInterrupthPFvvEh>:
    1166:	cf 93       	push	r28
    1168:	df 93       	push	r29
    116a:	cd b7       	in	r28, 0x3d	; 61
    116c:	de b7       	in	r29, 0x3e	; 62
    116e:	a0 97       	sbiw	r28, 0x20	; 32
    1170:	0f b6       	in	r0, 0x3f	; 63
    1172:	f8 94       	cli
    1174:	de bf       	out	0x3e, r29	; 62
    1176:	0f be       	out	0x3f, r0	; 63
    1178:	cd bf       	out	0x3d, r28	; 61
    117a:	8d 8f       	std	Y+29, r24	; 0x1d
    117c:	7f 8f       	std	Y+31, r23	; 0x1f
    117e:	6e 8f       	std	Y+30, r22	; 0x1e
    1180:	48 a3       	std	Y+32, r20	; 0x20
    1182:	19 82       	std	Y+1, r1	; 0x01
    1184:	1a 82       	std	Y+2, r1	; 0x02
    1186:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1188:	8f 77       	andi	r24, 0x7F	; 127
    118a:	8b 83       	std	Y+3, r24	; 0x03
    118c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    118e:	88 23       	and	r24, r24
    1190:	44 f0       	brlt	.+16     	; 0x11a2 <_Z15enableInterrupthPFvvEh+0x3c>
    1192:	8b 81       	ldd	r24, Y+3	; 0x03
    1194:	82 30       	cpi	r24, 0x02	; 2
    1196:	09 f4       	brne	.+2      	; 0x119a <_Z15enableInterrupthPFvvEh+0x34>
    1198:	30 c1       	rjmp	.+608    	; 0x13fa <_Z15enableInterrupthPFvvEh+0x294>
    119a:	8b 81       	ldd	r24, Y+3	; 0x03
    119c:	83 30       	cpi	r24, 0x03	; 3
    119e:	09 f4       	brne	.+2      	; 0x11a2 <_Z15enableInterrupthPFvvEh+0x3c>
    11a0:	2c c1       	rjmp	.+600    	; 0x13fa <_Z15enableInterrupthPFvvEh+0x294>
    11a2:	8b 81       	ldd	r24, Y+3	; 0x03
    11a4:	88 2f       	mov	r24, r24
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	84 58       	subi	r24, 0x84	; 132
    11aa:	9f 4f       	sbci	r25, 0xFF	; 255
    11ac:	9e 83       	std	Y+6, r25	; 0x06
    11ae:	8d 83       	std	Y+5, r24	; 0x05
    11b0:	8d 81       	ldd	r24, Y+5	; 0x05
    11b2:	9e 81       	ldd	r25, Y+6	; 0x06
    11b4:	fc 01       	movw	r30, r24
    11b6:	84 91       	lpm	r24, Z
    11b8:	8f 83       	std	Y+7, r24	; 0x07
    11ba:	8f 81       	ldd	r24, Y+7	; 0x07
    11bc:	8a 83       	std	Y+2, r24	; 0x02
    11be:	8b 81       	ldd	r24, Y+3	; 0x03
    11c0:	88 2f       	mov	r24, r24
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	80 57       	subi	r24, 0x70	; 112
    11c6:	9f 4f       	sbci	r25, 0xFF	; 255
    11c8:	99 87       	std	Y+9, r25	; 0x09
    11ca:	88 87       	std	Y+8, r24	; 0x08
    11cc:	88 85       	ldd	r24, Y+8	; 0x08
    11ce:	99 85       	ldd	r25, Y+9	; 0x09
    11d0:	fc 01       	movw	r30, r24
    11d2:	84 91       	lpm	r24, Z
    11d4:	8a 87       	std	Y+10, r24	; 0x0a
    11d6:	8a 85       	ldd	r24, Y+10	; 0x0a
    11d8:	89 83       	std	Y+1, r24	; 0x01
    11da:	88 a1       	ldd	r24, Y+32	; 0x20
    11dc:	83 30       	cpi	r24, 0x03	; 3
    11de:	19 f0       	breq	.+6      	; 0x11e6 <_Z15enableInterrupthPFvvEh+0x80>
    11e0:	88 a1       	ldd	r24, Y+32	; 0x20
    11e2:	81 30       	cpi	r24, 0x01	; 1
    11e4:	d9 f4       	brne	.+54     	; 0x121c <_Z15enableInterrupthPFvvEh+0xb6>
    11e6:	89 81       	ldd	r24, Y+1	; 0x01
    11e8:	82 30       	cpi	r24, 0x02	; 2
    11ea:	31 f4       	brne	.+12     	; 0x11f8 <_Z15enableInterrupthPFvvEh+0x92>
    11ec:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <risingPinsPORTB>
    11f0:	8a 81       	ldd	r24, Y+2	; 0x02
    11f2:	89 2b       	or	r24, r25
    11f4:	80 93 ae 03 	sts	0x03AE, r24	; 0x8003ae <risingPinsPORTB>
    11f8:	89 81       	ldd	r24, Y+1	; 0x01
    11fa:	83 30       	cpi	r24, 0x03	; 3
    11fc:	31 f4       	brne	.+12     	; 0x120a <_Z15enableInterrupthPFvvEh+0xa4>
    11fe:	90 91 b1 03 	lds	r25, 0x03B1	; 0x8003b1 <risingPinsPORTC>
    1202:	8a 81       	ldd	r24, Y+2	; 0x02
    1204:	89 2b       	or	r24, r25
    1206:	80 93 b1 03 	sts	0x03B1, r24	; 0x8003b1 <risingPinsPORTC>
    120a:	89 81       	ldd	r24, Y+1	; 0x01
    120c:	84 30       	cpi	r24, 0x04	; 4
    120e:	31 f4       	brne	.+12     	; 0x121c <_Z15enableInterrupthPFvvEh+0xb6>
    1210:	90 91 b4 03 	lds	r25, 0x03B4	; 0x8003b4 <risingPinsPORTD>
    1214:	8a 81       	ldd	r24, Y+2	; 0x02
    1216:	89 2b       	or	r24, r25
    1218:	80 93 b4 03 	sts	0x03B4, r24	; 0x8003b4 <risingPinsPORTD>
    121c:	88 a1       	ldd	r24, Y+32	; 0x20
    121e:	82 30       	cpi	r24, 0x02	; 2
    1220:	19 f0       	breq	.+6      	; 0x1228 <_Z15enableInterrupthPFvvEh+0xc2>
    1222:	88 a1       	ldd	r24, Y+32	; 0x20
    1224:	81 30       	cpi	r24, 0x01	; 1
    1226:	d9 f4       	brne	.+54     	; 0x125e <_Z15enableInterrupthPFvvEh+0xf8>
    1228:	89 81       	ldd	r24, Y+1	; 0x01
    122a:	82 30       	cpi	r24, 0x02	; 2
    122c:	31 f4       	brne	.+12     	; 0x123a <_Z15enableInterrupthPFvvEh+0xd4>
    122e:	90 91 af 03 	lds	r25, 0x03AF	; 0x8003af <fallingPinsPORTB>
    1232:	8a 81       	ldd	r24, Y+2	; 0x02
    1234:	89 2b       	or	r24, r25
    1236:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <fallingPinsPORTB>
    123a:	89 81       	ldd	r24, Y+1	; 0x01
    123c:	83 30       	cpi	r24, 0x03	; 3
    123e:	31 f4       	brne	.+12     	; 0x124c <_Z15enableInterrupthPFvvEh+0xe6>
    1240:	90 91 b2 03 	lds	r25, 0x03B2	; 0x8003b2 <fallingPinsPORTC>
    1244:	8a 81       	ldd	r24, Y+2	; 0x02
    1246:	89 2b       	or	r24, r25
    1248:	80 93 b2 03 	sts	0x03B2, r24	; 0x8003b2 <fallingPinsPORTC>
    124c:	89 81       	ldd	r24, Y+1	; 0x01
    124e:	84 30       	cpi	r24, 0x04	; 4
    1250:	31 f4       	brne	.+12     	; 0x125e <_Z15enableInterrupthPFvvEh+0xf8>
    1252:	90 91 b5 03 	lds	r25, 0x03B5	; 0x8003b5 <fallingPinsPORTD>
    1256:	8a 81       	ldd	r24, Y+2	; 0x02
    1258:	89 2b       	or	r24, r25
    125a:	80 93 b5 03 	sts	0x03B5, r24	; 0x8003b5 <fallingPinsPORTD>
    125e:	8b 81       	ldd	r24, Y+3	; 0x03
    1260:	88 2f       	mov	r24, r24
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	88 59       	subi	r24, 0x98	; 152
    1266:	9f 4f       	sbci	r25, 0xFF	; 255
    1268:	9c 87       	std	Y+12, r25	; 0x0c
    126a:	8b 87       	std	Y+11, r24	; 0x0b
    126c:	8b 85       	ldd	r24, Y+11	; 0x0b
    126e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1270:	fc 01       	movw	r30, r24
    1272:	84 91       	lpm	r24, Z
    1274:	8d 87       	std	Y+13, r24	; 0x0d
    1276:	8d 85       	ldd	r24, Y+13	; 0x0d
    1278:	8e 87       	std	Y+14, r24	; 0x0e
    127a:	89 81       	ldd	r24, Y+1	; 0x01
    127c:	82 30       	cpi	r24, 0x02	; 2
    127e:	c1 f5       	brne	.+112    	; 0x12f0 <_Z15enableInterrupthPFvvEh+0x18a>
    1280:	8e 85       	ldd	r24, Y+14	; 0x0e
    1282:	88 2f       	mov	r24, r24
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	88 0f       	add	r24, r24
    1288:	99 1f       	adc	r25, r25
    128a:	8a 57       	subi	r24, 0x7A	; 122
    128c:	9c 4f       	sbci	r25, 0xFC	; 252
    128e:	98 8b       	std	Y+16, r25	; 0x10
    1290:	8f 87       	std	Y+15, r24	; 0x0f
    1292:	8f 85       	ldd	r24, Y+15	; 0x0f
    1294:	98 89       	ldd	r25, Y+16	; 0x10
    1296:	2e 8d       	ldd	r18, Y+30	; 0x1e
    1298:	3f 8d       	ldd	r19, Y+31	; 0x1f
    129a:	fc 01       	movw	r30, r24
    129c:	31 83       	std	Z+1, r19	; 0x01
    129e:	20 83       	st	Z, r18
    12a0:	89 81       	ldd	r24, Y+1	; 0x01
    12a2:	88 2f       	mov	r24, r24
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	88 0f       	add	r24, r24
    12a8:	99 1f       	adc	r25, r25
    12aa:	8c 55       	subi	r24, 0x5C	; 92
    12ac:	9f 4f       	sbci	r25, 0xFF	; 255
    12ae:	9a 8b       	std	Y+18, r25	; 0x12
    12b0:	89 8b       	std	Y+17, r24	; 0x11
    12b2:	89 89       	ldd	r24, Y+17	; 0x11
    12b4:	9a 89       	ldd	r25, Y+18	; 0x12
    12b6:	fc 01       	movw	r30, r24
    12b8:	25 91       	lpm	r18, Z+
    12ba:	34 91       	lpm	r19, Z
    12bc:	cf 01       	movw	r24, r30
    12be:	3c 8b       	std	Y+20, r19	; 0x14
    12c0:	2b 8b       	std	Y+19, r18	; 0x13
    12c2:	9a 8b       	std	Y+18, r25	; 0x12
    12c4:	89 8b       	std	Y+17, r24	; 0x11
    12c6:	8b 89       	ldd	r24, Y+19	; 0x13
    12c8:	9c 89       	ldd	r25, Y+20	; 0x14
    12ca:	fc 01       	movw	r30, r24
    12cc:	80 81       	ld	r24, Z
    12ce:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <_ZL13portSnapshotB>
    12d2:	8b e6       	ldi	r24, 0x6B	; 107
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	90 93 81 03 	sts	0x0381, r25	; 0x800381 <pcmsk+0x1>
    12da:	80 93 80 03 	sts	0x0380, r24	; 0x800380 <pcmsk>
    12de:	88 e6       	ldi	r24, 0x68	; 104
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	28 e6       	ldi	r18, 0x68	; 104
    12e4:	30 e0       	ldi	r19, 0x00	; 0
    12e6:	f9 01       	movw	r30, r18
    12e8:	20 81       	ld	r18, Z
    12ea:	21 60       	ori	r18, 0x01	; 1
    12ec:	fc 01       	movw	r30, r24
    12ee:	20 83       	st	Z, r18
    12f0:	89 81       	ldd	r24, Y+1	; 0x01
    12f2:	83 30       	cpi	r24, 0x03	; 3
    12f4:	c1 f5       	brne	.+112    	; 0x1366 <_Z15enableInterrupthPFvvEh+0x200>
    12f6:	8e 85       	ldd	r24, Y+14	; 0x0e
    12f8:	88 2f       	mov	r24, r24
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	88 0f       	add	r24, r24
    12fe:	99 1f       	adc	r25, r25
    1300:	8e 56       	subi	r24, 0x6E	; 110
    1302:	9c 4f       	sbci	r25, 0xFC	; 252
    1304:	98 8b       	std	Y+16, r25	; 0x10
    1306:	8f 87       	std	Y+15, r24	; 0x0f
    1308:	8f 85       	ldd	r24, Y+15	; 0x0f
    130a:	98 89       	ldd	r25, Y+16	; 0x10
    130c:	2e 8d       	ldd	r18, Y+30	; 0x1e
    130e:	3f 8d       	ldd	r19, Y+31	; 0x1f
    1310:	fc 01       	movw	r30, r24
    1312:	31 83       	std	Z+1, r19	; 0x01
    1314:	20 83       	st	Z, r18
    1316:	89 81       	ldd	r24, Y+1	; 0x01
    1318:	88 2f       	mov	r24, r24
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	88 0f       	add	r24, r24
    131e:	99 1f       	adc	r25, r25
    1320:	8c 55       	subi	r24, 0x5C	; 92
    1322:	9f 4f       	sbci	r25, 0xFF	; 255
    1324:	9e 8b       	std	Y+22, r25	; 0x16
    1326:	8d 8b       	std	Y+21, r24	; 0x15
    1328:	8d 89       	ldd	r24, Y+21	; 0x15
    132a:	9e 89       	ldd	r25, Y+22	; 0x16
    132c:	fc 01       	movw	r30, r24
    132e:	25 91       	lpm	r18, Z+
    1330:	34 91       	lpm	r19, Z
    1332:	cf 01       	movw	r24, r30
    1334:	38 8f       	std	Y+24, r19	; 0x18
    1336:	2f 8b       	std	Y+23, r18	; 0x17
    1338:	9e 8b       	std	Y+22, r25	; 0x16
    133a:	8d 8b       	std	Y+21, r24	; 0x15
    133c:	8f 89       	ldd	r24, Y+23	; 0x17
    133e:	98 8d       	ldd	r25, Y+24	; 0x18
    1340:	fc 01       	movw	r30, r24
    1342:	80 81       	ld	r24, Z
    1344:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <_ZL13portSnapshotC>
    1348:	8c e6       	ldi	r24, 0x6C	; 108
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	90 93 81 03 	sts	0x0381, r25	; 0x800381 <pcmsk+0x1>
    1350:	80 93 80 03 	sts	0x0380, r24	; 0x800380 <pcmsk>
    1354:	88 e6       	ldi	r24, 0x68	; 104
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	28 e6       	ldi	r18, 0x68	; 104
    135a:	30 e0       	ldi	r19, 0x00	; 0
    135c:	f9 01       	movw	r30, r18
    135e:	20 81       	ld	r18, Z
    1360:	22 60       	ori	r18, 0x02	; 2
    1362:	fc 01       	movw	r30, r24
    1364:	20 83       	st	Z, r18
    1366:	89 81       	ldd	r24, Y+1	; 0x01
    1368:	84 30       	cpi	r24, 0x04	; 4
    136a:	c1 f5       	brne	.+112    	; 0x13dc <_Z15enableInterrupthPFvvEh+0x276>
    136c:	8e 85       	ldd	r24, Y+14	; 0x0e
    136e:	88 2f       	mov	r24, r24
    1370:	90 e0       	ldi	r25, 0x00	; 0
    1372:	88 0f       	add	r24, r24
    1374:	99 1f       	adc	r25, r25
    1376:	82 56       	subi	r24, 0x62	; 98
    1378:	9c 4f       	sbci	r25, 0xFC	; 252
    137a:	98 8b       	std	Y+16, r25	; 0x10
    137c:	8f 87       	std	Y+15, r24	; 0x0f
    137e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1380:	98 89       	ldd	r25, Y+16	; 0x10
    1382:	2e 8d       	ldd	r18, Y+30	; 0x1e
    1384:	3f 8d       	ldd	r19, Y+31	; 0x1f
    1386:	fc 01       	movw	r30, r24
    1388:	31 83       	std	Z+1, r19	; 0x01
    138a:	20 83       	st	Z, r18
    138c:	89 81       	ldd	r24, Y+1	; 0x01
    138e:	88 2f       	mov	r24, r24
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	88 0f       	add	r24, r24
    1394:	99 1f       	adc	r25, r25
    1396:	8c 55       	subi	r24, 0x5C	; 92
    1398:	9f 4f       	sbci	r25, 0xFF	; 255
    139a:	9a 8f       	std	Y+26, r25	; 0x1a
    139c:	89 8f       	std	Y+25, r24	; 0x19
    139e:	89 8d       	ldd	r24, Y+25	; 0x19
    13a0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    13a2:	fc 01       	movw	r30, r24
    13a4:	25 91       	lpm	r18, Z+
    13a6:	34 91       	lpm	r19, Z
    13a8:	cf 01       	movw	r24, r30
    13aa:	3c 8f       	std	Y+28, r19	; 0x1c
    13ac:	2b 8f       	std	Y+27, r18	; 0x1b
    13ae:	9a 8f       	std	Y+26, r25	; 0x1a
    13b0:	89 8f       	std	Y+25, r24	; 0x19
    13b2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    13b4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    13b6:	fc 01       	movw	r30, r24
    13b8:	80 81       	ld	r24, Z
    13ba:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <_ZL13portSnapshotD>
    13be:	8d e6       	ldi	r24, 0x6D	; 109
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	90 93 81 03 	sts	0x0381, r25	; 0x800381 <pcmsk+0x1>
    13c6:	80 93 80 03 	sts	0x0380, r24	; 0x800380 <pcmsk>
    13ca:	88 e6       	ldi	r24, 0x68	; 104
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	28 e6       	ldi	r18, 0x68	; 104
    13d0:	30 e0       	ldi	r19, 0x00	; 0
    13d2:	f9 01       	movw	r30, r18
    13d4:	20 81       	ld	r18, Z
    13d6:	24 60       	ori	r18, 0x04	; 4
    13d8:	fc 01       	movw	r30, r24
    13da:	20 83       	st	Z, r18
    13dc:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <pcmsk>
    13e0:	90 91 81 03 	lds	r25, 0x0381	; 0x800381 <pcmsk+0x1>
    13e4:	20 91 80 03 	lds	r18, 0x0380	; 0x800380 <pcmsk>
    13e8:	30 91 81 03 	lds	r19, 0x0381	; 0x800381 <pcmsk+0x1>
    13ec:	f9 01       	movw	r30, r18
    13ee:	30 81       	ld	r19, Z
    13f0:	2a 81       	ldd	r18, Y+2	; 0x02
    13f2:	23 2b       	or	r18, r19
    13f4:	fc 01       	movw	r30, r24
    13f6:	20 83       	st	Z, r18
    13f8:	80 c0       	rjmp	.+256    	; 0x14fa <_Z15enableInterrupthPFvvEh+0x394>
    13fa:	8f e5       	ldi	r24, 0x5F	; 95
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	fc 01       	movw	r30, r24
    1400:	80 81       	ld	r24, Z
    1402:	8c 83       	std	Y+4, r24	; 0x04
    1404:	f8 94       	cli
    1406:	8b 81       	ldd	r24, Y+3	; 0x03
    1408:	82 30       	cpi	r24, 0x02	; 2
    140a:	a1 f5       	brne	.+104    	; 0x1474 <_Z15enableInterrupthPFvvEh+0x30e>
    140c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    140e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1410:	90 93 83 03 	sts	0x0383, r25	; 0x800383 <functionPointerArrayEXTERNAL+0x1>
    1414:	80 93 82 03 	sts	0x0382, r24	; 0x800382 <functionPointerArrayEXTERNAL>
    1418:	8d e3       	ldi	r24, 0x3D	; 61
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	2d e3       	ldi	r18, 0x3D	; 61
    141e:	30 e0       	ldi	r19, 0x00	; 0
    1420:	f9 01       	movw	r30, r18
    1422:	20 81       	ld	r18, Z
    1424:	2e 7f       	andi	r18, 0xFE	; 254
    1426:	fc 01       	movw	r30, r24
    1428:	20 83       	st	Z, r18
    142a:	89 e6       	ldi	r24, 0x69	; 105
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	29 e6       	ldi	r18, 0x69	; 105
    1430:	30 e0       	ldi	r19, 0x00	; 0
    1432:	f9 01       	movw	r30, r18
    1434:	20 81       	ld	r18, Z
    1436:	2c 7f       	andi	r18, 0xFC	; 252
    1438:	fc 01       	movw	r30, r24
    143a:	20 83       	st	Z, r18
    143c:	89 e6       	ldi	r24, 0x69	; 105
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	29 e6       	ldi	r18, 0x69	; 105
    1442:	30 e0       	ldi	r19, 0x00	; 0
    1444:	f9 01       	movw	r30, r18
    1446:	30 81       	ld	r19, Z
    1448:	28 a1       	ldd	r18, Y+32	; 0x20
    144a:	23 2b       	or	r18, r19
    144c:	fc 01       	movw	r30, r24
    144e:	20 83       	st	Z, r18
    1450:	8c e3       	ldi	r24, 0x3C	; 60
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	2c e3       	ldi	r18, 0x3C	; 60
    1456:	30 e0       	ldi	r19, 0x00	; 0
    1458:	f9 01       	movw	r30, r18
    145a:	20 81       	ld	r18, Z
    145c:	21 60       	ori	r18, 0x01	; 1
    145e:	fc 01       	movw	r30, r24
    1460:	20 83       	st	Z, r18
    1462:	8d e3       	ldi	r24, 0x3D	; 61
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	2d e3       	ldi	r18, 0x3D	; 61
    1468:	30 e0       	ldi	r19, 0x00	; 0
    146a:	f9 01       	movw	r30, r18
    146c:	20 81       	ld	r18, Z
    146e:	21 60       	ori	r18, 0x01	; 1
    1470:	fc 01       	movw	r30, r24
    1472:	20 83       	st	Z, r18
    1474:	8b 81       	ldd	r24, Y+3	; 0x03
    1476:	83 30       	cpi	r24, 0x03	; 3
    1478:	d9 f5       	brne	.+118    	; 0x14f0 <_Z15enableInterrupthPFvvEh+0x38a>
    147a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    147c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    147e:	90 93 85 03 	sts	0x0385, r25	; 0x800385 <functionPointerArrayEXTERNAL+0x3>
    1482:	80 93 84 03 	sts	0x0384, r24	; 0x800384 <functionPointerArrayEXTERNAL+0x2>
    1486:	8d e3       	ldi	r24, 0x3D	; 61
    1488:	90 e0       	ldi	r25, 0x00	; 0
    148a:	2d e3       	ldi	r18, 0x3D	; 61
    148c:	30 e0       	ldi	r19, 0x00	; 0
    148e:	f9 01       	movw	r30, r18
    1490:	20 81       	ld	r18, Z
    1492:	2d 7f       	andi	r18, 0xFD	; 253
    1494:	fc 01       	movw	r30, r24
    1496:	20 83       	st	Z, r18
    1498:	89 e6       	ldi	r24, 0x69	; 105
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	29 e6       	ldi	r18, 0x69	; 105
    149e:	30 e0       	ldi	r19, 0x00	; 0
    14a0:	f9 01       	movw	r30, r18
    14a2:	20 81       	ld	r18, Z
    14a4:	23 7f       	andi	r18, 0xF3	; 243
    14a6:	fc 01       	movw	r30, r24
    14a8:	20 83       	st	Z, r18
    14aa:	89 e6       	ldi	r24, 0x69	; 105
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	29 e6       	ldi	r18, 0x69	; 105
    14b0:	30 e0       	ldi	r19, 0x00	; 0
    14b2:	f9 01       	movw	r30, r18
    14b4:	20 81       	ld	r18, Z
    14b6:	42 2f       	mov	r20, r18
    14b8:	28 a1       	ldd	r18, Y+32	; 0x20
    14ba:	22 2f       	mov	r18, r18
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	22 0f       	add	r18, r18
    14c0:	33 1f       	adc	r19, r19
    14c2:	22 0f       	add	r18, r18
    14c4:	33 1f       	adc	r19, r19
    14c6:	24 2b       	or	r18, r20
    14c8:	fc 01       	movw	r30, r24
    14ca:	20 83       	st	Z, r18
    14cc:	8c e3       	ldi	r24, 0x3C	; 60
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	2c e3       	ldi	r18, 0x3C	; 60
    14d2:	30 e0       	ldi	r19, 0x00	; 0
    14d4:	f9 01       	movw	r30, r18
    14d6:	20 81       	ld	r18, Z
    14d8:	22 60       	ori	r18, 0x02	; 2
    14da:	fc 01       	movw	r30, r24
    14dc:	20 83       	st	Z, r18
    14de:	8d e3       	ldi	r24, 0x3D	; 61
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	2d e3       	ldi	r18, 0x3D	; 61
    14e4:	30 e0       	ldi	r19, 0x00	; 0
    14e6:	f9 01       	movw	r30, r18
    14e8:	20 81       	ld	r18, Z
    14ea:	22 60       	ori	r18, 0x02	; 2
    14ec:	fc 01       	movw	r30, r24
    14ee:	20 83       	st	Z, r18
    14f0:	8f e5       	ldi	r24, 0x5F	; 95
    14f2:	90 e0       	ldi	r25, 0x00	; 0
    14f4:	2c 81       	ldd	r18, Y+4	; 0x04
    14f6:	fc 01       	movw	r30, r24
    14f8:	20 83       	st	Z, r18
    14fa:	00 00       	nop
    14fc:	a0 96       	adiw	r28, 0x20	; 32
    14fe:	0f b6       	in	r0, 0x3f	; 63
    1500:	f8 94       	cli
    1502:	de bf       	out	0x3e, r29	; 62
    1504:	0f be       	out	0x3f, r0	; 63
    1506:	cd bf       	out	0x3d, r28	; 61
    1508:	df 91       	pop	r29
    150a:	cf 91       	pop	r28
    150c:	08 95       	ret

0000150e <__vector_1>:
    150e:	1f 92       	push	r1
    1510:	0f 92       	push	r0
    1512:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1516:	0f 92       	push	r0
    1518:	11 24       	eor	r1, r1
    151a:	2f 93       	push	r18
    151c:	3f 93       	push	r19
    151e:	4f 93       	push	r20
    1520:	5f 93       	push	r21
    1522:	6f 93       	push	r22
    1524:	7f 93       	push	r23
    1526:	8f 93       	push	r24
    1528:	9f 93       	push	r25
    152a:	af 93       	push	r26
    152c:	bf 93       	push	r27
    152e:	ef 93       	push	r30
    1530:	ff 93       	push	r31
    1532:	cf 93       	push	r28
    1534:	df 93       	push	r29
    1536:	cd b7       	in	r28, 0x3d	; 61
    1538:	de b7       	in	r29, 0x3e	; 62
    153a:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <functionPointerArrayEXTERNAL>
    153e:	90 91 83 03 	lds	r25, 0x0383	; 0x800383 <functionPointerArrayEXTERNAL+0x1>
    1542:	fc 01       	movw	r30, r24
    1544:	09 95       	icall
    1546:	00 00       	nop
    1548:	df 91       	pop	r29
    154a:	cf 91       	pop	r28
    154c:	ff 91       	pop	r31
    154e:	ef 91       	pop	r30
    1550:	bf 91       	pop	r27
    1552:	af 91       	pop	r26
    1554:	9f 91       	pop	r25
    1556:	8f 91       	pop	r24
    1558:	7f 91       	pop	r23
    155a:	6f 91       	pop	r22
    155c:	5f 91       	pop	r21
    155e:	4f 91       	pop	r20
    1560:	3f 91       	pop	r19
    1562:	2f 91       	pop	r18
    1564:	0f 90       	pop	r0
    1566:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    156a:	0f 90       	pop	r0
    156c:	1f 90       	pop	r1
    156e:	18 95       	reti

00001570 <__vector_2>:
    1570:	1f 92       	push	r1
    1572:	0f 92       	push	r0
    1574:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1578:	0f 92       	push	r0
    157a:	11 24       	eor	r1, r1
    157c:	2f 93       	push	r18
    157e:	3f 93       	push	r19
    1580:	4f 93       	push	r20
    1582:	5f 93       	push	r21
    1584:	6f 93       	push	r22
    1586:	7f 93       	push	r23
    1588:	8f 93       	push	r24
    158a:	9f 93       	push	r25
    158c:	af 93       	push	r26
    158e:	bf 93       	push	r27
    1590:	ef 93       	push	r30
    1592:	ff 93       	push	r31
    1594:	cf 93       	push	r28
    1596:	df 93       	push	r29
    1598:	cd b7       	in	r28, 0x3d	; 61
    159a:	de b7       	in	r29, 0x3e	; 62
    159c:	80 91 84 03 	lds	r24, 0x0384	; 0x800384 <functionPointerArrayEXTERNAL+0x2>
    15a0:	90 91 85 03 	lds	r25, 0x0385	; 0x800385 <functionPointerArrayEXTERNAL+0x3>
    15a4:	fc 01       	movw	r30, r24
    15a6:	09 95       	icall
    15a8:	00 00       	nop
    15aa:	df 91       	pop	r29
    15ac:	cf 91       	pop	r28
    15ae:	ff 91       	pop	r31
    15b0:	ef 91       	pop	r30
    15b2:	bf 91       	pop	r27
    15b4:	af 91       	pop	r26
    15b6:	9f 91       	pop	r25
    15b8:	8f 91       	pop	r24
    15ba:	7f 91       	pop	r23
    15bc:	6f 91       	pop	r22
    15be:	5f 91       	pop	r21
    15c0:	4f 91       	pop	r20
    15c2:	3f 91       	pop	r19
    15c4:	2f 91       	pop	r18
    15c6:	0f 90       	pop	r0
    15c8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    15cc:	0f 90       	pop	r0
    15ce:	1f 90       	pop	r1
    15d0:	18 95       	reti

000015d2 <__vector_3>:
    15d2:	1f 92       	push	r1
    15d4:	0f 92       	push	r0
    15d6:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    15da:	0f 92       	push	r0
    15dc:	11 24       	eor	r1, r1
    15de:	2f 93       	push	r18
    15e0:	3f 93       	push	r19
    15e2:	4f 93       	push	r20
    15e4:	5f 93       	push	r21
    15e6:	6f 93       	push	r22
    15e8:	7f 93       	push	r23
    15ea:	8f 93       	push	r24
    15ec:	9f 93       	push	r25
    15ee:	af 93       	push	r26
    15f0:	bf 93       	push	r27
    15f2:	ef 93       	push	r30
    15f4:	ff 93       	push	r31
    15f6:	cf 93       	push	r28
    15f8:	df 93       	push	r29
    15fa:	00 d0       	rcall	.+0      	; 0x15fc <__vector_3+0x2a>
    15fc:	00 d0       	rcall	.+0      	; 0x15fe <__vector_3+0x2c>
    15fe:	cd b7       	in	r28, 0x3d	; 61
    1600:	de b7       	in	r29, 0x3e	; 62
    1602:	83 e2       	ldi	r24, 0x23	; 35
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	fc 01       	movw	r30, r24
    1608:	80 81       	ld	r24, Z
    160a:	89 83       	std	Y+1, r24	; 0x01
    160c:	90 91 b0 03 	lds	r25, 0x03B0	; 0x8003b0 <_ZL13portSnapshotB>
    1610:	89 81       	ldd	r24, Y+1	; 0x01
    1612:	89 27       	eor	r24, r25
    1614:	8a 83       	std	Y+2, r24	; 0x02
    1616:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <risingPinsPORTB>
    161a:	89 81       	ldd	r24, Y+1	; 0x01
    161c:	89 23       	and	r24, r25
    161e:	8b 83       	std	Y+3, r24	; 0x03
    1620:	89 81       	ldd	r24, Y+1	; 0x01
    1622:	80 95       	com	r24
    1624:	90 91 af 03 	lds	r25, 0x03AF	; 0x8003af <fallingPinsPORTB>
    1628:	89 23       	and	r24, r25
    162a:	8c 83       	std	Y+4, r24	; 0x04
    162c:	9c 81       	ldd	r25, Y+4	; 0x04
    162e:	8b 81       	ldd	r24, Y+3	; 0x03
    1630:	89 2b       	or	r24, r25
    1632:	8c 83       	std	Y+4, r24	; 0x04
    1634:	9c 81       	ldd	r25, Y+4	; 0x04
    1636:	8a 81       	ldd	r24, Y+2	; 0x02
    1638:	89 23       	and	r24, r25
    163a:	8c 83       	std	Y+4, r24	; 0x04
    163c:	8b e6       	ldi	r24, 0x6B	; 107
    163e:	90 e0       	ldi	r25, 0x00	; 0
    1640:	fc 01       	movw	r30, r24
    1642:	80 81       	ld	r24, Z
    1644:	9c 81       	ldd	r25, Y+4	; 0x04
    1646:	89 23       	and	r24, r25
    1648:	8c 83       	std	Y+4, r24	; 0x04
    164a:	89 81       	ldd	r24, Y+1	; 0x01
    164c:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <_ZL13portSnapshotB>
    1650:	8c 81       	ldd	r24, Y+4	; 0x04
    1652:	88 23       	and	r24, r24
    1654:	09 f4       	brne	.+2      	; 0x1658 <__vector_3+0x86>
    1656:	4f c0       	rjmp	.+158    	; 0x16f6 <__vector_3+0x124>
    1658:	8c 81       	ldd	r24, Y+4	; 0x04
    165a:	88 2f       	mov	r24, r24
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	81 70       	andi	r24, 0x01	; 1
    1660:	99 27       	eor	r25, r25
    1662:	89 2b       	or	r24, r25
    1664:	31 f0       	breq	.+12     	; 0x1672 <__vector_3+0xa0>
    1666:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <portBFunctions>
    166a:	90 91 87 03 	lds	r25, 0x0387	; 0x800387 <portBFunctions+0x1>
    166e:	fc 01       	movw	r30, r24
    1670:	09 95       	icall
    1672:	8c 81       	ldd	r24, Y+4	; 0x04
    1674:	88 2f       	mov	r24, r24
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	82 70       	andi	r24, 0x02	; 2
    167a:	99 27       	eor	r25, r25
    167c:	89 2b       	or	r24, r25
    167e:	31 f0       	breq	.+12     	; 0x168c <__vector_3+0xba>
    1680:	80 91 88 03 	lds	r24, 0x0388	; 0x800388 <portBFunctions+0x2>
    1684:	90 91 89 03 	lds	r25, 0x0389	; 0x800389 <portBFunctions+0x3>
    1688:	fc 01       	movw	r30, r24
    168a:	09 95       	icall
    168c:	8c 81       	ldd	r24, Y+4	; 0x04
    168e:	88 2f       	mov	r24, r24
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	84 70       	andi	r24, 0x04	; 4
    1694:	99 27       	eor	r25, r25
    1696:	89 2b       	or	r24, r25
    1698:	31 f0       	breq	.+12     	; 0x16a6 <__vector_3+0xd4>
    169a:	80 91 8a 03 	lds	r24, 0x038A	; 0x80038a <portBFunctions+0x4>
    169e:	90 91 8b 03 	lds	r25, 0x038B	; 0x80038b <portBFunctions+0x5>
    16a2:	fc 01       	movw	r30, r24
    16a4:	09 95       	icall
    16a6:	8c 81       	ldd	r24, Y+4	; 0x04
    16a8:	88 2f       	mov	r24, r24
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	88 70       	andi	r24, 0x08	; 8
    16ae:	99 27       	eor	r25, r25
    16b0:	89 2b       	or	r24, r25
    16b2:	31 f0       	breq	.+12     	; 0x16c0 <__vector_3+0xee>
    16b4:	80 91 8c 03 	lds	r24, 0x038C	; 0x80038c <portBFunctions+0x6>
    16b8:	90 91 8d 03 	lds	r25, 0x038D	; 0x80038d <portBFunctions+0x7>
    16bc:	fc 01       	movw	r30, r24
    16be:	09 95       	icall
    16c0:	8c 81       	ldd	r24, Y+4	; 0x04
    16c2:	88 2f       	mov	r24, r24
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	80 71       	andi	r24, 0x10	; 16
    16c8:	99 27       	eor	r25, r25
    16ca:	89 2b       	or	r24, r25
    16cc:	31 f0       	breq	.+12     	; 0x16da <__vector_3+0x108>
    16ce:	80 91 8e 03 	lds	r24, 0x038E	; 0x80038e <portBFunctions+0x8>
    16d2:	90 91 8f 03 	lds	r25, 0x038F	; 0x80038f <portBFunctions+0x9>
    16d6:	fc 01       	movw	r30, r24
    16d8:	09 95       	icall
    16da:	8c 81       	ldd	r24, Y+4	; 0x04
    16dc:	88 2f       	mov	r24, r24
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	80 72       	andi	r24, 0x20	; 32
    16e2:	99 27       	eor	r25, r25
    16e4:	89 2b       	or	r24, r25
    16e6:	49 f0       	breq	.+18     	; 0x16fa <__vector_3+0x128>
    16e8:	80 91 90 03 	lds	r24, 0x0390	; 0x800390 <portBFunctions+0xa>
    16ec:	90 91 91 03 	lds	r25, 0x0391	; 0x800391 <portBFunctions+0xb>
    16f0:	fc 01       	movw	r30, r24
    16f2:	09 95       	icall
    16f4:	01 c0       	rjmp	.+2      	; 0x16f8 <__vector_3+0x126>
    16f6:	00 00       	nop
    16f8:	00 00       	nop
    16fa:	00 00       	nop
    16fc:	0f 90       	pop	r0
    16fe:	0f 90       	pop	r0
    1700:	0f 90       	pop	r0
    1702:	0f 90       	pop	r0
    1704:	df 91       	pop	r29
    1706:	cf 91       	pop	r28
    1708:	ff 91       	pop	r31
    170a:	ef 91       	pop	r30
    170c:	bf 91       	pop	r27
    170e:	af 91       	pop	r26
    1710:	9f 91       	pop	r25
    1712:	8f 91       	pop	r24
    1714:	7f 91       	pop	r23
    1716:	6f 91       	pop	r22
    1718:	5f 91       	pop	r21
    171a:	4f 91       	pop	r20
    171c:	3f 91       	pop	r19
    171e:	2f 91       	pop	r18
    1720:	0f 90       	pop	r0
    1722:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1726:	0f 90       	pop	r0
    1728:	1f 90       	pop	r1
    172a:	18 95       	reti

0000172c <__vector_4>:
    172c:	1f 92       	push	r1
    172e:	0f 92       	push	r0
    1730:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1734:	0f 92       	push	r0
    1736:	11 24       	eor	r1, r1
    1738:	2f 93       	push	r18
    173a:	3f 93       	push	r19
    173c:	4f 93       	push	r20
    173e:	5f 93       	push	r21
    1740:	6f 93       	push	r22
    1742:	7f 93       	push	r23
    1744:	8f 93       	push	r24
    1746:	9f 93       	push	r25
    1748:	af 93       	push	r26
    174a:	bf 93       	push	r27
    174c:	ef 93       	push	r30
    174e:	ff 93       	push	r31
    1750:	cf 93       	push	r28
    1752:	df 93       	push	r29
    1754:	00 d0       	rcall	.+0      	; 0x1756 <__vector_4+0x2a>
    1756:	00 d0       	rcall	.+0      	; 0x1758 <__vector_4+0x2c>
    1758:	cd b7       	in	r28, 0x3d	; 61
    175a:	de b7       	in	r29, 0x3e	; 62
    175c:	86 e2       	ldi	r24, 0x26	; 38
    175e:	90 e0       	ldi	r25, 0x00	; 0
    1760:	fc 01       	movw	r30, r24
    1762:	80 81       	ld	r24, Z
    1764:	89 83       	std	Y+1, r24	; 0x01
    1766:	90 91 b3 03 	lds	r25, 0x03B3	; 0x8003b3 <_ZL13portSnapshotC>
    176a:	89 81       	ldd	r24, Y+1	; 0x01
    176c:	89 27       	eor	r24, r25
    176e:	8a 83       	std	Y+2, r24	; 0x02
    1770:	90 91 b1 03 	lds	r25, 0x03B1	; 0x8003b1 <risingPinsPORTC>
    1774:	89 81       	ldd	r24, Y+1	; 0x01
    1776:	89 23       	and	r24, r25
    1778:	8b 83       	std	Y+3, r24	; 0x03
    177a:	89 81       	ldd	r24, Y+1	; 0x01
    177c:	80 95       	com	r24
    177e:	90 91 b2 03 	lds	r25, 0x03B2	; 0x8003b2 <fallingPinsPORTC>
    1782:	89 23       	and	r24, r25
    1784:	8c 83       	std	Y+4, r24	; 0x04
    1786:	9c 81       	ldd	r25, Y+4	; 0x04
    1788:	8b 81       	ldd	r24, Y+3	; 0x03
    178a:	89 2b       	or	r24, r25
    178c:	8c 83       	std	Y+4, r24	; 0x04
    178e:	9c 81       	ldd	r25, Y+4	; 0x04
    1790:	8a 81       	ldd	r24, Y+2	; 0x02
    1792:	89 23       	and	r24, r25
    1794:	8c 83       	std	Y+4, r24	; 0x04
    1796:	8c e6       	ldi	r24, 0x6C	; 108
    1798:	90 e0       	ldi	r25, 0x00	; 0
    179a:	fc 01       	movw	r30, r24
    179c:	80 81       	ld	r24, Z
    179e:	9c 81       	ldd	r25, Y+4	; 0x04
    17a0:	89 23       	and	r24, r25
    17a2:	8c 83       	std	Y+4, r24	; 0x04
    17a4:	89 81       	ldd	r24, Y+1	; 0x01
    17a6:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <_ZL13portSnapshotC>
    17aa:	8c 81       	ldd	r24, Y+4	; 0x04
    17ac:	88 23       	and	r24, r24
    17ae:	09 f4       	brne	.+2      	; 0x17b2 <__vector_4+0x86>
    17b0:	4f c0       	rjmp	.+158    	; 0x1850 <__vector_4+0x124>
    17b2:	8c 81       	ldd	r24, Y+4	; 0x04
    17b4:	88 2f       	mov	r24, r24
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	81 70       	andi	r24, 0x01	; 1
    17ba:	99 27       	eor	r25, r25
    17bc:	89 2b       	or	r24, r25
    17be:	31 f0       	breq	.+12     	; 0x17cc <__vector_4+0xa0>
    17c0:	80 91 92 03 	lds	r24, 0x0392	; 0x800392 <portCFunctions>
    17c4:	90 91 93 03 	lds	r25, 0x0393	; 0x800393 <portCFunctions+0x1>
    17c8:	fc 01       	movw	r30, r24
    17ca:	09 95       	icall
    17cc:	8c 81       	ldd	r24, Y+4	; 0x04
    17ce:	88 2f       	mov	r24, r24
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	82 70       	andi	r24, 0x02	; 2
    17d4:	99 27       	eor	r25, r25
    17d6:	89 2b       	or	r24, r25
    17d8:	31 f0       	breq	.+12     	; 0x17e6 <__vector_4+0xba>
    17da:	80 91 94 03 	lds	r24, 0x0394	; 0x800394 <portCFunctions+0x2>
    17de:	90 91 95 03 	lds	r25, 0x0395	; 0x800395 <portCFunctions+0x3>
    17e2:	fc 01       	movw	r30, r24
    17e4:	09 95       	icall
    17e6:	8c 81       	ldd	r24, Y+4	; 0x04
    17e8:	88 2f       	mov	r24, r24
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	84 70       	andi	r24, 0x04	; 4
    17ee:	99 27       	eor	r25, r25
    17f0:	89 2b       	or	r24, r25
    17f2:	31 f0       	breq	.+12     	; 0x1800 <__vector_4+0xd4>
    17f4:	80 91 96 03 	lds	r24, 0x0396	; 0x800396 <portCFunctions+0x4>
    17f8:	90 91 97 03 	lds	r25, 0x0397	; 0x800397 <portCFunctions+0x5>
    17fc:	fc 01       	movw	r30, r24
    17fe:	09 95       	icall
    1800:	8c 81       	ldd	r24, Y+4	; 0x04
    1802:	88 2f       	mov	r24, r24
    1804:	90 e0       	ldi	r25, 0x00	; 0
    1806:	88 70       	andi	r24, 0x08	; 8
    1808:	99 27       	eor	r25, r25
    180a:	89 2b       	or	r24, r25
    180c:	31 f0       	breq	.+12     	; 0x181a <__vector_4+0xee>
    180e:	80 91 98 03 	lds	r24, 0x0398	; 0x800398 <portCFunctions+0x6>
    1812:	90 91 99 03 	lds	r25, 0x0399	; 0x800399 <portCFunctions+0x7>
    1816:	fc 01       	movw	r30, r24
    1818:	09 95       	icall
    181a:	8c 81       	ldd	r24, Y+4	; 0x04
    181c:	88 2f       	mov	r24, r24
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	80 71       	andi	r24, 0x10	; 16
    1822:	99 27       	eor	r25, r25
    1824:	89 2b       	or	r24, r25
    1826:	31 f0       	breq	.+12     	; 0x1834 <__vector_4+0x108>
    1828:	80 91 9a 03 	lds	r24, 0x039A	; 0x80039a <portCFunctions+0x8>
    182c:	90 91 9b 03 	lds	r25, 0x039B	; 0x80039b <portCFunctions+0x9>
    1830:	fc 01       	movw	r30, r24
    1832:	09 95       	icall
    1834:	8c 81       	ldd	r24, Y+4	; 0x04
    1836:	88 2f       	mov	r24, r24
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	80 72       	andi	r24, 0x20	; 32
    183c:	99 27       	eor	r25, r25
    183e:	89 2b       	or	r24, r25
    1840:	49 f0       	breq	.+18     	; 0x1854 <__vector_4+0x128>
    1842:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <portCFunctions+0xa>
    1846:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <portCFunctions+0xb>
    184a:	fc 01       	movw	r30, r24
    184c:	09 95       	icall
    184e:	01 c0       	rjmp	.+2      	; 0x1852 <__vector_4+0x126>
    1850:	00 00       	nop
    1852:	00 00       	nop
    1854:	00 00       	nop
    1856:	0f 90       	pop	r0
    1858:	0f 90       	pop	r0
    185a:	0f 90       	pop	r0
    185c:	0f 90       	pop	r0
    185e:	df 91       	pop	r29
    1860:	cf 91       	pop	r28
    1862:	ff 91       	pop	r31
    1864:	ef 91       	pop	r30
    1866:	bf 91       	pop	r27
    1868:	af 91       	pop	r26
    186a:	9f 91       	pop	r25
    186c:	8f 91       	pop	r24
    186e:	7f 91       	pop	r23
    1870:	6f 91       	pop	r22
    1872:	5f 91       	pop	r21
    1874:	4f 91       	pop	r20
    1876:	3f 91       	pop	r19
    1878:	2f 91       	pop	r18
    187a:	0f 90       	pop	r0
    187c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1880:	0f 90       	pop	r0
    1882:	1f 90       	pop	r1
    1884:	18 95       	reti

00001886 <__vector_5>:
    1886:	1f 92       	push	r1
    1888:	0f 92       	push	r0
    188a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    188e:	0f 92       	push	r0
    1890:	11 24       	eor	r1, r1
    1892:	2f 93       	push	r18
    1894:	3f 93       	push	r19
    1896:	4f 93       	push	r20
    1898:	5f 93       	push	r21
    189a:	6f 93       	push	r22
    189c:	7f 93       	push	r23
    189e:	8f 93       	push	r24
    18a0:	9f 93       	push	r25
    18a2:	af 93       	push	r26
    18a4:	bf 93       	push	r27
    18a6:	ef 93       	push	r30
    18a8:	ff 93       	push	r31
    18aa:	cf 93       	push	r28
    18ac:	df 93       	push	r29
    18ae:	00 d0       	rcall	.+0      	; 0x18b0 <__vector_5+0x2a>
    18b0:	00 d0       	rcall	.+0      	; 0x18b2 <__vector_5+0x2c>
    18b2:	cd b7       	in	r28, 0x3d	; 61
    18b4:	de b7       	in	r29, 0x3e	; 62
    18b6:	89 e2       	ldi	r24, 0x29	; 41
    18b8:	90 e0       	ldi	r25, 0x00	; 0
    18ba:	fc 01       	movw	r30, r24
    18bc:	80 81       	ld	r24, Z
    18be:	89 83       	std	Y+1, r24	; 0x01
    18c0:	90 91 b6 03 	lds	r25, 0x03B6	; 0x8003b6 <_ZL13portSnapshotD>
    18c4:	89 81       	ldd	r24, Y+1	; 0x01
    18c6:	89 27       	eor	r24, r25
    18c8:	8a 83       	std	Y+2, r24	; 0x02
    18ca:	90 91 b4 03 	lds	r25, 0x03B4	; 0x8003b4 <risingPinsPORTD>
    18ce:	89 81       	ldd	r24, Y+1	; 0x01
    18d0:	89 23       	and	r24, r25
    18d2:	8b 83       	std	Y+3, r24	; 0x03
    18d4:	89 81       	ldd	r24, Y+1	; 0x01
    18d6:	80 95       	com	r24
    18d8:	90 91 b5 03 	lds	r25, 0x03B5	; 0x8003b5 <fallingPinsPORTD>
    18dc:	89 23       	and	r24, r25
    18de:	8c 83       	std	Y+4, r24	; 0x04
    18e0:	9c 81       	ldd	r25, Y+4	; 0x04
    18e2:	8b 81       	ldd	r24, Y+3	; 0x03
    18e4:	89 2b       	or	r24, r25
    18e6:	8c 83       	std	Y+4, r24	; 0x04
    18e8:	9c 81       	ldd	r25, Y+4	; 0x04
    18ea:	8a 81       	ldd	r24, Y+2	; 0x02
    18ec:	89 23       	and	r24, r25
    18ee:	8c 83       	std	Y+4, r24	; 0x04
    18f0:	8d e6       	ldi	r24, 0x6D	; 109
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	fc 01       	movw	r30, r24
    18f6:	80 81       	ld	r24, Z
    18f8:	9c 81       	ldd	r25, Y+4	; 0x04
    18fa:	89 23       	and	r24, r25
    18fc:	8c 83       	std	Y+4, r24	; 0x04
    18fe:	89 81       	ldd	r24, Y+1	; 0x01
    1900:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <_ZL13portSnapshotD>
    1904:	8c 81       	ldd	r24, Y+4	; 0x04
    1906:	88 23       	and	r24, r24
    1908:	09 f4       	brne	.+2      	; 0x190c <__vector_5+0x86>
    190a:	65 c0       	rjmp	.+202    	; 0x19d6 <__vector_5+0x150>
    190c:	8c 81       	ldd	r24, Y+4	; 0x04
    190e:	88 2f       	mov	r24, r24
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	81 70       	andi	r24, 0x01	; 1
    1914:	99 27       	eor	r25, r25
    1916:	89 2b       	or	r24, r25
    1918:	31 f0       	breq	.+12     	; 0x1926 <__vector_5+0xa0>
    191a:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <portDFunctions>
    191e:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <portDFunctions+0x1>
    1922:	fc 01       	movw	r30, r24
    1924:	09 95       	icall
    1926:	8c 81       	ldd	r24, Y+4	; 0x04
    1928:	88 2f       	mov	r24, r24
    192a:	90 e0       	ldi	r25, 0x00	; 0
    192c:	82 70       	andi	r24, 0x02	; 2
    192e:	99 27       	eor	r25, r25
    1930:	89 2b       	or	r24, r25
    1932:	31 f0       	breq	.+12     	; 0x1940 <__vector_5+0xba>
    1934:	80 91 a0 03 	lds	r24, 0x03A0	; 0x8003a0 <portDFunctions+0x2>
    1938:	90 91 a1 03 	lds	r25, 0x03A1	; 0x8003a1 <portDFunctions+0x3>
    193c:	fc 01       	movw	r30, r24
    193e:	09 95       	icall
    1940:	8c 81       	ldd	r24, Y+4	; 0x04
    1942:	88 2f       	mov	r24, r24
    1944:	90 e0       	ldi	r25, 0x00	; 0
    1946:	84 70       	andi	r24, 0x04	; 4
    1948:	99 27       	eor	r25, r25
    194a:	89 2b       	or	r24, r25
    194c:	31 f0       	breq	.+12     	; 0x195a <__vector_5+0xd4>
    194e:	80 91 a2 03 	lds	r24, 0x03A2	; 0x8003a2 <portDFunctions+0x4>
    1952:	90 91 a3 03 	lds	r25, 0x03A3	; 0x8003a3 <portDFunctions+0x5>
    1956:	fc 01       	movw	r30, r24
    1958:	09 95       	icall
    195a:	8c 81       	ldd	r24, Y+4	; 0x04
    195c:	88 2f       	mov	r24, r24
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	88 70       	andi	r24, 0x08	; 8
    1962:	99 27       	eor	r25, r25
    1964:	89 2b       	or	r24, r25
    1966:	31 f0       	breq	.+12     	; 0x1974 <__vector_5+0xee>
    1968:	80 91 a4 03 	lds	r24, 0x03A4	; 0x8003a4 <portDFunctions+0x6>
    196c:	90 91 a5 03 	lds	r25, 0x03A5	; 0x8003a5 <portDFunctions+0x7>
    1970:	fc 01       	movw	r30, r24
    1972:	09 95       	icall
    1974:	8c 81       	ldd	r24, Y+4	; 0x04
    1976:	88 2f       	mov	r24, r24
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	80 71       	andi	r24, 0x10	; 16
    197c:	99 27       	eor	r25, r25
    197e:	89 2b       	or	r24, r25
    1980:	31 f0       	breq	.+12     	; 0x198e <__vector_5+0x108>
    1982:	80 91 a6 03 	lds	r24, 0x03A6	; 0x8003a6 <portDFunctions+0x8>
    1986:	90 91 a7 03 	lds	r25, 0x03A7	; 0x8003a7 <portDFunctions+0x9>
    198a:	fc 01       	movw	r30, r24
    198c:	09 95       	icall
    198e:	8c 81       	ldd	r24, Y+4	; 0x04
    1990:	88 2f       	mov	r24, r24
    1992:	90 e0       	ldi	r25, 0x00	; 0
    1994:	80 72       	andi	r24, 0x20	; 32
    1996:	99 27       	eor	r25, r25
    1998:	89 2b       	or	r24, r25
    199a:	31 f0       	breq	.+12     	; 0x19a8 <__vector_5+0x122>
    199c:	80 91 a8 03 	lds	r24, 0x03A8	; 0x8003a8 <portDFunctions+0xa>
    19a0:	90 91 a9 03 	lds	r25, 0x03A9	; 0x8003a9 <portDFunctions+0xb>
    19a4:	fc 01       	movw	r30, r24
    19a6:	09 95       	icall
    19a8:	8c 81       	ldd	r24, Y+4	; 0x04
    19aa:	88 2f       	mov	r24, r24
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	80 74       	andi	r24, 0x40	; 64
    19b0:	99 27       	eor	r25, r25
    19b2:	89 2b       	or	r24, r25
    19b4:	31 f0       	breq	.+12     	; 0x19c2 <__vector_5+0x13c>
    19b6:	80 91 aa 03 	lds	r24, 0x03AA	; 0x8003aa <portDFunctions+0xc>
    19ba:	90 91 ab 03 	lds	r25, 0x03AB	; 0x8003ab <portDFunctions+0xd>
    19be:	fc 01       	movw	r30, r24
    19c0:	09 95       	icall
    19c2:	8c 81       	ldd	r24, Y+4	; 0x04
    19c4:	88 23       	and	r24, r24
    19c6:	4c f4       	brge	.+18     	; 0x19da <__vector_5+0x154>
    19c8:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <portDFunctions+0xe>
    19cc:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <portDFunctions+0xf>
    19d0:	fc 01       	movw	r30, r24
    19d2:	09 95       	icall
    19d4:	01 c0       	rjmp	.+2      	; 0x19d8 <__vector_5+0x152>
    19d6:	00 00       	nop
    19d8:	00 00       	nop
    19da:	00 00       	nop
    19dc:	0f 90       	pop	r0
    19de:	0f 90       	pop	r0
    19e0:	0f 90       	pop	r0
    19e2:	0f 90       	pop	r0
    19e4:	df 91       	pop	r29
    19e6:	cf 91       	pop	r28
    19e8:	ff 91       	pop	r31
    19ea:	ef 91       	pop	r30
    19ec:	bf 91       	pop	r27
    19ee:	af 91       	pop	r26
    19f0:	9f 91       	pop	r25
    19f2:	8f 91       	pop	r24
    19f4:	7f 91       	pop	r23
    19f6:	6f 91       	pop	r22
    19f8:	5f 91       	pop	r21
    19fa:	4f 91       	pop	r20
    19fc:	3f 91       	pop	r19
    19fe:	2f 91       	pop	r18
    1a00:	0f 90       	pop	r0
    1a02:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1a06:	0f 90       	pop	r0
    1a08:	1f 90       	pop	r1
    1a0a:	18 95       	reti

00001a0c <__vector_13>:
    1a0c:	1f 92       	push	r1
    1a0e:	0f 92       	push	r0
    1a10:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1a14:	0f 92       	push	r0
    1a16:	11 24       	eor	r1, r1
    1a18:	2f 93       	push	r18
    1a1a:	3f 93       	push	r19
    1a1c:	4f 93       	push	r20
    1a1e:	5f 93       	push	r21
    1a20:	6f 93       	push	r22
    1a22:	7f 93       	push	r23
    1a24:	8f 93       	push	r24
    1a26:	9f 93       	push	r25
    1a28:	af 93       	push	r26
    1a2a:	bf 93       	push	r27
    1a2c:	ef 93       	push	r30
    1a2e:	ff 93       	push	r31
    1a30:	cf 93       	push	r28
    1a32:	df 93       	push	r29
    1a34:	cd b7       	in	r28, 0x3d	; 61
    1a36:	de b7       	in	r29, 0x3e	; 62
    1a38:	26 97       	sbiw	r28, 0x06	; 6
    1a3a:	de bf       	out	0x3e, r29	; 62
    1a3c:	cd bf       	out	0x3d, r28	; 61
    1a3e:	24 e8       	ldi	r18, 0x84	; 132
    1a40:	30 e0       	ldi	r19, 0x00	; 0
    1a42:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <stepDelay>
    1a46:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <stepDelay+0x1>
    1a4a:	a0 91 b0 01 	lds	r26, 0x01B0	; 0x8001b0 <stepDelay+0x2>
    1a4e:	b0 91 b1 01 	lds	r27, 0x01B1	; 0x8001b1 <stepDelay+0x3>
    1a52:	80 95       	com	r24
    1a54:	90 95       	com	r25
    1a56:	f9 01       	movw	r30, r18
    1a58:	91 83       	std	Z+1, r25	; 0x01
    1a5a:	80 83       	st	Z, r24
    1a5c:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <RUN_MODE>
    1a60:	81 e0       	ldi	r24, 0x01	; 1
    1a62:	91 30       	cpi	r25, 0x01	; 1
    1a64:	09 f4       	brne	.+2      	; 0x1a68 <__vector_13+0x5c>
    1a66:	80 e0       	ldi	r24, 0x00	; 0
    1a68:	88 23       	and	r24, r24
    1a6a:	09 f4       	brne	.+2      	; 0x1a6e <__vector_13+0x62>
    1a6c:	a8 c0       	rjmp	.+336    	; 0x1bbe <__vector_13+0x1b2>
    1a6e:	20 91 e0 03 	lds	r18, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    1a72:	30 91 e1 03 	lds	r19, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    1a76:	40 91 e2 03 	lds	r20, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    1a7a:	50 91 e3 03 	lds	r21, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    1a7e:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <STEPS>
    1a82:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <STEPS+0x1>
    1a86:	a0 91 de 03 	lds	r26, 0x03DE	; 0x8003de <STEPS+0x2>
    1a8a:	b0 91 df 03 	lds	r27, 0x03DF	; 0x8003df <STEPS+0x3>
    1a8e:	61 e0       	ldi	r22, 0x01	; 1
    1a90:	28 17       	cp	r18, r24
    1a92:	39 07       	cpc	r19, r25
    1a94:	4a 07       	cpc	r20, r26
    1a96:	5b 07       	cpc	r21, r27
    1a98:	09 f4       	brne	.+2      	; 0x1a9c <__vector_13+0x90>
    1a9a:	60 e0       	ldi	r22, 0x00	; 0
    1a9c:	66 23       	and	r22, r22
    1a9e:	11 f0       	breq	.+4      	; 0x1aa4 <__vector_13+0x98>
    1aa0:	0e 94 0b 13 	call	0x2616	; 0x2616 <_Z16ToggleStepOutputv>
    1aa4:	20 91 e0 03 	lds	r18, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    1aa8:	30 91 e1 03 	lds	r19, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    1aac:	40 91 e2 03 	lds	r20, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    1ab0:	50 91 e3 03 	lds	r21, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    1ab4:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <STEPS>
    1ab8:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <STEPS+0x1>
    1abc:	a0 91 de 03 	lds	r26, 0x03DE	; 0x8003de <STEPS+0x2>
    1ac0:	b0 91 df 03 	lds	r27, 0x03DF	; 0x8003df <STEPS+0x3>
    1ac4:	61 e0       	ldi	r22, 0x01	; 1
    1ac6:	82 17       	cp	r24, r18
    1ac8:	93 07       	cpc	r25, r19
    1aca:	a4 07       	cpc	r26, r20
    1acc:	b5 07       	cpc	r27, r21
    1ace:	0c f0       	brlt	.+2      	; 0x1ad2 <__vector_13+0xc6>
    1ad0:	60 e0       	ldi	r22, 0x00	; 0
    1ad2:	66 23       	and	r22, r22
    1ad4:	51 f1       	breq	.+84     	; 0x1b2a <__vector_13+0x11e>
    1ad6:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <_ZL18directionOutputPin>
    1ada:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <_ZL18directionOutputPin+0x1>
    1ade:	84 58       	subi	r24, 0x84	; 132
    1ae0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae2:	9a 83       	std	Y+2, r25	; 0x02
    1ae4:	89 83       	std	Y+1, r24	; 0x01
    1ae6:	89 81       	ldd	r24, Y+1	; 0x01
    1ae8:	9a 81       	ldd	r25, Y+2	; 0x02
    1aea:	fc 01       	movw	r30, r24
    1aec:	84 91       	lpm	r24, Z
    1aee:	8b 83       	std	Y+3, r24	; 0x03
    1af0:	4b 81       	ldd	r20, Y+3	; 0x03
    1af2:	8b e2       	ldi	r24, 0x2B	; 43
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	2b e2       	ldi	r18, 0x2B	; 43
    1af8:	30 e0       	ldi	r19, 0x00	; 0
    1afa:	f9 01       	movw	r30, r18
    1afc:	20 81       	ld	r18, Z
    1afe:	24 2b       	or	r18, r20
    1b00:	fc 01       	movw	r30, r24
    1b02:	20 83       	st	Z, r18
    1b04:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <STEPS>
    1b08:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <STEPS+0x1>
    1b0c:	a0 91 de 03 	lds	r26, 0x03DE	; 0x8003de <STEPS+0x2>
    1b10:	b0 91 df 03 	lds	r27, 0x03DF	; 0x8003df <STEPS+0x3>
    1b14:	01 96       	adiw	r24, 0x01	; 1
    1b16:	a1 1d       	adc	r26, r1
    1b18:	b1 1d       	adc	r27, r1
    1b1a:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <STEPS>
    1b1e:	90 93 dd 03 	sts	0x03DD, r25	; 0x8003dd <STEPS+0x1>
    1b22:	a0 93 de 03 	sts	0x03DE, r26	; 0x8003de <STEPS+0x2>
    1b26:	b0 93 df 03 	sts	0x03DF, r27	; 0x8003df <STEPS+0x3>
    1b2a:	20 91 e0 03 	lds	r18, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    1b2e:	30 91 e1 03 	lds	r19, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    1b32:	40 91 e2 03 	lds	r20, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    1b36:	50 91 e3 03 	lds	r21, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    1b3a:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <STEPS>
    1b3e:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <STEPS+0x1>
    1b42:	a0 91 de 03 	lds	r26, 0x03DE	; 0x8003de <STEPS+0x2>
    1b46:	b0 91 df 03 	lds	r27, 0x03DF	; 0x8003df <STEPS+0x3>
    1b4a:	61 e0       	ldi	r22, 0x01	; 1
    1b4c:	28 17       	cp	r18, r24
    1b4e:	39 07       	cpc	r19, r25
    1b50:	4a 07       	cpc	r20, r26
    1b52:	5b 07       	cpc	r21, r27
    1b54:	0c f0       	brlt	.+2      	; 0x1b58 <__vector_13+0x14c>
    1b56:	60 e0       	ldi	r22, 0x00	; 0
    1b58:	66 23       	and	r22, r22
    1b5a:	89 f1       	breq	.+98     	; 0x1bbe <__vector_13+0x1b2>
    1b5c:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <_ZL18directionOutputPin>
    1b60:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <_ZL18directionOutputPin+0x1>
    1b64:	84 58       	subi	r24, 0x84	; 132
    1b66:	9f 4f       	sbci	r25, 0xFF	; 255
    1b68:	9d 83       	std	Y+5, r25	; 0x05
    1b6a:	8c 83       	std	Y+4, r24	; 0x04
    1b6c:	8c 81       	ldd	r24, Y+4	; 0x04
    1b6e:	9d 81       	ldd	r25, Y+5	; 0x05
    1b70:	fc 01       	movw	r30, r24
    1b72:	84 91       	lpm	r24, Z
    1b74:	8e 83       	std	Y+6, r24	; 0x06
    1b76:	8e 81       	ldd	r24, Y+6	; 0x06
    1b78:	88 2f       	mov	r24, r24
    1b7a:	90 e0       	ldi	r25, 0x00	; 0
    1b7c:	ac 01       	movw	r20, r24
    1b7e:	40 95       	com	r20
    1b80:	50 95       	com	r21
    1b82:	8b e2       	ldi	r24, 0x2B	; 43
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	2b e2       	ldi	r18, 0x2B	; 43
    1b88:	30 e0       	ldi	r19, 0x00	; 0
    1b8a:	f9 01       	movw	r30, r18
    1b8c:	20 81       	ld	r18, Z
    1b8e:	32 2f       	mov	r19, r18
    1b90:	24 2f       	mov	r18, r20
    1b92:	23 23       	and	r18, r19
    1b94:	fc 01       	movw	r30, r24
    1b96:	20 83       	st	Z, r18
    1b98:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <STEPS>
    1b9c:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <STEPS+0x1>
    1ba0:	a0 91 de 03 	lds	r26, 0x03DE	; 0x8003de <STEPS+0x2>
    1ba4:	b0 91 df 03 	lds	r27, 0x03DF	; 0x8003df <STEPS+0x3>
    1ba8:	01 97       	sbiw	r24, 0x01	; 1
    1baa:	a1 09       	sbc	r26, r1
    1bac:	b1 09       	sbc	r27, r1
    1bae:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <STEPS>
    1bb2:	90 93 dd 03 	sts	0x03DD, r25	; 0x8003dd <STEPS+0x1>
    1bb6:	a0 93 de 03 	sts	0x03DE, r26	; 0x8003de <STEPS+0x2>
    1bba:	b0 93 df 03 	sts	0x03DF, r27	; 0x8003df <STEPS+0x3>
    1bbe:	00 00       	nop
    1bc0:	26 96       	adiw	r28, 0x06	; 6
    1bc2:	0f b6       	in	r0, 0x3f	; 63
    1bc4:	f8 94       	cli
    1bc6:	de bf       	out	0x3e, r29	; 62
    1bc8:	0f be       	out	0x3f, r0	; 63
    1bca:	cd bf       	out	0x3d, r28	; 61
    1bcc:	df 91       	pop	r29
    1bce:	cf 91       	pop	r28
    1bd0:	ff 91       	pop	r31
    1bd2:	ef 91       	pop	r30
    1bd4:	bf 91       	pop	r27
    1bd6:	af 91       	pop	r26
    1bd8:	9f 91       	pop	r25
    1bda:	8f 91       	pop	r24
    1bdc:	7f 91       	pop	r23
    1bde:	6f 91       	pop	r22
    1be0:	5f 91       	pop	r21
    1be2:	4f 91       	pop	r20
    1be4:	3f 91       	pop	r19
    1be6:	2f 91       	pop	r18
    1be8:	0f 90       	pop	r0
    1bea:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1bee:	0f 90       	pop	r0
    1bf0:	1f 90       	pop	r1
    1bf2:	18 95       	reti

00001bf4 <__vector_11>:
    1bf4:	1f 92       	push	r1
    1bf6:	0f 92       	push	r0
    1bf8:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1bfc:	0f 92       	push	r0
    1bfe:	11 24       	eor	r1, r1
    1c00:	2f 93       	push	r18
    1c02:	3f 93       	push	r19
    1c04:	4f 93       	push	r20
    1c06:	5f 93       	push	r21
    1c08:	6f 93       	push	r22
    1c0a:	7f 93       	push	r23
    1c0c:	8f 93       	push	r24
    1c0e:	9f 93       	push	r25
    1c10:	af 93       	push	r26
    1c12:	bf 93       	push	r27
    1c14:	ef 93       	push	r30
    1c16:	ff 93       	push	r31
    1c18:	cf 93       	push	r28
    1c1a:	df 93       	push	r29
    1c1c:	cd b7       	in	r28, 0x3d	; 61
    1c1e:	de b7       	in	r29, 0x3e	; 62
    1c20:	26 97       	sbiw	r28, 0x06	; 6
    1c22:	de bf       	out	0x3e, r29	; 62
    1c24:	cd bf       	out	0x3d, r28	; 61
    1c26:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <RUN_MODE>
    1c2a:	81 e0       	ldi	r24, 0x01	; 1
    1c2c:	91 30       	cpi	r25, 0x01	; 1
    1c2e:	09 f4       	brne	.+2      	; 0x1c32 <__vector_11+0x3e>
    1c30:	80 e0       	ldi	r24, 0x00	; 0
    1c32:	88 23       	and	r24, r24
    1c34:	09 f4       	brne	.+2      	; 0x1c38 <__vector_11+0x44>
    1c36:	a8 c0       	rjmp	.+336    	; 0x1d88 <__vector_11+0x194>
    1c38:	20 91 e0 03 	lds	r18, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    1c3c:	30 91 e1 03 	lds	r19, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    1c40:	40 91 e2 03 	lds	r20, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    1c44:	50 91 e3 03 	lds	r21, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    1c48:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <STEPS>
    1c4c:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <STEPS+0x1>
    1c50:	a0 91 de 03 	lds	r26, 0x03DE	; 0x8003de <STEPS+0x2>
    1c54:	b0 91 df 03 	lds	r27, 0x03DF	; 0x8003df <STEPS+0x3>
    1c58:	61 e0       	ldi	r22, 0x01	; 1
    1c5a:	28 17       	cp	r18, r24
    1c5c:	39 07       	cpc	r19, r25
    1c5e:	4a 07       	cpc	r20, r26
    1c60:	5b 07       	cpc	r21, r27
    1c62:	09 f4       	brne	.+2      	; 0x1c66 <__vector_11+0x72>
    1c64:	60 e0       	ldi	r22, 0x00	; 0
    1c66:	66 23       	and	r22, r22
    1c68:	11 f0       	breq	.+4      	; 0x1c6e <__vector_11+0x7a>
    1c6a:	0e 94 0b 13 	call	0x2616	; 0x2616 <_Z16ToggleStepOutputv>
    1c6e:	20 91 e0 03 	lds	r18, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    1c72:	30 91 e1 03 	lds	r19, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    1c76:	40 91 e2 03 	lds	r20, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    1c7a:	50 91 e3 03 	lds	r21, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    1c7e:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <STEPS>
    1c82:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <STEPS+0x1>
    1c86:	a0 91 de 03 	lds	r26, 0x03DE	; 0x8003de <STEPS+0x2>
    1c8a:	b0 91 df 03 	lds	r27, 0x03DF	; 0x8003df <STEPS+0x3>
    1c8e:	61 e0       	ldi	r22, 0x01	; 1
    1c90:	82 17       	cp	r24, r18
    1c92:	93 07       	cpc	r25, r19
    1c94:	a4 07       	cpc	r26, r20
    1c96:	b5 07       	cpc	r27, r21
    1c98:	0c f0       	brlt	.+2      	; 0x1c9c <__vector_11+0xa8>
    1c9a:	60 e0       	ldi	r22, 0x00	; 0
    1c9c:	66 23       	and	r22, r22
    1c9e:	51 f1       	breq	.+84     	; 0x1cf4 <__vector_11+0x100>
    1ca0:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <_ZL18directionOutputPin>
    1ca4:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <_ZL18directionOutputPin+0x1>
    1ca8:	84 58       	subi	r24, 0x84	; 132
    1caa:	9f 4f       	sbci	r25, 0xFF	; 255
    1cac:	9a 83       	std	Y+2, r25	; 0x02
    1cae:	89 83       	std	Y+1, r24	; 0x01
    1cb0:	89 81       	ldd	r24, Y+1	; 0x01
    1cb2:	9a 81       	ldd	r25, Y+2	; 0x02
    1cb4:	fc 01       	movw	r30, r24
    1cb6:	84 91       	lpm	r24, Z
    1cb8:	8b 83       	std	Y+3, r24	; 0x03
    1cba:	4b 81       	ldd	r20, Y+3	; 0x03
    1cbc:	8b e2       	ldi	r24, 0x2B	; 43
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	2b e2       	ldi	r18, 0x2B	; 43
    1cc2:	30 e0       	ldi	r19, 0x00	; 0
    1cc4:	f9 01       	movw	r30, r18
    1cc6:	20 81       	ld	r18, Z
    1cc8:	24 2b       	or	r18, r20
    1cca:	fc 01       	movw	r30, r24
    1ccc:	20 83       	st	Z, r18
    1cce:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <STEPS>
    1cd2:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <STEPS+0x1>
    1cd6:	a0 91 de 03 	lds	r26, 0x03DE	; 0x8003de <STEPS+0x2>
    1cda:	b0 91 df 03 	lds	r27, 0x03DF	; 0x8003df <STEPS+0x3>
    1cde:	01 96       	adiw	r24, 0x01	; 1
    1ce0:	a1 1d       	adc	r26, r1
    1ce2:	b1 1d       	adc	r27, r1
    1ce4:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <STEPS>
    1ce8:	90 93 dd 03 	sts	0x03DD, r25	; 0x8003dd <STEPS+0x1>
    1cec:	a0 93 de 03 	sts	0x03DE, r26	; 0x8003de <STEPS+0x2>
    1cf0:	b0 93 df 03 	sts	0x03DF, r27	; 0x8003df <STEPS+0x3>
    1cf4:	20 91 e0 03 	lds	r18, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    1cf8:	30 91 e1 03 	lds	r19, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    1cfc:	40 91 e2 03 	lds	r20, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    1d00:	50 91 e3 03 	lds	r21, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    1d04:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <STEPS>
    1d08:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <STEPS+0x1>
    1d0c:	a0 91 de 03 	lds	r26, 0x03DE	; 0x8003de <STEPS+0x2>
    1d10:	b0 91 df 03 	lds	r27, 0x03DF	; 0x8003df <STEPS+0x3>
    1d14:	61 e0       	ldi	r22, 0x01	; 1
    1d16:	28 17       	cp	r18, r24
    1d18:	39 07       	cpc	r19, r25
    1d1a:	4a 07       	cpc	r20, r26
    1d1c:	5b 07       	cpc	r21, r27
    1d1e:	0c f0       	brlt	.+2      	; 0x1d22 <__vector_11+0x12e>
    1d20:	60 e0       	ldi	r22, 0x00	; 0
    1d22:	66 23       	and	r22, r22
    1d24:	89 f1       	breq	.+98     	; 0x1d88 <__vector_11+0x194>
    1d26:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <_ZL18directionOutputPin>
    1d2a:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <_ZL18directionOutputPin+0x1>
    1d2e:	84 58       	subi	r24, 0x84	; 132
    1d30:	9f 4f       	sbci	r25, 0xFF	; 255
    1d32:	9d 83       	std	Y+5, r25	; 0x05
    1d34:	8c 83       	std	Y+4, r24	; 0x04
    1d36:	8c 81       	ldd	r24, Y+4	; 0x04
    1d38:	9d 81       	ldd	r25, Y+5	; 0x05
    1d3a:	fc 01       	movw	r30, r24
    1d3c:	84 91       	lpm	r24, Z
    1d3e:	8e 83       	std	Y+6, r24	; 0x06
    1d40:	8e 81       	ldd	r24, Y+6	; 0x06
    1d42:	88 2f       	mov	r24, r24
    1d44:	90 e0       	ldi	r25, 0x00	; 0
    1d46:	ac 01       	movw	r20, r24
    1d48:	40 95       	com	r20
    1d4a:	50 95       	com	r21
    1d4c:	8b e2       	ldi	r24, 0x2B	; 43
    1d4e:	90 e0       	ldi	r25, 0x00	; 0
    1d50:	2b e2       	ldi	r18, 0x2B	; 43
    1d52:	30 e0       	ldi	r19, 0x00	; 0
    1d54:	f9 01       	movw	r30, r18
    1d56:	20 81       	ld	r18, Z
    1d58:	32 2f       	mov	r19, r18
    1d5a:	24 2f       	mov	r18, r20
    1d5c:	23 23       	and	r18, r19
    1d5e:	fc 01       	movw	r30, r24
    1d60:	20 83       	st	Z, r18
    1d62:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <STEPS>
    1d66:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <STEPS+0x1>
    1d6a:	a0 91 de 03 	lds	r26, 0x03DE	; 0x8003de <STEPS+0x2>
    1d6e:	b0 91 df 03 	lds	r27, 0x03DF	; 0x8003df <STEPS+0x3>
    1d72:	01 97       	sbiw	r24, 0x01	; 1
    1d74:	a1 09       	sbc	r26, r1
    1d76:	b1 09       	sbc	r27, r1
    1d78:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <STEPS>
    1d7c:	90 93 dd 03 	sts	0x03DD, r25	; 0x8003dd <STEPS+0x1>
    1d80:	a0 93 de 03 	sts	0x03DE, r26	; 0x8003de <STEPS+0x2>
    1d84:	b0 93 df 03 	sts	0x03DF, r27	; 0x8003df <STEPS+0x3>
    1d88:	00 00       	nop
    1d8a:	26 96       	adiw	r28, 0x06	; 6
    1d8c:	0f b6       	in	r0, 0x3f	; 63
    1d8e:	f8 94       	cli
    1d90:	de bf       	out	0x3e, r29	; 62
    1d92:	0f be       	out	0x3f, r0	; 63
    1d94:	cd bf       	out	0x3d, r28	; 61
    1d96:	df 91       	pop	r29
    1d98:	cf 91       	pop	r28
    1d9a:	ff 91       	pop	r31
    1d9c:	ef 91       	pop	r30
    1d9e:	bf 91       	pop	r27
    1da0:	af 91       	pop	r26
    1da2:	9f 91       	pop	r25
    1da4:	8f 91       	pop	r24
    1da6:	7f 91       	pop	r23
    1da8:	6f 91       	pop	r22
    1daa:	5f 91       	pop	r21
    1dac:	4f 91       	pop	r20
    1dae:	3f 91       	pop	r19
    1db0:	2f 91       	pop	r18
    1db2:	0f 90       	pop	r0
    1db4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1db8:	0f 90       	pop	r0
    1dba:	1f 90       	pop	r1
    1dbc:	18 95       	reti

00001dbe <_Z17spoolPulse_Vectorv>:
    1dbe:	cf 93       	push	r28
    1dc0:	df 93       	push	r29
    1dc2:	cd b7       	in	r28, 0x3d	; 61
    1dc4:	de b7       	in	r29, 0x3e	; 62
    1dc6:	0e 94 4e 1b 	call	0x369c	; 0x369c <millis>
    1dca:	dc 01       	movw	r26, r24
    1dcc:	cb 01       	movw	r24, r22
    1dce:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <m>
    1dd2:	90 93 d9 03 	sts	0x03D9, r25	; 0x8003d9 <m+0x1>
    1dd6:	a0 93 da 03 	sts	0x03DA, r26	; 0x8003da <m+0x2>
    1dda:	b0 93 db 03 	sts	0x03DB, r27	; 0x8003db <m+0x3>
    1dde:	20 91 d8 03 	lds	r18, 0x03D8	; 0x8003d8 <m>
    1de2:	30 91 d9 03 	lds	r19, 0x03D9	; 0x8003d9 <m+0x1>
    1de6:	40 91 da 03 	lds	r20, 0x03DA	; 0x8003da <m+0x2>
    1dea:	50 91 db 03 	lds	r21, 0x03DB	; 0x8003db <m+0x3>
    1dee:	80 91 d4 03 	lds	r24, 0x03D4	; 0x8003d4 <_ZL11last_millis>
    1df2:	90 91 d5 03 	lds	r25, 0x03D5	; 0x8003d5 <_ZL11last_millis+0x1>
    1df6:	a0 91 d6 03 	lds	r26, 0x03D6	; 0x8003d6 <_ZL11last_millis+0x2>
    1dfa:	b0 91 d7 03 	lds	r27, 0x03D7	; 0x8003d7 <_ZL11last_millis+0x3>
    1dfe:	28 17       	cp	r18, r24
    1e00:	39 07       	cpc	r19, r25
    1e02:	4a 07       	cpc	r20, r26
    1e04:	5b 07       	cpc	r21, r27
    1e06:	09 f4       	brne	.+2      	; 0x1e0a <_Z17spoolPulse_Vectorv+0x4c>
    1e08:	6c c0       	rjmp	.+216    	; 0x1ee2 <_Z17spoolPulse_Vectorv+0x124>
    1e0a:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <m>
    1e0e:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <m+0x1>
    1e12:	a0 91 da 03 	lds	r26, 0x03DA	; 0x8003da <m+0x2>
    1e16:	b0 91 db 03 	lds	r27, 0x03DB	; 0x8003db <m+0x3>
    1e1a:	80 93 d4 03 	sts	0x03D4, r24	; 0x8003d4 <_ZL11last_millis>
    1e1e:	90 93 d5 03 	sts	0x03D5, r25	; 0x8003d5 <_ZL11last_millis+0x1>
    1e22:	a0 93 d6 03 	sts	0x03D6, r26	; 0x8003d6 <_ZL11last_millis+0x2>
    1e26:	b0 93 d7 03 	sts	0x03D7, r27	; 0x8003d7 <_ZL11last_millis+0x3>
    1e2a:	80 91 bc 03 	lds	r24, 0x03BC	; 0x8003bc <spoolPulses>
    1e2e:	90 91 bd 03 	lds	r25, 0x03BD	; 0x8003bd <spoolPulses+0x1>
    1e32:	a0 91 be 03 	lds	r26, 0x03BE	; 0x8003be <spoolPulses+0x2>
    1e36:	b0 91 bf 03 	lds	r27, 0x03BF	; 0x8003bf <spoolPulses+0x3>
    1e3a:	21 e0       	ldi	r18, 0x01	; 1
    1e3c:	89 2b       	or	r24, r25
    1e3e:	8a 2b       	or	r24, r26
    1e40:	8b 2b       	or	r24, r27
    1e42:	09 f0       	breq	.+2      	; 0x1e46 <_Z17spoolPulse_Vectorv+0x88>
    1e44:	20 e0       	ldi	r18, 0x00	; 0
    1e46:	22 23       	and	r18, r18
    1e48:	61 f0       	breq	.+24     	; 0x1e62 <_Z17spoolPulse_Vectorv+0xa4>
    1e4a:	0e 94 4e 1b 	call	0x369c	; 0x369c <millis>
    1e4e:	dc 01       	movw	r26, r24
    1e50:	cb 01       	movw	r24, r22
    1e52:	80 93 c0 03 	sts	0x03C0, r24	; 0x8003c0 <spoolTime>
    1e56:	90 93 c1 03 	sts	0x03C1, r25	; 0x8003c1 <spoolTime+0x1>
    1e5a:	a0 93 c2 03 	sts	0x03C2, r26	; 0x8003c2 <spoolTime+0x2>
    1e5e:	b0 93 c3 03 	sts	0x03C3, r27	; 0x8003c3 <spoolTime+0x3>
    1e62:	80 91 bc 03 	lds	r24, 0x03BC	; 0x8003bc <spoolPulses>
    1e66:	90 91 bd 03 	lds	r25, 0x03BD	; 0x8003bd <spoolPulses+0x1>
    1e6a:	a0 91 be 03 	lds	r26, 0x03BE	; 0x8003be <spoolPulses+0x2>
    1e6e:	b0 91 bf 03 	lds	r27, 0x03BF	; 0x8003bf <spoolPulses+0x3>
    1e72:	01 96       	adiw	r24, 0x01	; 1
    1e74:	a1 1d       	adc	r26, r1
    1e76:	b1 1d       	adc	r27, r1
    1e78:	80 93 bc 03 	sts	0x03BC, r24	; 0x8003bc <spoolPulses>
    1e7c:	90 93 bd 03 	sts	0x03BD, r25	; 0x8003bd <spoolPulses+0x1>
    1e80:	a0 93 be 03 	sts	0x03BE, r26	; 0x8003be <spoolPulses+0x2>
    1e84:	b0 93 bf 03 	sts	0x03BF, r27	; 0x8003bf <spoolPulses+0x3>
    1e88:	90 91 eb 03 	lds	r25, 0x03EB	; 0x8003eb <tickFlag>
    1e8c:	81 e0       	ldi	r24, 0x01	; 1
    1e8e:	89 27       	eor	r24, r25
    1e90:	88 23       	and	r24, r24
    1e92:	71 f0       	breq	.+28     	; 0x1eb0 <_Z17spoolPulse_Vectorv+0xf2>
    1e94:	80 91 bc 03 	lds	r24, 0x03BC	; 0x8003bc <spoolPulses>
    1e98:	90 91 bd 03 	lds	r25, 0x03BD	; 0x8003bd <spoolPulses+0x1>
    1e9c:	a0 91 be 03 	lds	r26, 0x03BE	; 0x8003be <spoolPulses+0x2>
    1ea0:	b0 91 bf 03 	lds	r27, 0x03BF	; 0x8003bf <spoolPulses+0x3>
    1ea4:	0a 97       	sbiw	r24, 0x0a	; 10
    1ea6:	a1 05       	cpc	r26, r1
    1ea8:	b1 05       	cpc	r27, r1
    1eaa:	14 f0       	brlt	.+4      	; 0x1eb0 <_Z17spoolPulse_Vectorv+0xf2>
    1eac:	81 e0       	ldi	r24, 0x01	; 1
    1eae:	01 c0       	rjmp	.+2      	; 0x1eb2 <_Z17spoolPulse_Vectorv+0xf4>
    1eb0:	80 e0       	ldi	r24, 0x00	; 0
    1eb2:	88 23       	and	r24, r24
    1eb4:	19 f0       	breq	.+6      	; 0x1ebc <_Z17spoolPulse_Vectorv+0xfe>
    1eb6:	81 e0       	ldi	r24, 0x01	; 1
    1eb8:	80 93 eb 03 	sts	0x03EB, r24	; 0x8003eb <tickFlag>
    1ebc:	80 91 cc 03 	lds	r24, 0x03CC	; 0x8003cc <totalspoolTicks>
    1ec0:	90 91 cd 03 	lds	r25, 0x03CD	; 0x8003cd <totalspoolTicks+0x1>
    1ec4:	a0 91 ce 03 	lds	r26, 0x03CE	; 0x8003ce <totalspoolTicks+0x2>
    1ec8:	b0 91 cf 03 	lds	r27, 0x03CF	; 0x8003cf <totalspoolTicks+0x3>
    1ecc:	01 96       	adiw	r24, 0x01	; 1
    1ece:	a1 1d       	adc	r26, r1
    1ed0:	b1 1d       	adc	r27, r1
    1ed2:	80 93 cc 03 	sts	0x03CC, r24	; 0x8003cc <totalspoolTicks>
    1ed6:	90 93 cd 03 	sts	0x03CD, r25	; 0x8003cd <totalspoolTicks+0x1>
    1eda:	a0 93 ce 03 	sts	0x03CE, r26	; 0x8003ce <totalspoolTicks+0x2>
    1ede:	b0 93 cf 03 	sts	0x03CF, r27	; 0x8003cf <totalspoolTicks+0x3>
    1ee2:	00 00       	nop
    1ee4:	df 91       	pop	r29
    1ee6:	cf 91       	pop	r28
    1ee8:	08 95       	ret

00001eea <setup>:
    1eea:	cf 93       	push	r28
    1eec:	df 93       	push	r29
    1eee:	00 d0       	rcall	.+0      	; 0x1ef0 <setup+0x6>
    1ef0:	cd b7       	in	r28, 0x3d	; 61
    1ef2:	de b7       	in	r29, 0x3e	; 62
    1ef4:	61 e0       	ldi	r22, 0x01	; 1
    1ef6:	83 e0       	ldi	r24, 0x03	; 3
    1ef8:	0e 94 95 1b 	call	0x372a	; 0x372a <pinMode>
    1efc:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <_ZL18directionOutputPin>
    1f00:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <_ZL18directionOutputPin+0x1>
    1f04:	61 e0       	ldi	r22, 0x01	; 1
    1f06:	0e 94 95 1b 	call	0x372a	; 0x372a <pinMode>
    1f0a:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <_ZL14directionInput>
    1f0e:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <_ZL14directionInput+0x1>
    1f12:	60 e0       	ldi	r22, 0x00	; 0
    1f14:	0e 94 95 1b 	call	0x372a	; 0x372a <pinMode>
    1f18:	60 e0       	ldi	r22, 0x00	; 0
    1f1a:	86 e0       	ldi	r24, 0x06	; 6
    1f1c:	0e 94 95 1b 	call	0x372a	; 0x372a <pinMode>
    1f20:	41 e0       	ldi	r20, 0x01	; 1
    1f22:	6f ed       	ldi	r22, 0xDF	; 223
    1f24:	7e e0       	ldi	r23, 0x0E	; 14
    1f26:	86 e0       	ldi	r24, 0x06	; 6
    1f28:	0e 94 b3 08 	call	0x1166	; 0x1166 <_Z15enableInterrupthPFvvEh>
    1f2c:	ce 01       	movw	r24, r28
    1f2e:	01 96       	adiw	r24, 0x01	; 1
    1f30:	0e 94 8e 00 	call	0x11c	; 0x11c <_ZN17ADC_ConfigurationC1Ev>
    1f34:	ce 01       	movw	r24, r28
    1f36:	02 96       	adiw	r24, 0x02	; 2
    1f38:	0e 94 4f 16 	call	0x2c9e	; 0x2c9e <_ZN25Step_Output_ConfigurationC1Ev>
    1f3c:	0e 94 9b 00 	call	0x136	; 0x136 <_ZN17ADC_Configuration8SetupADCEv>
    1f40:	0e 94 5c 16 	call	0x2cb8	; 0x2cb8 <_ZN25Step_Output_Configuration15SetupStepOutputEv>
    1f44:	40 e0       	ldi	r20, 0x00	; 0
    1f46:	52 ec       	ldi	r21, 0xC2	; 194
    1f48:	61 e0       	ldi	r22, 0x01	; 1
    1f4a:	70 e0       	ldi	r23, 0x00	; 0
    1f4c:	8e ee       	ldi	r24, 0xEE	; 238
    1f4e:	93 e0       	ldi	r25, 0x03	; 3
    1f50:	0e 94 90 08 	call	0x1120	; 0x1120 <_ZN14HardwareSerial5beginEm>
    1f54:	42 e3       	ldi	r20, 0x32	; 50
    1f56:	50 e0       	ldi	r21, 0x00	; 0
    1f58:	60 e0       	ldi	r22, 0x00	; 0
    1f5a:	70 e0       	ldi	r23, 0x00	; 0
    1f5c:	8e ee       	ldi	r24, 0xEE	; 238
    1f5e:	93 e0       	ldi	r25, 0x03	; 3
    1f60:	0e 94 ca 1a 	call	0x3594	; 0x3594 <_ZN6Stream10setTimeoutEm>
    1f64:	10 92 c2 01 	sts	0x01C2, r1	; 0x8001c2 <RUN_MODE>
    1f68:	ce 01       	movw	r24, r28
    1f6a:	02 96       	adiw	r24, 0x02	; 2
    1f6c:	0e 94 7b 16 	call	0x2cf6	; 0x2cf6 <_ZN25Step_Output_ConfigurationD1Ev>
    1f70:	ce 01       	movw	r24, r28
    1f72:	01 96       	adiw	r24, 0x01	; 1
    1f74:	0e 94 be 00 	call	0x17c	; 0x17c <_ZN17ADC_ConfigurationD1Ev>
    1f78:	00 00       	nop
    1f7a:	0f 90       	pop	r0
    1f7c:	0f 90       	pop	r0
    1f7e:	df 91       	pop	r29
    1f80:	cf 91       	pop	r28
    1f82:	08 95       	ret

00001f84 <loop>:
    1f84:	cf 92       	push	r12
    1f86:	df 92       	push	r13
    1f88:	ef 92       	push	r14
    1f8a:	ff 92       	push	r15
    1f8c:	0f 93       	push	r16
    1f8e:	1f 93       	push	r17
    1f90:	cf 93       	push	r28
    1f92:	df 93       	push	r29
    1f94:	cd b7       	in	r28, 0x3d	; 61
    1f96:	de b7       	in	r29, 0x3e	; 62
    1f98:	2c 97       	sbiw	r28, 0x0c	; 12
    1f9a:	0f b6       	in	r0, 0x3f	; 63
    1f9c:	f8 94       	cli
    1f9e:	de bf       	out	0x3e, r29	; 62
    1fa0:	0f be       	out	0x3f, r0	; 63
    1fa2:	cd bf       	out	0x3d, r28	; 61
    1fa4:	8c ee       	ldi	r24, 0xEC	; 236
    1fa6:	93 e0       	ldi	r25, 0x03	; 3
    1fa8:	0e 94 37 06 	call	0xc6e	; 0xc6e <_ZN15Serial_Commands15commandsProcessEv>
    1fac:	89 e2       	ldi	r24, 0x29	; 41
    1fae:	90 e0       	ldi	r25, 0x00	; 0
    1fb0:	fc 01       	movw	r30, r24
    1fb2:	80 81       	ld	r24, Z
    1fb4:	88 2f       	mov	r24, r24
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	80 72       	andi	r24, 0x20	; 32
    1fba:	99 27       	eor	r25, r25
    1fbc:	21 e0       	ldi	r18, 0x01	; 1
    1fbe:	89 2b       	or	r24, r25
    1fc0:	09 f4       	brne	.+2      	; 0x1fc4 <loop+0x40>
    1fc2:	20 e0       	ldi	r18, 0x00	; 0
    1fc4:	20 93 bb 03 	sts	0x03BB, r18	; 0x8003bb <directionInputState>
    1fc8:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <RUN_MODE>
    1fcc:	81 e0       	ldi	r24, 0x01	; 1
    1fce:	92 30       	cpi	r25, 0x02	; 2
    1fd0:	09 f0       	breq	.+2      	; 0x1fd4 <loop+0x50>
    1fd2:	80 e0       	ldi	r24, 0x00	; 0
    1fd4:	88 23       	and	r24, r24
    1fd6:	29 f1       	breq	.+74     	; 0x2022 <loop+0x9e>
    1fd8:	80 91 e4 03 	lds	r24, 0x03E4	; 0x8003e4 <TRAVERSE_RPM>
    1fdc:	90 91 e5 03 	lds	r25, 0x03E5	; 0x8003e5 <TRAVERSE_RPM+0x1>
    1fe0:	a0 91 e6 03 	lds	r26, 0x03E6	; 0x8003e6 <TRAVERSE_RPM+0x2>
    1fe4:	b0 91 e7 03 	lds	r27, 0x03E7	; 0x8003e7 <TRAVERSE_RPM+0x3>
    1fe8:	20 91 b7 03 	lds	r18, 0x03B7	; 0x8003b7 <traverse_rpm>
    1fec:	30 91 b8 03 	lds	r19, 0x03B8	; 0x8003b8 <traverse_rpm+0x1>
    1ff0:	40 91 b9 03 	lds	r20, 0x03B9	; 0x8003b9 <traverse_rpm+0x2>
    1ff4:	50 91 ba 03 	lds	r21, 0x03BA	; 0x8003ba <traverse_rpm+0x3>
    1ff8:	61 e0       	ldi	r22, 0x01	; 1
    1ffa:	82 17       	cp	r24, r18
    1ffc:	93 07       	cpc	r25, r19
    1ffe:	a4 07       	cpc	r26, r20
    2000:	b5 07       	cpc	r27, r21
    2002:	09 f4       	brne	.+2      	; 0x2006 <loop+0x82>
    2004:	60 e0       	ldi	r22, 0x00	; 0
    2006:	66 23       	and	r22, r22
    2008:	61 f0       	breq	.+24     	; 0x2022 <loop+0x9e>
    200a:	80 91 e4 03 	lds	r24, 0x03E4	; 0x8003e4 <TRAVERSE_RPM>
    200e:	90 91 e5 03 	lds	r25, 0x03E5	; 0x8003e5 <TRAVERSE_RPM+0x1>
    2012:	a0 91 e6 03 	lds	r26, 0x03E6	; 0x8003e6 <TRAVERSE_RPM+0x2>
    2016:	b0 91 e7 03 	lds	r27, 0x03E7	; 0x8003e7 <TRAVERSE_RPM+0x3>
    201a:	bc 01       	movw	r22, r24
    201c:	cd 01       	movw	r24, r26
    201e:	0e 94 81 15 	call	0x2b02	; 0x2b02 <_Z16Set_Traverse_RPMl>
    2022:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <RUN_MODE>
    2026:	81 e0       	ldi	r24, 0x01	; 1
    2028:	93 30       	cpi	r25, 0x03	; 3
    202a:	09 f0       	breq	.+2      	; 0x202e <loop+0xaa>
    202c:	80 e0       	ldi	r24, 0x00	; 0
    202e:	88 23       	and	r24, r24
    2030:	09 f4       	brne	.+2      	; 0x2034 <loop+0xb0>
    2032:	75 c0       	rjmp	.+234    	; 0x211e <loop+0x19a>
    2034:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <TRAVERSE_DIRECTION>
    2038:	81 e0       	ldi	r24, 0x01	; 1
    203a:	91 30       	cpi	r25, 0x01	; 1
    203c:	09 f0       	breq	.+2      	; 0x2040 <loop+0xbc>
    203e:	80 e0       	ldi	r24, 0x00	; 0
    2040:	88 23       	and	r24, r24
    2042:	41 f1       	breq	.+80     	; 0x2094 <loop+0x110>
    2044:	c0 90 e4 03 	lds	r12, 0x03E4	; 0x8003e4 <TRAVERSE_RPM>
    2048:	d0 90 e5 03 	lds	r13, 0x03E5	; 0x8003e5 <TRAVERSE_RPM+0x1>
    204c:	e0 90 e6 03 	lds	r14, 0x03E6	; 0x8003e6 <TRAVERSE_RPM+0x2>
    2050:	f0 90 e7 03 	lds	r15, 0x03E7	; 0x8003e7 <TRAVERSE_RPM+0x3>
    2054:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <SPOOL_WIDTH>
    2058:	30 91 bb 01 	lds	r19, 0x01BB	; 0x8001bb <SPOOL_WIDTH+0x1>
    205c:	40 91 bc 01 	lds	r20, 0x01BC	; 0x8001bc <SPOOL_WIDTH+0x2>
    2060:	50 91 bd 01 	lds	r21, 0x01BD	; 0x8001bd <SPOOL_WIDTH+0x3>
    2064:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <INNER_TRAVERSE_OFFSET>
    2068:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <INNER_TRAVERSE_OFFSET+0x1>
    206c:	a0 91 b8 01 	lds	r26, 0x01B8	; 0x8001b8 <INNER_TRAVERSE_OFFSET+0x2>
    2070:	b0 91 b9 01 	lds	r27, 0x01B9	; 0x8001b9 <INNER_TRAVERSE_OFFSET+0x3>
    2074:	82 0f       	add	r24, r18
    2076:	93 1f       	adc	r25, r19
    2078:	a4 1f       	adc	r26, r20
    207a:	b5 1f       	adc	r27, r21
    207c:	bc 01       	movw	r22, r24
    207e:	cd 01       	movw	r24, r26
    2080:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <_Z9MMToStepsm>
    2084:	dc 01       	movw	r26, r24
    2086:	cb 01       	movw	r24, r22
    2088:	a7 01       	movw	r20, r14
    208a:	96 01       	movw	r18, r12
    208c:	bc 01       	movw	r22, r24
    208e:	cd 01       	movw	r24, r26
    2090:	0e 94 2b 13 	call	0x2656	; 0x2656 <_Z20MoveAbsolutePositionmm>
    2094:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <TRAVERSE_DIRECTION>
    2098:	81 e0       	ldi	r24, 0x01	; 1
    209a:	99 23       	and	r25, r25
    209c:	09 f0       	breq	.+2      	; 0x20a0 <loop+0x11c>
    209e:	80 e0       	ldi	r24, 0x00	; 0
    20a0:	88 23       	and	r24, r24
    20a2:	e1 f0       	breq	.+56     	; 0x20dc <loop+0x158>
    20a4:	c0 90 e4 03 	lds	r12, 0x03E4	; 0x8003e4 <TRAVERSE_RPM>
    20a8:	d0 90 e5 03 	lds	r13, 0x03E5	; 0x8003e5 <TRAVERSE_RPM+0x1>
    20ac:	e0 90 e6 03 	lds	r14, 0x03E6	; 0x8003e6 <TRAVERSE_RPM+0x2>
    20b0:	f0 90 e7 03 	lds	r15, 0x03E7	; 0x8003e7 <TRAVERSE_RPM+0x3>
    20b4:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <INNER_TRAVERSE_OFFSET>
    20b8:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <INNER_TRAVERSE_OFFSET+0x1>
    20bc:	a0 91 b8 01 	lds	r26, 0x01B8	; 0x8001b8 <INNER_TRAVERSE_OFFSET+0x2>
    20c0:	b0 91 b9 01 	lds	r27, 0x01B9	; 0x8001b9 <INNER_TRAVERSE_OFFSET+0x3>
    20c4:	bc 01       	movw	r22, r24
    20c6:	cd 01       	movw	r24, r26
    20c8:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <_Z9MMToStepsm>
    20cc:	dc 01       	movw	r26, r24
    20ce:	cb 01       	movw	r24, r22
    20d0:	a7 01       	movw	r20, r14
    20d2:	96 01       	movw	r18, r12
    20d4:	bc 01       	movw	r22, r24
    20d6:	cd 01       	movw	r24, r26
    20d8:	0e 94 2b 13 	call	0x2656	; 0x2656 <_Z20MoveAbsolutePositionmm>
    20dc:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <STEPS>
    20e0:	30 91 dd 03 	lds	r19, 0x03DD	; 0x8003dd <STEPS+0x1>
    20e4:	40 91 de 03 	lds	r20, 0x03DE	; 0x8003de <STEPS+0x2>
    20e8:	50 91 df 03 	lds	r21, 0x03DF	; 0x8003df <STEPS+0x3>
    20ec:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    20f0:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    20f4:	a0 91 e2 03 	lds	r26, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    20f8:	b0 91 e3 03 	lds	r27, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    20fc:	61 e0       	ldi	r22, 0x01	; 1
    20fe:	28 17       	cp	r18, r24
    2100:	39 07       	cpc	r19, r25
    2102:	4a 07       	cpc	r20, r26
    2104:	5b 07       	cpc	r21, r27
    2106:	09 f0       	breq	.+2      	; 0x210a <loop+0x186>
    2108:	60 e0       	ldi	r22, 0x00	; 0
    210a:	66 23       	and	r22, r22
    210c:	41 f0       	breq	.+16     	; 0x211e <loop+0x19a>
    210e:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <TRAVERSE_DIRECTION>
    2112:	81 e0       	ldi	r24, 0x01	; 1
    2114:	91 30       	cpi	r25, 0x01	; 1
    2116:	09 f4       	brne	.+2      	; 0x211a <loop+0x196>
    2118:	80 e0       	ldi	r24, 0x00	; 0
    211a:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <TRAVERSE_DIRECTION>
    211e:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <RUN_MODE>
    2122:	81 e0       	ldi	r24, 0x01	; 1
    2124:	94 30       	cpi	r25, 0x04	; 4
    2126:	09 f0       	breq	.+2      	; 0x212a <loop+0x1a6>
    2128:	80 e0       	ldi	r24, 0x00	; 0
    212a:	88 23       	and	r24, r24
    212c:	09 f4       	brne	.+2      	; 0x2130 <loop+0x1ac>
    212e:	d5 c1       	rjmp	.+938    	; 0x24da <loop+0x556>
    2130:	0e 94 4e 1b 	call	0x369c	; 0x369c <millis>
    2134:	7b 01       	movw	r14, r22
    2136:	8c 01       	movw	r16, r24
    2138:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <fullAutoUpdateInterval>
    213c:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <fullAutoUpdateInterval+0x1>
    2140:	9c 01       	movw	r18, r24
    2142:	99 0f       	add	r25, r25
    2144:	44 0b       	sbc	r20, r20
    2146:	55 0b       	sbc	r21, r21
    2148:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <previousFullAutoTime>
    214c:	90 91 c5 03 	lds	r25, 0x03C5	; 0x8003c5 <previousFullAutoTime+0x1>
    2150:	a0 91 c6 03 	lds	r26, 0x03C6	; 0x8003c6 <previousFullAutoTime+0x2>
    2154:	b0 91 c7 03 	lds	r27, 0x03C7	; 0x8003c7 <previousFullAutoTime+0x3>
    2158:	82 0f       	add	r24, r18
    215a:	93 1f       	adc	r25, r19
    215c:	a4 1f       	adc	r26, r20
    215e:	b5 1f       	adc	r27, r21
    2160:	21 e0       	ldi	r18, 0x01	; 1
    2162:	8e 15       	cp	r24, r14
    2164:	9f 05       	cpc	r25, r15
    2166:	a0 07       	cpc	r26, r16
    2168:	b1 07       	cpc	r27, r17
    216a:	08 f0       	brcs	.+2      	; 0x216e <loop+0x1ea>
    216c:	20 e0       	ldi	r18, 0x00	; 0
    216e:	22 23       	and	r18, r18
    2170:	09 f4       	brne	.+2      	; 0x2174 <loop+0x1f0>
    2172:	b3 c1       	rjmp	.+870    	; 0x24da <loop+0x556>
    2174:	90 91 ea 03 	lds	r25, 0x03EA	; 0x8003ea <MOVE_TO_END>
    2178:	81 e0       	ldi	r24, 0x01	; 1
    217a:	89 27       	eor	r24, r25
    217c:	88 23       	and	r24, r24
    217e:	09 f4       	brne	.+2      	; 0x2182 <loop+0x1fe>
    2180:	40 c1       	rjmp	.+640    	; 0x2402 <loop+0x47e>
    2182:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <INNER_TRAVERSE_OFFSET>
    2186:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <INNER_TRAVERSE_OFFSET+0x1>
    218a:	a0 91 b8 01 	lds	r26, 0x01B8	; 0x8001b8 <INNER_TRAVERSE_OFFSET+0x2>
    218e:	b0 91 b9 01 	lds	r27, 0x01B9	; 0x8001b9 <INNER_TRAVERSE_OFFSET+0x3>
    2192:	bc 01       	movw	r22, r24
    2194:	cd 01       	movw	r24, r26
    2196:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <_Z9MMToStepsm>
    219a:	dc 01       	movw	r26, r24
    219c:	cb 01       	movw	r24, r22
    219e:	9c 01       	movw	r18, r24
    21a0:	ad 01       	movw	r20, r26
    21a2:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <STEPS>
    21a6:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <STEPS+0x1>
    21aa:	a0 91 de 03 	lds	r26, 0x03DE	; 0x8003de <STEPS+0x2>
    21ae:	b0 91 df 03 	lds	r27, 0x03DF	; 0x8003df <STEPS+0x3>
    21b2:	61 e0       	ldi	r22, 0x01	; 1
    21b4:	82 17       	cp	r24, r18
    21b6:	93 07       	cpc	r25, r19
    21b8:	a4 07       	cpc	r26, r20
    21ba:	b5 07       	cpc	r27, r21
    21bc:	0c f0       	brlt	.+2      	; 0x21c0 <loop+0x23c>
    21be:	60 e0       	ldi	r22, 0x00	; 0
    21c0:	66 23       	and	r22, r22
    21c2:	51 f1       	breq	.+84     	; 0x2218 <loop+0x294>
    21c4:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <INNER_TRAVERSE_OFFSET>
    21c8:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <INNER_TRAVERSE_OFFSET+0x1>
    21cc:	a0 91 b8 01 	lds	r26, 0x01B8	; 0x8001b8 <INNER_TRAVERSE_OFFSET+0x2>
    21d0:	b0 91 b9 01 	lds	r27, 0x01B9	; 0x8001b9 <INNER_TRAVERSE_OFFSET+0x3>
    21d4:	bc 01       	movw	r22, r24
    21d6:	cd 01       	movw	r24, r26
    21d8:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <_Z9MMToStepsm>
    21dc:	dc 01       	movw	r26, r24
    21de:	cb 01       	movw	r24, r22
    21e0:	28 e5       	ldi	r18, 0x58	; 88
    21e2:	32 e0       	ldi	r19, 0x02	; 2
    21e4:	40 e0       	ldi	r20, 0x00	; 0
    21e6:	50 e0       	ldi	r21, 0x00	; 0
    21e8:	bc 01       	movw	r22, r24
    21ea:	cd 01       	movw	r24, r26
    21ec:	0e 94 2b 13 	call	0x2656	; 0x2656 <_Z20MoveAbsolutePositionmm>
    21f0:	81 e0       	ldi	r24, 0x01	; 1
    21f2:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <TRAVERSE_DIRECTION>
    21f6:	10 92 d0 03 	sts	0x03D0, r1	; 0x8003d0 <previousSpoolTicks>
    21fa:	10 92 d1 03 	sts	0x03D1, r1	; 0x8003d1 <previousSpoolTicks+0x1>
    21fe:	10 92 d2 03 	sts	0x03D2, r1	; 0x8003d2 <previousSpoolTicks+0x2>
    2202:	10 92 d3 03 	sts	0x03D3, r1	; 0x8003d3 <previousSpoolTicks+0x3>
    2206:	10 92 cc 03 	sts	0x03CC, r1	; 0x8003cc <totalspoolTicks>
    220a:	10 92 cd 03 	sts	0x03CD, r1	; 0x8003cd <totalspoolTicks+0x1>
    220e:	10 92 ce 03 	sts	0x03CE, r1	; 0x8003ce <totalspoolTicks+0x2>
    2212:	10 92 cf 03 	sts	0x03CF, r1	; 0x8003cf <totalspoolTicks+0x3>
    2216:	55 c1       	rjmp	.+682    	; 0x24c2 <loop+0x53e>
    2218:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <FILAMENT_DIAMETER>
    221c:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <FILAMENT_DIAMETER+0x1>
    2220:	a0 91 c0 01 	lds	r26, 0x01C0	; 0x8001c0 <FILAMENT_DIAMETER+0x2>
    2224:	b0 91 c1 01 	lds	r27, 0x01C1	; 0x8001c1 <FILAMENT_DIAMETER+0x3>
    2228:	bc 01       	movw	r22, r24
    222a:	cd 01       	movw	r24, r26
    222c:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <_Z9MMToStepsm>
    2230:	dc 01       	movw	r26, r24
    2232:	cb 01       	movw	r24, r22
    2234:	24 e6       	ldi	r18, 0x64	; 100
    2236:	30 e0       	ldi	r19, 0x00	; 0
    2238:	40 e0       	ldi	r20, 0x00	; 0
    223a:	50 e0       	ldi	r21, 0x00	; 0
    223c:	bc 01       	movw	r22, r24
    223e:	cd 01       	movw	r24, r26
    2240:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__udivmodsi4>
    2244:	da 01       	movw	r26, r20
    2246:	c9 01       	movw	r24, r18
    2248:	89 83       	std	Y+1, r24	; 0x01
    224a:	9a 83       	std	Y+2, r25	; 0x02
    224c:	ab 83       	std	Y+3, r26	; 0x03
    224e:	bc 83       	std	Y+4, r27	; 0x04
    2250:	20 91 cc 03 	lds	r18, 0x03CC	; 0x8003cc <totalspoolTicks>
    2254:	30 91 cd 03 	lds	r19, 0x03CD	; 0x8003cd <totalspoolTicks+0x1>
    2258:	40 91 ce 03 	lds	r20, 0x03CE	; 0x8003ce <totalspoolTicks+0x2>
    225c:	50 91 cf 03 	lds	r21, 0x03CF	; 0x8003cf <totalspoolTicks+0x3>
    2260:	80 91 d0 03 	lds	r24, 0x03D0	; 0x8003d0 <previousSpoolTicks>
    2264:	90 91 d1 03 	lds	r25, 0x03D1	; 0x8003d1 <previousSpoolTicks+0x1>
    2268:	a0 91 d2 03 	lds	r26, 0x03D2	; 0x8003d2 <previousSpoolTicks+0x2>
    226c:	b0 91 d3 03 	lds	r27, 0x03D3	; 0x8003d3 <previousSpoolTicks+0x3>
    2270:	79 01       	movw	r14, r18
    2272:	8a 01       	movw	r16, r20
    2274:	e8 1a       	sub	r14, r24
    2276:	f9 0a       	sbc	r15, r25
    2278:	0a 0b       	sbc	r16, r26
    227a:	1b 0b       	sbc	r17, r27
    227c:	d8 01       	movw	r26, r16
    227e:	c7 01       	movw	r24, r14
    2280:	8d 83       	std	Y+5, r24	; 0x05
    2282:	9e 83       	std	Y+6, r25	; 0x06
    2284:	af 83       	std	Y+7, r26	; 0x07
    2286:	b8 87       	std	Y+8, r27	; 0x08
    2288:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <TRAVERSE_DIRECTION>
    228c:	81 e0       	ldi	r24, 0x01	; 1
    228e:	91 30       	cpi	r25, 0x01	; 1
    2290:	09 f0       	breq	.+2      	; 0x2294 <loop+0x310>
    2292:	80 e0       	ldi	r24, 0x00	; 0
    2294:	88 23       	and	r24, r24
    2296:	89 f1       	breq	.+98     	; 0x22fa <loop+0x376>
    2298:	80 91 e8 03 	lds	r24, 0x03E8	; 0x8003e8 <SPOOLRPM>
    229c:	90 91 e9 03 	lds	r25, 0x03E9	; 0x8003e9 <SPOOLRPM+0x1>
    22a0:	cc 01       	movw	r24, r24
    22a2:	a0 e0       	ldi	r26, 0x00	; 0
    22a4:	b0 e0       	ldi	r27, 0x00	; 0
    22a6:	bc 01       	movw	r22, r24
    22a8:	cd 01       	movw	r24, r26
    22aa:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <__floatunsisf>
    22ae:	dc 01       	movw	r26, r24
    22b0:	cb 01       	movw	r24, r22
    22b2:	20 e0       	ldi	r18, 0x00	; 0
    22b4:	30 e0       	ldi	r19, 0x00	; 0
    22b6:	40 ee       	ldi	r20, 0xE0	; 224
    22b8:	5f e3       	ldi	r21, 0x3F	; 63
    22ba:	bc 01       	movw	r22, r24
    22bc:	cd 01       	movw	r24, r26
    22be:	0e 94 4c 17 	call	0x2e98	; 0x2e98 <__mulsf3>
    22c2:	dc 01       	movw	r26, r24
    22c4:	cb 01       	movw	r24, r22
    22c6:	bc 01       	movw	r22, r24
    22c8:	cd 01       	movw	r24, r26
    22ca:	0e 94 88 16 	call	0x2d10	; 0x2d10 <__fixsfsi>
    22ce:	7b 01       	movw	r14, r22
    22d0:	8c 01       	movw	r16, r24
    22d2:	2d 81       	ldd	r18, Y+5	; 0x05
    22d4:	3e 81       	ldd	r19, Y+6	; 0x06
    22d6:	4f 81       	ldd	r20, Y+7	; 0x07
    22d8:	58 85       	ldd	r21, Y+8	; 0x08
    22da:	89 81       	ldd	r24, Y+1	; 0x01
    22dc:	9a 81       	ldd	r25, Y+2	; 0x02
    22de:	ab 81       	ldd	r26, Y+3	; 0x03
    22e0:	bc 81       	ldd	r27, Y+4	; 0x04
    22e2:	bc 01       	movw	r22, r24
    22e4:	cd 01       	movw	r24, r26
    22e6:	0e 94 d1 1b 	call	0x37a2	; 0x37a2 <__mulsi3>
    22ea:	dc 01       	movw	r26, r24
    22ec:	cb 01       	movw	r24, r22
    22ee:	a8 01       	movw	r20, r16
    22f0:	97 01       	movw	r18, r14
    22f2:	bc 01       	movw	r22, r24
    22f4:	cd 01       	movw	r24, r26
    22f6:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <_Z20MoveRelativePositionll>
    22fa:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <TRAVERSE_DIRECTION>
    22fe:	81 e0       	ldi	r24, 0x01	; 1
    2300:	99 23       	and	r25, r25
    2302:	09 f0       	breq	.+2      	; 0x2306 <loop+0x382>
    2304:	80 e0       	ldi	r24, 0x00	; 0
    2306:	88 23       	and	r24, r24
    2308:	c1 f1       	breq	.+112    	; 0x237a <loop+0x3f6>
    230a:	80 91 e8 03 	lds	r24, 0x03E8	; 0x8003e8 <SPOOLRPM>
    230e:	90 91 e9 03 	lds	r25, 0x03E9	; 0x8003e9 <SPOOLRPM+0x1>
    2312:	cc 01       	movw	r24, r24
    2314:	a0 e0       	ldi	r26, 0x00	; 0
    2316:	b0 e0       	ldi	r27, 0x00	; 0
    2318:	bc 01       	movw	r22, r24
    231a:	cd 01       	movw	r24, r26
    231c:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <__floatunsisf>
    2320:	dc 01       	movw	r26, r24
    2322:	cb 01       	movw	r24, r22
    2324:	20 e0       	ldi	r18, 0x00	; 0
    2326:	30 e0       	ldi	r19, 0x00	; 0
    2328:	40 ee       	ldi	r20, 0xE0	; 224
    232a:	5f e3       	ldi	r21, 0x3F	; 63
    232c:	bc 01       	movw	r22, r24
    232e:	cd 01       	movw	r24, r26
    2330:	0e 94 4c 17 	call	0x2e98	; 0x2e98 <__mulsf3>
    2334:	dc 01       	movw	r26, r24
    2336:	cb 01       	movw	r24, r22
    2338:	bc 01       	movw	r22, r24
    233a:	cd 01       	movw	r24, r26
    233c:	0e 94 88 16 	call	0x2d10	; 0x2d10 <__fixsfsi>
    2340:	7b 01       	movw	r14, r22
    2342:	8c 01       	movw	r16, r24
    2344:	2d 81       	ldd	r18, Y+5	; 0x05
    2346:	3e 81       	ldd	r19, Y+6	; 0x06
    2348:	4f 81       	ldd	r20, Y+7	; 0x07
    234a:	58 85       	ldd	r21, Y+8	; 0x08
    234c:	89 81       	ldd	r24, Y+1	; 0x01
    234e:	9a 81       	ldd	r25, Y+2	; 0x02
    2350:	ab 81       	ldd	r26, Y+3	; 0x03
    2352:	bc 81       	ldd	r27, Y+4	; 0x04
    2354:	bc 01       	movw	r22, r24
    2356:	cd 01       	movw	r24, r26
    2358:	0e 94 d1 1b 	call	0x37a2	; 0x37a2 <__mulsi3>
    235c:	dc 01       	movw	r26, r24
    235e:	cb 01       	movw	r24, r22
    2360:	b0 95       	com	r27
    2362:	a0 95       	com	r26
    2364:	90 95       	com	r25
    2366:	81 95       	neg	r24
    2368:	9f 4f       	sbci	r25, 0xFF	; 255
    236a:	af 4f       	sbci	r26, 0xFF	; 255
    236c:	bf 4f       	sbci	r27, 0xFF	; 255
    236e:	a8 01       	movw	r20, r16
    2370:	97 01       	movw	r18, r14
    2372:	bc 01       	movw	r22, r24
    2374:	cd 01       	movw	r24, r26
    2376:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <_Z20MoveRelativePositionll>
    237a:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <INNER_TRAVERSE_OFFSET>
    237e:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <INNER_TRAVERSE_OFFSET+0x1>
    2382:	a0 91 b8 01 	lds	r26, 0x01B8	; 0x8001b8 <INNER_TRAVERSE_OFFSET+0x2>
    2386:	b0 91 b9 01 	lds	r27, 0x01B9	; 0x8001b9 <INNER_TRAVERSE_OFFSET+0x3>
    238a:	bc 01       	movw	r22, r24
    238c:	cd 01       	movw	r24, r26
    238e:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <_Z9MMToStepsm>
    2392:	6b 01       	movw	r12, r22
    2394:	7c 01       	movw	r14, r24
    2396:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <SPOOL_WIDTH>
    239a:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <SPOOL_WIDTH+0x1>
    239e:	a0 91 bc 01 	lds	r26, 0x01BC	; 0x8001bc <SPOOL_WIDTH+0x2>
    23a2:	b0 91 bd 01 	lds	r27, 0x01BD	; 0x8001bd <SPOOL_WIDTH+0x3>
    23a6:	bc 01       	movw	r22, r24
    23a8:	cd 01       	movw	r24, r26
    23aa:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <_Z9MMToStepsm>
    23ae:	dc 01       	movw	r26, r24
    23b0:	cb 01       	movw	r24, r22
    23b2:	8c 0d       	add	r24, r12
    23b4:	9d 1d       	adc	r25, r13
    23b6:	ae 1d       	adc	r26, r14
    23b8:	bf 1d       	adc	r27, r15
    23ba:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <STEPS>
    23be:	30 91 dd 03 	lds	r19, 0x03DD	; 0x8003dd <STEPS+0x1>
    23c2:	40 91 de 03 	lds	r20, 0x03DE	; 0x8003de <STEPS+0x2>
    23c6:	50 91 df 03 	lds	r21, 0x03DF	; 0x8003df <STEPS+0x3>
    23ca:	61 e0       	ldi	r22, 0x01	; 1
    23cc:	28 17       	cp	r18, r24
    23ce:	39 07       	cpc	r19, r25
    23d0:	4a 07       	cpc	r20, r26
    23d2:	5b 07       	cpc	r21, r27
    23d4:	08 f4       	brcc	.+2      	; 0x23d8 <loop+0x454>
    23d6:	60 e0       	ldi	r22, 0x00	; 0
    23d8:	66 23       	and	r22, r22
    23da:	11 f0       	breq	.+4      	; 0x23e0 <loop+0x45c>
    23dc:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <TRAVERSE_DIRECTION>
    23e0:	80 91 cc 03 	lds	r24, 0x03CC	; 0x8003cc <totalspoolTicks>
    23e4:	90 91 cd 03 	lds	r25, 0x03CD	; 0x8003cd <totalspoolTicks+0x1>
    23e8:	a0 91 ce 03 	lds	r26, 0x03CE	; 0x8003ce <totalspoolTicks+0x2>
    23ec:	b0 91 cf 03 	lds	r27, 0x03CF	; 0x8003cf <totalspoolTicks+0x3>
    23f0:	80 93 d0 03 	sts	0x03D0, r24	; 0x8003d0 <previousSpoolTicks>
    23f4:	90 93 d1 03 	sts	0x03D1, r25	; 0x8003d1 <previousSpoolTicks+0x1>
    23f8:	a0 93 d2 03 	sts	0x03D2, r26	; 0x8003d2 <previousSpoolTicks+0x2>
    23fc:	b0 93 d3 03 	sts	0x03D3, r27	; 0x8003d3 <previousSpoolTicks+0x3>
    2400:	60 c0       	rjmp	.+192    	; 0x24c2 <loop+0x53e>
    2402:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <SPOOL_WIDTH>
    2406:	30 91 bb 01 	lds	r19, 0x01BB	; 0x8001bb <SPOOL_WIDTH+0x1>
    240a:	40 91 bc 01 	lds	r20, 0x01BC	; 0x8001bc <SPOOL_WIDTH+0x2>
    240e:	50 91 bd 01 	lds	r21, 0x01BD	; 0x8001bd <SPOOL_WIDTH+0x3>
    2412:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <INNER_TRAVERSE_OFFSET>
    2416:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <INNER_TRAVERSE_OFFSET+0x1>
    241a:	a0 91 b8 01 	lds	r26, 0x01B8	; 0x8001b8 <INNER_TRAVERSE_OFFSET+0x2>
    241e:	b0 91 b9 01 	lds	r27, 0x01B9	; 0x8001b9 <INNER_TRAVERSE_OFFSET+0x3>
    2422:	82 0f       	add	r24, r18
    2424:	93 1f       	adc	r25, r19
    2426:	a4 1f       	adc	r26, r20
    2428:	b5 1f       	adc	r27, r21
    242a:	bc 01       	movw	r22, r24
    242c:	cd 01       	movw	r24, r26
    242e:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <_Z9MMToStepsm>
    2432:	dc 01       	movw	r26, r24
    2434:	cb 01       	movw	r24, r22
    2436:	28 e5       	ldi	r18, 0x58	; 88
    2438:	32 e0       	ldi	r19, 0x02	; 2
    243a:	40 e0       	ldi	r20, 0x00	; 0
    243c:	50 e0       	ldi	r21, 0x00	; 0
    243e:	bc 01       	movw	r22, r24
    2440:	cd 01       	movw	r24, r26
    2442:	0e 94 2b 13 	call	0x2656	; 0x2656 <_Z20MoveAbsolutePositionmm>
    2446:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <STEPS>
    244a:	30 91 dd 03 	lds	r19, 0x03DD	; 0x8003dd <STEPS+0x1>
    244e:	40 91 de 03 	lds	r20, 0x03DE	; 0x8003de <STEPS+0x2>
    2452:	50 91 df 03 	lds	r21, 0x03DF	; 0x8003df <STEPS+0x3>
    2456:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    245a:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    245e:	a0 91 e2 03 	lds	r26, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    2462:	b0 91 e3 03 	lds	r27, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    2466:	61 e0       	ldi	r22, 0x01	; 1
    2468:	28 17       	cp	r18, r24
    246a:	39 07       	cpc	r19, r25
    246c:	4a 07       	cpc	r20, r26
    246e:	5b 07       	cpc	r21, r27
    2470:	09 f4       	brne	.+2      	; 0x2474 <loop+0x4f0>
    2472:	60 e0       	ldi	r22, 0x00	; 0
    2474:	66 23       	and	r22, r22
    2476:	19 f1       	breq	.+70     	; 0x24be <loop+0x53a>
    2478:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <SPOOL_WIDTH>
    247c:	30 91 bb 01 	lds	r19, 0x01BB	; 0x8001bb <SPOOL_WIDTH+0x1>
    2480:	40 91 bc 01 	lds	r20, 0x01BC	; 0x8001bc <SPOOL_WIDTH+0x2>
    2484:	50 91 bd 01 	lds	r21, 0x01BD	; 0x8001bd <SPOOL_WIDTH+0x3>
    2488:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <INNER_TRAVERSE_OFFSET>
    248c:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <INNER_TRAVERSE_OFFSET+0x1>
    2490:	a0 91 b8 01 	lds	r26, 0x01B8	; 0x8001b8 <INNER_TRAVERSE_OFFSET+0x2>
    2494:	b0 91 b9 01 	lds	r27, 0x01B9	; 0x8001b9 <INNER_TRAVERSE_OFFSET+0x3>
    2498:	82 0f       	add	r24, r18
    249a:	93 1f       	adc	r25, r19
    249c:	a4 1f       	adc	r26, r20
    249e:	b5 1f       	adc	r27, r21
    24a0:	bc 01       	movw	r22, r24
    24a2:	cd 01       	movw	r24, r26
    24a4:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <_Z9MMToStepsm>
    24a8:	dc 01       	movw	r26, r24
    24aa:	cb 01       	movw	r24, r22
    24ac:	28 e5       	ldi	r18, 0x58	; 88
    24ae:	32 e0       	ldi	r19, 0x02	; 2
    24b0:	40 e0       	ldi	r20, 0x00	; 0
    24b2:	50 e0       	ldi	r21, 0x00	; 0
    24b4:	bc 01       	movw	r22, r24
    24b6:	cd 01       	movw	r24, r26
    24b8:	0e 94 2b 13 	call	0x2656	; 0x2656 <_Z20MoveAbsolutePositionmm>
    24bc:	c4 cf       	rjmp	.-120    	; 0x2446 <loop+0x4c2>
    24be:	10 92 ea 03 	sts	0x03EA, r1	; 0x8003ea <MOVE_TO_END>
    24c2:	0e 94 4e 1b 	call	0x369c	; 0x369c <millis>
    24c6:	dc 01       	movw	r26, r24
    24c8:	cb 01       	movw	r24, r22
    24ca:	80 93 c4 03 	sts	0x03C4, r24	; 0x8003c4 <previousFullAutoTime>
    24ce:	90 93 c5 03 	sts	0x03C5, r25	; 0x8003c5 <previousFullAutoTime+0x1>
    24d2:	a0 93 c6 03 	sts	0x03C6, r26	; 0x8003c6 <previousFullAutoTime+0x2>
    24d6:	b0 93 c7 03 	sts	0x03C7, r27	; 0x8003c7 <previousFullAutoTime+0x3>
    24da:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <RUN_MODE>
    24de:	81 e0       	ldi	r24, 0x01	; 1
    24e0:	99 23       	and	r25, r25
    24e2:	09 f0       	breq	.+2      	; 0x24e6 <loop+0x562>
    24e4:	80 e0       	ldi	r24, 0x00	; 0
    24e6:	88 23       	and	r24, r24
    24e8:	41 f0       	breq	.+16     	; 0x24fa <loop+0x576>
    24ea:	68 e5       	ldi	r22, 0x58	; 88
    24ec:	72 e0       	ldi	r23, 0x02	; 2
    24ee:	80 e0       	ldi	r24, 0x00	; 0
    24f0:	90 e0       	ldi	r25, 0x00	; 0
    24f2:	0e 94 81 15 	call	0x2b02	; 0x2b02 <_Z16Set_Traverse_RPMl>
    24f6:	0e 94 97 13 	call	0x272e	; 0x272e <_Z4homev>
    24fa:	80 91 eb 03 	lds	r24, 0x03EB	; 0x8003eb <tickFlag>
    24fe:	88 23       	and	r24, r24
    2500:	e9 f4       	brne	.+58     	; 0x253c <loop+0x5b8>
    2502:	0e 94 4e 1b 	call	0x369c	; 0x369c <millis>
    2506:	7b 01       	movw	r14, r22
    2508:	8c 01       	movw	r16, r24
    250a:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <spoolUpdateInterval>
    250e:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <spoolUpdateInterval+0x1>
    2512:	9c 01       	movw	r18, r24
    2514:	99 0f       	add	r25, r25
    2516:	44 0b       	sbc	r20, r20
    2518:	55 0b       	sbc	r21, r21
    251a:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <previousSpoolTime>
    251e:	90 91 c9 03 	lds	r25, 0x03C9	; 0x8003c9 <previousSpoolTime+0x1>
    2522:	a0 91 ca 03 	lds	r26, 0x03CA	; 0x8003ca <previousSpoolTime+0x2>
    2526:	b0 91 cb 03 	lds	r27, 0x03CB	; 0x8003cb <previousSpoolTime+0x3>
    252a:	82 0f       	add	r24, r18
    252c:	93 1f       	adc	r25, r19
    252e:	a4 1f       	adc	r26, r20
    2530:	b5 1f       	adc	r27, r21
    2532:	8e 15       	cp	r24, r14
    2534:	9f 05       	cpc	r25, r15
    2536:	a0 07       	cpc	r26, r16
    2538:	b1 07       	cpc	r27, r17
    253a:	10 f4       	brcc	.+4      	; 0x2540 <loop+0x5bc>
    253c:	81 e0       	ldi	r24, 0x01	; 1
    253e:	01 c0       	rjmp	.+2      	; 0x2542 <loop+0x5be>
    2540:	80 e0       	ldi	r24, 0x00	; 0
    2542:	88 23       	and	r24, r24
    2544:	09 f4       	brne	.+2      	; 0x2548 <loop+0x5c4>
    2546:	57 c0       	rjmp	.+174    	; 0x25f6 <loop+0x672>
    2548:	0e 94 4e 1b 	call	0x369c	; 0x369c <millis>
    254c:	9b 01       	movw	r18, r22
    254e:	ac 01       	movw	r20, r24
    2550:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <previousSpoolTime>
    2554:	90 91 c9 03 	lds	r25, 0x03C9	; 0x8003c9 <previousSpoolTime+0x1>
    2558:	a0 91 ca 03 	lds	r26, 0x03CA	; 0x8003ca <previousSpoolTime+0x2>
    255c:	b0 91 cb 03 	lds	r27, 0x03CB	; 0x8003cb <previousSpoolTime+0x3>
    2560:	79 01       	movw	r14, r18
    2562:	8a 01       	movw	r16, r20
    2564:	e8 1a       	sub	r14, r24
    2566:	f9 0a       	sbc	r15, r25
    2568:	0a 0b       	sbc	r16, r26
    256a:	1b 0b       	sbc	r17, r27
    256c:	d8 01       	movw	r26, r16
    256e:	c7 01       	movw	r24, r14
    2570:	89 87       	std	Y+9, r24	; 0x09
    2572:	9a 87       	std	Y+10, r25	; 0x0a
    2574:	ab 87       	std	Y+11, r26	; 0x0b
    2576:	bc 87       	std	Y+12, r27	; 0x0c
    2578:	f8 94       	cli
    257a:	20 91 bc 03 	lds	r18, 0x03BC	; 0x8003bc <spoolPulses>
    257e:	30 91 bd 03 	lds	r19, 0x03BD	; 0x8003bd <spoolPulses+0x1>
    2582:	40 91 be 03 	lds	r20, 0x03BE	; 0x8003be <spoolPulses+0x2>
    2586:	50 91 bf 03 	lds	r21, 0x03BF	; 0x8003bf <spoolPulses+0x3>
    258a:	80 e6       	ldi	r24, 0x60	; 96
    258c:	9a ee       	ldi	r25, 0xEA	; 234
    258e:	dc 01       	movw	r26, r24
    2590:	0e 94 22 1c 	call	0x3844	; 0x3844 <__muluhisi3>
    2594:	dc 01       	movw	r26, r24
    2596:	cb 01       	movw	r24, r22
    2598:	29 85       	ldd	r18, Y+9	; 0x09
    259a:	3a 85       	ldd	r19, Y+10	; 0x0a
    259c:	4b 85       	ldd	r20, Y+11	; 0x0b
    259e:	5c 85       	ldd	r21, Y+12	; 0x0c
    25a0:	bc 01       	movw	r22, r24
    25a2:	cd 01       	movw	r24, r26
    25a4:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__udivmodsi4>
    25a8:	da 01       	movw	r26, r20
    25aa:	c9 01       	movw	r24, r18
    25ac:	24 e6       	ldi	r18, 0x64	; 100
    25ae:	30 e0       	ldi	r19, 0x00	; 0
    25b0:	40 e0       	ldi	r20, 0x00	; 0
    25b2:	50 e0       	ldi	r21, 0x00	; 0
    25b4:	bc 01       	movw	r22, r24
    25b6:	cd 01       	movw	r24, r26
    25b8:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__udivmodsi4>
    25bc:	da 01       	movw	r26, r20
    25be:	c9 01       	movw	r24, r18
    25c0:	90 93 e9 03 	sts	0x03E9, r25	; 0x8003e9 <SPOOLRPM+0x1>
    25c4:	80 93 e8 03 	sts	0x03E8, r24	; 0x8003e8 <SPOOLRPM>
    25c8:	10 92 bc 03 	sts	0x03BC, r1	; 0x8003bc <spoolPulses>
    25cc:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <spoolPulses+0x1>
    25d0:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <spoolPulses+0x2>
    25d4:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <spoolPulses+0x3>
    25d8:	10 92 eb 03 	sts	0x03EB, r1	; 0x8003eb <tickFlag>
    25dc:	78 94       	sei
    25de:	0e 94 4e 1b 	call	0x369c	; 0x369c <millis>
    25e2:	dc 01       	movw	r26, r24
    25e4:	cb 01       	movw	r24, r22
    25e6:	80 93 c8 03 	sts	0x03C8, r24	; 0x8003c8 <previousSpoolTime>
    25ea:	90 93 c9 03 	sts	0x03C9, r25	; 0x8003c9 <previousSpoolTime+0x1>
    25ee:	a0 93 ca 03 	sts	0x03CA, r26	; 0x8003ca <previousSpoolTime+0x2>
    25f2:	b0 93 cb 03 	sts	0x03CB, r27	; 0x8003cb <previousSpoolTime+0x3>
    25f6:	00 00       	nop
    25f8:	2c 96       	adiw	r28, 0x0c	; 12
    25fa:	0f b6       	in	r0, 0x3f	; 63
    25fc:	f8 94       	cli
    25fe:	de bf       	out	0x3e, r29	; 62
    2600:	0f be       	out	0x3f, r0	; 63
    2602:	cd bf       	out	0x3d, r28	; 61
    2604:	df 91       	pop	r29
    2606:	cf 91       	pop	r28
    2608:	1f 91       	pop	r17
    260a:	0f 91       	pop	r16
    260c:	ff 90       	pop	r15
    260e:	ef 90       	pop	r14
    2610:	df 90       	pop	r13
    2612:	cf 90       	pop	r12
    2614:	08 95       	ret

00002616 <_Z16ToggleStepOutputv>:
    2616:	cf 93       	push	r28
    2618:	df 93       	push	r29
    261a:	cd b7       	in	r28, 0x3d	; 61
    261c:	de b7       	in	r29, 0x3e	; 62
    261e:	89 e2       	ldi	r24, 0x29	; 41
    2620:	90 e0       	ldi	r25, 0x00	; 0
    2622:	fc 01       	movw	r30, r24
    2624:	80 81       	ld	r24, Z
    2626:	88 2f       	mov	r24, r24
    2628:	90 e0       	ldi	r25, 0x00	; 0
    262a:	88 70       	andi	r24, 0x08	; 8
    262c:	99 27       	eor	r25, r25
    262e:	89 2b       	or	r24, r25
    2630:	19 f4       	brne	.+6      	; 0x2638 <_Z16ToggleStepOutputv+0x22>
    2632:	89 e0       	ldi	r24, 0x09	; 9
    2634:	90 e0       	ldi	r25, 0x00	; 0
    2636:	02 c0       	rjmp	.+4      	; 0x263c <_Z16ToggleStepOutputv+0x26>
    2638:	88 e0       	ldi	r24, 0x08	; 8
    263a:	90 e0       	ldi	r25, 0x00	; 0
    263c:	2b e2       	ldi	r18, 0x2B	; 43
    263e:	30 e0       	ldi	r19, 0x00	; 0
    2640:	4b e2       	ldi	r20, 0x2B	; 43
    2642:	50 e0       	ldi	r21, 0x00	; 0
    2644:	fa 01       	movw	r30, r20
    2646:	40 81       	ld	r20, Z
    2648:	84 27       	eor	r24, r20
    264a:	f9 01       	movw	r30, r18
    264c:	80 83       	st	Z, r24
    264e:	00 00       	nop
    2650:	df 91       	pop	r29
    2652:	cf 91       	pop	r28
    2654:	08 95       	ret

00002656 <_Z20MoveAbsolutePositionmm>:
    2656:	cf 93       	push	r28
    2658:	df 93       	push	r29
    265a:	cd b7       	in	r28, 0x3d	; 61
    265c:	de b7       	in	r29, 0x3e	; 62
    265e:	28 97       	sbiw	r28, 0x08	; 8
    2660:	0f b6       	in	r0, 0x3f	; 63
    2662:	f8 94       	cli
    2664:	de bf       	out	0x3e, r29	; 62
    2666:	0f be       	out	0x3f, r0	; 63
    2668:	cd bf       	out	0x3d, r28	; 61
    266a:	69 83       	std	Y+1, r22	; 0x01
    266c:	7a 83       	std	Y+2, r23	; 0x02
    266e:	8b 83       	std	Y+3, r24	; 0x03
    2670:	9c 83       	std	Y+4, r25	; 0x04
    2672:	2d 83       	std	Y+5, r18	; 0x05
    2674:	3e 83       	std	Y+6, r19	; 0x06
    2676:	4f 83       	std	Y+7, r20	; 0x07
    2678:	58 87       	std	Y+8, r21	; 0x08
    267a:	8d 81       	ldd	r24, Y+5	; 0x05
    267c:	9e 81       	ldd	r25, Y+6	; 0x06
    267e:	af 81       	ldd	r26, Y+7	; 0x07
    2680:	b8 85       	ldd	r27, Y+8	; 0x08
    2682:	bc 01       	movw	r22, r24
    2684:	cd 01       	movw	r24, r26
    2686:	0e 94 81 15 	call	0x2b02	; 0x2b02 <_Z16Set_Traverse_RPMl>
    268a:	89 81       	ldd	r24, Y+1	; 0x01
    268c:	9a 81       	ldd	r25, Y+2	; 0x02
    268e:	ab 81       	ldd	r26, Y+3	; 0x03
    2690:	bc 81       	ldd	r27, Y+4	; 0x04
    2692:	80 93 e0 03 	sts	0x03E0, r24	; 0x8003e0 <DESIRED_POSITION>
    2696:	90 93 e1 03 	sts	0x03E1, r25	; 0x8003e1 <DESIRED_POSITION+0x1>
    269a:	a0 93 e2 03 	sts	0x03E2, r26	; 0x8003e2 <DESIRED_POSITION+0x2>
    269e:	b0 93 e3 03 	sts	0x03E3, r27	; 0x8003e3 <DESIRED_POSITION+0x3>
    26a2:	00 00       	nop
    26a4:	28 96       	adiw	r28, 0x08	; 8
    26a6:	0f b6       	in	r0, 0x3f	; 63
    26a8:	f8 94       	cli
    26aa:	de bf       	out	0x3e, r29	; 62
    26ac:	0f be       	out	0x3f, r0	; 63
    26ae:	cd bf       	out	0x3d, r28	; 61
    26b0:	df 91       	pop	r29
    26b2:	cf 91       	pop	r28
    26b4:	08 95       	ret

000026b6 <_Z20MoveRelativePositionll>:
    26b6:	cf 93       	push	r28
    26b8:	df 93       	push	r29
    26ba:	cd b7       	in	r28, 0x3d	; 61
    26bc:	de b7       	in	r29, 0x3e	; 62
    26be:	28 97       	sbiw	r28, 0x08	; 8
    26c0:	0f b6       	in	r0, 0x3f	; 63
    26c2:	f8 94       	cli
    26c4:	de bf       	out	0x3e, r29	; 62
    26c6:	0f be       	out	0x3f, r0	; 63
    26c8:	cd bf       	out	0x3d, r28	; 61
    26ca:	69 83       	std	Y+1, r22	; 0x01
    26cc:	7a 83       	std	Y+2, r23	; 0x02
    26ce:	8b 83       	std	Y+3, r24	; 0x03
    26d0:	9c 83       	std	Y+4, r25	; 0x04
    26d2:	2d 83       	std	Y+5, r18	; 0x05
    26d4:	3e 83       	std	Y+6, r19	; 0x06
    26d6:	4f 83       	std	Y+7, r20	; 0x07
    26d8:	58 87       	std	Y+8, r21	; 0x08
    26da:	8d 81       	ldd	r24, Y+5	; 0x05
    26dc:	9e 81       	ldd	r25, Y+6	; 0x06
    26de:	af 81       	ldd	r26, Y+7	; 0x07
    26e0:	b8 85       	ldd	r27, Y+8	; 0x08
    26e2:	bc 01       	movw	r22, r24
    26e4:	cd 01       	movw	r24, r26
    26e6:	0e 94 81 15 	call	0x2b02	; 0x2b02 <_Z16Set_Traverse_RPMl>
    26ea:	20 91 e0 03 	lds	r18, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    26ee:	30 91 e1 03 	lds	r19, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    26f2:	40 91 e2 03 	lds	r20, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    26f6:	50 91 e3 03 	lds	r21, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    26fa:	89 81       	ldd	r24, Y+1	; 0x01
    26fc:	9a 81       	ldd	r25, Y+2	; 0x02
    26fe:	ab 81       	ldd	r26, Y+3	; 0x03
    2700:	bc 81       	ldd	r27, Y+4	; 0x04
    2702:	82 0f       	add	r24, r18
    2704:	93 1f       	adc	r25, r19
    2706:	a4 1f       	adc	r26, r20
    2708:	b5 1f       	adc	r27, r21
    270a:	80 93 e0 03 	sts	0x03E0, r24	; 0x8003e0 <DESIRED_POSITION>
    270e:	90 93 e1 03 	sts	0x03E1, r25	; 0x8003e1 <DESIRED_POSITION+0x1>
    2712:	a0 93 e2 03 	sts	0x03E2, r26	; 0x8003e2 <DESIRED_POSITION+0x2>
    2716:	b0 93 e3 03 	sts	0x03E3, r27	; 0x8003e3 <DESIRED_POSITION+0x3>
    271a:	00 00       	nop
    271c:	28 96       	adiw	r28, 0x08	; 8
    271e:	0f b6       	in	r0, 0x3f	; 63
    2720:	f8 94       	cli
    2722:	de bf       	out	0x3e, r29	; 62
    2724:	0f be       	out	0x3f, r0	; 63
    2726:	cd bf       	out	0x3d, r28	; 61
    2728:	df 91       	pop	r29
    272a:	cf 91       	pop	r28
    272c:	08 95       	ret

0000272e <_Z4homev>:
    272e:	cf 93       	push	r28
    2730:	df 93       	push	r29
    2732:	cd b7       	in	r28, 0x3d	; 61
    2734:	de b7       	in	r29, 0x3e	; 62
    2736:	10 92 e0 03 	sts	0x03E0, r1	; 0x8003e0 <DESIRED_POSITION>
    273a:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <DESIRED_POSITION+0x1>
    273e:	10 92 e2 03 	sts	0x03E2, r1	; 0x8003e2 <DESIRED_POSITION+0x2>
    2742:	10 92 e3 03 	sts	0x03E3, r1	; 0x8003e3 <DESIRED_POSITION+0x3>
    2746:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <directionInputState>
    274a:	81 e0       	ldi	r24, 0x01	; 1
    274c:	89 27       	eor	r24, r25
    274e:	88 23       	and	r24, r24
    2750:	91 f1       	breq	.+100    	; 0x27b6 <_Z4homev+0x88>
    2752:	89 e2       	ldi	r24, 0x29	; 41
    2754:	90 e0       	ldi	r25, 0x00	; 0
    2756:	fc 01       	movw	r30, r24
    2758:	80 81       	ld	r24, Z
    275a:	88 2f       	mov	r24, r24
    275c:	90 e0       	ldi	r25, 0x00	; 0
    275e:	80 72       	andi	r24, 0x20	; 32
    2760:	99 27       	eor	r25, r25
    2762:	21 e0       	ldi	r18, 0x01	; 1
    2764:	89 2b       	or	r24, r25
    2766:	09 f4       	brne	.+2      	; 0x276a <_Z4homev+0x3c>
    2768:	20 e0       	ldi	r18, 0x00	; 0
    276a:	20 93 bb 03 	sts	0x03BB, r18	; 0x8003bb <directionInputState>
    276e:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <STEPS>
    2772:	30 91 dd 03 	lds	r19, 0x03DD	; 0x8003dd <STEPS+0x1>
    2776:	40 91 de 03 	lds	r20, 0x03DE	; 0x8003de <STEPS+0x2>
    277a:	50 91 df 03 	lds	r21, 0x03DF	; 0x8003df <STEPS+0x3>
    277e:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    2782:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    2786:	a0 91 e2 03 	lds	r26, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    278a:	b0 91 e3 03 	lds	r27, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    278e:	61 e0       	ldi	r22, 0x01	; 1
    2790:	28 17       	cp	r18, r24
    2792:	39 07       	cpc	r19, r25
    2794:	4a 07       	cpc	r20, r26
    2796:	5b 07       	cpc	r21, r27
    2798:	09 f0       	breq	.+2      	; 0x279c <_Z4homev+0x6e>
    279a:	60 e0       	ldi	r22, 0x00	; 0
    279c:	66 23       	and	r22, r22
    279e:	99 f2       	breq	.-90     	; 0x2746 <_Z4homev+0x18>
    27a0:	28 e5       	ldi	r18, 0x58	; 88
    27a2:	32 e0       	ldi	r19, 0x02	; 2
    27a4:	40 e0       	ldi	r20, 0x00	; 0
    27a6:	50 e0       	ldi	r21, 0x00	; 0
    27a8:	6c e9       	ldi	r22, 0x9C	; 156
    27aa:	7f ef       	ldi	r23, 0xFF	; 255
    27ac:	8f ef       	ldi	r24, 0xFF	; 255
    27ae:	9f ef       	ldi	r25, 0xFF	; 255
    27b0:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <_Z20MoveRelativePositionll>
    27b4:	c8 cf       	rjmp	.-112    	; 0x2746 <_Z4homev+0x18>
    27b6:	28 e5       	ldi	r18, 0x58	; 88
    27b8:	32 e0       	ldi	r19, 0x02	; 2
    27ba:	40 e0       	ldi	r20, 0x00	; 0
    27bc:	50 e0       	ldi	r21, 0x00	; 0
    27be:	68 e1       	ldi	r22, 0x18	; 24
    27c0:	7c ef       	ldi	r23, 0xFC	; 252
    27c2:	8f ef       	ldi	r24, 0xFF	; 255
    27c4:	9f ef       	ldi	r25, 0xFF	; 255
    27c6:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <_Z20MoveRelativePositionll>
    27ca:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <STEPS>
    27ce:	30 91 dd 03 	lds	r19, 0x03DD	; 0x8003dd <STEPS+0x1>
    27d2:	40 91 de 03 	lds	r20, 0x03DE	; 0x8003de <STEPS+0x2>
    27d6:	50 91 df 03 	lds	r21, 0x03DF	; 0x8003df <STEPS+0x3>
    27da:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    27de:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    27e2:	a0 91 e2 03 	lds	r26, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    27e6:	b0 91 e3 03 	lds	r27, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    27ea:	61 e0       	ldi	r22, 0x01	; 1
    27ec:	28 17       	cp	r18, r24
    27ee:	39 07       	cpc	r19, r25
    27f0:	4a 07       	cpc	r20, r26
    27f2:	5b 07       	cpc	r21, r27
    27f4:	09 f4       	brne	.+2      	; 0x27f8 <_Z4homev+0xca>
    27f6:	60 e0       	ldi	r22, 0x00	; 0
    27f8:	66 23       	and	r22, r22
    27fa:	09 f0       	breq	.+2      	; 0x27fe <_Z4homev+0xd0>
    27fc:	e6 cf       	rjmp	.-52     	; 0x27ca <_Z4homev+0x9c>
    27fe:	80 91 bb 03 	lds	r24, 0x03BB	; 0x8003bb <directionInputState>
    2802:	88 23       	and	r24, r24
    2804:	91 f1       	breq	.+100    	; 0x286a <_Z4homev+0x13c>
    2806:	89 e2       	ldi	r24, 0x29	; 41
    2808:	90 e0       	ldi	r25, 0x00	; 0
    280a:	fc 01       	movw	r30, r24
    280c:	80 81       	ld	r24, Z
    280e:	88 2f       	mov	r24, r24
    2810:	90 e0       	ldi	r25, 0x00	; 0
    2812:	80 72       	andi	r24, 0x20	; 32
    2814:	99 27       	eor	r25, r25
    2816:	21 e0       	ldi	r18, 0x01	; 1
    2818:	89 2b       	or	r24, r25
    281a:	09 f4       	brne	.+2      	; 0x281e <_Z4homev+0xf0>
    281c:	20 e0       	ldi	r18, 0x00	; 0
    281e:	20 93 bb 03 	sts	0x03BB, r18	; 0x8003bb <directionInputState>
    2822:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <STEPS>
    2826:	30 91 dd 03 	lds	r19, 0x03DD	; 0x8003dd <STEPS+0x1>
    282a:	40 91 de 03 	lds	r20, 0x03DE	; 0x8003de <STEPS+0x2>
    282e:	50 91 df 03 	lds	r21, 0x03DF	; 0x8003df <STEPS+0x3>
    2832:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    2836:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    283a:	a0 91 e2 03 	lds	r26, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    283e:	b0 91 e3 03 	lds	r27, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    2842:	61 e0       	ldi	r22, 0x01	; 1
    2844:	28 17       	cp	r18, r24
    2846:	39 07       	cpc	r19, r25
    2848:	4a 07       	cpc	r20, r26
    284a:	5b 07       	cpc	r21, r27
    284c:	09 f0       	breq	.+2      	; 0x2850 <_Z4homev+0x122>
    284e:	60 e0       	ldi	r22, 0x00	; 0
    2850:	66 23       	and	r22, r22
    2852:	a9 f2       	breq	.-86     	; 0x27fe <_Z4homev+0xd0>
    2854:	28 e5       	ldi	r18, 0x58	; 88
    2856:	32 e0       	ldi	r19, 0x02	; 2
    2858:	40 e0       	ldi	r20, 0x00	; 0
    285a:	50 e0       	ldi	r21, 0x00	; 0
    285c:	64 e6       	ldi	r22, 0x64	; 100
    285e:	70 e0       	ldi	r23, 0x00	; 0
    2860:	80 e0       	ldi	r24, 0x00	; 0
    2862:	90 e0       	ldi	r25, 0x00	; 0
    2864:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <_Z20MoveRelativePositionll>
    2868:	ca cf       	rjmp	.-108    	; 0x27fe <_Z4homev+0xd0>
    286a:	28 e5       	ldi	r18, 0x58	; 88
    286c:	32 e0       	ldi	r19, 0x02	; 2
    286e:	40 e0       	ldi	r20, 0x00	; 0
    2870:	50 e0       	ldi	r21, 0x00	; 0
    2872:	68 e8       	ldi	r22, 0x88	; 136
    2874:	73 e1       	ldi	r23, 0x13	; 19
    2876:	80 e0       	ldi	r24, 0x00	; 0
    2878:	90 e0       	ldi	r25, 0x00	; 0
    287a:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <_Z20MoveRelativePositionll>
    287e:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <STEPS>
    2882:	30 91 dd 03 	lds	r19, 0x03DD	; 0x8003dd <STEPS+0x1>
    2886:	40 91 de 03 	lds	r20, 0x03DE	; 0x8003de <STEPS+0x2>
    288a:	50 91 df 03 	lds	r21, 0x03DF	; 0x8003df <STEPS+0x3>
    288e:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    2892:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    2896:	a0 91 e2 03 	lds	r26, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    289a:	b0 91 e3 03 	lds	r27, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    289e:	61 e0       	ldi	r22, 0x01	; 1
    28a0:	28 17       	cp	r18, r24
    28a2:	39 07       	cpc	r19, r25
    28a4:	4a 07       	cpc	r20, r26
    28a6:	5b 07       	cpc	r21, r27
    28a8:	09 f4       	brne	.+2      	; 0x28ac <_Z4homev+0x17e>
    28aa:	60 e0       	ldi	r22, 0x00	; 0
    28ac:	66 23       	and	r22, r22
    28ae:	09 f0       	breq	.+2      	; 0x28b2 <_Z4homev+0x184>
    28b0:	e6 cf       	rjmp	.-52     	; 0x287e <_Z4homev+0x150>
    28b2:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <directionInputState>
    28b6:	81 e0       	ldi	r24, 0x01	; 1
    28b8:	89 27       	eor	r24, r25
    28ba:	88 23       	and	r24, r24
    28bc:	91 f1       	breq	.+100    	; 0x2922 <_Z4homev+0x1f4>
    28be:	89 e2       	ldi	r24, 0x29	; 41
    28c0:	90 e0       	ldi	r25, 0x00	; 0
    28c2:	fc 01       	movw	r30, r24
    28c4:	80 81       	ld	r24, Z
    28c6:	88 2f       	mov	r24, r24
    28c8:	90 e0       	ldi	r25, 0x00	; 0
    28ca:	80 72       	andi	r24, 0x20	; 32
    28cc:	99 27       	eor	r25, r25
    28ce:	21 e0       	ldi	r18, 0x01	; 1
    28d0:	89 2b       	or	r24, r25
    28d2:	09 f4       	brne	.+2      	; 0x28d6 <_Z4homev+0x1a8>
    28d4:	20 e0       	ldi	r18, 0x00	; 0
    28d6:	20 93 bb 03 	sts	0x03BB, r18	; 0x8003bb <directionInputState>
    28da:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <STEPS>
    28de:	30 91 dd 03 	lds	r19, 0x03DD	; 0x8003dd <STEPS+0x1>
    28e2:	40 91 de 03 	lds	r20, 0x03DE	; 0x8003de <STEPS+0x2>
    28e6:	50 91 df 03 	lds	r21, 0x03DF	; 0x8003df <STEPS+0x3>
    28ea:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    28ee:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    28f2:	a0 91 e2 03 	lds	r26, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    28f6:	b0 91 e3 03 	lds	r27, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    28fa:	61 e0       	ldi	r22, 0x01	; 1
    28fc:	28 17       	cp	r18, r24
    28fe:	39 07       	cpc	r19, r25
    2900:	4a 07       	cpc	r20, r26
    2902:	5b 07       	cpc	r21, r27
    2904:	09 f0       	breq	.+2      	; 0x2908 <_Z4homev+0x1da>
    2906:	60 e0       	ldi	r22, 0x00	; 0
    2908:	66 23       	and	r22, r22
    290a:	99 f2       	breq	.-90     	; 0x28b2 <_Z4homev+0x184>
    290c:	26 e9       	ldi	r18, 0x96	; 150
    290e:	30 e0       	ldi	r19, 0x00	; 0
    2910:	40 e0       	ldi	r20, 0x00	; 0
    2912:	50 e0       	ldi	r21, 0x00	; 0
    2914:	6c e9       	ldi	r22, 0x9C	; 156
    2916:	7f ef       	ldi	r23, 0xFF	; 255
    2918:	8f ef       	ldi	r24, 0xFF	; 255
    291a:	9f ef       	ldi	r25, 0xFF	; 255
    291c:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <_Z20MoveRelativePositionll>
    2920:	c8 cf       	rjmp	.-112    	; 0x28b2 <_Z4homev+0x184>
    2922:	26 e9       	ldi	r18, 0x96	; 150
    2924:	30 e0       	ldi	r19, 0x00	; 0
    2926:	40 e0       	ldi	r20, 0x00	; 0
    2928:	50 e0       	ldi	r21, 0x00	; 0
    292a:	68 e1       	ldi	r22, 0x18	; 24
    292c:	7c ef       	ldi	r23, 0xFC	; 252
    292e:	8f ef       	ldi	r24, 0xFF	; 255
    2930:	9f ef       	ldi	r25, 0xFF	; 255
    2932:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <_Z20MoveRelativePositionll>
    2936:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <STEPS>
    293a:	30 91 dd 03 	lds	r19, 0x03DD	; 0x8003dd <STEPS+0x1>
    293e:	40 91 de 03 	lds	r20, 0x03DE	; 0x8003de <STEPS+0x2>
    2942:	50 91 df 03 	lds	r21, 0x03DF	; 0x8003df <STEPS+0x3>
    2946:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    294a:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    294e:	a0 91 e2 03 	lds	r26, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    2952:	b0 91 e3 03 	lds	r27, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    2956:	61 e0       	ldi	r22, 0x01	; 1
    2958:	28 17       	cp	r18, r24
    295a:	39 07       	cpc	r19, r25
    295c:	4a 07       	cpc	r20, r26
    295e:	5b 07       	cpc	r21, r27
    2960:	09 f4       	brne	.+2      	; 0x2964 <_Z4homev+0x236>
    2962:	60 e0       	ldi	r22, 0x00	; 0
    2964:	66 23       	and	r22, r22
    2966:	09 f0       	breq	.+2      	; 0x296a <_Z4homev+0x23c>
    2968:	e6 cf       	rjmp	.-52     	; 0x2936 <_Z4homev+0x208>
    296a:	80 91 bb 03 	lds	r24, 0x03BB	; 0x8003bb <directionInputState>
    296e:	88 23       	and	r24, r24
    2970:	91 f1       	breq	.+100    	; 0x29d6 <_Z4homev+0x2a8>
    2972:	89 e2       	ldi	r24, 0x29	; 41
    2974:	90 e0       	ldi	r25, 0x00	; 0
    2976:	fc 01       	movw	r30, r24
    2978:	80 81       	ld	r24, Z
    297a:	88 2f       	mov	r24, r24
    297c:	90 e0       	ldi	r25, 0x00	; 0
    297e:	80 72       	andi	r24, 0x20	; 32
    2980:	99 27       	eor	r25, r25
    2982:	21 e0       	ldi	r18, 0x01	; 1
    2984:	89 2b       	or	r24, r25
    2986:	09 f4       	brne	.+2      	; 0x298a <_Z4homev+0x25c>
    2988:	20 e0       	ldi	r18, 0x00	; 0
    298a:	20 93 bb 03 	sts	0x03BB, r18	; 0x8003bb <directionInputState>
    298e:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <STEPS>
    2992:	30 91 dd 03 	lds	r19, 0x03DD	; 0x8003dd <STEPS+0x1>
    2996:	40 91 de 03 	lds	r20, 0x03DE	; 0x8003de <STEPS+0x2>
    299a:	50 91 df 03 	lds	r21, 0x03DF	; 0x8003df <STEPS+0x3>
    299e:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    29a2:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    29a6:	a0 91 e2 03 	lds	r26, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    29aa:	b0 91 e3 03 	lds	r27, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    29ae:	61 e0       	ldi	r22, 0x01	; 1
    29b0:	28 17       	cp	r18, r24
    29b2:	39 07       	cpc	r19, r25
    29b4:	4a 07       	cpc	r20, r26
    29b6:	5b 07       	cpc	r21, r27
    29b8:	09 f0       	breq	.+2      	; 0x29bc <_Z4homev+0x28e>
    29ba:	60 e0       	ldi	r22, 0x00	; 0
    29bc:	66 23       	and	r22, r22
    29be:	a9 f2       	breq	.-86     	; 0x296a <_Z4homev+0x23c>
    29c0:	26 e9       	ldi	r18, 0x96	; 150
    29c2:	30 e0       	ldi	r19, 0x00	; 0
    29c4:	40 e0       	ldi	r20, 0x00	; 0
    29c6:	50 e0       	ldi	r21, 0x00	; 0
    29c8:	64 e6       	ldi	r22, 0x64	; 100
    29ca:	70 e0       	ldi	r23, 0x00	; 0
    29cc:	80 e0       	ldi	r24, 0x00	; 0
    29ce:	90 e0       	ldi	r25, 0x00	; 0
    29d0:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <_Z20MoveRelativePositionll>
    29d4:	ca cf       	rjmp	.-108    	; 0x296a <_Z4homev+0x23c>
    29d6:	26 e9       	ldi	r18, 0x96	; 150
    29d8:	30 e0       	ldi	r19, 0x00	; 0
    29da:	40 e0       	ldi	r20, 0x00	; 0
    29dc:	50 e0       	ldi	r21, 0x00	; 0
    29de:	68 ee       	ldi	r22, 0xE8	; 232
    29e0:	73 e0       	ldi	r23, 0x03	; 3
    29e2:	80 e0       	ldi	r24, 0x00	; 0
    29e4:	90 e0       	ldi	r25, 0x00	; 0
    29e6:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <_Z20MoveRelativePositionll>
    29ea:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <STEPS>
    29ee:	30 91 dd 03 	lds	r19, 0x03DD	; 0x8003dd <STEPS+0x1>
    29f2:	40 91 de 03 	lds	r20, 0x03DE	; 0x8003de <STEPS+0x2>
    29f6:	50 91 df 03 	lds	r21, 0x03DF	; 0x8003df <STEPS+0x3>
    29fa:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <DESIRED_POSITION>
    29fe:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <DESIRED_POSITION+0x1>
    2a02:	a0 91 e2 03 	lds	r26, 0x03E2	; 0x8003e2 <DESIRED_POSITION+0x2>
    2a06:	b0 91 e3 03 	lds	r27, 0x03E3	; 0x8003e3 <DESIRED_POSITION+0x3>
    2a0a:	61 e0       	ldi	r22, 0x01	; 1
    2a0c:	28 17       	cp	r18, r24
    2a0e:	39 07       	cpc	r19, r25
    2a10:	4a 07       	cpc	r20, r26
    2a12:	5b 07       	cpc	r21, r27
    2a14:	09 f4       	brne	.+2      	; 0x2a18 <_Z4homev+0x2ea>
    2a16:	60 e0       	ldi	r22, 0x00	; 0
    2a18:	66 23       	and	r22, r22
    2a1a:	09 f0       	breq	.+2      	; 0x2a1e <_Z4homev+0x2f0>
    2a1c:	e6 cf       	rjmp	.-52     	; 0x29ea <_Z4homev+0x2bc>
    2a1e:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <STEPS>
    2a22:	10 92 dd 03 	sts	0x03DD, r1	; 0x8003dd <STEPS+0x1>
    2a26:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <STEPS+0x2>
    2a2a:	10 92 df 03 	sts	0x03DF, r1	; 0x8003df <STEPS+0x3>
    2a2e:	10 92 e0 03 	sts	0x03E0, r1	; 0x8003e0 <DESIRED_POSITION>
    2a32:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <DESIRED_POSITION+0x1>
    2a36:	10 92 e2 03 	sts	0x03E2, r1	; 0x8003e2 <DESIRED_POSITION+0x2>
    2a3a:	10 92 e3 03 	sts	0x03E3, r1	; 0x8003e3 <DESIRED_POSITION+0x3>
    2a3e:	81 e0       	ldi	r24, 0x01	; 1
    2a40:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <RUN_MODE>
    2a44:	00 00       	nop
    2a46:	df 91       	pop	r29
    2a48:	cf 91       	pop	r28
    2a4a:	08 95       	ret

00002a4c <_Z9MMToStepsm>:

uint32_t MMToSteps(uint32_t mm)
{
    2a4c:	cf 93       	push	r28
    2a4e:	df 93       	push	r29
    2a50:	cd b7       	in	r28, 0x3d	; 61
    2a52:	de b7       	in	r29, 0x3e	; 62
    2a54:	28 97       	sbiw	r28, 0x08	; 8
    2a56:	0f b6       	in	r0, 0x3f	; 63
    2a58:	f8 94       	cli
    2a5a:	de bf       	out	0x3e, r29	; 62
    2a5c:	0f be       	out	0x3f, r0	; 63
    2a5e:	cd bf       	out	0x3d, r28	; 61
    2a60:	6d 83       	std	Y+5, r22	; 0x05
    2a62:	7e 83       	std	Y+6, r23	; 0x06
    2a64:	8f 83       	std	Y+7, r24	; 0x07
    2a66:	98 87       	std	Y+8, r25	; 0x08
	uint32_t position = (mm * 1000) / SCREW_PITCH_MM;
    2a68:	2d 81       	ldd	r18, Y+5	; 0x05
    2a6a:	3e 81       	ldd	r19, Y+6	; 0x06
    2a6c:	4f 81       	ldd	r20, Y+7	; 0x07
    2a6e:	58 85       	ldd	r21, Y+8	; 0x08
    2a70:	88 ee       	ldi	r24, 0xE8	; 232
    2a72:	93 e0       	ldi	r25, 0x03	; 3
    2a74:	dc 01       	movw	r26, r24
    2a76:	0e 94 22 1c 	call	0x3844	; 0x3844 <__muluhisi3>
    2a7a:	dc 01       	movw	r26, r24
    2a7c:	cb 01       	movw	r24, r22
    2a7e:	24 e3       	ldi	r18, 0x34	; 52
    2a80:	36 e0       	ldi	r19, 0x06	; 6
    2a82:	40 e0       	ldi	r20, 0x00	; 0
    2a84:	50 e0       	ldi	r21, 0x00	; 0
    2a86:	bc 01       	movw	r22, r24
    2a88:	cd 01       	movw	r24, r26
    2a8a:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__udivmodsi4>
    2a8e:	da 01       	movw	r26, r20
    2a90:	c9 01       	movw	r24, r18
    2a92:	89 83       	std	Y+1, r24	; 0x01
    2a94:	9a 83       	std	Y+2, r25	; 0x02
    2a96:	ab 83       	std	Y+3, r26	; 0x03
    2a98:	bc 83       	std	Y+4, r27	; 0x04
	position = (position * MOTOR_STEPS_PER_REV) / 1000;
    2a9a:	29 81       	ldd	r18, Y+1	; 0x01
    2a9c:	3a 81       	ldd	r19, Y+2	; 0x02
    2a9e:	4b 81       	ldd	r20, Y+3	; 0x03
    2aa0:	5c 81       	ldd	r21, Y+4	; 0x04
    2aa2:	80 e8       	ldi	r24, 0x80	; 128
    2aa4:	9c e0       	ldi	r25, 0x0C	; 12
    2aa6:	dc 01       	movw	r26, r24
    2aa8:	0e 94 22 1c 	call	0x3844	; 0x3844 <__muluhisi3>
    2aac:	dc 01       	movw	r26, r24
    2aae:	cb 01       	movw	r24, r22
    2ab0:	28 ee       	ldi	r18, 0xE8	; 232
    2ab2:	33 e0       	ldi	r19, 0x03	; 3
    2ab4:	40 e0       	ldi	r20, 0x00	; 0
    2ab6:	50 e0       	ldi	r21, 0x00	; 0
    2ab8:	bc 01       	movw	r22, r24
    2aba:	cd 01       	movw	r24, r26
    2abc:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__udivmodsi4>
    2ac0:	da 01       	movw	r26, r20
    2ac2:	c9 01       	movw	r24, r18
    2ac4:	89 83       	std	Y+1, r24	; 0x01
    2ac6:	9a 83       	std	Y+2, r25	; 0x02
    2ac8:	ab 83       	std	Y+3, r26	; 0x03
    2aca:	bc 83       	std	Y+4, r27	; 0x04
	position = position * 2;
    2acc:	89 81       	ldd	r24, Y+1	; 0x01
    2ace:	9a 81       	ldd	r25, Y+2	; 0x02
    2ad0:	ab 81       	ldd	r26, Y+3	; 0x03
    2ad2:	bc 81       	ldd	r27, Y+4	; 0x04
    2ad4:	88 0f       	add	r24, r24
    2ad6:	99 1f       	adc	r25, r25
    2ad8:	aa 1f       	adc	r26, r26
    2ada:	bb 1f       	adc	r27, r27
    2adc:	89 83       	std	Y+1, r24	; 0x01
    2ade:	9a 83       	std	Y+2, r25	; 0x02
    2ae0:	ab 83       	std	Y+3, r26	; 0x03
    2ae2:	bc 83       	std	Y+4, r27	; 0x04

	return position;
    2ae4:	89 81       	ldd	r24, Y+1	; 0x01
    2ae6:	9a 81       	ldd	r25, Y+2	; 0x02
    2ae8:	ab 81       	ldd	r26, Y+3	; 0x03
    2aea:	bc 81       	ldd	r27, Y+4	; 0x04
}
    2aec:	bc 01       	movw	r22, r24
    2aee:	cd 01       	movw	r24, r26
    2af0:	28 96       	adiw	r28, 0x08	; 8
    2af2:	0f b6       	in	r0, 0x3f	; 63
    2af4:	f8 94       	cli
    2af6:	de bf       	out	0x3e, r29	; 62
    2af8:	0f be       	out	0x3f, r0	; 63
    2afa:	cd bf       	out	0x3d, r28	; 61
    2afc:	df 91       	pop	r29
    2afe:	cf 91       	pop	r28
    2b00:	08 95       	ret

00002b02 <_Z16Set_Traverse_RPMl>:



void Set_Traverse_RPM(long rpm)
{
    2b02:	cf 93       	push	r28
    2b04:	df 93       	push	r29
    2b06:	cd b7       	in	r28, 0x3d	; 61
    2b08:	de b7       	in	r29, 0x3e	; 62
    2b0a:	28 97       	sbiw	r28, 0x08	; 8
    2b0c:	0f b6       	in	r0, 0x3f	; 63
    2b0e:	f8 94       	cli
    2b10:	de bf       	out	0x3e, r29	; 62
    2b12:	0f be       	out	0x3f, r0	; 63
    2b14:	cd bf       	out	0x3d, r28	; 61
    2b16:	6d 83       	std	Y+5, r22	; 0x05
    2b18:	7e 83       	std	Y+6, r23	; 0x06
    2b1a:	8f 83       	std	Y+7, r24	; 0x07
    2b1c:	98 87       	std	Y+8, r25	; 0x08
	
	uint32_t pps = (rpm * MOTOR_STEPS_PER_REV) / 60; // pps is also the frequency, 60 is minutes to seconds
    2b1e:	2d 81       	ldd	r18, Y+5	; 0x05
    2b20:	3e 81       	ldd	r19, Y+6	; 0x06
    2b22:	4f 81       	ldd	r20, Y+7	; 0x07
    2b24:	58 85       	ldd	r21, Y+8	; 0x08
    2b26:	80 e8       	ldi	r24, 0x80	; 128
    2b28:	9c e0       	ldi	r25, 0x0C	; 12
    2b2a:	dc 01       	movw	r26, r24
    2b2c:	0e 94 22 1c 	call	0x3844	; 0x3844 <__muluhisi3>
    2b30:	dc 01       	movw	r26, r24
    2b32:	cb 01       	movw	r24, r22
    2b34:	2c e3       	ldi	r18, 0x3C	; 60
    2b36:	30 e0       	ldi	r19, 0x00	; 0
    2b38:	40 e0       	ldi	r20, 0x00	; 0
    2b3a:	50 e0       	ldi	r21, 0x00	; 0
    2b3c:	bc 01       	movw	r22, r24
    2b3e:	cd 01       	movw	r24, r26
    2b40:	0e 94 03 1c 	call	0x3806	; 0x3806 <__divmodsi4>
    2b44:	da 01       	movw	r26, r20
    2b46:	c9 01       	movw	r24, r18
    2b48:	89 83       	std	Y+1, r24	; 0x01
    2b4a:	9a 83       	std	Y+2, r25	; 0x02
    2b4c:	ab 83       	std	Y+3, r26	; 0x03
    2b4e:	bc 83       	std	Y+4, r27	; 0x04
	pps = pps * 2; //* 2 to get two half period waves
    2b50:	89 81       	ldd	r24, Y+1	; 0x01
    2b52:	9a 81       	ldd	r25, Y+2	; 0x02
    2b54:	ab 81       	ldd	r26, Y+3	; 0x03
    2b56:	bc 81       	ldd	r27, Y+4	; 0x04
    2b58:	88 0f       	add	r24, r24
    2b5a:	99 1f       	adc	r25, r25
    2b5c:	aa 1f       	adc	r26, r26
    2b5e:	bb 1f       	adc	r27, r27
    2b60:	89 83       	std	Y+1, r24	; 0x01
    2b62:	9a 83       	std	Y+2, r25	; 0x02
    2b64:	ab 83       	std	Y+3, r26	; 0x03
    2b66:	bc 83       	std	Y+4, r27	; 0x04
	stepDelay = F_CPU / (1 * pps) - 1;
    2b68:	80 e0       	ldi	r24, 0x00	; 0
    2b6a:	94 e2       	ldi	r25, 0x24	; 36
    2b6c:	a4 ef       	ldi	r26, 0xF4	; 244
    2b6e:	b0 e0       	ldi	r27, 0x00	; 0
    2b70:	29 81       	ldd	r18, Y+1	; 0x01
    2b72:	3a 81       	ldd	r19, Y+2	; 0x02
    2b74:	4b 81       	ldd	r20, Y+3	; 0x03
    2b76:	5c 81       	ldd	r21, Y+4	; 0x04
    2b78:	bc 01       	movw	r22, r24
    2b7a:	cd 01       	movw	r24, r26
    2b7c:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__udivmodsi4>
    2b80:	da 01       	movw	r26, r20
    2b82:	c9 01       	movw	r24, r18
    2b84:	01 97       	sbiw	r24, 0x01	; 1
    2b86:	a1 09       	sbc	r26, r1
    2b88:	b1 09       	sbc	r27, r1
    2b8a:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <stepDelay>
    2b8e:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <stepDelay+0x1>
    2b92:	a0 93 b0 01 	sts	0x01B0, r26	; 0x8001b0 <stepDelay+0x2>
    2b96:	b0 93 b1 01 	sts	0x01B1, r27	; 0x8001b1 <stepDelay+0x3>
	}
    2b9a:	00 00       	nop
    2b9c:	28 96       	adiw	r28, 0x08	; 8
    2b9e:	0f b6       	in	r0, 0x3f	; 63
    2ba0:	f8 94       	cli
    2ba2:	de bf       	out	0x3e, r29	; 62
    2ba4:	0f be       	out	0x3f, r0	; 63
    2ba6:	cd bf       	out	0x3d, r28	; 61
    2ba8:	df 91       	pop	r29
    2baa:	cf 91       	pop	r28
    2bac:	08 95       	ret

00002bae <_Z41__static_initialization_and_destruction_0ii>:
    2bae:	cf 93       	push	r28
    2bb0:	df 93       	push	r29
    2bb2:	00 d0       	rcall	.+0      	; 0x2bb4 <_Z41__static_initialization_and_destruction_0ii+0x6>
    2bb4:	00 d0       	rcall	.+0      	; 0x2bb6 <_Z41__static_initialization_and_destruction_0ii+0x8>
    2bb6:	cd b7       	in	r28, 0x3d	; 61
    2bb8:	de b7       	in	r29, 0x3e	; 62
    2bba:	9a 83       	std	Y+2, r25	; 0x02
    2bbc:	89 83       	std	Y+1, r24	; 0x01
    2bbe:	7c 83       	std	Y+4, r23	; 0x04
    2bc0:	6b 83       	std	Y+3, r22	; 0x03
    2bc2:	89 81       	ldd	r24, Y+1	; 0x01
    2bc4:	9a 81       	ldd	r25, Y+2	; 0x02
    2bc6:	01 97       	sbiw	r24, 0x01	; 1
    2bc8:	c1 f5       	brne	.+112    	; 0x2c3a <_Z41__static_initialization_and_destruction_0ii+0x8c>
    2bca:	8b 81       	ldd	r24, Y+3	; 0x03
    2bcc:	9c 81       	ldd	r25, Y+4	; 0x04
    2bce:	01 96       	adiw	r24, 0x01	; 1
    2bd0:	a1 f5       	brne	.+104    	; 0x2c3a <_Z41__static_initialization_and_destruction_0ii+0x8c>



int spoolUpdateInterval = 2000;
int fullAutoUpdateInterval = 50;
long previousFullAutoTime = fullAutoUpdateInterval;
    2bd2:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <fullAutoUpdateInterval>
    2bd6:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <fullAutoUpdateInterval+0x1>
    2bda:	09 2e       	mov	r0, r25
    2bdc:	00 0c       	add	r0, r0
    2bde:	aa 0b       	sbc	r26, r26
    2be0:	bb 0b       	sbc	r27, r27
    2be2:	80 93 c4 03 	sts	0x03C4, r24	; 0x8003c4 <previousFullAutoTime>
    2be6:	90 93 c5 03 	sts	0x03C5, r25	; 0x8003c5 <previousFullAutoTime+0x1>
    2bea:	a0 93 c6 03 	sts	0x03C6, r26	; 0x8003c6 <previousFullAutoTime+0x2>
    2bee:	b0 93 c7 03 	sts	0x03C7, r27	; 0x8003c7 <previousFullAutoTime+0x3>
long previousSpoolTime = spoolUpdateInterval;
    2bf2:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <spoolUpdateInterval>
    2bf6:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <spoolUpdateInterval+0x1>
    2bfa:	09 2e       	mov	r0, r25
    2bfc:	00 0c       	add	r0, r0
    2bfe:	aa 0b       	sbc	r26, r26
    2c00:	bb 0b       	sbc	r27, r27
    2c02:	80 93 c8 03 	sts	0x03C8, r24	; 0x8003c8 <previousSpoolTime>
    2c06:	90 93 c9 03 	sts	0x03C9, r25	; 0x8003c9 <previousSpoolTime+0x1>
    2c0a:	a0 93 ca 03 	sts	0x03CA, r26	; 0x8003ca <previousSpoolTime+0x2>
    2c0e:	b0 93 cb 03 	sts	0x03CB, r27	; 0x8003cb <previousSpoolTime+0x3>
uint32_t serialTimerMillis = 1000; //Serial output scheduler delay time
uint32_t serialTimerPreviousMillis = 0; //Current delay time
volatile uint32_t totalspoolTicks = 0;
volatile uint32_t previousSpoolTicks = 0;
static unsigned long last_millis = 0;
unsigned long m = millis();
    2c12:	0e 94 4e 1b 	call	0x369c	; 0x369c <millis>
    2c16:	dc 01       	movw	r26, r24
    2c18:	cb 01       	movw	r24, r22
    2c1a:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <m>
    2c1e:	90 93 d9 03 	sts	0x03D9, r25	; 0x8003d9 <m+0x1>
    2c22:	a0 93 da 03 	sts	0x03DA, r26	; 0x8003da <m+0x2>
    2c26:	b0 93 db 03 	sts	0x03DB, r27	; 0x8003db <m+0x3>
volatile bool potEnabled = true;
#else
volatile bool potEnabled = false;
#endif

Serial_Commands _Serial_Commands;
    2c2a:	8c ee       	ldi	r24, 0xEC	; 236
    2c2c:	93 e0       	ldi	r25, 0x03	; 3
    2c2e:	0e 94 a8 06 	call	0xd50	; 0xd50 <_ZN15Serial_CommandsC1Ev>
Math_Helpers _Math_Helpers;
    2c32:	8d ee       	ldi	r24, 0xED	; 237
    2c34:	93 e0       	ldi	r25, 0x03	; 3
    2c36:	0e 94 cb 00 	call	0x196	; 0x196 <_ZN12Math_HelpersC1Ev>
    2c3a:	89 81       	ldd	r24, Y+1	; 0x01
    2c3c:	9a 81       	ldd	r25, Y+2	; 0x02
    2c3e:	89 2b       	or	r24, r25
    2c40:	61 f4       	brne	.+24     	; 0x2c5a <_Z41__static_initialization_and_destruction_0ii+0xac>
    2c42:	8b 81       	ldd	r24, Y+3	; 0x03
    2c44:	9c 81       	ldd	r25, Y+4	; 0x04
    2c46:	01 96       	adiw	r24, 0x01	; 1
    2c48:	41 f4       	brne	.+16     	; 0x2c5a <_Z41__static_initialization_and_destruction_0ii+0xac>
    2c4a:	8d ee       	ldi	r24, 0xED	; 237
    2c4c:	93 e0       	ldi	r25, 0x03	; 3
    2c4e:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <_ZN12Math_HelpersD1Ev>
volatile bool potEnabled = true;
#else
volatile bool potEnabled = false;
#endif

Serial_Commands _Serial_Commands;
    2c52:	8c ee       	ldi	r24, 0xEC	; 236
    2c54:	93 e0       	ldi	r25, 0x03	; 3
    2c56:	0e 94 b5 06 	call	0xd6a	; 0xd6a <_ZN15Serial_CommandsD1Ev>
{
	
	uint32_t pps = (rpm * MOTOR_STEPS_PER_REV) / 60; // pps is also the frequency, 60 is minutes to seconds
	pps = pps * 2; //* 2 to get two half period waves
	stepDelay = F_CPU / (1 * pps) - 1;
	}
    2c5a:	00 00       	nop
    2c5c:	0f 90       	pop	r0
    2c5e:	0f 90       	pop	r0
    2c60:	0f 90       	pop	r0
    2c62:	0f 90       	pop	r0
    2c64:	df 91       	pop	r29
    2c66:	cf 91       	pop	r28
    2c68:	08 95       	ret

00002c6a <_GLOBAL__sub_I_pcmsk>:
    2c6a:	cf 93       	push	r28
    2c6c:	df 93       	push	r29
    2c6e:	cd b7       	in	r28, 0x3d	; 61
    2c70:	de b7       	in	r29, 0x3e	; 62
    2c72:	6f ef       	ldi	r22, 0xFF	; 255
    2c74:	7f ef       	ldi	r23, 0xFF	; 255
    2c76:	81 e0       	ldi	r24, 0x01	; 1
    2c78:	90 e0       	ldi	r25, 0x00	; 0
    2c7a:	0e 94 d7 15 	call	0x2bae	; 0x2bae <_Z41__static_initialization_and_destruction_0ii>
    2c7e:	df 91       	pop	r29
    2c80:	cf 91       	pop	r28
    2c82:	08 95       	ret

00002c84 <_GLOBAL__sub_D_pcmsk>:
    2c84:	cf 93       	push	r28
    2c86:	df 93       	push	r29
    2c88:	cd b7       	in	r28, 0x3d	; 61
    2c8a:	de b7       	in	r29, 0x3e	; 62
    2c8c:	6f ef       	ldi	r22, 0xFF	; 255
    2c8e:	7f ef       	ldi	r23, 0xFF	; 255
    2c90:	80 e0       	ldi	r24, 0x00	; 0
    2c92:	90 e0       	ldi	r25, 0x00	; 0
    2c94:	0e 94 d7 15 	call	0x2bae	; 0x2bae <_Z41__static_initialization_and_destruction_0ii>
    2c98:	df 91       	pop	r29
    2c9a:	cf 91       	pop	r28
    2c9c:	08 95       	ret

00002c9e <_ZN25Step_Output_ConfigurationC1Ev>:
#include <Arduino.h>
#include "Step_Output_Configuration.h"


// default constructor
Step_Output_Configuration::Step_Output_Configuration()
    2c9e:	cf 93       	push	r28
    2ca0:	df 93       	push	r29
    2ca2:	00 d0       	rcall	.+0      	; 0x2ca4 <_ZN25Step_Output_ConfigurationC1Ev+0x6>
    2ca4:	cd b7       	in	r28, 0x3d	; 61
    2ca6:	de b7       	in	r29, 0x3e	; 62
    2ca8:	9a 83       	std	Y+2, r25	; 0x02
    2caa:	89 83       	std	Y+1, r24	; 0x01
{
} //Step_Output_Configuration
    2cac:	00 00       	nop
    2cae:	0f 90       	pop	r0
    2cb0:	0f 90       	pop	r0
    2cb2:	df 91       	pop	r29
    2cb4:	cf 91       	pop	r28
    2cb6:	08 95       	ret

00002cb8 <_ZN25Step_Output_Configuration15SetupStepOutputEv>:

void Step_Output_Configuration::SetupStepOutput(void)
{
    2cb8:	cf 93       	push	r28
    2cba:	df 93       	push	r29
    2cbc:	cd b7       	in	r28, 0x3d	; 61
    2cbe:	de b7       	in	r29, 0x3e	; 62
  //normal mode
  TCCR1A = 0x00;
    2cc0:	80 e8       	ldi	r24, 0x80	; 128
    2cc2:	90 e0       	ldi	r25, 0x00	; 0
    2cc4:	fc 01       	movw	r30, r24
    2cc6:	10 82       	st	Z, r1
  OCR1A   = 0;
    2cc8:	88 e8       	ldi	r24, 0x88	; 136
    2cca:	90 e0       	ldi	r25, 0x00	; 0
    2ccc:	fc 01       	movw	r30, r24
    2cce:	11 82       	std	Z+1, r1	; 0x01
    2cd0:	10 82       	st	Z, r1
  TCCR1B = (1<<CS10);
    2cd2:	81 e8       	ldi	r24, 0x81	; 129
    2cd4:	90 e0       	ldi	r25, 0x00	; 0
    2cd6:	21 e0       	ldi	r18, 0x01	; 1
    2cd8:	fc 01       	movw	r30, r24
    2cda:	20 83       	st	Z, r18
  TIMSK1 |= bit (TOIE1);
    2cdc:	8f e6       	ldi	r24, 0x6F	; 111
    2cde:	90 e0       	ldi	r25, 0x00	; 0
    2ce0:	2f e6       	ldi	r18, 0x6F	; 111
    2ce2:	30 e0       	ldi	r19, 0x00	; 0
    2ce4:	f9 01       	movw	r30, r18
    2ce6:	20 81       	ld	r18, Z
    2ce8:	21 60       	ori	r18, 0x01	; 1
    2cea:	fc 01       	movw	r30, r24
    2cec:	20 83       	st	Z, r18
}
    2cee:	00 00       	nop
    2cf0:	df 91       	pop	r29
    2cf2:	cf 91       	pop	r28
    2cf4:	08 95       	ret

00002cf6 <_ZN25Step_Output_ConfigurationD1Ev>:

// default destructor
Step_Output_Configuration::~Step_Output_Configuration()
    2cf6:	cf 93       	push	r28
    2cf8:	df 93       	push	r29
    2cfa:	00 d0       	rcall	.+0      	; 0x2cfc <_ZN25Step_Output_ConfigurationD1Ev+0x6>
    2cfc:	cd b7       	in	r28, 0x3d	; 61
    2cfe:	de b7       	in	r29, 0x3e	; 62
    2d00:	9a 83       	std	Y+2, r25	; 0x02
    2d02:	89 83       	std	Y+1, r24	; 0x01
{
} //~Step_Output_Configuration
    2d04:	00 00       	nop
    2d06:	0f 90       	pop	r0
    2d08:	0f 90       	pop	r0
    2d0a:	df 91       	pop	r29
    2d0c:	cf 91       	pop	r28
    2d0e:	08 95       	ret

00002d10 <__fixsfsi>:
    2d10:	0e 94 8f 16 	call	0x2d1e	; 0x2d1e <__fixunssfsi>
    2d14:	68 94       	set
    2d16:	b1 11       	cpse	r27, r1
    2d18:	0c 94 46 17 	jmp	0x2e8c	; 0x2e8c <__fp_szero>
    2d1c:	08 95       	ret

00002d1e <__fixunssfsi>:
    2d1e:	0e 94 2b 17 	call	0x2e56	; 0x2e56 <__fp_splitA>
    2d22:	88 f0       	brcs	.+34     	; 0x2d46 <__fixunssfsi+0x28>
    2d24:	9f 57       	subi	r25, 0x7F	; 127
    2d26:	98 f0       	brcs	.+38     	; 0x2d4e <__fixunssfsi+0x30>
    2d28:	b9 2f       	mov	r27, r25
    2d2a:	99 27       	eor	r25, r25
    2d2c:	b7 51       	subi	r27, 0x17	; 23
    2d2e:	b0 f0       	brcs	.+44     	; 0x2d5c <__fixunssfsi+0x3e>
    2d30:	e1 f0       	breq	.+56     	; 0x2d6a <__fixunssfsi+0x4c>
    2d32:	66 0f       	add	r22, r22
    2d34:	77 1f       	adc	r23, r23
    2d36:	88 1f       	adc	r24, r24
    2d38:	99 1f       	adc	r25, r25
    2d3a:	1a f0       	brmi	.+6      	; 0x2d42 <__fixunssfsi+0x24>
    2d3c:	ba 95       	dec	r27
    2d3e:	c9 f7       	brne	.-14     	; 0x2d32 <__fixunssfsi+0x14>
    2d40:	14 c0       	rjmp	.+40     	; 0x2d6a <__fixunssfsi+0x4c>
    2d42:	b1 30       	cpi	r27, 0x01	; 1
    2d44:	91 f0       	breq	.+36     	; 0x2d6a <__fixunssfsi+0x4c>
    2d46:	0e 94 45 17 	call	0x2e8a	; 0x2e8a <__fp_zero>
    2d4a:	b1 e0       	ldi	r27, 0x01	; 1
    2d4c:	08 95       	ret
    2d4e:	0c 94 45 17 	jmp	0x2e8a	; 0x2e8a <__fp_zero>
    2d52:	67 2f       	mov	r22, r23
    2d54:	78 2f       	mov	r23, r24
    2d56:	88 27       	eor	r24, r24
    2d58:	b8 5f       	subi	r27, 0xF8	; 248
    2d5a:	39 f0       	breq	.+14     	; 0x2d6a <__fixunssfsi+0x4c>
    2d5c:	b9 3f       	cpi	r27, 0xF9	; 249
    2d5e:	cc f3       	brlt	.-14     	; 0x2d52 <__fixunssfsi+0x34>
    2d60:	86 95       	lsr	r24
    2d62:	77 95       	ror	r23
    2d64:	67 95       	ror	r22
    2d66:	b3 95       	inc	r27
    2d68:	d9 f7       	brne	.-10     	; 0x2d60 <__fixunssfsi+0x42>
    2d6a:	3e f4       	brtc	.+14     	; 0x2d7a <__fixunssfsi+0x5c>
    2d6c:	90 95       	com	r25
    2d6e:	80 95       	com	r24
    2d70:	70 95       	com	r23
    2d72:	61 95       	neg	r22
    2d74:	7f 4f       	sbci	r23, 0xFF	; 255
    2d76:	8f 4f       	sbci	r24, 0xFF	; 255
    2d78:	9f 4f       	sbci	r25, 0xFF	; 255
    2d7a:	08 95       	ret

00002d7c <__floatunsisf>:
    2d7c:	e8 94       	clt
    2d7e:	09 c0       	rjmp	.+18     	; 0x2d92 <__floatsisf+0x12>

00002d80 <__floatsisf>:
    2d80:	97 fb       	bst	r25, 7
    2d82:	3e f4       	brtc	.+14     	; 0x2d92 <__floatsisf+0x12>
    2d84:	90 95       	com	r25
    2d86:	80 95       	com	r24
    2d88:	70 95       	com	r23
    2d8a:	61 95       	neg	r22
    2d8c:	7f 4f       	sbci	r23, 0xFF	; 255
    2d8e:	8f 4f       	sbci	r24, 0xFF	; 255
    2d90:	9f 4f       	sbci	r25, 0xFF	; 255
    2d92:	99 23       	and	r25, r25
    2d94:	a9 f0       	breq	.+42     	; 0x2dc0 <__floatsisf+0x40>
    2d96:	f9 2f       	mov	r31, r25
    2d98:	96 e9       	ldi	r25, 0x96	; 150
    2d9a:	bb 27       	eor	r27, r27
    2d9c:	93 95       	inc	r25
    2d9e:	f6 95       	lsr	r31
    2da0:	87 95       	ror	r24
    2da2:	77 95       	ror	r23
    2da4:	67 95       	ror	r22
    2da6:	b7 95       	ror	r27
    2da8:	f1 11       	cpse	r31, r1
    2daa:	f8 cf       	rjmp	.-16     	; 0x2d9c <__floatsisf+0x1c>
    2dac:	fa f4       	brpl	.+62     	; 0x2dec <__floatsisf+0x6c>
    2dae:	bb 0f       	add	r27, r27
    2db0:	11 f4       	brne	.+4      	; 0x2db6 <__floatsisf+0x36>
    2db2:	60 ff       	sbrs	r22, 0
    2db4:	1b c0       	rjmp	.+54     	; 0x2dec <__floatsisf+0x6c>
    2db6:	6f 5f       	subi	r22, 0xFF	; 255
    2db8:	7f 4f       	sbci	r23, 0xFF	; 255
    2dba:	8f 4f       	sbci	r24, 0xFF	; 255
    2dbc:	9f 4f       	sbci	r25, 0xFF	; 255
    2dbe:	16 c0       	rjmp	.+44     	; 0x2dec <__floatsisf+0x6c>
    2dc0:	88 23       	and	r24, r24
    2dc2:	11 f0       	breq	.+4      	; 0x2dc8 <__floatsisf+0x48>
    2dc4:	96 e9       	ldi	r25, 0x96	; 150
    2dc6:	11 c0       	rjmp	.+34     	; 0x2dea <__floatsisf+0x6a>
    2dc8:	77 23       	and	r23, r23
    2dca:	21 f0       	breq	.+8      	; 0x2dd4 <__floatsisf+0x54>
    2dcc:	9e e8       	ldi	r25, 0x8E	; 142
    2dce:	87 2f       	mov	r24, r23
    2dd0:	76 2f       	mov	r23, r22
    2dd2:	05 c0       	rjmp	.+10     	; 0x2dde <__floatsisf+0x5e>
    2dd4:	66 23       	and	r22, r22
    2dd6:	71 f0       	breq	.+28     	; 0x2df4 <__floatsisf+0x74>
    2dd8:	96 e8       	ldi	r25, 0x86	; 134
    2dda:	86 2f       	mov	r24, r22
    2ddc:	70 e0       	ldi	r23, 0x00	; 0
    2dde:	60 e0       	ldi	r22, 0x00	; 0
    2de0:	2a f0       	brmi	.+10     	; 0x2dec <__floatsisf+0x6c>
    2de2:	9a 95       	dec	r25
    2de4:	66 0f       	add	r22, r22
    2de6:	77 1f       	adc	r23, r23
    2de8:	88 1f       	adc	r24, r24
    2dea:	da f7       	brpl	.-10     	; 0x2de2 <__floatsisf+0x62>
    2dec:	88 0f       	add	r24, r24
    2dee:	96 95       	lsr	r25
    2df0:	87 95       	ror	r24
    2df2:	97 f9       	bld	r25, 7
    2df4:	08 95       	ret

00002df6 <__fp_inf>:
    2df6:	97 f9       	bld	r25, 7
    2df8:	9f 67       	ori	r25, 0x7F	; 127
    2dfa:	80 e8       	ldi	r24, 0x80	; 128
    2dfc:	70 e0       	ldi	r23, 0x00	; 0
    2dfe:	60 e0       	ldi	r22, 0x00	; 0
    2e00:	08 95       	ret

00002e02 <__fp_nan>:
    2e02:	9f ef       	ldi	r25, 0xFF	; 255
    2e04:	80 ec       	ldi	r24, 0xC0	; 192
    2e06:	08 95       	ret

00002e08 <__fp_pscA>:
    2e08:	00 24       	eor	r0, r0
    2e0a:	0a 94       	dec	r0
    2e0c:	16 16       	cp	r1, r22
    2e0e:	17 06       	cpc	r1, r23
    2e10:	18 06       	cpc	r1, r24
    2e12:	09 06       	cpc	r0, r25
    2e14:	08 95       	ret

00002e16 <__fp_pscB>:
    2e16:	00 24       	eor	r0, r0
    2e18:	0a 94       	dec	r0
    2e1a:	12 16       	cp	r1, r18
    2e1c:	13 06       	cpc	r1, r19
    2e1e:	14 06       	cpc	r1, r20
    2e20:	05 06       	cpc	r0, r21
    2e22:	08 95       	ret

00002e24 <__fp_round>:
    2e24:	09 2e       	mov	r0, r25
    2e26:	03 94       	inc	r0
    2e28:	00 0c       	add	r0, r0
    2e2a:	11 f4       	brne	.+4      	; 0x2e30 <__fp_round+0xc>
    2e2c:	88 23       	and	r24, r24
    2e2e:	52 f0       	brmi	.+20     	; 0x2e44 <__fp_round+0x20>
    2e30:	bb 0f       	add	r27, r27
    2e32:	40 f4       	brcc	.+16     	; 0x2e44 <__fp_round+0x20>
    2e34:	bf 2b       	or	r27, r31
    2e36:	11 f4       	brne	.+4      	; 0x2e3c <__fp_round+0x18>
    2e38:	60 ff       	sbrs	r22, 0
    2e3a:	04 c0       	rjmp	.+8      	; 0x2e44 <__fp_round+0x20>
    2e3c:	6f 5f       	subi	r22, 0xFF	; 255
    2e3e:	7f 4f       	sbci	r23, 0xFF	; 255
    2e40:	8f 4f       	sbci	r24, 0xFF	; 255
    2e42:	9f 4f       	sbci	r25, 0xFF	; 255
    2e44:	08 95       	ret

00002e46 <__fp_split3>:
    2e46:	57 fd       	sbrc	r21, 7
    2e48:	90 58       	subi	r25, 0x80	; 128
    2e4a:	44 0f       	add	r20, r20
    2e4c:	55 1f       	adc	r21, r21
    2e4e:	59 f0       	breq	.+22     	; 0x2e66 <__fp_splitA+0x10>
    2e50:	5f 3f       	cpi	r21, 0xFF	; 255
    2e52:	71 f0       	breq	.+28     	; 0x2e70 <__fp_splitA+0x1a>
    2e54:	47 95       	ror	r20

00002e56 <__fp_splitA>:
    2e56:	88 0f       	add	r24, r24
    2e58:	97 fb       	bst	r25, 7
    2e5a:	99 1f       	adc	r25, r25
    2e5c:	61 f0       	breq	.+24     	; 0x2e76 <__fp_splitA+0x20>
    2e5e:	9f 3f       	cpi	r25, 0xFF	; 255
    2e60:	79 f0       	breq	.+30     	; 0x2e80 <__fp_splitA+0x2a>
    2e62:	87 95       	ror	r24
    2e64:	08 95       	ret
    2e66:	12 16       	cp	r1, r18
    2e68:	13 06       	cpc	r1, r19
    2e6a:	14 06       	cpc	r1, r20
    2e6c:	55 1f       	adc	r21, r21
    2e6e:	f2 cf       	rjmp	.-28     	; 0x2e54 <__fp_split3+0xe>
    2e70:	46 95       	lsr	r20
    2e72:	f1 df       	rcall	.-30     	; 0x2e56 <__fp_splitA>
    2e74:	08 c0       	rjmp	.+16     	; 0x2e86 <__fp_splitA+0x30>
    2e76:	16 16       	cp	r1, r22
    2e78:	17 06       	cpc	r1, r23
    2e7a:	18 06       	cpc	r1, r24
    2e7c:	99 1f       	adc	r25, r25
    2e7e:	f1 cf       	rjmp	.-30     	; 0x2e62 <__fp_splitA+0xc>
    2e80:	86 95       	lsr	r24
    2e82:	71 05       	cpc	r23, r1
    2e84:	61 05       	cpc	r22, r1
    2e86:	08 94       	sec
    2e88:	08 95       	ret

00002e8a <__fp_zero>:
    2e8a:	e8 94       	clt

00002e8c <__fp_szero>:
    2e8c:	bb 27       	eor	r27, r27
    2e8e:	66 27       	eor	r22, r22
    2e90:	77 27       	eor	r23, r23
    2e92:	cb 01       	movw	r24, r22
    2e94:	97 f9       	bld	r25, 7
    2e96:	08 95       	ret

00002e98 <__mulsf3>:
    2e98:	0e 94 5f 17 	call	0x2ebe	; 0x2ebe <__mulsf3x>
    2e9c:	0c 94 12 17 	jmp	0x2e24	; 0x2e24 <__fp_round>
    2ea0:	0e 94 04 17 	call	0x2e08	; 0x2e08 <__fp_pscA>
    2ea4:	38 f0       	brcs	.+14     	; 0x2eb4 <__mulsf3+0x1c>
    2ea6:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <__fp_pscB>
    2eaa:	20 f0       	brcs	.+8      	; 0x2eb4 <__mulsf3+0x1c>
    2eac:	95 23       	and	r25, r21
    2eae:	11 f0       	breq	.+4      	; 0x2eb4 <__mulsf3+0x1c>
    2eb0:	0c 94 fb 16 	jmp	0x2df6	; 0x2df6 <__fp_inf>
    2eb4:	0c 94 01 17 	jmp	0x2e02	; 0x2e02 <__fp_nan>
    2eb8:	11 24       	eor	r1, r1
    2eba:	0c 94 46 17 	jmp	0x2e8c	; 0x2e8c <__fp_szero>

00002ebe <__mulsf3x>:
    2ebe:	0e 94 23 17 	call	0x2e46	; 0x2e46 <__fp_split3>
    2ec2:	70 f3       	brcs	.-36     	; 0x2ea0 <__mulsf3+0x8>

00002ec4 <__mulsf3_pse>:
    2ec4:	95 9f       	mul	r25, r21
    2ec6:	c1 f3       	breq	.-16     	; 0x2eb8 <__mulsf3+0x20>
    2ec8:	95 0f       	add	r25, r21
    2eca:	50 e0       	ldi	r21, 0x00	; 0
    2ecc:	55 1f       	adc	r21, r21
    2ece:	62 9f       	mul	r22, r18
    2ed0:	f0 01       	movw	r30, r0
    2ed2:	72 9f       	mul	r23, r18
    2ed4:	bb 27       	eor	r27, r27
    2ed6:	f0 0d       	add	r31, r0
    2ed8:	b1 1d       	adc	r27, r1
    2eda:	63 9f       	mul	r22, r19
    2edc:	aa 27       	eor	r26, r26
    2ede:	f0 0d       	add	r31, r0
    2ee0:	b1 1d       	adc	r27, r1
    2ee2:	aa 1f       	adc	r26, r26
    2ee4:	64 9f       	mul	r22, r20
    2ee6:	66 27       	eor	r22, r22
    2ee8:	b0 0d       	add	r27, r0
    2eea:	a1 1d       	adc	r26, r1
    2eec:	66 1f       	adc	r22, r22
    2eee:	82 9f       	mul	r24, r18
    2ef0:	22 27       	eor	r18, r18
    2ef2:	b0 0d       	add	r27, r0
    2ef4:	a1 1d       	adc	r26, r1
    2ef6:	62 1f       	adc	r22, r18
    2ef8:	73 9f       	mul	r23, r19
    2efa:	b0 0d       	add	r27, r0
    2efc:	a1 1d       	adc	r26, r1
    2efe:	62 1f       	adc	r22, r18
    2f00:	83 9f       	mul	r24, r19
    2f02:	a0 0d       	add	r26, r0
    2f04:	61 1d       	adc	r22, r1
    2f06:	22 1f       	adc	r18, r18
    2f08:	74 9f       	mul	r23, r20
    2f0a:	33 27       	eor	r19, r19
    2f0c:	a0 0d       	add	r26, r0
    2f0e:	61 1d       	adc	r22, r1
    2f10:	23 1f       	adc	r18, r19
    2f12:	84 9f       	mul	r24, r20
    2f14:	60 0d       	add	r22, r0
    2f16:	21 1d       	adc	r18, r1
    2f18:	82 2f       	mov	r24, r18
    2f1a:	76 2f       	mov	r23, r22
    2f1c:	6a 2f       	mov	r22, r26
    2f1e:	11 24       	eor	r1, r1
    2f20:	9f 57       	subi	r25, 0x7F	; 127
    2f22:	50 40       	sbci	r21, 0x00	; 0
    2f24:	9a f0       	brmi	.+38     	; 0x2f4c <__mulsf3_pse+0x88>
    2f26:	f1 f0       	breq	.+60     	; 0x2f64 <__mulsf3_pse+0xa0>
    2f28:	88 23       	and	r24, r24
    2f2a:	4a f0       	brmi	.+18     	; 0x2f3e <__mulsf3_pse+0x7a>
    2f2c:	ee 0f       	add	r30, r30
    2f2e:	ff 1f       	adc	r31, r31
    2f30:	bb 1f       	adc	r27, r27
    2f32:	66 1f       	adc	r22, r22
    2f34:	77 1f       	adc	r23, r23
    2f36:	88 1f       	adc	r24, r24
    2f38:	91 50       	subi	r25, 0x01	; 1
    2f3a:	50 40       	sbci	r21, 0x00	; 0
    2f3c:	a9 f7       	brne	.-22     	; 0x2f28 <__mulsf3_pse+0x64>
    2f3e:	9e 3f       	cpi	r25, 0xFE	; 254
    2f40:	51 05       	cpc	r21, r1
    2f42:	80 f0       	brcs	.+32     	; 0x2f64 <__mulsf3_pse+0xa0>
    2f44:	0c 94 fb 16 	jmp	0x2df6	; 0x2df6 <__fp_inf>
    2f48:	0c 94 46 17 	jmp	0x2e8c	; 0x2e8c <__fp_szero>
    2f4c:	5f 3f       	cpi	r21, 0xFF	; 255
    2f4e:	e4 f3       	brlt	.-8      	; 0x2f48 <__mulsf3_pse+0x84>
    2f50:	98 3e       	cpi	r25, 0xE8	; 232
    2f52:	d4 f3       	brlt	.-12     	; 0x2f48 <__mulsf3_pse+0x84>
    2f54:	86 95       	lsr	r24
    2f56:	77 95       	ror	r23
    2f58:	67 95       	ror	r22
    2f5a:	b7 95       	ror	r27
    2f5c:	f7 95       	ror	r31
    2f5e:	e7 95       	ror	r30
    2f60:	9f 5f       	subi	r25, 0xFF	; 255
    2f62:	c1 f7       	brne	.-16     	; 0x2f54 <__mulsf3_pse+0x90>
    2f64:	fe 2b       	or	r31, r30
    2f66:	88 0f       	add	r24, r24
    2f68:	91 1d       	adc	r25, r1
    2f6a:	96 95       	lsr	r25
    2f6c:	87 95       	ror	r24
    2f6e:	97 f9       	bld	r25, 7
    2f70:	08 95       	ret

00002f72 <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    2f72:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    2f74:	91 8d       	ldd	r25, Z+25	; 0x19
    2f76:	22 8d       	ldd	r18, Z+26	; 0x1a
    2f78:	89 2f       	mov	r24, r25
    2f7a:	90 e0       	ldi	r25, 0x00	; 0
    2f7c:	80 5c       	subi	r24, 0xC0	; 192
    2f7e:	9f 4f       	sbci	r25, 0xFF	; 255
    2f80:	82 1b       	sub	r24, r18
    2f82:	91 09       	sbc	r25, r1
}
    2f84:	8f 73       	andi	r24, 0x3F	; 63
    2f86:	99 27       	eor	r25, r25
    2f88:	08 95       	ret

00002f8a <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    2f8a:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    2f8c:	91 8d       	ldd	r25, Z+25	; 0x19
    2f8e:	82 8d       	ldd	r24, Z+26	; 0x1a
    2f90:	98 17       	cp	r25, r24
    2f92:	31 f0       	breq	.+12     	; 0x2fa0 <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    2f94:	82 8d       	ldd	r24, Z+26	; 0x1a
    2f96:	e8 0f       	add	r30, r24
    2f98:	f1 1d       	adc	r31, r1
    2f9a:	85 8d       	ldd	r24, Z+29	; 0x1d
    2f9c:	90 e0       	ldi	r25, 0x00	; 0
    2f9e:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    2fa0:	8f ef       	ldi	r24, 0xFF	; 255
    2fa2:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    2fa4:	08 95       	ret

00002fa6 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    2fa6:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    2fa8:	91 8d       	ldd	r25, Z+25	; 0x19
    2faa:	82 8d       	ldd	r24, Z+26	; 0x1a
    2fac:	98 17       	cp	r25, r24
    2fae:	61 f0       	breq	.+24     	; 0x2fc8 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    2fb0:	82 8d       	ldd	r24, Z+26	; 0x1a
    2fb2:	df 01       	movw	r26, r30
    2fb4:	a8 0f       	add	r26, r24
    2fb6:	b1 1d       	adc	r27, r1
    2fb8:	5d 96       	adiw	r26, 0x1d	; 29
    2fba:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    2fbc:	92 8d       	ldd	r25, Z+26	; 0x1a
    2fbe:	9f 5f       	subi	r25, 0xFF	; 255
    2fc0:	9f 73       	andi	r25, 0x3F	; 63
    2fc2:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    2fc4:	90 e0       	ldi	r25, 0x00	; 0
    2fc6:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    2fc8:	8f ef       	ldi	r24, 0xFF	; 255
    2fca:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    2fcc:	08 95       	ret

00002fce <_ZN14HardwareSerial17availableForWriteEv>:
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    2fce:	fc 01       	movw	r30, r24
    2fd0:	53 8d       	ldd	r21, Z+27	; 0x1b
    tail = _tx_buffer_tail;
    2fd2:	44 8d       	ldd	r20, Z+28	; 0x1c
    2fd4:	25 2f       	mov	r18, r21
    2fd6:	30 e0       	ldi	r19, 0x00	; 0
    2fd8:	84 2f       	mov	r24, r20
    2fda:	90 e0       	ldi	r25, 0x00	; 0
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    2fdc:	82 1b       	sub	r24, r18
    2fde:	93 0b       	sbc	r25, r19
    2fe0:	54 17       	cp	r21, r20
    2fe2:	10 f0       	brcs	.+4      	; 0x2fe8 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    2fe4:	cf 96       	adiw	r24, 0x3f	; 63
    2fe6:	08 95       	ret
  return tail - head - 1;
    2fe8:	01 97       	sbiw	r24, 0x01	; 1
}
    2fea:	08 95       	ret

00002fec <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    2fec:	82 e5       	ldi	r24, 0x52	; 82
    2fee:	99 e1       	ldi	r25, 0x19	; 25
    2ff0:	89 2b       	or	r24, r25
    2ff2:	49 f0       	breq	.+18     	; 0x3006 <_Z14serialEventRunv+0x1a>
    2ff4:	80 e0       	ldi	r24, 0x00	; 0
    2ff6:	90 e0       	ldi	r25, 0x00	; 0
    2ff8:	89 2b       	or	r24, r25
    2ffa:	29 f0       	breq	.+10     	; 0x3006 <_Z14serialEventRunv+0x1a>
    2ffc:	0e 94 52 19 	call	0x32a4	; 0x32a4 <_Z17Serial0_availablev>
    3000:	81 11       	cpse	r24, r1
    3002:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    3006:	08 95       	ret

00003008 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    3008:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    300a:	84 8d       	ldd	r24, Z+28	; 0x1c
    300c:	df 01       	movw	r26, r30
    300e:	a8 0f       	add	r26, r24
    3010:	b1 1d       	adc	r27, r1
    3012:	a3 5a       	subi	r26, 0xA3	; 163
    3014:	bf 4f       	sbci	r27, 0xFF	; 255
    3016:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    3018:	84 8d       	ldd	r24, Z+28	; 0x1c
    301a:	90 e0       	ldi	r25, 0x00	; 0
    301c:	01 96       	adiw	r24, 0x01	; 1
    301e:	8f 73       	andi	r24, 0x3F	; 63
    3020:	99 27       	eor	r25, r25
    3022:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    3024:	a6 89       	ldd	r26, Z+22	; 0x16
    3026:	b7 89       	ldd	r27, Z+23	; 0x17
    3028:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    302a:	a0 89       	ldd	r26, Z+16	; 0x10
    302c:	b1 89       	ldd	r27, Z+17	; 0x11
    302e:	8c 91       	ld	r24, X
    3030:	83 70       	andi	r24, 0x03	; 3
    3032:	80 64       	ori	r24, 0x40	; 64
    3034:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    3036:	93 8d       	ldd	r25, Z+27	; 0x1b
    3038:	84 8d       	ldd	r24, Z+28	; 0x1c
    303a:	98 13       	cpse	r25, r24
    303c:	06 c0       	rjmp	.+12     	; 0x304a <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    303e:	02 88       	ldd	r0, Z+18	; 0x12
    3040:	f3 89       	ldd	r31, Z+19	; 0x13
    3042:	e0 2d       	mov	r30, r0
    3044:	80 81       	ld	r24, Z
    3046:	8f 7d       	andi	r24, 0xDF	; 223
    3048:	80 83       	st	Z, r24
    304a:	08 95       	ret

0000304c <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    304c:	ef 92       	push	r14
    304e:	ff 92       	push	r15
    3050:	0f 93       	push	r16
    3052:	1f 93       	push	r17
    3054:	cf 93       	push	r28
    3056:	df 93       	push	r29
    3058:	ec 01       	movw	r28, r24
  _written = true;
    305a:	81 e0       	ldi	r24, 0x01	; 1
    305c:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    305e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3060:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3062:	98 13       	cpse	r25, r24
    3064:	05 c0       	rjmp	.+10     	; 0x3070 <_ZN14HardwareSerial5writeEh+0x24>
    3066:	e8 89       	ldd	r30, Y+16	; 0x10
    3068:	f9 89       	ldd	r31, Y+17	; 0x11
    306a:	80 81       	ld	r24, Z
    306c:	85 fd       	sbrc	r24, 5
    306e:	26 c0       	rjmp	.+76     	; 0x30bc <_ZN14HardwareSerial5writeEh+0x70>
    3070:	f6 2e       	mov	r15, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    3072:	0b 8d       	ldd	r16, Y+27	; 0x1b
    3074:	10 e0       	ldi	r17, 0x00	; 0
    3076:	0f 5f       	subi	r16, 0xFF	; 255
    3078:	1f 4f       	sbci	r17, 0xFF	; 255
    307a:	0f 73       	andi	r16, 0x3F	; 63
    307c:	11 27       	eor	r17, r17
    307e:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    3080:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3082:	e8 12       	cpse	r14, r24
    3084:	0c c0       	rjmp	.+24     	; 0x309e <_ZN14HardwareSerial5writeEh+0x52>
    if (bit_is_clear(SREG, SREG_I)) {
    3086:	0f b6       	in	r0, 0x3f	; 63
    3088:	07 fc       	sbrc	r0, 7
    308a:	fa cf       	rjmp	.-12     	; 0x3080 <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    308c:	e8 89       	ldd	r30, Y+16	; 0x10
    308e:	f9 89       	ldd	r31, Y+17	; 0x11
    3090:	80 81       	ld	r24, Z
    3092:	85 ff       	sbrs	r24, 5
    3094:	f5 cf       	rjmp	.-22     	; 0x3080 <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    3096:	ce 01       	movw	r24, r28
    3098:	0e 94 04 18 	call	0x3008	; 0x3008 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    309c:	f1 cf       	rjmp	.-30     	; 0x3080 <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    309e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    30a0:	fe 01       	movw	r30, r28
    30a2:	e8 0f       	add	r30, r24
    30a4:	f1 1d       	adc	r31, r1
    30a6:	e3 5a       	subi	r30, 0xA3	; 163
    30a8:	ff 4f       	sbci	r31, 0xFF	; 255
    30aa:	f0 82       	st	Z, r15

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    30ac:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    30ae:	f8 94       	cli
    _tx_buffer_head = i;
    30b0:	0b 8f       	std	Y+27, r16	; 0x1b
    sbi(*_ucsrb, UDRIE0);
    30b2:	ea 89       	ldd	r30, Y+18	; 0x12
    30b4:	fb 89       	ldd	r31, Y+19	; 0x13
    30b6:	80 81       	ld	r24, Z
    30b8:	80 62       	ori	r24, 0x20	; 32
    30ba:	0a c0       	rjmp	.+20     	; 0x30d0 <_ZN14HardwareSerial5writeEh+0x84>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    30bc:	9f b7       	in	r25, 0x3f	; 63
    30be:	f8 94       	cli
      *_udr = c;
    30c0:	ee 89       	ldd	r30, Y+22	; 0x16
    30c2:	ff 89       	ldd	r31, Y+23	; 0x17
    30c4:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    30c6:	e8 89       	ldd	r30, Y+16	; 0x10
    30c8:	f9 89       	ldd	r31, Y+17	; 0x11
    30ca:	80 81       	ld	r24, Z
    30cc:	83 70       	andi	r24, 0x03	; 3
    30ce:	80 64       	ori	r24, 0x40	; 64
    30d0:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    30d2:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
    30d4:	81 e0       	ldi	r24, 0x01	; 1
    30d6:	90 e0       	ldi	r25, 0x00	; 0
    30d8:	df 91       	pop	r29
    30da:	cf 91       	pop	r28
    30dc:	1f 91       	pop	r17
    30de:	0f 91       	pop	r16
    30e0:	ff 90       	pop	r15
    30e2:	ef 90       	pop	r14
    30e4:	08 95       	ret

000030e6 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    30e6:	cf 93       	push	r28
    30e8:	df 93       	push	r29
    30ea:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    30ec:	88 8d       	ldd	r24, Y+24	; 0x18
    30ee:	88 23       	and	r24, r24
    30f0:	c9 f0       	breq	.+50     	; 0x3124 <_ZN14HardwareSerial5flushEv+0x3e>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    30f2:	ea 89       	ldd	r30, Y+18	; 0x12
    30f4:	fb 89       	ldd	r31, Y+19	; 0x13
    30f6:	80 81       	ld	r24, Z
    30f8:	85 fd       	sbrc	r24, 5
    30fa:	05 c0       	rjmp	.+10     	; 0x3106 <_ZN14HardwareSerial5flushEv+0x20>
    30fc:	a8 89       	ldd	r26, Y+16	; 0x10
    30fe:	b9 89       	ldd	r27, Y+17	; 0x11
    3100:	8c 91       	ld	r24, X
    3102:	86 fd       	sbrc	r24, 6
    3104:	0f c0       	rjmp	.+30     	; 0x3124 <_ZN14HardwareSerial5flushEv+0x3e>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    3106:	0f b6       	in	r0, 0x3f	; 63
    3108:	07 fc       	sbrc	r0, 7
    310a:	f5 cf       	rjmp	.-22     	; 0x30f6 <_ZN14HardwareSerial5flushEv+0x10>
    310c:	80 81       	ld	r24, Z
    310e:	85 ff       	sbrs	r24, 5
    3110:	f2 cf       	rjmp	.-28     	; 0x30f6 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    3112:	a8 89       	ldd	r26, Y+16	; 0x10
    3114:	b9 89       	ldd	r27, Y+17	; 0x11
    3116:	8c 91       	ld	r24, X
    3118:	85 ff       	sbrs	r24, 5
    311a:	ed cf       	rjmp	.-38     	; 0x30f6 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    311c:	ce 01       	movw	r24, r28
    311e:	0e 94 04 18 	call	0x3008	; 0x3008 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    3122:	e7 cf       	rjmp	.-50     	; 0x30f2 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    3124:	df 91       	pop	r29
    3126:	cf 91       	pop	r28
    3128:	08 95       	ret

0000312a <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    312a:	cf 92       	push	r12
    312c:	df 92       	push	r13
    312e:	ef 92       	push	r14
    3130:	ff 92       	push	r15
    3132:	1f 93       	push	r17
    3134:	cf 93       	push	r28
    3136:	df 93       	push	r29
    3138:	ec 01       	movw	r28, r24
    313a:	6a 01       	movw	r12, r20
    313c:	7b 01       	movw	r14, r22
    313e:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    3140:	e8 89       	ldd	r30, Y+16	; 0x10
    3142:	f9 89       	ldd	r31, Y+17	; 0x11
    3144:	82 e0       	ldi	r24, 0x02	; 2
    3146:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    3148:	41 15       	cp	r20, r1
    314a:	51 4e       	sbci	r21, 0xE1	; 225
    314c:	61 05       	cpc	r22, r1
    314e:	71 05       	cpc	r23, r1
    3150:	b1 f0       	breq	.+44     	; 0x317e <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    3152:	60 e0       	ldi	r22, 0x00	; 0
    3154:	79 e0       	ldi	r23, 0x09	; 9
    3156:	8d e3       	ldi	r24, 0x3D	; 61
    3158:	90 e0       	ldi	r25, 0x00	; 0
    315a:	a7 01       	movw	r20, r14
    315c:	96 01       	movw	r18, r12
    315e:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__udivmodsi4>
    3162:	da 01       	movw	r26, r20
    3164:	c9 01       	movw	r24, r18
    3166:	01 97       	sbiw	r24, 0x01	; 1
    3168:	a1 09       	sbc	r26, r1
    316a:	b1 09       	sbc	r27, r1
    316c:	b6 95       	lsr	r27
    316e:	a7 95       	ror	r26
    3170:	97 95       	ror	r25
    3172:	87 95       	ror	r24
    3174:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    3176:	21 15       	cp	r18, r1
    3178:	80 e1       	ldi	r24, 0x10	; 16
    317a:	38 07       	cpc	r19, r24
    317c:	a8 f0       	brcs	.+42     	; 0x31a8 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
    317e:	e8 89       	ldd	r30, Y+16	; 0x10
    3180:	f9 89       	ldd	r31, Y+17	; 0x11
    3182:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    3184:	60 e8       	ldi	r22, 0x80	; 128
    3186:	74 e8       	ldi	r23, 0x84	; 132
    3188:	8e e1       	ldi	r24, 0x1E	; 30
    318a:	90 e0       	ldi	r25, 0x00	; 0
    318c:	a7 01       	movw	r20, r14
    318e:	96 01       	movw	r18, r12
    3190:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__udivmodsi4>
    3194:	da 01       	movw	r26, r20
    3196:	c9 01       	movw	r24, r18
    3198:	01 97       	sbiw	r24, 0x01	; 1
    319a:	a1 09       	sbc	r26, r1
    319c:	b1 09       	sbc	r27, r1
    319e:	b6 95       	lsr	r27
    31a0:	a7 95       	ror	r26
    31a2:	97 95       	ror	r25
    31a4:	87 95       	ror	r24
    31a6:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    31a8:	ec 85       	ldd	r30, Y+12	; 0x0c
    31aa:	fd 85       	ldd	r31, Y+13	; 0x0d
    31ac:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    31ae:	ee 85       	ldd	r30, Y+14	; 0x0e
    31b0:	ff 85       	ldd	r31, Y+15	; 0x0f
    31b2:	20 83       	st	Z, r18

  _written = false;
    31b4:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    31b6:	ec 89       	ldd	r30, Y+20	; 0x14
    31b8:	fd 89       	ldd	r31, Y+21	; 0x15
    31ba:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    31bc:	ea 89       	ldd	r30, Y+18	; 0x12
    31be:	fb 89       	ldd	r31, Y+19	; 0x13
    31c0:	80 81       	ld	r24, Z
    31c2:	80 61       	ori	r24, 0x10	; 16
    31c4:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    31c6:	ea 89       	ldd	r30, Y+18	; 0x12
    31c8:	fb 89       	ldd	r31, Y+19	; 0x13
    31ca:	80 81       	ld	r24, Z
    31cc:	88 60       	ori	r24, 0x08	; 8
    31ce:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    31d0:	ea 89       	ldd	r30, Y+18	; 0x12
    31d2:	fb 89       	ldd	r31, Y+19	; 0x13
    31d4:	80 81       	ld	r24, Z
    31d6:	80 68       	ori	r24, 0x80	; 128
    31d8:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    31da:	ea 89       	ldd	r30, Y+18	; 0x12
    31dc:	fb 89       	ldd	r31, Y+19	; 0x13
    31de:	80 81       	ld	r24, Z
    31e0:	8f 7d       	andi	r24, 0xDF	; 223
    31e2:	80 83       	st	Z, r24
}
    31e4:	df 91       	pop	r29
    31e6:	cf 91       	pop	r28
    31e8:	1f 91       	pop	r17
    31ea:	ff 90       	pop	r15
    31ec:	ef 90       	pop	r14
    31ee:	df 90       	pop	r13
    31f0:	cf 90       	pop	r12
    31f2:	08 95       	ret

000031f4 <__vector_18>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    31f4:	1f 92       	push	r1
    31f6:	0f 92       	push	r0
    31f8:	0f b6       	in	r0, 0x3f	; 63
    31fa:	0f 92       	push	r0
    31fc:	11 24       	eor	r1, r1
    31fe:	2f 93       	push	r18
    3200:	8f 93       	push	r24
    3202:	9f 93       	push	r25
    3204:	ef 93       	push	r30
    3206:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    3208:	e0 91 fe 03 	lds	r30, 0x03FE	; 0x8003fe <Serial+0x10>
    320c:	f0 91 ff 03 	lds	r31, 0x03FF	; 0x8003ff <Serial+0x11>
    3210:	80 81       	ld	r24, Z
    3212:	e0 91 04 04 	lds	r30, 0x0404	; 0x800404 <Serial+0x16>
    3216:	f0 91 05 04 	lds	r31, 0x0405	; 0x800405 <Serial+0x17>
    321a:	82 fd       	sbrc	r24, 2
    321c:	12 c0       	rjmp	.+36     	; 0x3242 <__vector_18+0x4e>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    321e:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    3220:	80 91 07 04 	lds	r24, 0x0407	; 0x800407 <Serial+0x19>
    3224:	8f 5f       	subi	r24, 0xFF	; 255
    3226:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    3228:	20 91 08 04 	lds	r18, 0x0408	; 0x800408 <Serial+0x1a>
    322c:	82 17       	cp	r24, r18
    322e:	51 f0       	breq	.+20     	; 0x3244 <__vector_18+0x50>
      _rx_buffer[_rx_buffer_head] = c;
    3230:	e0 91 07 04 	lds	r30, 0x0407	; 0x800407 <Serial+0x19>
    3234:	f0 e0       	ldi	r31, 0x00	; 0
    3236:	e2 51       	subi	r30, 0x12	; 18
    3238:	fc 4f       	sbci	r31, 0xFC	; 252
    323a:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    323c:	80 93 07 04 	sts	0x0407, r24	; 0x800407 <Serial+0x19>
    3240:	01 c0       	rjmp	.+2      	; 0x3244 <__vector_18+0x50>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    3242:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    3244:	ff 91       	pop	r31
    3246:	ef 91       	pop	r30
    3248:	9f 91       	pop	r25
    324a:	8f 91       	pop	r24
    324c:	2f 91       	pop	r18
    324e:	0f 90       	pop	r0
    3250:	0f be       	out	0x3f, r0	; 63
    3252:	0f 90       	pop	r0
    3254:	1f 90       	pop	r1
    3256:	18 95       	reti

00003258 <__vector_19>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    3258:	1f 92       	push	r1
    325a:	0f 92       	push	r0
    325c:	0f b6       	in	r0, 0x3f	; 63
    325e:	0f 92       	push	r0
    3260:	11 24       	eor	r1, r1
    3262:	2f 93       	push	r18
    3264:	3f 93       	push	r19
    3266:	4f 93       	push	r20
    3268:	5f 93       	push	r21
    326a:	6f 93       	push	r22
    326c:	7f 93       	push	r23
    326e:	8f 93       	push	r24
    3270:	9f 93       	push	r25
    3272:	af 93       	push	r26
    3274:	bf 93       	push	r27
    3276:	ef 93       	push	r30
    3278:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    327a:	8e ee       	ldi	r24, 0xEE	; 238
    327c:	93 e0       	ldi	r25, 0x03	; 3
    327e:	0e 94 04 18 	call	0x3008	; 0x3008 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    3282:	ff 91       	pop	r31
    3284:	ef 91       	pop	r30
    3286:	bf 91       	pop	r27
    3288:	af 91       	pop	r26
    328a:	9f 91       	pop	r25
    328c:	8f 91       	pop	r24
    328e:	7f 91       	pop	r23
    3290:	6f 91       	pop	r22
    3292:	5f 91       	pop	r21
    3294:	4f 91       	pop	r20
    3296:	3f 91       	pop	r19
    3298:	2f 91       	pop	r18
    329a:	0f 90       	pop	r0
    329c:	0f be       	out	0x3f, r0	; 63
    329e:	0f 90       	pop	r0
    32a0:	1f 90       	pop	r1
    32a2:	18 95       	reti

000032a4 <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    32a4:	8e ee       	ldi	r24, 0xEE	; 238
    32a6:	93 e0       	ldi	r25, 0x03	; 3
    32a8:	0e 94 b9 17 	call	0x2f72	; 0x2f72 <_ZN14HardwareSerial9availableEv>
    32ac:	21 e0       	ldi	r18, 0x01	; 1
    32ae:	89 2b       	or	r24, r25
    32b0:	09 f4       	brne	.+2      	; 0x32b4 <_Z17Serial0_availablev+0x10>
    32b2:	20 e0       	ldi	r18, 0x00	; 0
}
    32b4:	82 2f       	mov	r24, r18
    32b6:	08 95       	ret

000032b8 <_GLOBAL__sub_I___vector_18>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    32b8:	ee ee       	ldi	r30, 0xEE	; 238
    32ba:	f3 e0       	ldi	r31, 0x03	; 3
    32bc:	13 82       	std	Z+3, r1	; 0x03
    32be:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    32c0:	88 ee       	ldi	r24, 0xE8	; 232
    32c2:	93 e0       	ldi	r25, 0x03	; 3
    32c4:	a0 e0       	ldi	r26, 0x00	; 0
    32c6:	b0 e0       	ldi	r27, 0x00	; 0
    32c8:	84 83       	std	Z+4, r24	; 0x04
    32ca:	95 83       	std	Z+5, r25	; 0x05
    32cc:	a6 83       	std	Z+6, r26	; 0x06
    32ce:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    32d0:	81 e6       	ldi	r24, 0x61	; 97
    32d2:	93 e0       	ldi	r25, 0x03	; 3
    32d4:	91 83       	std	Z+1, r25	; 0x01
    32d6:	80 83       	st	Z, r24
    32d8:	85 ec       	ldi	r24, 0xC5	; 197
    32da:	90 e0       	ldi	r25, 0x00	; 0
    32dc:	95 87       	std	Z+13, r25	; 0x0d
    32de:	84 87       	std	Z+12, r24	; 0x0c
    32e0:	84 ec       	ldi	r24, 0xC4	; 196
    32e2:	90 e0       	ldi	r25, 0x00	; 0
    32e4:	97 87       	std	Z+15, r25	; 0x0f
    32e6:	86 87       	std	Z+14, r24	; 0x0e
    32e8:	80 ec       	ldi	r24, 0xC0	; 192
    32ea:	90 e0       	ldi	r25, 0x00	; 0
    32ec:	91 8b       	std	Z+17, r25	; 0x11
    32ee:	80 8b       	std	Z+16, r24	; 0x10
    32f0:	81 ec       	ldi	r24, 0xC1	; 193
    32f2:	90 e0       	ldi	r25, 0x00	; 0
    32f4:	93 8b       	std	Z+19, r25	; 0x13
    32f6:	82 8b       	std	Z+18, r24	; 0x12
    32f8:	82 ec       	ldi	r24, 0xC2	; 194
    32fa:	90 e0       	ldi	r25, 0x00	; 0
    32fc:	95 8b       	std	Z+21, r25	; 0x15
    32fe:	84 8b       	std	Z+20, r24	; 0x14
    3300:	86 ec       	ldi	r24, 0xC6	; 198
    3302:	90 e0       	ldi	r25, 0x00	; 0
    3304:	97 8b       	std	Z+23, r25	; 0x17
    3306:	86 8b       	std	Z+22, r24	; 0x16
    3308:	11 8e       	std	Z+25, r1	; 0x19
    330a:	12 8e       	std	Z+26, r1	; 0x1a
    330c:	13 8e       	std	Z+27, r1	; 0x1b
    330e:	14 8e       	std	Z+28, r1	; 0x1c
    3310:	08 95       	ret

00003312 <initVariant>:
    3312:	08 95       	ret

00003314 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    3314:	0e 94 5a 1b 	call	0x36b4	; 0x36b4 <init>

	initVariant();
    3318:	0e 94 89 19 	call	0x3312	; 0x3312 <initVariant>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    331c:	0e 94 75 0f 	call	0x1eea	; 0x1eea <setup>
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    3320:	c6 ef       	ldi	r28, 0xF6	; 246
    3322:	d7 e1       	ldi	r29, 0x17	; 23
#endif
	
	setup();
    
	for (;;) {
		loop();
    3324:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <loop>
		if (serialEventRun) serialEventRun();
    3328:	20 97       	sbiw	r28, 0x00	; 0
    332a:	e1 f3       	breq	.-8      	; 0x3324 <main+0x10>
    332c:	0e 94 f6 17 	call	0x2fec	; 0x2fec <_Z14serialEventRunv>
    3330:	f9 cf       	rjmp	.-14     	; 0x3324 <main+0x10>

00003332 <_ZN5Print5writeEPKhj>:
size_t Print::println(int num, int base)
{
  size_t n = print(num, base);
  n += println();
  return n;
}
    3332:	cf 92       	push	r12
    3334:	df 92       	push	r13
    3336:	ef 92       	push	r14
    3338:	ff 92       	push	r15
    333a:	0f 93       	push	r16
    333c:	1f 93       	push	r17
    333e:	cf 93       	push	r28
    3340:	df 93       	push	r29
    3342:	6c 01       	movw	r12, r24
    3344:	7a 01       	movw	r14, r20
    3346:	8b 01       	movw	r16, r22
    3348:	c0 e0       	ldi	r28, 0x00	; 0
    334a:	d0 e0       	ldi	r29, 0x00	; 0
    334c:	ce 15       	cp	r28, r14
    334e:	df 05       	cpc	r29, r15
    3350:	81 f0       	breq	.+32     	; 0x3372 <_ZN5Print5writeEPKhj+0x40>
    3352:	d8 01       	movw	r26, r16
    3354:	6d 91       	ld	r22, X+
    3356:	8d 01       	movw	r16, r26
    3358:	d6 01       	movw	r26, r12
    335a:	ed 91       	ld	r30, X+
    335c:	fc 91       	ld	r31, X
    335e:	01 90       	ld	r0, Z+
    3360:	f0 81       	ld	r31, Z
    3362:	e0 2d       	mov	r30, r0
    3364:	c6 01       	movw	r24, r12
    3366:	09 95       	icall
    3368:	89 2b       	or	r24, r25
    336a:	11 f0       	breq	.+4      	; 0x3370 <_ZN5Print5writeEPKhj+0x3e>
    336c:	21 96       	adiw	r28, 0x01	; 1
    336e:	ee cf       	rjmp	.-36     	; 0x334c <_ZN5Print5writeEPKhj+0x1a>
    3370:	7e 01       	movw	r14, r28
    3372:	c7 01       	movw	r24, r14
    3374:	df 91       	pop	r29
    3376:	cf 91       	pop	r28
    3378:	1f 91       	pop	r17
    337a:	0f 91       	pop	r16
    337c:	ff 90       	pop	r15
    337e:	ef 90       	pop	r14
    3380:	df 90       	pop	r13
    3382:	cf 90       	pop	r12
    3384:	08 95       	ret

00003386 <_ZN5Print5writeEPKc>:
    3386:	61 15       	cp	r22, r1
    3388:	71 05       	cpc	r23, r1
    338a:	79 f0       	breq	.+30     	; 0x33aa <_ZN5Print5writeEPKc+0x24>
    338c:	fb 01       	movw	r30, r22
    338e:	01 90       	ld	r0, Z+
    3390:	00 20       	and	r0, r0
    3392:	e9 f7       	brne	.-6      	; 0x338e <_ZN5Print5writeEPKc+0x8>
    3394:	31 97       	sbiw	r30, 0x01	; 1
    3396:	af 01       	movw	r20, r30
    3398:	46 1b       	sub	r20, r22
    339a:	57 0b       	sbc	r21, r23
    339c:	dc 01       	movw	r26, r24
    339e:	ed 91       	ld	r30, X+
    33a0:	fc 91       	ld	r31, X
    33a2:	02 80       	ldd	r0, Z+2	; 0x02
    33a4:	f3 81       	ldd	r31, Z+3	; 0x03
    33a6:	e0 2d       	mov	r30, r0
    33a8:	09 94       	ijmp
    33aa:	80 e0       	ldi	r24, 0x00	; 0
    33ac:	90 e0       	ldi	r25, 0x00	; 0
    33ae:	08 95       	ret

000033b0 <_ZN5Print5printEPKc>:
    33b0:	0c 94 c3 19 	jmp	0x3386	; 0x3386 <_ZN5Print5writeEPKc>

000033b4 <_ZN5Print5printEc>:
    33b4:	dc 01       	movw	r26, r24
    33b6:	ed 91       	ld	r30, X+
    33b8:	fc 91       	ld	r31, X
    33ba:	01 90       	ld	r0, Z+
    33bc:	f0 81       	ld	r31, Z
    33be:	e0 2d       	mov	r30, r0
    33c0:	09 94       	ijmp

000033c2 <_ZN5Print7printlnEv>:
    33c2:	6f e6       	ldi	r22, 0x6F	; 111
    33c4:	73 e0       	ldi	r23, 0x03	; 3
    33c6:	0c 94 c3 19 	jmp	0x3386	; 0x3386 <_ZN5Print5writeEPKc>

000033ca <_ZN5Print7printlnEPKc>:
    33ca:	0f 93       	push	r16
    33cc:	1f 93       	push	r17
    33ce:	cf 93       	push	r28
    33d0:	df 93       	push	r29
    33d2:	ec 01       	movw	r28, r24
    33d4:	0e 94 c3 19 	call	0x3386	; 0x3386 <_ZN5Print5writeEPKc>
    33d8:	8c 01       	movw	r16, r24
    33da:	ce 01       	movw	r24, r28
    33dc:	0e 94 e1 19 	call	0x33c2	; 0x33c2 <_ZN5Print7printlnEv>
    33e0:	80 0f       	add	r24, r16
    33e2:	91 1f       	adc	r25, r17
    33e4:	df 91       	pop	r29
    33e6:	cf 91       	pop	r28
    33e8:	1f 91       	pop	r17
    33ea:	0f 91       	pop	r16
    33ec:	08 95       	ret

000033ee <_ZN5Print11printNumberEmh>:
    33ee:	8f 92       	push	r8
    33f0:	9f 92       	push	r9
    33f2:	af 92       	push	r10
    33f4:	bf 92       	push	r11
    33f6:	ef 92       	push	r14
    33f8:	ff 92       	push	r15
    33fa:	0f 93       	push	r16
    33fc:	1f 93       	push	r17
    33fe:	cf 93       	push	r28
    3400:	df 93       	push	r29
    3402:	cd b7       	in	r28, 0x3d	; 61
    3404:	de b7       	in	r29, 0x3e	; 62
    3406:	a1 97       	sbiw	r28, 0x21	; 33
    3408:	0f b6       	in	r0, 0x3f	; 63
    340a:	f8 94       	cli
    340c:	de bf       	out	0x3e, r29	; 62
    340e:	0f be       	out	0x3f, r0	; 63
    3410:	cd bf       	out	0x3d, r28	; 61
    3412:	7c 01       	movw	r14, r24
    3414:	fa 01       	movw	r30, r20
    3416:	cb 01       	movw	r24, r22
    3418:	19 a2       	std	Y+33, r1	; 0x21
    341a:	22 30       	cpi	r18, 0x02	; 2
    341c:	08 f4       	brcc	.+2      	; 0x3420 <_ZN5Print11printNumberEmh+0x32>
    341e:	2a e0       	ldi	r18, 0x0A	; 10
    3420:	8e 01       	movw	r16, r28
    3422:	0f 5d       	subi	r16, 0xDF	; 223
    3424:	1f 4f       	sbci	r17, 0xFF	; 255
    3426:	82 2e       	mov	r8, r18
    3428:	91 2c       	mov	r9, r1
    342a:	a1 2c       	mov	r10, r1
    342c:	b1 2c       	mov	r11, r1
    342e:	bf 01       	movw	r22, r30
    3430:	a5 01       	movw	r20, r10
    3432:	94 01       	movw	r18, r8
    3434:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__udivmodsi4>
    3438:	f9 01       	movw	r30, r18
    343a:	ca 01       	movw	r24, r20
    343c:	01 50       	subi	r16, 0x01	; 1
    343e:	11 09       	sbc	r17, r1
    3440:	6a 30       	cpi	r22, 0x0A	; 10
    3442:	10 f4       	brcc	.+4      	; 0x3448 <_ZN5Print11printNumberEmh+0x5a>
    3444:	60 5d       	subi	r22, 0xD0	; 208
    3446:	01 c0       	rjmp	.+2      	; 0x344a <_ZN5Print11printNumberEmh+0x5c>
    3448:	69 5c       	subi	r22, 0xC9	; 201
    344a:	d8 01       	movw	r26, r16
    344c:	6c 93       	st	X, r22
    344e:	23 2b       	or	r18, r19
    3450:	24 2b       	or	r18, r20
    3452:	25 2b       	or	r18, r21
    3454:	61 f7       	brne	.-40     	; 0x342e <_ZN5Print11printNumberEmh+0x40>
    3456:	b8 01       	movw	r22, r16
    3458:	c7 01       	movw	r24, r14
    345a:	0e 94 c3 19 	call	0x3386	; 0x3386 <_ZN5Print5writeEPKc>
    345e:	a1 96       	adiw	r28, 0x21	; 33
    3460:	0f b6       	in	r0, 0x3f	; 63
    3462:	f8 94       	cli
    3464:	de bf       	out	0x3e, r29	; 62
    3466:	0f be       	out	0x3f, r0	; 63
    3468:	cd bf       	out	0x3d, r28	; 61
    346a:	df 91       	pop	r29
    346c:	cf 91       	pop	r28
    346e:	1f 91       	pop	r17
    3470:	0f 91       	pop	r16
    3472:	ff 90       	pop	r15
    3474:	ef 90       	pop	r14
    3476:	bf 90       	pop	r11
    3478:	af 90       	pop	r10
    347a:	9f 90       	pop	r9
    347c:	8f 90       	pop	r8
    347e:	08 95       	ret

00003480 <_ZN5Print5printEli>:
    3480:	cf 92       	push	r12
    3482:	df 92       	push	r13
    3484:	ef 92       	push	r14
    3486:	ff 92       	push	r15
    3488:	0f 93       	push	r16
    348a:	1f 93       	push	r17
    348c:	cf 93       	push	r28
    348e:	df 93       	push	r29
    3490:	21 15       	cp	r18, r1
    3492:	31 05       	cpc	r19, r1
    3494:	81 f4       	brne	.+32     	; 0x34b6 <_ZN5Print5printEli+0x36>
    3496:	dc 01       	movw	r26, r24
    3498:	ed 91       	ld	r30, X+
    349a:	fc 91       	ld	r31, X
    349c:	01 90       	ld	r0, Z+
    349e:	f0 81       	ld	r31, Z
    34a0:	e0 2d       	mov	r30, r0
    34a2:	64 2f       	mov	r22, r20
    34a4:	df 91       	pop	r29
    34a6:	cf 91       	pop	r28
    34a8:	1f 91       	pop	r17
    34aa:	0f 91       	pop	r16
    34ac:	ff 90       	pop	r15
    34ae:	ef 90       	pop	r14
    34b0:	df 90       	pop	r13
    34b2:	cf 90       	pop	r12
    34b4:	09 94       	ijmp
    34b6:	2a 30       	cpi	r18, 0x0A	; 10
    34b8:	31 05       	cpc	r19, r1
    34ba:	01 f5       	brne	.+64     	; 0x34fc <_ZN5Print5printEli+0x7c>
    34bc:	77 ff       	sbrs	r23, 7
    34be:	1d c0       	rjmp	.+58     	; 0x34fa <_ZN5Print5printEli+0x7a>
    34c0:	6a 01       	movw	r12, r20
    34c2:	7b 01       	movw	r14, r22
    34c4:	ec 01       	movw	r28, r24
    34c6:	6d e2       	ldi	r22, 0x2D	; 45
    34c8:	0e 94 da 19 	call	0x33b4	; 0x33b4 <_ZN5Print5printEc>
    34cc:	8c 01       	movw	r16, r24
    34ce:	44 27       	eor	r20, r20
    34d0:	55 27       	eor	r21, r21
    34d2:	ba 01       	movw	r22, r20
    34d4:	4c 19       	sub	r20, r12
    34d6:	5d 09       	sbc	r21, r13
    34d8:	6e 09       	sbc	r22, r14
    34da:	7f 09       	sbc	r23, r15
    34dc:	2a e0       	ldi	r18, 0x0A	; 10
    34de:	ce 01       	movw	r24, r28
    34e0:	0e 94 f7 19 	call	0x33ee	; 0x33ee <_ZN5Print11printNumberEmh>
    34e4:	80 0f       	add	r24, r16
    34e6:	91 1f       	adc	r25, r17
    34e8:	df 91       	pop	r29
    34ea:	cf 91       	pop	r28
    34ec:	1f 91       	pop	r17
    34ee:	0f 91       	pop	r16
    34f0:	ff 90       	pop	r15
    34f2:	ef 90       	pop	r14
    34f4:	df 90       	pop	r13
    34f6:	cf 90       	pop	r12
    34f8:	08 95       	ret
    34fa:	2a e0       	ldi	r18, 0x0A	; 10
    34fc:	df 91       	pop	r29
    34fe:	cf 91       	pop	r28
    3500:	1f 91       	pop	r17
    3502:	0f 91       	pop	r16
    3504:	ff 90       	pop	r15
    3506:	ef 90       	pop	r14
    3508:	df 90       	pop	r13
    350a:	cf 90       	pop	r12
    350c:	0c 94 f7 19 	jmp	0x33ee	; 0x33ee <_ZN5Print11printNumberEmh>

00003510 <_ZN5Print7printlnEli>:
  n += println();
  return n;
}

size_t Print::println(long num, int base)
{
    3510:	0f 93       	push	r16
    3512:	1f 93       	push	r17
    3514:	cf 93       	push	r28
    3516:	df 93       	push	r29
    3518:	ec 01       	movw	r28, r24
  size_t n = print(num, base);
    351a:	0e 94 40 1a 	call	0x3480	; 0x3480 <_ZN5Print5printEli>
    351e:	8c 01       	movw	r16, r24
  n += println();
    3520:	ce 01       	movw	r24, r28
    3522:	0e 94 e1 19 	call	0x33c2	; 0x33c2 <_ZN5Print7printlnEv>
  return n;
}
    3526:	80 0f       	add	r24, r16
    3528:	91 1f       	adc	r25, r17
    352a:	df 91       	pop	r29
    352c:	cf 91       	pop	r28
    352e:	1f 91       	pop	r17
    3530:	0f 91       	pop	r16
    3532:	08 95       	ret

00003534 <_ZN6Stream9timedReadEv>:
    if (c < 0) break;
    *buffer++ = (char)c;
    count++;
  }
  return count;
}
    3534:	0f 93       	push	r16
    3536:	1f 93       	push	r17
    3538:	cf 93       	push	r28
    353a:	df 93       	push	r29
    353c:	ec 01       	movw	r28, r24
    353e:	0e 94 4e 1b 	call	0x369c	; 0x369c <millis>
    3542:	68 87       	std	Y+8, r22	; 0x08
    3544:	79 87       	std	Y+9, r23	; 0x09
    3546:	8a 87       	std	Y+10, r24	; 0x0a
    3548:	9b 87       	std	Y+11, r25	; 0x0b
    354a:	e8 81       	ld	r30, Y
    354c:	f9 81       	ldd	r31, Y+1	; 0x01
    354e:	02 84       	ldd	r0, Z+10	; 0x0a
    3550:	f3 85       	ldd	r31, Z+11	; 0x0b
    3552:	e0 2d       	mov	r30, r0
    3554:	ce 01       	movw	r24, r28
    3556:	09 95       	icall
    3558:	97 ff       	sbrs	r25, 7
    355a:	17 c0       	rjmp	.+46     	; 0x358a <_ZN6Stream9timedReadEv+0x56>
    355c:	0e 94 4e 1b 	call	0x369c	; 0x369c <millis>
    3560:	08 85       	ldd	r16, Y+8	; 0x08
    3562:	19 85       	ldd	r17, Y+9	; 0x09
    3564:	2a 85       	ldd	r18, Y+10	; 0x0a
    3566:	3b 85       	ldd	r19, Y+11	; 0x0b
    3568:	dc 01       	movw	r26, r24
    356a:	cb 01       	movw	r24, r22
    356c:	80 1b       	sub	r24, r16
    356e:	91 0b       	sbc	r25, r17
    3570:	a2 0b       	sbc	r26, r18
    3572:	b3 0b       	sbc	r27, r19
    3574:	0c 81       	ldd	r16, Y+4	; 0x04
    3576:	1d 81       	ldd	r17, Y+5	; 0x05
    3578:	2e 81       	ldd	r18, Y+6	; 0x06
    357a:	3f 81       	ldd	r19, Y+7	; 0x07
    357c:	80 17       	cp	r24, r16
    357e:	91 07       	cpc	r25, r17
    3580:	a2 07       	cpc	r26, r18
    3582:	b3 07       	cpc	r27, r19
    3584:	10 f3       	brcs	.-60     	; 0x354a <_ZN6Stream9timedReadEv+0x16>
    3586:	8f ef       	ldi	r24, 0xFF	; 255
    3588:	9f ef       	ldi	r25, 0xFF	; 255
    358a:	df 91       	pop	r29
    358c:	cf 91       	pop	r28
    358e:	1f 91       	pop	r17
    3590:	0f 91       	pop	r16
    3592:	08 95       	ret

00003594 <_ZN6Stream10setTimeoutEm>:
    3594:	fc 01       	movw	r30, r24
    3596:	44 83       	std	Z+4, r20	; 0x04
    3598:	55 83       	std	Z+5, r21	; 0x05
    359a:	66 83       	std	Z+6, r22	; 0x06
    359c:	77 83       	std	Z+7, r23	; 0x07
    359e:	08 95       	ret

000035a0 <_ZN6Stream14readBytesUntilEcPcj>:
// as readBytes with terminator character
// terminates if length characters have been read, timeout, or if the terminator character  detected
// returns the number of characters placed in the buffer (0 means no valid data found)

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
    35a0:	af 92       	push	r10
    35a2:	bf 92       	push	r11
    35a4:	cf 92       	push	r12
    35a6:	df 92       	push	r13
    35a8:	ef 92       	push	r14
    35aa:	ff 92       	push	r15
    35ac:	0f 93       	push	r16
    35ae:	1f 93       	push	r17
    35b0:	cf 93       	push	r28
    35b2:	df 93       	push	r29
  if (length < 1) return 0;
    35b4:	21 15       	cp	r18, r1
    35b6:	31 05       	cpc	r19, r1
    35b8:	c1 f0       	breq	.+48     	; 0x35ea <_ZN6Stream14readBytesUntilEcPcj+0x4a>
    35ba:	89 01       	movw	r16, r18
    35bc:	5c 01       	movw	r10, r24
    35be:	6a 01       	movw	r12, r20
    35c0:	c0 e0       	ldi	r28, 0x00	; 0
    35c2:	d0 e0       	ldi	r29, 0x00	; 0
  size_t index = 0;
  while (index < length) {
    int c = timedRead();
    if (c < 0 || c == terminator) break;
    35c4:	e6 2e       	mov	r14, r22
    35c6:	f1 2c       	mov	r15, r1
size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
  if (length < 1) return 0;
  size_t index = 0;
  while (index < length) {
    int c = timedRead();
    35c8:	c5 01       	movw	r24, r10
    35ca:	0e 94 9a 1a 	call	0x3534	; 0x3534 <_ZN6Stream9timedReadEv>
    if (c < 0 || c == terminator) break;
    35ce:	97 fd       	sbrc	r25, 7
    35d0:	0f c0       	rjmp	.+30     	; 0x35f0 <_ZN6Stream14readBytesUntilEcPcj+0x50>
    35d2:	8e 15       	cp	r24, r14
    35d4:	9f 05       	cpc	r25, r15
    35d6:	61 f0       	breq	.+24     	; 0x35f0 <_ZN6Stream14readBytesUntilEcPcj+0x50>
    *buffer++ = (char)c;
    35d8:	f6 01       	movw	r30, r12
    35da:	81 93       	st	Z+, r24
    35dc:	6f 01       	movw	r12, r30
    index++;
    35de:	21 96       	adiw	r28, 0x01	; 1

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
  if (length < 1) return 0;
  size_t index = 0;
  while (index < length) {
    35e0:	0c 17       	cp	r16, r28
    35e2:	1d 07       	cpc	r17, r29
    35e4:	89 f7       	brne	.-30     	; 0x35c8 <_ZN6Stream14readBytesUntilEcPcj+0x28>
    35e6:	c8 01       	movw	r24, r16
    35e8:	04 c0       	rjmp	.+8      	; 0x35f2 <_ZN6Stream14readBytesUntilEcPcj+0x52>
// terminates if length characters have been read, timeout, or if the terminator character  detected
// returns the number of characters placed in the buffer (0 means no valid data found)

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
  if (length < 1) return 0;
    35ea:	80 e0       	ldi	r24, 0x00	; 0
    35ec:	90 e0       	ldi	r25, 0x00	; 0
    35ee:	01 c0       	rjmp	.+2      	; 0x35f2 <_ZN6Stream14readBytesUntilEcPcj+0x52>
    35f0:	ce 01       	movw	r24, r28
    if (c < 0 || c == terminator) break;
    *buffer++ = (char)c;
    index++;
  }
  return index; // return number of characters, not including null terminator
}
    35f2:	df 91       	pop	r29
    35f4:	cf 91       	pop	r28
    35f6:	1f 91       	pop	r17
    35f8:	0f 91       	pop	r16
    35fa:	ff 90       	pop	r15
    35fc:	ef 90       	pop	r14
    35fe:	df 90       	pop	r13
    3600:	cf 90       	pop	r12
    3602:	bf 90       	pop	r11
    3604:	af 90       	pop	r10
    3606:	08 95       	ret

00003608 <__vector_16>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    3608:	1f 92       	push	r1
    360a:	0f 92       	push	r0
    360c:	0f b6       	in	r0, 0x3f	; 63
    360e:	0f 92       	push	r0
    3610:	11 24       	eor	r1, r1
    3612:	2f 93       	push	r18
    3614:	3f 93       	push	r19
    3616:	8f 93       	push	r24
    3618:	9f 93       	push	r25
    361a:	af 93       	push	r26
    361c:	bf 93       	push	r27
    361e:	80 91 8c 04 	lds	r24, 0x048C	; 0x80048c <timer0_millis>
    3622:	90 91 8d 04 	lds	r25, 0x048D	; 0x80048d <timer0_millis+0x1>
    3626:	a0 91 8e 04 	lds	r26, 0x048E	; 0x80048e <timer0_millis+0x2>
    362a:	b0 91 8f 04 	lds	r27, 0x048F	; 0x80048f <timer0_millis+0x3>
    362e:	30 91 8b 04 	lds	r19, 0x048B	; 0x80048b <timer0_fract>
    3632:	23 e0       	ldi	r18, 0x03	; 3
    3634:	23 0f       	add	r18, r19
    3636:	2d 37       	cpi	r18, 0x7D	; 125
    3638:	20 f4       	brcc	.+8      	; 0x3642 <__vector_16+0x3a>
    363a:	01 96       	adiw	r24, 0x01	; 1
    363c:	a1 1d       	adc	r26, r1
    363e:	b1 1d       	adc	r27, r1
    3640:	05 c0       	rjmp	.+10     	; 0x364c <__vector_16+0x44>
    3642:	26 e8       	ldi	r18, 0x86	; 134
    3644:	23 0f       	add	r18, r19
    3646:	02 96       	adiw	r24, 0x02	; 2
    3648:	a1 1d       	adc	r26, r1
    364a:	b1 1d       	adc	r27, r1
    364c:	20 93 8b 04 	sts	0x048B, r18	; 0x80048b <timer0_fract>
    3650:	80 93 8c 04 	sts	0x048C, r24	; 0x80048c <timer0_millis>
    3654:	90 93 8d 04 	sts	0x048D, r25	; 0x80048d <timer0_millis+0x1>
    3658:	a0 93 8e 04 	sts	0x048E, r26	; 0x80048e <timer0_millis+0x2>
    365c:	b0 93 8f 04 	sts	0x048F, r27	; 0x80048f <timer0_millis+0x3>
    3660:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <timer0_overflow_count>
    3664:	90 91 91 04 	lds	r25, 0x0491	; 0x800491 <timer0_overflow_count+0x1>
    3668:	a0 91 92 04 	lds	r26, 0x0492	; 0x800492 <timer0_overflow_count+0x2>
    366c:	b0 91 93 04 	lds	r27, 0x0493	; 0x800493 <timer0_overflow_count+0x3>
    3670:	01 96       	adiw	r24, 0x01	; 1
    3672:	a1 1d       	adc	r26, r1
    3674:	b1 1d       	adc	r27, r1
    3676:	80 93 90 04 	sts	0x0490, r24	; 0x800490 <timer0_overflow_count>
    367a:	90 93 91 04 	sts	0x0491, r25	; 0x800491 <timer0_overflow_count+0x1>
    367e:	a0 93 92 04 	sts	0x0492, r26	; 0x800492 <timer0_overflow_count+0x2>
    3682:	b0 93 93 04 	sts	0x0493, r27	; 0x800493 <timer0_overflow_count+0x3>
    3686:	bf 91       	pop	r27
    3688:	af 91       	pop	r26
    368a:	9f 91       	pop	r25
    368c:	8f 91       	pop	r24
    368e:	3f 91       	pop	r19
    3690:	2f 91       	pop	r18
    3692:	0f 90       	pop	r0
    3694:	0f be       	out	0x3f, r0	; 63
    3696:	0f 90       	pop	r0
    3698:	1f 90       	pop	r1
    369a:	18 95       	reti

0000369c <millis>:
    369c:	2f b7       	in	r18, 0x3f	; 63
    369e:	f8 94       	cli
    36a0:	60 91 8c 04 	lds	r22, 0x048C	; 0x80048c <timer0_millis>
    36a4:	70 91 8d 04 	lds	r23, 0x048D	; 0x80048d <timer0_millis+0x1>
    36a8:	80 91 8e 04 	lds	r24, 0x048E	; 0x80048e <timer0_millis+0x2>
    36ac:	90 91 8f 04 	lds	r25, 0x048F	; 0x80048f <timer0_millis+0x3>
    36b0:	2f bf       	out	0x3f, r18	; 63
    36b2:	08 95       	ret

000036b4 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    36b4:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    36b6:	84 b5       	in	r24, 0x24	; 36
    36b8:	82 60       	ori	r24, 0x02	; 2
    36ba:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    36bc:	84 b5       	in	r24, 0x24	; 36
    36be:	81 60       	ori	r24, 0x01	; 1
    36c0:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    36c2:	85 b5       	in	r24, 0x25	; 37
    36c4:	82 60       	ori	r24, 0x02	; 2
    36c6:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    36c8:	85 b5       	in	r24, 0x25	; 37
    36ca:	81 60       	ori	r24, 0x01	; 1
    36cc:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    36ce:	ee e6       	ldi	r30, 0x6E	; 110
    36d0:	f0 e0       	ldi	r31, 0x00	; 0
    36d2:	80 81       	ld	r24, Z
    36d4:	81 60       	ori	r24, 0x01	; 1
    36d6:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    36d8:	e1 e8       	ldi	r30, 0x81	; 129
    36da:	f0 e0       	ldi	r31, 0x00	; 0
    36dc:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    36de:	80 81       	ld	r24, Z
    36e0:	82 60       	ori	r24, 0x02	; 2
    36e2:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    36e4:	80 81       	ld	r24, Z
    36e6:	81 60       	ori	r24, 0x01	; 1
    36e8:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    36ea:	e0 e8       	ldi	r30, 0x80	; 128
    36ec:	f0 e0       	ldi	r31, 0x00	; 0
    36ee:	80 81       	ld	r24, Z
    36f0:	81 60       	ori	r24, 0x01	; 1
    36f2:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    36f4:	e1 eb       	ldi	r30, 0xB1	; 177
    36f6:	f0 e0       	ldi	r31, 0x00	; 0
    36f8:	80 81       	ld	r24, Z
    36fa:	84 60       	ori	r24, 0x04	; 4
    36fc:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    36fe:	e0 eb       	ldi	r30, 0xB0	; 176
    3700:	f0 e0       	ldi	r31, 0x00	; 0
    3702:	80 81       	ld	r24, Z
    3704:	81 60       	ori	r24, 0x01	; 1
    3706:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    3708:	ea e7       	ldi	r30, 0x7A	; 122
    370a:	f0 e0       	ldi	r31, 0x00	; 0
    370c:	80 81       	ld	r24, Z
    370e:	84 60       	ori	r24, 0x04	; 4
    3710:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    3712:	80 81       	ld	r24, Z
    3714:	82 60       	ori	r24, 0x02	; 2
    3716:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    3718:	80 81       	ld	r24, Z
    371a:	81 60       	ori	r24, 0x01	; 1
    371c:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    371e:	80 81       	ld	r24, Z
    3720:	80 68       	ori	r24, 0x80	; 128
    3722:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    3724:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    3728:	08 95       	ret

0000372a <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    372a:	cf 93       	push	r28
    372c:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    372e:	90 e0       	ldi	r25, 0x00	; 0
    3730:	fc 01       	movw	r30, r24
    3732:	e4 58       	subi	r30, 0x84	; 132
    3734:	ff 4f       	sbci	r31, 0xFF	; 255
    3736:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    3738:	fc 01       	movw	r30, r24
    373a:	e0 57       	subi	r30, 0x70	; 112
    373c:	ff 4f       	sbci	r31, 0xFF	; 255
    373e:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    3740:	88 23       	and	r24, r24
    3742:	61 f1       	breq	.+88     	; 0x379c <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    3744:	90 e0       	ldi	r25, 0x00	; 0
    3746:	88 0f       	add	r24, r24
    3748:	99 1f       	adc	r25, r25
    374a:	fc 01       	movw	r30, r24
    374c:	e8 54       	subi	r30, 0x48	; 72
    374e:	ff 4f       	sbci	r31, 0xFF	; 255
    3750:	c5 91       	lpm	r28, Z+
    3752:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    3754:	fc 01       	movw	r30, r24
    3756:	e2 55       	subi	r30, 0x52	; 82
    3758:	ff 4f       	sbci	r31, 0xFF	; 255
    375a:	a5 91       	lpm	r26, Z+
    375c:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    375e:	61 11       	cpse	r22, r1
    3760:	09 c0       	rjmp	.+18     	; 0x3774 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    3762:	9f b7       	in	r25, 0x3f	; 63
                cli();
    3764:	f8 94       	cli
		*reg &= ~bit;
    3766:	88 81       	ld	r24, Y
    3768:	20 95       	com	r18
    376a:	82 23       	and	r24, r18
    376c:	88 83       	st	Y, r24
		*out &= ~bit;
    376e:	ec 91       	ld	r30, X
    3770:	2e 23       	and	r18, r30
    3772:	0b c0       	rjmp	.+22     	; 0x378a <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    3774:	62 30       	cpi	r22, 0x02	; 2
    3776:	61 f4       	brne	.+24     	; 0x3790 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    3778:	9f b7       	in	r25, 0x3f	; 63
                cli();
    377a:	f8 94       	cli
		*reg &= ~bit;
    377c:	88 81       	ld	r24, Y
    377e:	32 2f       	mov	r19, r18
    3780:	30 95       	com	r19
    3782:	83 23       	and	r24, r19
    3784:	88 83       	st	Y, r24
		*out |= bit;
    3786:	ec 91       	ld	r30, X
    3788:	2e 2b       	or	r18, r30
    378a:	2c 93       	st	X, r18
		SREG = oldSREG;
    378c:	9f bf       	out	0x3f, r25	; 63
    378e:	06 c0       	rjmp	.+12     	; 0x379c <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    3790:	8f b7       	in	r24, 0x3f	; 63
                cli();
    3792:	f8 94       	cli
		*reg |= bit;
    3794:	e8 81       	ld	r30, Y
    3796:	2e 2b       	or	r18, r30
    3798:	28 83       	st	Y, r18
		SREG = oldSREG;
    379a:	8f bf       	out	0x3f, r24	; 63
	}
}
    379c:	df 91       	pop	r29
    379e:	cf 91       	pop	r28
    37a0:	08 95       	ret

000037a2 <__mulsi3>:
    37a2:	db 01       	movw	r26, r22
    37a4:	8f 93       	push	r24
    37a6:	9f 93       	push	r25
    37a8:	0e 94 22 1c 	call	0x3844	; 0x3844 <__muluhisi3>
    37ac:	bf 91       	pop	r27
    37ae:	af 91       	pop	r26
    37b0:	a2 9f       	mul	r26, r18
    37b2:	80 0d       	add	r24, r0
    37b4:	91 1d       	adc	r25, r1
    37b6:	a3 9f       	mul	r26, r19
    37b8:	90 0d       	add	r25, r0
    37ba:	b2 9f       	mul	r27, r18
    37bc:	90 0d       	add	r25, r0
    37be:	11 24       	eor	r1, r1
    37c0:	08 95       	ret

000037c2 <__udivmodsi4>:
    37c2:	a1 e2       	ldi	r26, 0x21	; 33
    37c4:	1a 2e       	mov	r1, r26
    37c6:	aa 1b       	sub	r26, r26
    37c8:	bb 1b       	sub	r27, r27
    37ca:	fd 01       	movw	r30, r26
    37cc:	0d c0       	rjmp	.+26     	; 0x37e8 <__udivmodsi4_ep>

000037ce <__udivmodsi4_loop>:
    37ce:	aa 1f       	adc	r26, r26
    37d0:	bb 1f       	adc	r27, r27
    37d2:	ee 1f       	adc	r30, r30
    37d4:	ff 1f       	adc	r31, r31
    37d6:	a2 17       	cp	r26, r18
    37d8:	b3 07       	cpc	r27, r19
    37da:	e4 07       	cpc	r30, r20
    37dc:	f5 07       	cpc	r31, r21
    37de:	20 f0       	brcs	.+8      	; 0x37e8 <__udivmodsi4_ep>
    37e0:	a2 1b       	sub	r26, r18
    37e2:	b3 0b       	sbc	r27, r19
    37e4:	e4 0b       	sbc	r30, r20
    37e6:	f5 0b       	sbc	r31, r21

000037e8 <__udivmodsi4_ep>:
    37e8:	66 1f       	adc	r22, r22
    37ea:	77 1f       	adc	r23, r23
    37ec:	88 1f       	adc	r24, r24
    37ee:	99 1f       	adc	r25, r25
    37f0:	1a 94       	dec	r1
    37f2:	69 f7       	brne	.-38     	; 0x37ce <__udivmodsi4_loop>
    37f4:	60 95       	com	r22
    37f6:	70 95       	com	r23
    37f8:	80 95       	com	r24
    37fa:	90 95       	com	r25
    37fc:	9b 01       	movw	r18, r22
    37fe:	ac 01       	movw	r20, r24
    3800:	bd 01       	movw	r22, r26
    3802:	cf 01       	movw	r24, r30
    3804:	08 95       	ret

00003806 <__divmodsi4>:
    3806:	05 2e       	mov	r0, r21
    3808:	97 fb       	bst	r25, 7
    380a:	1e f4       	brtc	.+6      	; 0x3812 <__divmodsi4+0xc>
    380c:	00 94       	com	r0
    380e:	0e 94 1a 1c 	call	0x3834	; 0x3834 <__negsi2>
    3812:	57 fd       	sbrc	r21, 7
    3814:	07 d0       	rcall	.+14     	; 0x3824 <__divmodsi4_neg2>
    3816:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__udivmodsi4>
    381a:	07 fc       	sbrc	r0, 7
    381c:	03 d0       	rcall	.+6      	; 0x3824 <__divmodsi4_neg2>
    381e:	4e f4       	brtc	.+18     	; 0x3832 <__divmodsi4_exit>
    3820:	0c 94 1a 1c 	jmp	0x3834	; 0x3834 <__negsi2>

00003824 <__divmodsi4_neg2>:
    3824:	50 95       	com	r21
    3826:	40 95       	com	r20
    3828:	30 95       	com	r19
    382a:	21 95       	neg	r18
    382c:	3f 4f       	sbci	r19, 0xFF	; 255
    382e:	4f 4f       	sbci	r20, 0xFF	; 255
    3830:	5f 4f       	sbci	r21, 0xFF	; 255

00003832 <__divmodsi4_exit>:
    3832:	08 95       	ret

00003834 <__negsi2>:
    3834:	90 95       	com	r25
    3836:	80 95       	com	r24
    3838:	70 95       	com	r23
    383a:	61 95       	neg	r22
    383c:	7f 4f       	sbci	r23, 0xFF	; 255
    383e:	8f 4f       	sbci	r24, 0xFF	; 255
    3840:	9f 4f       	sbci	r25, 0xFF	; 255
    3842:	08 95       	ret

00003844 <__muluhisi3>:
    3844:	0e 94 33 1c 	call	0x3866	; 0x3866 <__umulhisi3>
    3848:	a5 9f       	mul	r26, r21
    384a:	90 0d       	add	r25, r0
    384c:	b4 9f       	mul	r27, r20
    384e:	90 0d       	add	r25, r0
    3850:	a4 9f       	mul	r26, r20
    3852:	80 0d       	add	r24, r0
    3854:	91 1d       	adc	r25, r1
    3856:	11 24       	eor	r1, r1
    3858:	08 95       	ret

0000385a <__tablejump2__>:
    385a:	ee 0f       	add	r30, r30
    385c:	ff 1f       	adc	r31, r31
    385e:	05 90       	lpm	r0, Z+
    3860:	f4 91       	lpm	r31, Z
    3862:	e0 2d       	mov	r30, r0
    3864:	09 94       	ijmp

00003866 <__umulhisi3>:
    3866:	a2 9f       	mul	r26, r18
    3868:	b0 01       	movw	r22, r0
    386a:	b3 9f       	mul	r27, r19
    386c:	c0 01       	movw	r24, r0
    386e:	a3 9f       	mul	r26, r19
    3870:	70 0d       	add	r23, r0
    3872:	81 1d       	adc	r24, r1
    3874:	11 24       	eor	r1, r1
    3876:	91 1d       	adc	r25, r1
    3878:	b2 9f       	mul	r27, r18
    387a:	70 0d       	add	r23, r0
    387c:	81 1d       	adc	r24, r1
    387e:	11 24       	eor	r1, r1
    3880:	91 1d       	adc	r25, r1
    3882:	08 95       	ret

00003884 <strtol>:
    3884:	a0 e0       	ldi	r26, 0x00	; 0
    3886:	b0 e0       	ldi	r27, 0x00	; 0
    3888:	e8 e4       	ldi	r30, 0x48	; 72
    388a:	fc e1       	ldi	r31, 0x1C	; 28
    388c:	0c 94 72 20 	jmp	0x40e4	; 0x40e4 <__prologue_saves__+0x2>
    3890:	5c 01       	movw	r10, r24
    3892:	6b 01       	movw	r12, r22
    3894:	7a 01       	movw	r14, r20
    3896:	61 15       	cp	r22, r1
    3898:	71 05       	cpc	r23, r1
    389a:	19 f0       	breq	.+6      	; 0x38a2 <strtol+0x1e>
    389c:	fb 01       	movw	r30, r22
    389e:	91 83       	std	Z+1, r25	; 0x01
    38a0:	80 83       	st	Z, r24
    38a2:	e1 14       	cp	r14, r1
    38a4:	f1 04       	cpc	r15, r1
    38a6:	29 f0       	breq	.+10     	; 0x38b2 <strtol+0x2e>
    38a8:	c7 01       	movw	r24, r14
    38aa:	02 97       	sbiw	r24, 0x02	; 2
    38ac:	83 97       	sbiw	r24, 0x23	; 35
    38ae:	08 f0       	brcs	.+2      	; 0x38b2 <strtol+0x2e>
    38b0:	e5 c0       	rjmp	.+458    	; 0x3a7c <strtol+0x1f8>
    38b2:	e5 01       	movw	r28, r10
    38b4:	21 96       	adiw	r28, 0x01	; 1
    38b6:	f5 01       	movw	r30, r10
    38b8:	10 81       	ld	r17, Z
    38ba:	81 2f       	mov	r24, r17
    38bc:	90 e0       	ldi	r25, 0x00	; 0
    38be:	0e 94 76 1d 	call	0x3aec	; 0x3aec <isspace>
    38c2:	89 2b       	or	r24, r25
    38c4:	11 f0       	breq	.+4      	; 0x38ca <strtol+0x46>
    38c6:	5e 01       	movw	r10, r28
    38c8:	f4 cf       	rjmp	.-24     	; 0x38b2 <strtol+0x2e>
    38ca:	1d 32       	cpi	r17, 0x2D	; 45
    38cc:	29 f4       	brne	.+10     	; 0x38d8 <strtol+0x54>
    38ce:	21 96       	adiw	r28, 0x01	; 1
    38d0:	f5 01       	movw	r30, r10
    38d2:	11 81       	ldd	r17, Z+1	; 0x01
    38d4:	01 e0       	ldi	r16, 0x01	; 1
    38d6:	07 c0       	rjmp	.+14     	; 0x38e6 <strtol+0x62>
    38d8:	1b 32       	cpi	r17, 0x2B	; 43
    38da:	21 f4       	brne	.+8      	; 0x38e4 <strtol+0x60>
    38dc:	e5 01       	movw	r28, r10
    38de:	22 96       	adiw	r28, 0x02	; 2
    38e0:	f5 01       	movw	r30, r10
    38e2:	11 81       	ldd	r17, Z+1	; 0x01
    38e4:	00 e0       	ldi	r16, 0x00	; 0
    38e6:	e1 14       	cp	r14, r1
    38e8:	f1 04       	cpc	r15, r1
    38ea:	09 f1       	breq	.+66     	; 0x392e <strtol+0xaa>
    38ec:	f0 e1       	ldi	r31, 0x10	; 16
    38ee:	ef 16       	cp	r14, r31
    38f0:	f1 04       	cpc	r15, r1
    38f2:	29 f4       	brne	.+10     	; 0x38fe <strtol+0x7a>
    38f4:	3f c0       	rjmp	.+126    	; 0x3974 <strtol+0xf0>
    38f6:	10 e3       	ldi	r17, 0x30	; 48
    38f8:	e1 14       	cp	r14, r1
    38fa:	f1 04       	cpc	r15, r1
    38fc:	21 f1       	breq	.+72     	; 0x3946 <strtol+0xc2>
    38fe:	28 e0       	ldi	r18, 0x08	; 8
    3900:	e2 16       	cp	r14, r18
    3902:	f1 04       	cpc	r15, r1
    3904:	01 f1       	breq	.+64     	; 0x3946 <strtol+0xc2>
    3906:	54 f4       	brge	.+20     	; 0x391c <strtol+0x98>
    3908:	e2 e0       	ldi	r30, 0x02	; 2
    390a:	ee 16       	cp	r14, r30
    390c:	f1 04       	cpc	r15, r1
    390e:	21 f5       	brne	.+72     	; 0x3958 <strtol+0xd4>
    3910:	81 2c       	mov	r8, r1
    3912:	91 2c       	mov	r9, r1
    3914:	a1 2c       	mov	r10, r1
    3916:	b0 e4       	ldi	r27, 0x40	; 64
    3918:	bb 2e       	mov	r11, r27
    391a:	3e c0       	rjmp	.+124    	; 0x3998 <strtol+0x114>
    391c:	fa e0       	ldi	r31, 0x0A	; 10
    391e:	ef 16       	cp	r14, r31
    3920:	f1 04       	cpc	r15, r1
    3922:	39 f0       	breq	.+14     	; 0x3932 <strtol+0xae>
    3924:	20 e1       	ldi	r18, 0x10	; 16
    3926:	e2 16       	cp	r14, r18
    3928:	f1 04       	cpc	r15, r1
    392a:	b1 f4       	brne	.+44     	; 0x3958 <strtol+0xd4>
    392c:	30 c0       	rjmp	.+96     	; 0x398e <strtol+0x10a>
    392e:	10 33       	cpi	r17, 0x30	; 48
    3930:	19 f1       	breq	.+70     	; 0x3978 <strtol+0xf4>
    3932:	fa e0       	ldi	r31, 0x0A	; 10
    3934:	ef 2e       	mov	r14, r31
    3936:	f1 2c       	mov	r15, r1
    3938:	ac ec       	ldi	r26, 0xCC	; 204
    393a:	8a 2e       	mov	r8, r26
    393c:	98 2c       	mov	r9, r8
    393e:	a8 2c       	mov	r10, r8
    3940:	ac e0       	ldi	r26, 0x0C	; 12
    3942:	ba 2e       	mov	r11, r26
    3944:	29 c0       	rjmp	.+82     	; 0x3998 <strtol+0x114>
    3946:	78 e0       	ldi	r23, 0x08	; 8
    3948:	e7 2e       	mov	r14, r23
    394a:	f1 2c       	mov	r15, r1
    394c:	81 2c       	mov	r8, r1
    394e:	91 2c       	mov	r9, r1
    3950:	a1 2c       	mov	r10, r1
    3952:	e0 e1       	ldi	r30, 0x10	; 16
    3954:	be 2e       	mov	r11, r30
    3956:	20 c0       	rjmp	.+64     	; 0x3998 <strtol+0x114>
    3958:	60 e0       	ldi	r22, 0x00	; 0
    395a:	70 e0       	ldi	r23, 0x00	; 0
    395c:	80 e0       	ldi	r24, 0x00	; 0
    395e:	90 e8       	ldi	r25, 0x80	; 128
    3960:	97 01       	movw	r18, r14
    3962:	0f 2c       	mov	r0, r15
    3964:	00 0c       	add	r0, r0
    3966:	44 0b       	sbc	r20, r20
    3968:	55 0b       	sbc	r21, r21
    396a:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__udivmodsi4>
    396e:	49 01       	movw	r8, r18
    3970:	5a 01       	movw	r10, r20
    3972:	12 c0       	rjmp	.+36     	; 0x3998 <strtol+0x114>
    3974:	10 33       	cpi	r17, 0x30	; 48
    3976:	59 f4       	brne	.+22     	; 0x398e <strtol+0x10a>
    3978:	88 81       	ld	r24, Y
    397a:	8f 7d       	andi	r24, 0xDF	; 223
    397c:	88 35       	cpi	r24, 0x58	; 88
    397e:	09 f0       	breq	.+2      	; 0x3982 <strtol+0xfe>
    3980:	ba cf       	rjmp	.-140    	; 0x38f6 <strtol+0x72>
    3982:	19 81       	ldd	r17, Y+1	; 0x01
    3984:	22 96       	adiw	r28, 0x02	; 2
    3986:	02 60       	ori	r16, 0x02	; 2
    3988:	80 e1       	ldi	r24, 0x10	; 16
    398a:	e8 2e       	mov	r14, r24
    398c:	f1 2c       	mov	r15, r1
    398e:	81 2c       	mov	r8, r1
    3990:	91 2c       	mov	r9, r1
    3992:	a1 2c       	mov	r10, r1
    3994:	68 e0       	ldi	r22, 0x08	; 8
    3996:	b6 2e       	mov	r11, r22
    3998:	40 e0       	ldi	r20, 0x00	; 0
    399a:	60 e0       	ldi	r22, 0x00	; 0
    399c:	70 e0       	ldi	r23, 0x00	; 0
    399e:	cb 01       	movw	r24, r22
    39a0:	27 01       	movw	r4, r14
    39a2:	0f 2c       	mov	r0, r15
    39a4:	00 0c       	add	r0, r0
    39a6:	66 08       	sbc	r6, r6
    39a8:	77 08       	sbc	r7, r7
    39aa:	fe 01       	movw	r30, r28
    39ac:	50 ed       	ldi	r21, 0xD0	; 208
    39ae:	35 2e       	mov	r3, r21
    39b0:	31 0e       	add	r3, r17
    39b2:	29 e0       	ldi	r18, 0x09	; 9
    39b4:	23 15       	cp	r18, r3
    39b6:	70 f4       	brcc	.+28     	; 0x39d4 <strtol+0x150>
    39b8:	2f eb       	ldi	r18, 0xBF	; 191
    39ba:	21 0f       	add	r18, r17
    39bc:	2a 31       	cpi	r18, 0x1A	; 26
    39be:	18 f4       	brcc	.+6      	; 0x39c6 <strtol+0x142>
    39c0:	39 ec       	ldi	r19, 0xC9	; 201
    39c2:	33 2e       	mov	r3, r19
    39c4:	06 c0       	rjmp	.+12     	; 0x39d2 <strtol+0x14e>
    39c6:	2f e9       	ldi	r18, 0x9F	; 159
    39c8:	21 0f       	add	r18, r17
    39ca:	2a 31       	cpi	r18, 0x1A	; 26
    39cc:	18 f5       	brcc	.+70     	; 0x3a14 <strtol+0x190>
    39ce:	29 ea       	ldi	r18, 0xA9	; 169
    39d0:	32 2e       	mov	r3, r18
    39d2:	31 0e       	add	r3, r17
    39d4:	23 2d       	mov	r18, r3
    39d6:	30 e0       	ldi	r19, 0x00	; 0
    39d8:	2e 15       	cp	r18, r14
    39da:	3f 05       	cpc	r19, r15
    39dc:	dc f4       	brge	.+54     	; 0x3a14 <strtol+0x190>
    39de:	47 fd       	sbrc	r20, 7
    39e0:	16 c0       	rjmp	.+44     	; 0x3a0e <strtol+0x18a>
    39e2:	86 16       	cp	r8, r22
    39e4:	97 06       	cpc	r9, r23
    39e6:	a8 06       	cpc	r10, r24
    39e8:	b9 06       	cpc	r11, r25
    39ea:	70 f0       	brcs	.+28     	; 0x3a08 <strtol+0x184>
    39ec:	a3 01       	movw	r20, r6
    39ee:	92 01       	movw	r18, r4
    39f0:	0e 94 d1 1b 	call	0x37a2	; 0x37a2 <__mulsi3>
    39f4:	63 0d       	add	r22, r3
    39f6:	71 1d       	adc	r23, r1
    39f8:	81 1d       	adc	r24, r1
    39fa:	91 1d       	adc	r25, r1
    39fc:	61 30       	cpi	r22, 0x01	; 1
    39fe:	71 05       	cpc	r23, r1
    3a00:	81 05       	cpc	r24, r1
    3a02:	20 e8       	ldi	r18, 0x80	; 128
    3a04:	92 07       	cpc	r25, r18
    3a06:	10 f0       	brcs	.+4      	; 0x3a0c <strtol+0x188>
    3a08:	4f ef       	ldi	r20, 0xFF	; 255
    3a0a:	01 c0       	rjmp	.+2      	; 0x3a0e <strtol+0x18a>
    3a0c:	41 e0       	ldi	r20, 0x01	; 1
    3a0e:	21 96       	adiw	r28, 0x01	; 1
    3a10:	10 81       	ld	r17, Z
    3a12:	cb cf       	rjmp	.-106    	; 0x39aa <strtol+0x126>
    3a14:	20 2f       	mov	r18, r16
    3a16:	21 70       	andi	r18, 0x01	; 1
    3a18:	c1 14       	cp	r12, r1
    3a1a:	d1 04       	cpc	r13, r1
    3a1c:	71 f0       	breq	.+28     	; 0x3a3a <strtol+0x1b6>
    3a1e:	44 23       	and	r20, r20
    3a20:	29 f0       	breq	.+10     	; 0x3a2c <strtol+0x1a8>
    3a22:	21 97       	sbiw	r28, 0x01	; 1
    3a24:	f6 01       	movw	r30, r12
    3a26:	d1 83       	std	Z+1, r29	; 0x01
    3a28:	c0 83       	st	Z, r28
    3a2a:	07 c0       	rjmp	.+14     	; 0x3a3a <strtol+0x1b6>
    3a2c:	01 ff       	sbrs	r16, 1
    3a2e:	19 c0       	rjmp	.+50     	; 0x3a62 <strtol+0x1de>
    3a30:	22 97       	sbiw	r28, 0x02	; 2
    3a32:	f6 01       	movw	r30, r12
    3a34:	d1 83       	std	Z+1, r29	; 0x01
    3a36:	c0 83       	st	Z, r28
    3a38:	14 c0       	rjmp	.+40     	; 0x3a62 <strtol+0x1de>
    3a3a:	47 ff       	sbrs	r20, 7
    3a3c:	12 c0       	rjmp	.+36     	; 0x3a62 <strtol+0x1de>
    3a3e:	22 23       	and	r18, r18
    3a40:	29 f0       	breq	.+10     	; 0x3a4c <strtol+0x1c8>
    3a42:	60 e0       	ldi	r22, 0x00	; 0
    3a44:	70 e0       	ldi	r23, 0x00	; 0
    3a46:	80 e0       	ldi	r24, 0x00	; 0
    3a48:	90 e8       	ldi	r25, 0x80	; 128
    3a4a:	04 c0       	rjmp	.+8      	; 0x3a54 <strtol+0x1d0>
    3a4c:	6f ef       	ldi	r22, 0xFF	; 255
    3a4e:	7f ef       	ldi	r23, 0xFF	; 255
    3a50:	8f ef       	ldi	r24, 0xFF	; 255
    3a52:	9f e7       	ldi	r25, 0x7F	; 127
    3a54:	22 e2       	ldi	r18, 0x22	; 34
    3a56:	30 e0       	ldi	r19, 0x00	; 0
    3a58:	30 93 95 04 	sts	0x0495, r19	; 0x800495 <errno+0x1>
    3a5c:	20 93 94 04 	sts	0x0494, r18	; 0x800494 <errno>
    3a60:	09 c0       	rjmp	.+18     	; 0x3a74 <strtol+0x1f0>
    3a62:	22 23       	and	r18, r18
    3a64:	81 f0       	breq	.+32     	; 0x3a86 <strtol+0x202>
    3a66:	90 95       	com	r25
    3a68:	80 95       	com	r24
    3a6a:	70 95       	com	r23
    3a6c:	61 95       	neg	r22
    3a6e:	7f 4f       	sbci	r23, 0xFF	; 255
    3a70:	8f 4f       	sbci	r24, 0xFF	; 255
    3a72:	9f 4f       	sbci	r25, 0xFF	; 255
    3a74:	46 2f       	mov	r20, r22
    3a76:	37 2f       	mov	r19, r23
    3a78:	28 2f       	mov	r18, r24
    3a7a:	12 c0       	rjmp	.+36     	; 0x3aa0 <strtol+0x21c>
    3a7c:	40 e0       	ldi	r20, 0x00	; 0
    3a7e:	30 e0       	ldi	r19, 0x00	; 0
    3a80:	20 e0       	ldi	r18, 0x00	; 0
    3a82:	90 e0       	ldi	r25, 0x00	; 0
    3a84:	0d c0       	rjmp	.+26     	; 0x3aa0 <strtol+0x21c>
    3a86:	97 ff       	sbrs	r25, 7
    3a88:	f5 cf       	rjmp	.-22     	; 0x3a74 <strtol+0x1f0>
    3a8a:	82 e2       	ldi	r24, 0x22	; 34
    3a8c:	90 e0       	ldi	r25, 0x00	; 0
    3a8e:	90 93 95 04 	sts	0x0495, r25	; 0x800495 <errno+0x1>
    3a92:	80 93 94 04 	sts	0x0494, r24	; 0x800494 <errno>
    3a96:	6f ef       	ldi	r22, 0xFF	; 255
    3a98:	7f ef       	ldi	r23, 0xFF	; 255
    3a9a:	8f ef       	ldi	r24, 0xFF	; 255
    3a9c:	9f e7       	ldi	r25, 0x7F	; 127
    3a9e:	ea cf       	rjmp	.-44     	; 0x3a74 <strtol+0x1f0>
    3aa0:	64 2f       	mov	r22, r20
    3aa2:	73 2f       	mov	r23, r19
    3aa4:	82 2f       	mov	r24, r18
    3aa6:	cd b7       	in	r28, 0x3d	; 61
    3aa8:	de b7       	in	r29, 0x3e	; 62
    3aaa:	e1 e1       	ldi	r30, 0x11	; 17
    3aac:	0c 94 8e 20 	jmp	0x411c	; 0x411c <__epilogue_restores__+0x2>

00003ab0 <atoi>:
    3ab0:	fc 01       	movw	r30, r24
    3ab2:	88 27       	eor	r24, r24
    3ab4:	99 27       	eor	r25, r25
    3ab6:	e8 94       	clt
    3ab8:	21 91       	ld	r18, Z+
    3aba:	20 32       	cpi	r18, 0x20	; 32
    3abc:	e9 f3       	breq	.-6      	; 0x3ab8 <atoi+0x8>
    3abe:	29 30       	cpi	r18, 0x09	; 9
    3ac0:	10 f0       	brcs	.+4      	; 0x3ac6 <atoi+0x16>
    3ac2:	2e 30       	cpi	r18, 0x0E	; 14
    3ac4:	c8 f3       	brcs	.-14     	; 0x3ab8 <atoi+0x8>
    3ac6:	2b 32       	cpi	r18, 0x2B	; 43
    3ac8:	41 f0       	breq	.+16     	; 0x3ada <atoi+0x2a>
    3aca:	2d 32       	cpi	r18, 0x2D	; 45
    3acc:	39 f4       	brne	.+14     	; 0x3adc <atoi+0x2c>
    3ace:	68 94       	set
    3ad0:	04 c0       	rjmp	.+8      	; 0x3ada <atoi+0x2a>
    3ad2:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <__mulhi_const_10>
    3ad6:	82 0f       	add	r24, r18
    3ad8:	91 1d       	adc	r25, r1
    3ada:	21 91       	ld	r18, Z+
    3adc:	20 53       	subi	r18, 0x30	; 48
    3ade:	2a 30       	cpi	r18, 0x0A	; 10
    3ae0:	c0 f3       	brcs	.-16     	; 0x3ad2 <atoi+0x22>
    3ae2:	1e f4       	brtc	.+6      	; 0x3aea <atoi+0x3a>
    3ae4:	90 95       	com	r25
    3ae6:	81 95       	neg	r24
    3ae8:	9f 4f       	sbci	r25, 0xFF	; 255
    3aea:	08 95       	ret

00003aec <isspace>:
    3aec:	91 11       	cpse	r25, r1
    3aee:	0c 94 be 1f 	jmp	0x3f7c	; 0x3f7c <__ctype_isfalse>
    3af2:	80 32       	cpi	r24, 0x20	; 32
    3af4:	19 f0       	breq	.+6      	; 0x3afc <isspace+0x10>
    3af6:	89 50       	subi	r24, 0x09	; 9
    3af8:	85 50       	subi	r24, 0x05	; 5
    3afa:	c8 f7       	brcc	.-14     	; 0x3aee <isspace+0x2>
    3afc:	08 95       	ret

00003afe <tolower>:
    3afe:	91 11       	cpse	r25, r1
    3b00:	08 95       	ret
    3b02:	81 54       	subi	r24, 0x41	; 65
    3b04:	8a 51       	subi	r24, 0x1A	; 26
    3b06:	08 f4       	brcc	.+2      	; 0x3b0a <tolower+0xc>
    3b08:	80 5e       	subi	r24, 0xE0	; 224
    3b0a:	85 5a       	subi	r24, 0xA5	; 165
    3b0c:	08 95       	ret

00003b0e <strtok>:
    3b0e:	4e e7       	ldi	r20, 0x7E	; 126
    3b10:	53 e0       	ldi	r21, 0x03	; 3
    3b12:	0e 94 8c 1d 	call	0x3b18	; 0x3b18 <strtok_r>
    3b16:	08 95       	ret

00003b18 <strtok_r>:
    3b18:	fa 01       	movw	r30, r20
    3b1a:	a1 91       	ld	r26, Z+
    3b1c:	b0 81       	ld	r27, Z
    3b1e:	00 97       	sbiw	r24, 0x00	; 0
    3b20:	19 f4       	brne	.+6      	; 0x3b28 <strtok_r+0x10>
    3b22:	10 97       	sbiw	r26, 0x00	; 0
    3b24:	e1 f0       	breq	.+56     	; 0x3b5e <strtok_r+0x46>
    3b26:	cd 01       	movw	r24, r26
    3b28:	dc 01       	movw	r26, r24
    3b2a:	cd 01       	movw	r24, r26
    3b2c:	0d 90       	ld	r0, X+
    3b2e:	00 20       	and	r0, r0
    3b30:	11 f4       	brne	.+4      	; 0x3b36 <strtok_r+0x1e>
    3b32:	c0 01       	movw	r24, r0
    3b34:	13 c0       	rjmp	.+38     	; 0x3b5c <strtok_r+0x44>
    3b36:	fb 01       	movw	r30, r22
    3b38:	21 91       	ld	r18, Z+
    3b3a:	22 23       	and	r18, r18
    3b3c:	19 f0       	breq	.+6      	; 0x3b44 <strtok_r+0x2c>
    3b3e:	20 15       	cp	r18, r0
    3b40:	d9 f7       	brne	.-10     	; 0x3b38 <strtok_r+0x20>
    3b42:	f3 cf       	rjmp	.-26     	; 0x3b2a <strtok_r+0x12>
    3b44:	fb 01       	movw	r30, r22
    3b46:	21 91       	ld	r18, Z+
    3b48:	20 15       	cp	r18, r0
    3b4a:	19 f4       	brne	.+6      	; 0x3b52 <strtok_r+0x3a>
    3b4c:	1e 92       	st	-X, r1
    3b4e:	11 96       	adiw	r26, 0x01	; 1
    3b50:	06 c0       	rjmp	.+12     	; 0x3b5e <strtok_r+0x46>
    3b52:	22 23       	and	r18, r18
    3b54:	c1 f7       	brne	.-16     	; 0x3b46 <strtok_r+0x2e>
    3b56:	0d 90       	ld	r0, X+
    3b58:	00 20       	and	r0, r0
    3b5a:	a1 f7       	brne	.-24     	; 0x3b44 <strtok_r+0x2c>
    3b5c:	d0 01       	movw	r26, r0
    3b5e:	fa 01       	movw	r30, r20
    3b60:	a1 93       	st	Z+, r26
    3b62:	b0 83       	st	Z, r27
    3b64:	08 95       	ret

00003b66 <__mulhi_const_10>:
    3b66:	7a e0       	ldi	r23, 0x0A	; 10
    3b68:	97 9f       	mul	r25, r23
    3b6a:	90 2d       	mov	r25, r0
    3b6c:	87 9f       	mul	r24, r23
    3b6e:	80 2d       	mov	r24, r0
    3b70:	91 0d       	add	r25, r1
    3b72:	11 24       	eor	r1, r1
    3b74:	08 95       	ret

00003b76 <sprintf>:
    3b76:	ae e0       	ldi	r26, 0x0E	; 14
    3b78:	b0 e0       	ldi	r27, 0x00	; 0
    3b7a:	e1 ec       	ldi	r30, 0xC1	; 193
    3b7c:	fd e1       	ldi	r31, 0x1D	; 29
    3b7e:	0c 94 7f 20 	jmp	0x40fe	; 0x40fe <__prologue_saves__+0x1c>
    3b82:	0d 89       	ldd	r16, Y+21	; 0x15
    3b84:	1e 89       	ldd	r17, Y+22	; 0x16
    3b86:	86 e0       	ldi	r24, 0x06	; 6
    3b88:	8c 83       	std	Y+4, r24	; 0x04
    3b8a:	1a 83       	std	Y+2, r17	; 0x02
    3b8c:	09 83       	std	Y+1, r16	; 0x01
    3b8e:	8f ef       	ldi	r24, 0xFF	; 255
    3b90:	9f e7       	ldi	r25, 0x7F	; 127
    3b92:	9e 83       	std	Y+6, r25	; 0x06
    3b94:	8d 83       	std	Y+5, r24	; 0x05
    3b96:	ae 01       	movw	r20, r28
    3b98:	47 5e       	subi	r20, 0xE7	; 231
    3b9a:	5f 4f       	sbci	r21, 0xFF	; 255
    3b9c:	6f 89       	ldd	r22, Y+23	; 0x17
    3b9e:	78 8d       	ldd	r23, Y+24	; 0x18
    3ba0:	ce 01       	movw	r24, r28
    3ba2:	01 96       	adiw	r24, 0x01	; 1
    3ba4:	0e 94 dd 1d 	call	0x3bba	; 0x3bba <vfprintf>
    3ba8:	ef 81       	ldd	r30, Y+7	; 0x07
    3baa:	f8 85       	ldd	r31, Y+8	; 0x08
    3bac:	e0 0f       	add	r30, r16
    3bae:	f1 1f       	adc	r31, r17
    3bb0:	10 82       	st	Z, r1
    3bb2:	2e 96       	adiw	r28, 0x0e	; 14
    3bb4:	e4 e0       	ldi	r30, 0x04	; 4
    3bb6:	0c 94 9b 20 	jmp	0x4136	; 0x4136 <__epilogue_restores__+0x1c>

00003bba <vfprintf>:
    3bba:	ab e0       	ldi	r26, 0x0B	; 11
    3bbc:	b0 e0       	ldi	r27, 0x00	; 0
    3bbe:	e3 ee       	ldi	r30, 0xE3	; 227
    3bc0:	fd e1       	ldi	r31, 0x1D	; 29
    3bc2:	0c 94 71 20 	jmp	0x40e2	; 0x40e2 <__prologue_saves__>
    3bc6:	6c 01       	movw	r12, r24
    3bc8:	7b 01       	movw	r14, r22
    3bca:	8a 01       	movw	r16, r20
    3bcc:	fc 01       	movw	r30, r24
    3bce:	17 82       	std	Z+7, r1	; 0x07
    3bd0:	16 82       	std	Z+6, r1	; 0x06
    3bd2:	83 81       	ldd	r24, Z+3	; 0x03
    3bd4:	81 ff       	sbrs	r24, 1
    3bd6:	cc c1       	rjmp	.+920    	; 0x3f70 <vfprintf+0x3b6>
    3bd8:	ce 01       	movw	r24, r28
    3bda:	01 96       	adiw	r24, 0x01	; 1
    3bdc:	3c 01       	movw	r6, r24
    3bde:	f6 01       	movw	r30, r12
    3be0:	93 81       	ldd	r25, Z+3	; 0x03
    3be2:	f7 01       	movw	r30, r14
    3be4:	93 fd       	sbrc	r25, 3
    3be6:	85 91       	lpm	r24, Z+
    3be8:	93 ff       	sbrs	r25, 3
    3bea:	81 91       	ld	r24, Z+
    3bec:	7f 01       	movw	r14, r30
    3bee:	88 23       	and	r24, r24
    3bf0:	09 f4       	brne	.+2      	; 0x3bf4 <vfprintf+0x3a>
    3bf2:	ba c1       	rjmp	.+884    	; 0x3f68 <vfprintf+0x3ae>
    3bf4:	85 32       	cpi	r24, 0x25	; 37
    3bf6:	39 f4       	brne	.+14     	; 0x3c06 <vfprintf+0x4c>
    3bf8:	93 fd       	sbrc	r25, 3
    3bfa:	85 91       	lpm	r24, Z+
    3bfc:	93 ff       	sbrs	r25, 3
    3bfe:	81 91       	ld	r24, Z+
    3c00:	7f 01       	movw	r14, r30
    3c02:	85 32       	cpi	r24, 0x25	; 37
    3c04:	29 f4       	brne	.+10     	; 0x3c10 <vfprintf+0x56>
    3c06:	b6 01       	movw	r22, r12
    3c08:	90 e0       	ldi	r25, 0x00	; 0
    3c0a:	0e 94 d7 1f 	call	0x3fae	; 0x3fae <fputc>
    3c0e:	e7 cf       	rjmp	.-50     	; 0x3bde <vfprintf+0x24>
    3c10:	91 2c       	mov	r9, r1
    3c12:	21 2c       	mov	r2, r1
    3c14:	31 2c       	mov	r3, r1
    3c16:	ff e1       	ldi	r31, 0x1F	; 31
    3c18:	f3 15       	cp	r31, r3
    3c1a:	d8 f0       	brcs	.+54     	; 0x3c52 <vfprintf+0x98>
    3c1c:	8b 32       	cpi	r24, 0x2B	; 43
    3c1e:	79 f0       	breq	.+30     	; 0x3c3e <vfprintf+0x84>
    3c20:	38 f4       	brcc	.+14     	; 0x3c30 <vfprintf+0x76>
    3c22:	80 32       	cpi	r24, 0x20	; 32
    3c24:	79 f0       	breq	.+30     	; 0x3c44 <vfprintf+0x8a>
    3c26:	83 32       	cpi	r24, 0x23	; 35
    3c28:	a1 f4       	brne	.+40     	; 0x3c52 <vfprintf+0x98>
    3c2a:	23 2d       	mov	r18, r3
    3c2c:	20 61       	ori	r18, 0x10	; 16
    3c2e:	1d c0       	rjmp	.+58     	; 0x3c6a <vfprintf+0xb0>
    3c30:	8d 32       	cpi	r24, 0x2D	; 45
    3c32:	61 f0       	breq	.+24     	; 0x3c4c <vfprintf+0x92>
    3c34:	80 33       	cpi	r24, 0x30	; 48
    3c36:	69 f4       	brne	.+26     	; 0x3c52 <vfprintf+0x98>
    3c38:	23 2d       	mov	r18, r3
    3c3a:	21 60       	ori	r18, 0x01	; 1
    3c3c:	16 c0       	rjmp	.+44     	; 0x3c6a <vfprintf+0xb0>
    3c3e:	83 2d       	mov	r24, r3
    3c40:	82 60       	ori	r24, 0x02	; 2
    3c42:	38 2e       	mov	r3, r24
    3c44:	e3 2d       	mov	r30, r3
    3c46:	e4 60       	ori	r30, 0x04	; 4
    3c48:	3e 2e       	mov	r3, r30
    3c4a:	2a c0       	rjmp	.+84     	; 0x3ca0 <vfprintf+0xe6>
    3c4c:	f3 2d       	mov	r31, r3
    3c4e:	f8 60       	ori	r31, 0x08	; 8
    3c50:	1d c0       	rjmp	.+58     	; 0x3c8c <vfprintf+0xd2>
    3c52:	37 fc       	sbrc	r3, 7
    3c54:	2d c0       	rjmp	.+90     	; 0x3cb0 <vfprintf+0xf6>
    3c56:	20 ed       	ldi	r18, 0xD0	; 208
    3c58:	28 0f       	add	r18, r24
    3c5a:	2a 30       	cpi	r18, 0x0A	; 10
    3c5c:	40 f0       	brcs	.+16     	; 0x3c6e <vfprintf+0xb4>
    3c5e:	8e 32       	cpi	r24, 0x2E	; 46
    3c60:	b9 f4       	brne	.+46     	; 0x3c90 <vfprintf+0xd6>
    3c62:	36 fc       	sbrc	r3, 6
    3c64:	81 c1       	rjmp	.+770    	; 0x3f68 <vfprintf+0x3ae>
    3c66:	23 2d       	mov	r18, r3
    3c68:	20 64       	ori	r18, 0x40	; 64
    3c6a:	32 2e       	mov	r3, r18
    3c6c:	19 c0       	rjmp	.+50     	; 0x3ca0 <vfprintf+0xe6>
    3c6e:	36 fe       	sbrs	r3, 6
    3c70:	06 c0       	rjmp	.+12     	; 0x3c7e <vfprintf+0xc4>
    3c72:	8a e0       	ldi	r24, 0x0A	; 10
    3c74:	98 9e       	mul	r9, r24
    3c76:	20 0d       	add	r18, r0
    3c78:	11 24       	eor	r1, r1
    3c7a:	92 2e       	mov	r9, r18
    3c7c:	11 c0       	rjmp	.+34     	; 0x3ca0 <vfprintf+0xe6>
    3c7e:	ea e0       	ldi	r30, 0x0A	; 10
    3c80:	2e 9e       	mul	r2, r30
    3c82:	20 0d       	add	r18, r0
    3c84:	11 24       	eor	r1, r1
    3c86:	22 2e       	mov	r2, r18
    3c88:	f3 2d       	mov	r31, r3
    3c8a:	f0 62       	ori	r31, 0x20	; 32
    3c8c:	3f 2e       	mov	r3, r31
    3c8e:	08 c0       	rjmp	.+16     	; 0x3ca0 <vfprintf+0xe6>
    3c90:	8c 36       	cpi	r24, 0x6C	; 108
    3c92:	21 f4       	brne	.+8      	; 0x3c9c <vfprintf+0xe2>
    3c94:	83 2d       	mov	r24, r3
    3c96:	80 68       	ori	r24, 0x80	; 128
    3c98:	38 2e       	mov	r3, r24
    3c9a:	02 c0       	rjmp	.+4      	; 0x3ca0 <vfprintf+0xe6>
    3c9c:	88 36       	cpi	r24, 0x68	; 104
    3c9e:	41 f4       	brne	.+16     	; 0x3cb0 <vfprintf+0xf6>
    3ca0:	f7 01       	movw	r30, r14
    3ca2:	93 fd       	sbrc	r25, 3
    3ca4:	85 91       	lpm	r24, Z+
    3ca6:	93 ff       	sbrs	r25, 3
    3ca8:	81 91       	ld	r24, Z+
    3caa:	7f 01       	movw	r14, r30
    3cac:	81 11       	cpse	r24, r1
    3cae:	b3 cf       	rjmp	.-154    	; 0x3c16 <vfprintf+0x5c>
    3cb0:	98 2f       	mov	r25, r24
    3cb2:	9f 7d       	andi	r25, 0xDF	; 223
    3cb4:	95 54       	subi	r25, 0x45	; 69
    3cb6:	93 30       	cpi	r25, 0x03	; 3
    3cb8:	28 f4       	brcc	.+10     	; 0x3cc4 <vfprintf+0x10a>
    3cba:	0c 5f       	subi	r16, 0xFC	; 252
    3cbc:	1f 4f       	sbci	r17, 0xFF	; 255
    3cbe:	9f e3       	ldi	r25, 0x3F	; 63
    3cc0:	99 83       	std	Y+1, r25	; 0x01
    3cc2:	0d c0       	rjmp	.+26     	; 0x3cde <vfprintf+0x124>
    3cc4:	83 36       	cpi	r24, 0x63	; 99
    3cc6:	31 f0       	breq	.+12     	; 0x3cd4 <vfprintf+0x11a>
    3cc8:	83 37       	cpi	r24, 0x73	; 115
    3cca:	71 f0       	breq	.+28     	; 0x3ce8 <vfprintf+0x12e>
    3ccc:	83 35       	cpi	r24, 0x53	; 83
    3cce:	09 f0       	breq	.+2      	; 0x3cd2 <vfprintf+0x118>
    3cd0:	59 c0       	rjmp	.+178    	; 0x3d84 <vfprintf+0x1ca>
    3cd2:	21 c0       	rjmp	.+66     	; 0x3d16 <vfprintf+0x15c>
    3cd4:	f8 01       	movw	r30, r16
    3cd6:	80 81       	ld	r24, Z
    3cd8:	89 83       	std	Y+1, r24	; 0x01
    3cda:	0e 5f       	subi	r16, 0xFE	; 254
    3cdc:	1f 4f       	sbci	r17, 0xFF	; 255
    3cde:	88 24       	eor	r8, r8
    3ce0:	83 94       	inc	r8
    3ce2:	91 2c       	mov	r9, r1
    3ce4:	53 01       	movw	r10, r6
    3ce6:	13 c0       	rjmp	.+38     	; 0x3d0e <vfprintf+0x154>
    3ce8:	28 01       	movw	r4, r16
    3cea:	f2 e0       	ldi	r31, 0x02	; 2
    3cec:	4f 0e       	add	r4, r31
    3cee:	51 1c       	adc	r5, r1
    3cf0:	f8 01       	movw	r30, r16
    3cf2:	a0 80       	ld	r10, Z
    3cf4:	b1 80       	ldd	r11, Z+1	; 0x01
    3cf6:	36 fe       	sbrs	r3, 6
    3cf8:	03 c0       	rjmp	.+6      	; 0x3d00 <vfprintf+0x146>
    3cfa:	69 2d       	mov	r22, r9
    3cfc:	70 e0       	ldi	r23, 0x00	; 0
    3cfe:	02 c0       	rjmp	.+4      	; 0x3d04 <vfprintf+0x14a>
    3d00:	6f ef       	ldi	r22, 0xFF	; 255
    3d02:	7f ef       	ldi	r23, 0xFF	; 255
    3d04:	c5 01       	movw	r24, r10
    3d06:	0e 94 cc 1f 	call	0x3f98	; 0x3f98 <strnlen>
    3d0a:	4c 01       	movw	r8, r24
    3d0c:	82 01       	movw	r16, r4
    3d0e:	f3 2d       	mov	r31, r3
    3d10:	ff 77       	andi	r31, 0x7F	; 127
    3d12:	3f 2e       	mov	r3, r31
    3d14:	16 c0       	rjmp	.+44     	; 0x3d42 <vfprintf+0x188>
    3d16:	28 01       	movw	r4, r16
    3d18:	22 e0       	ldi	r18, 0x02	; 2
    3d1a:	42 0e       	add	r4, r18
    3d1c:	51 1c       	adc	r5, r1
    3d1e:	f8 01       	movw	r30, r16
    3d20:	a0 80       	ld	r10, Z
    3d22:	b1 80       	ldd	r11, Z+1	; 0x01
    3d24:	36 fe       	sbrs	r3, 6
    3d26:	03 c0       	rjmp	.+6      	; 0x3d2e <vfprintf+0x174>
    3d28:	69 2d       	mov	r22, r9
    3d2a:	70 e0       	ldi	r23, 0x00	; 0
    3d2c:	02 c0       	rjmp	.+4      	; 0x3d32 <vfprintf+0x178>
    3d2e:	6f ef       	ldi	r22, 0xFF	; 255
    3d30:	7f ef       	ldi	r23, 0xFF	; 255
    3d32:	c5 01       	movw	r24, r10
    3d34:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <strnlen_P>
    3d38:	4c 01       	movw	r8, r24
    3d3a:	f3 2d       	mov	r31, r3
    3d3c:	f0 68       	ori	r31, 0x80	; 128
    3d3e:	3f 2e       	mov	r3, r31
    3d40:	82 01       	movw	r16, r4
    3d42:	33 fc       	sbrc	r3, 3
    3d44:	1b c0       	rjmp	.+54     	; 0x3d7c <vfprintf+0x1c2>
    3d46:	82 2d       	mov	r24, r2
    3d48:	90 e0       	ldi	r25, 0x00	; 0
    3d4a:	88 16       	cp	r8, r24
    3d4c:	99 06       	cpc	r9, r25
    3d4e:	b0 f4       	brcc	.+44     	; 0x3d7c <vfprintf+0x1c2>
    3d50:	b6 01       	movw	r22, r12
    3d52:	80 e2       	ldi	r24, 0x20	; 32
    3d54:	90 e0       	ldi	r25, 0x00	; 0
    3d56:	0e 94 d7 1f 	call	0x3fae	; 0x3fae <fputc>
    3d5a:	2a 94       	dec	r2
    3d5c:	f4 cf       	rjmp	.-24     	; 0x3d46 <vfprintf+0x18c>
    3d5e:	f5 01       	movw	r30, r10
    3d60:	37 fc       	sbrc	r3, 7
    3d62:	85 91       	lpm	r24, Z+
    3d64:	37 fe       	sbrs	r3, 7
    3d66:	81 91       	ld	r24, Z+
    3d68:	5f 01       	movw	r10, r30
    3d6a:	b6 01       	movw	r22, r12
    3d6c:	90 e0       	ldi	r25, 0x00	; 0
    3d6e:	0e 94 d7 1f 	call	0x3fae	; 0x3fae <fputc>
    3d72:	21 10       	cpse	r2, r1
    3d74:	2a 94       	dec	r2
    3d76:	21 e0       	ldi	r18, 0x01	; 1
    3d78:	82 1a       	sub	r8, r18
    3d7a:	91 08       	sbc	r9, r1
    3d7c:	81 14       	cp	r8, r1
    3d7e:	91 04       	cpc	r9, r1
    3d80:	71 f7       	brne	.-36     	; 0x3d5e <vfprintf+0x1a4>
    3d82:	e8 c0       	rjmp	.+464    	; 0x3f54 <vfprintf+0x39a>
    3d84:	84 36       	cpi	r24, 0x64	; 100
    3d86:	11 f0       	breq	.+4      	; 0x3d8c <vfprintf+0x1d2>
    3d88:	89 36       	cpi	r24, 0x69	; 105
    3d8a:	41 f5       	brne	.+80     	; 0x3ddc <vfprintf+0x222>
    3d8c:	f8 01       	movw	r30, r16
    3d8e:	37 fe       	sbrs	r3, 7
    3d90:	07 c0       	rjmp	.+14     	; 0x3da0 <vfprintf+0x1e6>
    3d92:	60 81       	ld	r22, Z
    3d94:	71 81       	ldd	r23, Z+1	; 0x01
    3d96:	82 81       	ldd	r24, Z+2	; 0x02
    3d98:	93 81       	ldd	r25, Z+3	; 0x03
    3d9a:	0c 5f       	subi	r16, 0xFC	; 252
    3d9c:	1f 4f       	sbci	r17, 0xFF	; 255
    3d9e:	08 c0       	rjmp	.+16     	; 0x3db0 <vfprintf+0x1f6>
    3da0:	60 81       	ld	r22, Z
    3da2:	71 81       	ldd	r23, Z+1	; 0x01
    3da4:	07 2e       	mov	r0, r23
    3da6:	00 0c       	add	r0, r0
    3da8:	88 0b       	sbc	r24, r24
    3daa:	99 0b       	sbc	r25, r25
    3dac:	0e 5f       	subi	r16, 0xFE	; 254
    3dae:	1f 4f       	sbci	r17, 0xFF	; 255
    3db0:	f3 2d       	mov	r31, r3
    3db2:	ff 76       	andi	r31, 0x6F	; 111
    3db4:	3f 2e       	mov	r3, r31
    3db6:	97 ff       	sbrs	r25, 7
    3db8:	09 c0       	rjmp	.+18     	; 0x3dcc <vfprintf+0x212>
    3dba:	90 95       	com	r25
    3dbc:	80 95       	com	r24
    3dbe:	70 95       	com	r23
    3dc0:	61 95       	neg	r22
    3dc2:	7f 4f       	sbci	r23, 0xFF	; 255
    3dc4:	8f 4f       	sbci	r24, 0xFF	; 255
    3dc6:	9f 4f       	sbci	r25, 0xFF	; 255
    3dc8:	f0 68       	ori	r31, 0x80	; 128
    3dca:	3f 2e       	mov	r3, r31
    3dcc:	2a e0       	ldi	r18, 0x0A	; 10
    3dce:	30 e0       	ldi	r19, 0x00	; 0
    3dd0:	a3 01       	movw	r20, r6
    3dd2:	0e 94 13 20 	call	0x4026	; 0x4026 <__ultoa_invert>
    3dd6:	88 2e       	mov	r8, r24
    3dd8:	86 18       	sub	r8, r6
    3dda:	45 c0       	rjmp	.+138    	; 0x3e66 <vfprintf+0x2ac>
    3ddc:	85 37       	cpi	r24, 0x75	; 117
    3dde:	31 f4       	brne	.+12     	; 0x3dec <vfprintf+0x232>
    3de0:	23 2d       	mov	r18, r3
    3de2:	2f 7e       	andi	r18, 0xEF	; 239
    3de4:	b2 2e       	mov	r11, r18
    3de6:	2a e0       	ldi	r18, 0x0A	; 10
    3de8:	30 e0       	ldi	r19, 0x00	; 0
    3dea:	25 c0       	rjmp	.+74     	; 0x3e36 <vfprintf+0x27c>
    3dec:	93 2d       	mov	r25, r3
    3dee:	99 7f       	andi	r25, 0xF9	; 249
    3df0:	b9 2e       	mov	r11, r25
    3df2:	8f 36       	cpi	r24, 0x6F	; 111
    3df4:	c1 f0       	breq	.+48     	; 0x3e26 <vfprintf+0x26c>
    3df6:	18 f4       	brcc	.+6      	; 0x3dfe <vfprintf+0x244>
    3df8:	88 35       	cpi	r24, 0x58	; 88
    3dfa:	79 f0       	breq	.+30     	; 0x3e1a <vfprintf+0x260>
    3dfc:	b5 c0       	rjmp	.+362    	; 0x3f68 <vfprintf+0x3ae>
    3dfe:	80 37       	cpi	r24, 0x70	; 112
    3e00:	19 f0       	breq	.+6      	; 0x3e08 <vfprintf+0x24e>
    3e02:	88 37       	cpi	r24, 0x78	; 120
    3e04:	21 f0       	breq	.+8      	; 0x3e0e <vfprintf+0x254>
    3e06:	b0 c0       	rjmp	.+352    	; 0x3f68 <vfprintf+0x3ae>
    3e08:	e9 2f       	mov	r30, r25
    3e0a:	e0 61       	ori	r30, 0x10	; 16
    3e0c:	be 2e       	mov	r11, r30
    3e0e:	b4 fe       	sbrs	r11, 4
    3e10:	0d c0       	rjmp	.+26     	; 0x3e2c <vfprintf+0x272>
    3e12:	fb 2d       	mov	r31, r11
    3e14:	f4 60       	ori	r31, 0x04	; 4
    3e16:	bf 2e       	mov	r11, r31
    3e18:	09 c0       	rjmp	.+18     	; 0x3e2c <vfprintf+0x272>
    3e1a:	34 fe       	sbrs	r3, 4
    3e1c:	0a c0       	rjmp	.+20     	; 0x3e32 <vfprintf+0x278>
    3e1e:	29 2f       	mov	r18, r25
    3e20:	26 60       	ori	r18, 0x06	; 6
    3e22:	b2 2e       	mov	r11, r18
    3e24:	06 c0       	rjmp	.+12     	; 0x3e32 <vfprintf+0x278>
    3e26:	28 e0       	ldi	r18, 0x08	; 8
    3e28:	30 e0       	ldi	r19, 0x00	; 0
    3e2a:	05 c0       	rjmp	.+10     	; 0x3e36 <vfprintf+0x27c>
    3e2c:	20 e1       	ldi	r18, 0x10	; 16
    3e2e:	30 e0       	ldi	r19, 0x00	; 0
    3e30:	02 c0       	rjmp	.+4      	; 0x3e36 <vfprintf+0x27c>
    3e32:	20 e1       	ldi	r18, 0x10	; 16
    3e34:	32 e0       	ldi	r19, 0x02	; 2
    3e36:	f8 01       	movw	r30, r16
    3e38:	b7 fe       	sbrs	r11, 7
    3e3a:	07 c0       	rjmp	.+14     	; 0x3e4a <vfprintf+0x290>
    3e3c:	60 81       	ld	r22, Z
    3e3e:	71 81       	ldd	r23, Z+1	; 0x01
    3e40:	82 81       	ldd	r24, Z+2	; 0x02
    3e42:	93 81       	ldd	r25, Z+3	; 0x03
    3e44:	0c 5f       	subi	r16, 0xFC	; 252
    3e46:	1f 4f       	sbci	r17, 0xFF	; 255
    3e48:	06 c0       	rjmp	.+12     	; 0x3e56 <vfprintf+0x29c>
    3e4a:	60 81       	ld	r22, Z
    3e4c:	71 81       	ldd	r23, Z+1	; 0x01
    3e4e:	80 e0       	ldi	r24, 0x00	; 0
    3e50:	90 e0       	ldi	r25, 0x00	; 0
    3e52:	0e 5f       	subi	r16, 0xFE	; 254
    3e54:	1f 4f       	sbci	r17, 0xFF	; 255
    3e56:	a3 01       	movw	r20, r6
    3e58:	0e 94 13 20 	call	0x4026	; 0x4026 <__ultoa_invert>
    3e5c:	88 2e       	mov	r8, r24
    3e5e:	86 18       	sub	r8, r6
    3e60:	fb 2d       	mov	r31, r11
    3e62:	ff 77       	andi	r31, 0x7F	; 127
    3e64:	3f 2e       	mov	r3, r31
    3e66:	36 fe       	sbrs	r3, 6
    3e68:	0d c0       	rjmp	.+26     	; 0x3e84 <vfprintf+0x2ca>
    3e6a:	23 2d       	mov	r18, r3
    3e6c:	2e 7f       	andi	r18, 0xFE	; 254
    3e6e:	a2 2e       	mov	r10, r18
    3e70:	89 14       	cp	r8, r9
    3e72:	58 f4       	brcc	.+22     	; 0x3e8a <vfprintf+0x2d0>
    3e74:	34 fe       	sbrs	r3, 4
    3e76:	0b c0       	rjmp	.+22     	; 0x3e8e <vfprintf+0x2d4>
    3e78:	32 fc       	sbrc	r3, 2
    3e7a:	09 c0       	rjmp	.+18     	; 0x3e8e <vfprintf+0x2d4>
    3e7c:	83 2d       	mov	r24, r3
    3e7e:	8e 7e       	andi	r24, 0xEE	; 238
    3e80:	a8 2e       	mov	r10, r24
    3e82:	05 c0       	rjmp	.+10     	; 0x3e8e <vfprintf+0x2d4>
    3e84:	b8 2c       	mov	r11, r8
    3e86:	a3 2c       	mov	r10, r3
    3e88:	03 c0       	rjmp	.+6      	; 0x3e90 <vfprintf+0x2d6>
    3e8a:	b8 2c       	mov	r11, r8
    3e8c:	01 c0       	rjmp	.+2      	; 0x3e90 <vfprintf+0x2d6>
    3e8e:	b9 2c       	mov	r11, r9
    3e90:	a4 fe       	sbrs	r10, 4
    3e92:	0f c0       	rjmp	.+30     	; 0x3eb2 <vfprintf+0x2f8>
    3e94:	fe 01       	movw	r30, r28
    3e96:	e8 0d       	add	r30, r8
    3e98:	f1 1d       	adc	r31, r1
    3e9a:	80 81       	ld	r24, Z
    3e9c:	80 33       	cpi	r24, 0x30	; 48
    3e9e:	21 f4       	brne	.+8      	; 0x3ea8 <vfprintf+0x2ee>
    3ea0:	9a 2d       	mov	r25, r10
    3ea2:	99 7e       	andi	r25, 0xE9	; 233
    3ea4:	a9 2e       	mov	r10, r25
    3ea6:	09 c0       	rjmp	.+18     	; 0x3eba <vfprintf+0x300>
    3ea8:	a2 fe       	sbrs	r10, 2
    3eaa:	06 c0       	rjmp	.+12     	; 0x3eb8 <vfprintf+0x2fe>
    3eac:	b3 94       	inc	r11
    3eae:	b3 94       	inc	r11
    3eb0:	04 c0       	rjmp	.+8      	; 0x3eba <vfprintf+0x300>
    3eb2:	8a 2d       	mov	r24, r10
    3eb4:	86 78       	andi	r24, 0x86	; 134
    3eb6:	09 f0       	breq	.+2      	; 0x3eba <vfprintf+0x300>
    3eb8:	b3 94       	inc	r11
    3eba:	a3 fc       	sbrc	r10, 3
    3ebc:	11 c0       	rjmp	.+34     	; 0x3ee0 <vfprintf+0x326>
    3ebe:	a0 fe       	sbrs	r10, 0
    3ec0:	06 c0       	rjmp	.+12     	; 0x3ece <vfprintf+0x314>
    3ec2:	b2 14       	cp	r11, r2
    3ec4:	88 f4       	brcc	.+34     	; 0x3ee8 <vfprintf+0x32e>
    3ec6:	28 0c       	add	r2, r8
    3ec8:	92 2c       	mov	r9, r2
    3eca:	9b 18       	sub	r9, r11
    3ecc:	0e c0       	rjmp	.+28     	; 0x3eea <vfprintf+0x330>
    3ece:	b2 14       	cp	r11, r2
    3ed0:	60 f4       	brcc	.+24     	; 0x3eea <vfprintf+0x330>
    3ed2:	b6 01       	movw	r22, r12
    3ed4:	80 e2       	ldi	r24, 0x20	; 32
    3ed6:	90 e0       	ldi	r25, 0x00	; 0
    3ed8:	0e 94 d7 1f 	call	0x3fae	; 0x3fae <fputc>
    3edc:	b3 94       	inc	r11
    3ede:	f7 cf       	rjmp	.-18     	; 0x3ece <vfprintf+0x314>
    3ee0:	b2 14       	cp	r11, r2
    3ee2:	18 f4       	brcc	.+6      	; 0x3eea <vfprintf+0x330>
    3ee4:	2b 18       	sub	r2, r11
    3ee6:	02 c0       	rjmp	.+4      	; 0x3eec <vfprintf+0x332>
    3ee8:	98 2c       	mov	r9, r8
    3eea:	21 2c       	mov	r2, r1
    3eec:	a4 fe       	sbrs	r10, 4
    3eee:	10 c0       	rjmp	.+32     	; 0x3f10 <vfprintf+0x356>
    3ef0:	b6 01       	movw	r22, r12
    3ef2:	80 e3       	ldi	r24, 0x30	; 48
    3ef4:	90 e0       	ldi	r25, 0x00	; 0
    3ef6:	0e 94 d7 1f 	call	0x3fae	; 0x3fae <fputc>
    3efa:	a2 fe       	sbrs	r10, 2
    3efc:	17 c0       	rjmp	.+46     	; 0x3f2c <vfprintf+0x372>
    3efe:	a1 fc       	sbrc	r10, 1
    3f00:	03 c0       	rjmp	.+6      	; 0x3f08 <vfprintf+0x34e>
    3f02:	88 e7       	ldi	r24, 0x78	; 120
    3f04:	90 e0       	ldi	r25, 0x00	; 0
    3f06:	02 c0       	rjmp	.+4      	; 0x3f0c <vfprintf+0x352>
    3f08:	88 e5       	ldi	r24, 0x58	; 88
    3f0a:	90 e0       	ldi	r25, 0x00	; 0
    3f0c:	b6 01       	movw	r22, r12
    3f0e:	0c c0       	rjmp	.+24     	; 0x3f28 <vfprintf+0x36e>
    3f10:	8a 2d       	mov	r24, r10
    3f12:	86 78       	andi	r24, 0x86	; 134
    3f14:	59 f0       	breq	.+22     	; 0x3f2c <vfprintf+0x372>
    3f16:	a1 fe       	sbrs	r10, 1
    3f18:	02 c0       	rjmp	.+4      	; 0x3f1e <vfprintf+0x364>
    3f1a:	8b e2       	ldi	r24, 0x2B	; 43
    3f1c:	01 c0       	rjmp	.+2      	; 0x3f20 <vfprintf+0x366>
    3f1e:	80 e2       	ldi	r24, 0x20	; 32
    3f20:	a7 fc       	sbrc	r10, 7
    3f22:	8d e2       	ldi	r24, 0x2D	; 45
    3f24:	b6 01       	movw	r22, r12
    3f26:	90 e0       	ldi	r25, 0x00	; 0
    3f28:	0e 94 d7 1f 	call	0x3fae	; 0x3fae <fputc>
    3f2c:	89 14       	cp	r8, r9
    3f2e:	38 f4       	brcc	.+14     	; 0x3f3e <vfprintf+0x384>
    3f30:	b6 01       	movw	r22, r12
    3f32:	80 e3       	ldi	r24, 0x30	; 48
    3f34:	90 e0       	ldi	r25, 0x00	; 0
    3f36:	0e 94 d7 1f 	call	0x3fae	; 0x3fae <fputc>
    3f3a:	9a 94       	dec	r9
    3f3c:	f7 cf       	rjmp	.-18     	; 0x3f2c <vfprintf+0x372>
    3f3e:	8a 94       	dec	r8
    3f40:	f3 01       	movw	r30, r6
    3f42:	e8 0d       	add	r30, r8
    3f44:	f1 1d       	adc	r31, r1
    3f46:	80 81       	ld	r24, Z
    3f48:	b6 01       	movw	r22, r12
    3f4a:	90 e0       	ldi	r25, 0x00	; 0
    3f4c:	0e 94 d7 1f 	call	0x3fae	; 0x3fae <fputc>
    3f50:	81 10       	cpse	r8, r1
    3f52:	f5 cf       	rjmp	.-22     	; 0x3f3e <vfprintf+0x384>
    3f54:	22 20       	and	r2, r2
    3f56:	09 f4       	brne	.+2      	; 0x3f5a <vfprintf+0x3a0>
    3f58:	42 ce       	rjmp	.-892    	; 0x3bde <vfprintf+0x24>
    3f5a:	b6 01       	movw	r22, r12
    3f5c:	80 e2       	ldi	r24, 0x20	; 32
    3f5e:	90 e0       	ldi	r25, 0x00	; 0
    3f60:	0e 94 d7 1f 	call	0x3fae	; 0x3fae <fputc>
    3f64:	2a 94       	dec	r2
    3f66:	f6 cf       	rjmp	.-20     	; 0x3f54 <vfprintf+0x39a>
    3f68:	f6 01       	movw	r30, r12
    3f6a:	86 81       	ldd	r24, Z+6	; 0x06
    3f6c:	97 81       	ldd	r25, Z+7	; 0x07
    3f6e:	02 c0       	rjmp	.+4      	; 0x3f74 <vfprintf+0x3ba>
    3f70:	8f ef       	ldi	r24, 0xFF	; 255
    3f72:	9f ef       	ldi	r25, 0xFF	; 255
    3f74:	2b 96       	adiw	r28, 0x0b	; 11
    3f76:	e2 e1       	ldi	r30, 0x12	; 18
    3f78:	0c 94 8d 20 	jmp	0x411a	; 0x411a <__epilogue_restores__>

00003f7c <__ctype_isfalse>:
    3f7c:	99 27       	eor	r25, r25
    3f7e:	88 27       	eor	r24, r24

00003f80 <__ctype_istrue>:
    3f80:	08 95       	ret

00003f82 <strnlen_P>:
    3f82:	fc 01       	movw	r30, r24
    3f84:	05 90       	lpm	r0, Z+
    3f86:	61 50       	subi	r22, 0x01	; 1
    3f88:	70 40       	sbci	r23, 0x00	; 0
    3f8a:	01 10       	cpse	r0, r1
    3f8c:	d8 f7       	brcc	.-10     	; 0x3f84 <strnlen_P+0x2>
    3f8e:	80 95       	com	r24
    3f90:	90 95       	com	r25
    3f92:	8e 0f       	add	r24, r30
    3f94:	9f 1f       	adc	r25, r31
    3f96:	08 95       	ret

00003f98 <strnlen>:
    3f98:	fc 01       	movw	r30, r24
    3f9a:	61 50       	subi	r22, 0x01	; 1
    3f9c:	70 40       	sbci	r23, 0x00	; 0
    3f9e:	01 90       	ld	r0, Z+
    3fa0:	01 10       	cpse	r0, r1
    3fa2:	d8 f7       	brcc	.-10     	; 0x3f9a <strnlen+0x2>
    3fa4:	80 95       	com	r24
    3fa6:	90 95       	com	r25
    3fa8:	8e 0f       	add	r24, r30
    3faa:	9f 1f       	adc	r25, r31
    3fac:	08 95       	ret

00003fae <fputc>:
    3fae:	0f 93       	push	r16
    3fb0:	1f 93       	push	r17
    3fb2:	cf 93       	push	r28
    3fb4:	df 93       	push	r29
    3fb6:	fb 01       	movw	r30, r22
    3fb8:	23 81       	ldd	r18, Z+3	; 0x03
    3fba:	21 fd       	sbrc	r18, 1
    3fbc:	03 c0       	rjmp	.+6      	; 0x3fc4 <fputc+0x16>
    3fbe:	8f ef       	ldi	r24, 0xFF	; 255
    3fc0:	9f ef       	ldi	r25, 0xFF	; 255
    3fc2:	2c c0       	rjmp	.+88     	; 0x401c <fputc+0x6e>
    3fc4:	22 ff       	sbrs	r18, 2
    3fc6:	16 c0       	rjmp	.+44     	; 0x3ff4 <fputc+0x46>
    3fc8:	46 81       	ldd	r20, Z+6	; 0x06
    3fca:	57 81       	ldd	r21, Z+7	; 0x07
    3fcc:	24 81       	ldd	r18, Z+4	; 0x04
    3fce:	35 81       	ldd	r19, Z+5	; 0x05
    3fd0:	42 17       	cp	r20, r18
    3fd2:	53 07       	cpc	r21, r19
    3fd4:	44 f4       	brge	.+16     	; 0x3fe6 <fputc+0x38>
    3fd6:	a0 81       	ld	r26, Z
    3fd8:	b1 81       	ldd	r27, Z+1	; 0x01
    3fda:	9d 01       	movw	r18, r26
    3fdc:	2f 5f       	subi	r18, 0xFF	; 255
    3fde:	3f 4f       	sbci	r19, 0xFF	; 255
    3fe0:	31 83       	std	Z+1, r19	; 0x01
    3fe2:	20 83       	st	Z, r18
    3fe4:	8c 93       	st	X, r24
    3fe6:	26 81       	ldd	r18, Z+6	; 0x06
    3fe8:	37 81       	ldd	r19, Z+7	; 0x07
    3fea:	2f 5f       	subi	r18, 0xFF	; 255
    3fec:	3f 4f       	sbci	r19, 0xFF	; 255
    3fee:	37 83       	std	Z+7, r19	; 0x07
    3ff0:	26 83       	std	Z+6, r18	; 0x06
    3ff2:	14 c0       	rjmp	.+40     	; 0x401c <fputc+0x6e>
    3ff4:	8b 01       	movw	r16, r22
    3ff6:	ec 01       	movw	r28, r24
    3ff8:	fb 01       	movw	r30, r22
    3ffa:	00 84       	ldd	r0, Z+8	; 0x08
    3ffc:	f1 85       	ldd	r31, Z+9	; 0x09
    3ffe:	e0 2d       	mov	r30, r0
    4000:	09 95       	icall
    4002:	89 2b       	or	r24, r25
    4004:	e1 f6       	brne	.-72     	; 0x3fbe <fputc+0x10>
    4006:	d8 01       	movw	r26, r16
    4008:	16 96       	adiw	r26, 0x06	; 6
    400a:	8d 91       	ld	r24, X+
    400c:	9c 91       	ld	r25, X
    400e:	17 97       	sbiw	r26, 0x07	; 7
    4010:	01 96       	adiw	r24, 0x01	; 1
    4012:	17 96       	adiw	r26, 0x07	; 7
    4014:	9c 93       	st	X, r25
    4016:	8e 93       	st	-X, r24
    4018:	16 97       	sbiw	r26, 0x06	; 6
    401a:	ce 01       	movw	r24, r28
    401c:	df 91       	pop	r29
    401e:	cf 91       	pop	r28
    4020:	1f 91       	pop	r17
    4022:	0f 91       	pop	r16
    4024:	08 95       	ret

00004026 <__ultoa_invert>:
    4026:	fa 01       	movw	r30, r20
    4028:	aa 27       	eor	r26, r26
    402a:	28 30       	cpi	r18, 0x08	; 8
    402c:	51 f1       	breq	.+84     	; 0x4082 <__ultoa_invert+0x5c>
    402e:	20 31       	cpi	r18, 0x10	; 16
    4030:	81 f1       	breq	.+96     	; 0x4092 <__ultoa_invert+0x6c>
    4032:	e8 94       	clt
    4034:	6f 93       	push	r22
    4036:	6e 7f       	andi	r22, 0xFE	; 254
    4038:	6e 5f       	subi	r22, 0xFE	; 254
    403a:	7f 4f       	sbci	r23, 0xFF	; 255
    403c:	8f 4f       	sbci	r24, 0xFF	; 255
    403e:	9f 4f       	sbci	r25, 0xFF	; 255
    4040:	af 4f       	sbci	r26, 0xFF	; 255
    4042:	b1 e0       	ldi	r27, 0x01	; 1
    4044:	3e d0       	rcall	.+124    	; 0x40c2 <__ultoa_invert+0x9c>
    4046:	b4 e0       	ldi	r27, 0x04	; 4
    4048:	3c d0       	rcall	.+120    	; 0x40c2 <__ultoa_invert+0x9c>
    404a:	67 0f       	add	r22, r23
    404c:	78 1f       	adc	r23, r24
    404e:	89 1f       	adc	r24, r25
    4050:	9a 1f       	adc	r25, r26
    4052:	a1 1d       	adc	r26, r1
    4054:	68 0f       	add	r22, r24
    4056:	79 1f       	adc	r23, r25
    4058:	8a 1f       	adc	r24, r26
    405a:	91 1d       	adc	r25, r1
    405c:	a1 1d       	adc	r26, r1
    405e:	6a 0f       	add	r22, r26
    4060:	71 1d       	adc	r23, r1
    4062:	81 1d       	adc	r24, r1
    4064:	91 1d       	adc	r25, r1
    4066:	a1 1d       	adc	r26, r1
    4068:	20 d0       	rcall	.+64     	; 0x40aa <__ultoa_invert+0x84>
    406a:	09 f4       	brne	.+2      	; 0x406e <__ultoa_invert+0x48>
    406c:	68 94       	set
    406e:	3f 91       	pop	r19
    4070:	2a e0       	ldi	r18, 0x0A	; 10
    4072:	26 9f       	mul	r18, r22
    4074:	11 24       	eor	r1, r1
    4076:	30 19       	sub	r19, r0
    4078:	30 5d       	subi	r19, 0xD0	; 208
    407a:	31 93       	st	Z+, r19
    407c:	de f6       	brtc	.-74     	; 0x4034 <__ultoa_invert+0xe>
    407e:	cf 01       	movw	r24, r30
    4080:	08 95       	ret
    4082:	46 2f       	mov	r20, r22
    4084:	47 70       	andi	r20, 0x07	; 7
    4086:	40 5d       	subi	r20, 0xD0	; 208
    4088:	41 93       	st	Z+, r20
    408a:	b3 e0       	ldi	r27, 0x03	; 3
    408c:	0f d0       	rcall	.+30     	; 0x40ac <__ultoa_invert+0x86>
    408e:	c9 f7       	brne	.-14     	; 0x4082 <__ultoa_invert+0x5c>
    4090:	f6 cf       	rjmp	.-20     	; 0x407e <__ultoa_invert+0x58>
    4092:	46 2f       	mov	r20, r22
    4094:	4f 70       	andi	r20, 0x0F	; 15
    4096:	40 5d       	subi	r20, 0xD0	; 208
    4098:	4a 33       	cpi	r20, 0x3A	; 58
    409a:	18 f0       	brcs	.+6      	; 0x40a2 <__ultoa_invert+0x7c>
    409c:	49 5d       	subi	r20, 0xD9	; 217
    409e:	31 fd       	sbrc	r19, 1
    40a0:	40 52       	subi	r20, 0x20	; 32
    40a2:	41 93       	st	Z+, r20
    40a4:	02 d0       	rcall	.+4      	; 0x40aa <__ultoa_invert+0x84>
    40a6:	a9 f7       	brne	.-22     	; 0x4092 <__ultoa_invert+0x6c>
    40a8:	ea cf       	rjmp	.-44     	; 0x407e <__ultoa_invert+0x58>
    40aa:	b4 e0       	ldi	r27, 0x04	; 4
    40ac:	a6 95       	lsr	r26
    40ae:	97 95       	ror	r25
    40b0:	87 95       	ror	r24
    40b2:	77 95       	ror	r23
    40b4:	67 95       	ror	r22
    40b6:	ba 95       	dec	r27
    40b8:	c9 f7       	brne	.-14     	; 0x40ac <__ultoa_invert+0x86>
    40ba:	00 97       	sbiw	r24, 0x00	; 0
    40bc:	61 05       	cpc	r22, r1
    40be:	71 05       	cpc	r23, r1
    40c0:	08 95       	ret
    40c2:	9b 01       	movw	r18, r22
    40c4:	ac 01       	movw	r20, r24
    40c6:	0a 2e       	mov	r0, r26
    40c8:	06 94       	lsr	r0
    40ca:	57 95       	ror	r21
    40cc:	47 95       	ror	r20
    40ce:	37 95       	ror	r19
    40d0:	27 95       	ror	r18
    40d2:	ba 95       	dec	r27
    40d4:	c9 f7       	brne	.-14     	; 0x40c8 <__ultoa_invert+0xa2>
    40d6:	62 0f       	add	r22, r18
    40d8:	73 1f       	adc	r23, r19
    40da:	84 1f       	adc	r24, r20
    40dc:	95 1f       	adc	r25, r21
    40de:	a0 1d       	adc	r26, r0
    40e0:	08 95       	ret

000040e2 <__prologue_saves__>:
    40e2:	2f 92       	push	r2
    40e4:	3f 92       	push	r3
    40e6:	4f 92       	push	r4
    40e8:	5f 92       	push	r5
    40ea:	6f 92       	push	r6
    40ec:	7f 92       	push	r7
    40ee:	8f 92       	push	r8
    40f0:	9f 92       	push	r9
    40f2:	af 92       	push	r10
    40f4:	bf 92       	push	r11
    40f6:	cf 92       	push	r12
    40f8:	df 92       	push	r13
    40fa:	ef 92       	push	r14
    40fc:	ff 92       	push	r15
    40fe:	0f 93       	push	r16
    4100:	1f 93       	push	r17
    4102:	cf 93       	push	r28
    4104:	df 93       	push	r29
    4106:	cd b7       	in	r28, 0x3d	; 61
    4108:	de b7       	in	r29, 0x3e	; 62
    410a:	ca 1b       	sub	r28, r26
    410c:	db 0b       	sbc	r29, r27
    410e:	0f b6       	in	r0, 0x3f	; 63
    4110:	f8 94       	cli
    4112:	de bf       	out	0x3e, r29	; 62
    4114:	0f be       	out	0x3f, r0	; 63
    4116:	cd bf       	out	0x3d, r28	; 61
    4118:	09 94       	ijmp

0000411a <__epilogue_restores__>:
    411a:	2a 88       	ldd	r2, Y+18	; 0x12
    411c:	39 88       	ldd	r3, Y+17	; 0x11
    411e:	48 88       	ldd	r4, Y+16	; 0x10
    4120:	5f 84       	ldd	r5, Y+15	; 0x0f
    4122:	6e 84       	ldd	r6, Y+14	; 0x0e
    4124:	7d 84       	ldd	r7, Y+13	; 0x0d
    4126:	8c 84       	ldd	r8, Y+12	; 0x0c
    4128:	9b 84       	ldd	r9, Y+11	; 0x0b
    412a:	aa 84       	ldd	r10, Y+10	; 0x0a
    412c:	b9 84       	ldd	r11, Y+9	; 0x09
    412e:	c8 84       	ldd	r12, Y+8	; 0x08
    4130:	df 80       	ldd	r13, Y+7	; 0x07
    4132:	ee 80       	ldd	r14, Y+6	; 0x06
    4134:	fd 80       	ldd	r15, Y+5	; 0x05
    4136:	0c 81       	ldd	r16, Y+4	; 0x04
    4138:	1b 81       	ldd	r17, Y+3	; 0x03
    413a:	aa 81       	ldd	r26, Y+2	; 0x02
    413c:	b9 81       	ldd	r27, Y+1	; 0x01
    413e:	ce 0f       	add	r28, r30
    4140:	d1 1d       	adc	r29, r1
    4142:	0f b6       	in	r0, 0x3f	; 63
    4144:	f8 94       	cli
    4146:	de bf       	out	0x3e, r29	; 62
    4148:	0f be       	out	0x3f, r0	; 63
    414a:	cd bf       	out	0x3d, r28	; 61
    414c:	ed 01       	movw	r28, r26
    414e:	08 95       	ret

00004150 <__do_global_dtors>:
    4150:	10 e0       	ldi	r17, 0x00	; 0
    4152:	c3 e6       	ldi	r28, 0x63	; 99
    4154:	d0 e0       	ldi	r29, 0x00	; 0
    4156:	04 c0       	rjmp	.+8      	; 0x4160 <__do_global_dtors+0x10>
    4158:	fe 01       	movw	r30, r28
    415a:	0e 94 2d 1c 	call	0x385a	; 0x385a <__tablejump2__>
    415e:	21 96       	adiw	r28, 0x01	; 1
    4160:	c4 36       	cpi	r28, 0x64	; 100
    4162:	d1 07       	cpc	r29, r17
    4164:	c9 f7       	brne	.-14     	; 0x4158 <__do_global_dtors+0x8>
    4166:	f8 94       	cli

00004168 <__stop_program>:
    4168:	ff cf       	rjmp	.-2      	; 0x4168 <__stop_program>
