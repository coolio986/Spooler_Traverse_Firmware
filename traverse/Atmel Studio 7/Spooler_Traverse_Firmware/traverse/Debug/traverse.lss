
traverse.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002a4  00800100  000045b8  0000464c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000045b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000011c  008003a4  008003a4  000048f0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000048f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000494c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000570  00000000  00000000  0000498c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000cde0  00000000  00000000  00004efc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000028bd  00000000  00000000  00011cdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003bc2  00000000  00000000  00014599  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000014ec  00000000  00000000  0001815c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003325  00000000  00000000  00019648  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000057ba  00000000  00000000  0001c96d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000500  00000000  00000000  00022127  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__dtors_end>
       4:	0c 94 d2 0b 	jmp	0x17a4	; 0x17a4 <__vector_1>
       8:	0c 94 03 0c 	jmp	0x1806	; 0x1806 <__vector_2>
       c:	0c 94 34 0c 	jmp	0x1868	; 0x1868 <__vector_3>
      10:	0c 94 e1 0c 	jmp	0x19c2	; 0x19c2 <__vector_4>
      14:	0c 94 8e 0d 	jmp	0x1b1c	; 0x1b1c <__vector_5>
      18:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      1c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      20:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      24:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      28:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      2c:	0c 94 45 0f 	jmp	0x1e8a	; 0x1e8a <__vector_11>
      30:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      34:	0c 94 51 0e 	jmp	0x1ca2	; 0x1ca2 <__vector_13>
      38:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      3c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      40:	0c 94 2b 1d 	jmp	0x3a56	; 0x3a56 <__vector_16>
      44:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      48:	0c 94 21 1b 	jmp	0x3642	; 0x3642 <__vector_18>
      4c:	0c 94 53 1b 	jmp	0x36a6	; 0x36a6 <__vector_19>
      50:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      54:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      58:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      5c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      60:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      64:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 01       	movw	r0, r0
      6a:	02 03       	mulsu	r16, r18
      6c:	04 05       	cpc	r16, r4
      6e:	06 07       	cpc	r16, r22
      70:	00 01       	movw	r0, r0
      72:	02 03       	mulsu	r16, r18
      74:	04 05       	cpc	r16, r4
      76:	00 01       	movw	r0, r0
      78:	02 03       	mulsu	r16, r18
      7a:	04 05       	cpc	r16, r4

0000007c <digital_pin_to_bit_mask_PGM>:
      7c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      8c:	04 08 10 20                                         ... 

00000090 <digital_pin_to_port_PGM>:
      90:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      a0:	03 03 03 03                                         ....

000000a4 <port_to_input_PGM>:
      a4:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

000000ae <port_to_output_PGM>:
      ae:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000b8 <port_to_mode_PGM>:
      b8:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000c2 <__ctors_start>:
      c2:	5c 18       	sub	r5, r12
      c4:	83 1b       	sub	r24, r19

000000c6 <__ctors_end>:
      c6:	69 18       	sub	r6, r9

000000c8 <__dtors_end>:
      c8:	11 24       	eor	r1, r1
      ca:	1f be       	out	0x3f, r1	; 63
      cc:	cf ef       	ldi	r28, 0xFF	; 255
      ce:	d8 e0       	ldi	r29, 0x08	; 8
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_copy_data>:
      d4:	13 e0       	ldi	r17, 0x03	; 3
      d6:	a0 e0       	ldi	r26, 0x00	; 0
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	e8 eb       	ldi	r30, 0xB8	; 184
      dc:	f5 e4       	ldi	r31, 0x45	; 69
      de:	02 c0       	rjmp	.+4      	; 0xe4 <__do_copy_data+0x10>
      e0:	05 90       	lpm	r0, Z+
      e2:	0d 92       	st	X+, r0
      e4:	a4 3a       	cpi	r26, 0xA4	; 164
      e6:	b1 07       	cpc	r27, r17
      e8:	d9 f7       	brne	.-10     	; 0xe0 <__do_copy_data+0xc>

000000ea <__do_clear_bss>:
      ea:	24 e0       	ldi	r18, 0x04	; 4
      ec:	a4 ea       	ldi	r26, 0xA4	; 164
      ee:	b3 e0       	ldi	r27, 0x03	; 3
      f0:	01 c0       	rjmp	.+2      	; 0xf4 <.do_clear_bss_start>

000000f2 <.do_clear_bss_loop>:
      f2:	1d 92       	st	X+, r1

000000f4 <.do_clear_bss_start>:
      f4:	a0 3c       	cpi	r26, 0xC0	; 192
      f6:	b2 07       	cpc	r27, r18
      f8:	e1 f7       	brne	.-8      	; 0xf2 <.do_clear_bss_loop>

000000fa <__do_global_ctors>:
      fa:	10 e0       	ldi	r17, 0x00	; 0
      fc:	c3 e6       	ldi	r28, 0x63	; 99
      fe:	d0 e0       	ldi	r29, 0x00	; 0
     100:	04 c0       	rjmp	.+8      	; 0x10a <__do_global_ctors+0x10>
     102:	21 97       	sbiw	r28, 0x01	; 1
     104:	fe 01       	movw	r30, r28
     106:	0e 94 54 1e 	call	0x3ca8	; 0x3ca8 <__tablejump2__>
     10a:	c1 36       	cpi	r28, 0x61	; 97
     10c:	d1 07       	cpc	r29, r17
     10e:	c9 f7       	brne	.-14     	; 0x102 <__do_global_ctors+0x8>
     110:	0e 94 b1 1b 	call	0x3762	; 0x3762 <main>
     114:	0c 94 cf 22 	jmp	0x459e	; 0x459e <__do_global_dtors>

00000118 <__bad_interrupt>:
     118:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011c <_ZN17ADC_ConfigurationC1Ev>:

#include <Arduino.h>
#include "ADC_Configuration.h"

// default constructor
ADC_Configuration::ADC_Configuration()
     11c:	cf 93       	push	r28
     11e:	df 93       	push	r29
     120:	00 d0       	rcall	.+0      	; 0x122 <_ZN17ADC_ConfigurationC1Ev+0x6>
     122:	cd b7       	in	r28, 0x3d	; 61
     124:	de b7       	in	r29, 0x3e	; 62
     126:	9a 83       	std	Y+2, r25	; 0x02
     128:	89 83       	std	Y+1, r24	; 0x01
{
  
} //ADC_Configuration
     12a:	00 00       	nop
     12c:	0f 90       	pop	r0
     12e:	0f 90       	pop	r0
     130:	df 91       	pop	r29
     132:	cf 91       	pop	r28
     134:	08 95       	ret

00000136 <_ZN17ADC_Configuration8SetupADCEv>:

void ADC_Configuration::SetupADC(void)
  {
     136:	cf 93       	push	r28
     138:	df 93       	push	r29
     13a:	cd b7       	in	r28, 0x3d	; 61
     13c:	de b7       	in	r29, 0x3e	; 62
    #if FASTADC
    // set prescale to 16
    sbi(ADCSRA,ADPS2) ;
     13e:	8a e7       	ldi	r24, 0x7A	; 122
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	2a e7       	ldi	r18, 0x7A	; 122
     144:	30 e0       	ldi	r19, 0x00	; 0
     146:	f9 01       	movw	r30, r18
     148:	20 81       	ld	r18, Z
     14a:	24 60       	ori	r18, 0x04	; 4
     14c:	fc 01       	movw	r30, r24
     14e:	20 83       	st	Z, r18
    cbi(ADCSRA,ADPS1) ;
     150:	8a e7       	ldi	r24, 0x7A	; 122
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	2a e7       	ldi	r18, 0x7A	; 122
     156:	30 e0       	ldi	r19, 0x00	; 0
     158:	f9 01       	movw	r30, r18
     15a:	20 81       	ld	r18, Z
     15c:	2d 7f       	andi	r18, 0xFD	; 253
     15e:	fc 01       	movw	r30, r24
     160:	20 83       	st	Z, r18
    cbi(ADCSRA,ADPS0) ;
     162:	8a e7       	ldi	r24, 0x7A	; 122
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	2a e7       	ldi	r18, 0x7A	; 122
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	f9 01       	movw	r30, r18
     16c:	20 81       	ld	r18, Z
     16e:	2e 7f       	andi	r18, 0xFE	; 254
     170:	fc 01       	movw	r30, r24
     172:	20 83       	st	Z, r18
    #endif
  }
     174:	00 00       	nop
     176:	df 91       	pop	r29
     178:	cf 91       	pop	r28
     17a:	08 95       	ret

0000017c <_ZN17ADC_ConfigurationD1Ev>:


// default destructor
ADC_Configuration::~ADC_Configuration()
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	00 d0       	rcall	.+0      	; 0x182 <_ZN17ADC_ConfigurationD1Ev+0x6>
     182:	cd b7       	in	r28, 0x3d	; 61
     184:	de b7       	in	r29, 0x3e	; 62
     186:	9a 83       	std	Y+2, r25	; 0x02
     188:	89 83       	std	Y+1, r24	; 0x01
{
} //~ADC_Configuration
     18a:	00 00       	nop
     18c:	0f 90       	pop	r0
     18e:	0f 90       	pop	r0
     190:	df 91       	pop	r29
     192:	cf 91       	pop	r28
     194:	08 95       	ret

00000196 <_ZN12Math_HelpersC1Ev>:
  {
    rangedValue =  newBegin - (pow(normalizedCurVal, curve) * NewRange);
  }

  return rangedValue;
}
     196:	cf 93       	push	r28
     198:	df 93       	push	r29
     19a:	00 d0       	rcall	.+0      	; 0x19c <_ZN12Math_HelpersC1Ev+0x6>
     19c:	cd b7       	in	r28, 0x3d	; 61
     19e:	de b7       	in	r29, 0x3e	; 62
     1a0:	9a 83       	std	Y+2, r25	; 0x02
     1a2:	89 83       	std	Y+1, r24	; 0x01
     1a4:	00 00       	nop
     1a6:	0f 90       	pop	r0
     1a8:	0f 90       	pop	r0
     1aa:	df 91       	pop	r29
     1ac:	cf 91       	pop	r28
     1ae:	08 95       	ret

000001b0 <_ZN12Math_HelpersD1Ev>:

// default destructor
Math_Helpers::~Math_Helpers()
     1b0:	cf 93       	push	r28
     1b2:	df 93       	push	r29
     1b4:	00 d0       	rcall	.+0      	; 0x1b6 <_ZN12Math_HelpersD1Ev+0x6>
     1b6:	cd b7       	in	r28, 0x3d	; 61
     1b8:	de b7       	in	r29, 0x3e	; 62
     1ba:	9a 83       	std	Y+2, r25	; 0x02
     1bc:	89 83       	std	Y+1, r24	; 0x01
{
} //~Math_Helpers
     1be:	00 00       	nop
     1c0:	0f 90       	pop	r0
     1c2:	0f 90       	pop	r0
     1c4:	df 91       	pop	r29
     1c6:	cf 91       	pop	r28
     1c8:	08 95       	ret

000001ca <_ZL8Home_cmdiPcS_>:

	sprintf(output + strlen(output),"%s", s2);

	return output;

}
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	00 d0       	rcall	.+0      	; 0x1d0 <_ZL8Home_cmdiPcS_+0x6>
     1d0:	00 d0       	rcall	.+0      	; 0x1d2 <_ZL8Home_cmdiPcS_+0x8>
     1d2:	00 d0       	rcall	.+0      	; 0x1d4 <_ZL8Home_cmdiPcS_+0xa>
     1d4:	cd b7       	in	r28, 0x3d	; 61
     1d6:	de b7       	in	r29, 0x3e	; 62
     1d8:	9a 83       	std	Y+2, r25	; 0x02
     1da:	89 83       	std	Y+1, r24	; 0x01
     1dc:	7c 83       	std	Y+4, r23	; 0x04
     1de:	6b 83       	std	Y+3, r22	; 0x03
     1e0:	5e 83       	std	Y+6, r21	; 0x06
     1e2:	4d 83       	std	Y+5, r20	; 0x05
     1e4:	6b ee       	ldi	r22, 0xEB	; 235
     1e6:	71 e0       	ldi	r23, 0x01	; 1
     1e8:	88 e1       	ldi	r24, 0x18	; 24
     1ea:	94 e0       	ldi	r25, 0x04	; 4
     1ec:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     1f0:	10 92 e8 01 	sts	0x01E8, r1	; 0x8001e8 <RUN_MODE>
     1f4:	00 00       	nop
     1f6:	26 96       	adiw	r28, 0x06	; 6
     1f8:	0f b6       	in	r0, 0x3f	; 63
     1fa:	f8 94       	cli
     1fc:	de bf       	out	0x3e, r29	; 62
     1fe:	0f be       	out	0x3f, r0	; 63
     200:	cd bf       	out	0x3d, r28	; 61
     202:	df 91       	pop	r29
     204:	cf 91       	pop	r28
     206:	08 95       	ret

00000208 <_ZL12GetSteps_cmdiPcS_>:
     208:	cf 93       	push	r28
     20a:	df 93       	push	r29
     20c:	00 d0       	rcall	.+0      	; 0x20e <_ZL12GetSteps_cmdiPcS_+0x6>
     20e:	00 d0       	rcall	.+0      	; 0x210 <_ZL12GetSteps_cmdiPcS_+0x8>
     210:	00 d0       	rcall	.+0      	; 0x212 <_ZL12GetSteps_cmdiPcS_+0xa>
     212:	cd b7       	in	r28, 0x3d	; 61
     214:	de b7       	in	r29, 0x3e	; 62
     216:	9a 83       	std	Y+2, r25	; 0x02
     218:	89 83       	std	Y+1, r24	; 0x01
     21a:	7c 83       	std	Y+4, r23	; 0x04
     21c:	6b 83       	std	Y+3, r22	; 0x03
     21e:	5e 83       	std	Y+6, r21	; 0x06
     220:	4d 83       	std	Y+5, r20	; 0x05
     222:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <STEPS>
     226:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <STEPS+0x1>
     22a:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <STEPS+0x2>
     22e:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <STEPS+0x3>
     232:	2a e0       	ldi	r18, 0x0A	; 10
     234:	30 e0       	ldi	r19, 0x00	; 0
     236:	ac 01       	movw	r20, r24
     238:	bd 01       	movw	r22, r26
     23a:	88 e1       	ldi	r24, 0x18	; 24
     23c:	94 e0       	ldi	r25, 0x04	; 4
     23e:	0e 94 af 1c 	call	0x395e	; 0x395e <_ZN5Print7printlnEli>
     242:	00 00       	nop
     244:	26 96       	adiw	r28, 0x06	; 6
     246:	0f b6       	in	r0, 0x3f	; 63
     248:	f8 94       	cli
     24a:	de bf       	out	0x3e, r29	; 62
     24c:	0f be       	out	0x3f, r0	; 63
     24e:	cd bf       	out	0x3d, r28	; 61
     250:	df 91       	pop	r29
     252:	cf 91       	pop	r28
     254:	08 95       	ret

00000256 <_ZL15TraverseRPM_cmdiPcS_>:
     256:	0f 93       	push	r16
     258:	1f 93       	push	r17
     25a:	cf 93       	push	r28
     25c:	df 93       	push	r29
     25e:	cd b7       	in	r28, 0x3d	; 61
     260:	de b7       	in	r29, 0x3e	; 62
     262:	c8 54       	subi	r28, 0x48	; 72
     264:	d1 09       	sbc	r29, r1
     266:	0f b6       	in	r0, 0x3f	; 63
     268:	f8 94       	cli
     26a:	de bf       	out	0x3e, r29	; 62
     26c:	0f be       	out	0x3f, r0	; 63
     26e:	cd bf       	out	0x3d, r28	; 61
     270:	9e 01       	movw	r18, r28
     272:	2d 5b       	subi	r18, 0xBD	; 189
     274:	3f 4f       	sbci	r19, 0xFF	; 255
     276:	f9 01       	movw	r30, r18
     278:	91 83       	std	Z+1, r25	; 0x01
     27a:	80 83       	st	Z, r24
     27c:	ce 01       	movw	r24, r28
     27e:	8b 5b       	subi	r24, 0xBB	; 187
     280:	9f 4f       	sbci	r25, 0xFF	; 255
     282:	fc 01       	movw	r30, r24
     284:	71 83       	std	Z+1, r23	; 0x01
     286:	60 83       	st	Z, r22
     288:	ce 01       	movw	r24, r28
     28a:	89 5b       	subi	r24, 0xB9	; 185
     28c:	9f 4f       	sbci	r25, 0xFF	; 255
     28e:	fc 01       	movw	r30, r24
     290:	51 83       	std	Z+1, r21	; 0x01
     292:	40 83       	st	Z, r20
     294:	ce 01       	movw	r24, r28
     296:	89 5b       	subi	r24, 0xB9	; 185
     298:	9f 4f       	sbci	r25, 0xFF	; 255
     29a:	fc 01       	movw	r30, r24
     29c:	80 81       	ld	r24, Z
     29e:	91 81       	ldd	r25, Z+1	; 0x01
     2a0:	89 2b       	or	r24, r25
     2a2:	09 f4       	brne	.+2      	; 0x2a6 <_ZL15TraverseRPM_cmdiPcS_+0x50>
     2a4:	6a c0       	rjmp	.+212    	; 0x37a <_ZL15TraverseRPM_cmdiPcS_+0x124>
     2a6:	1a 82       	std	Y+2, r1	; 0x02
     2a8:	19 82       	std	Y+1, r1	; 0x01
     2aa:	89 81       	ldd	r24, Y+1	; 0x01
     2ac:	9a 81       	ldd	r25, Y+2	; 0x02
     2ae:	9e 01       	movw	r18, r28
     2b0:	29 5b       	subi	r18, 0xB9	; 185
     2b2:	3f 4f       	sbci	r19, 0xFF	; 255
     2b4:	f9 01       	movw	r30, r18
     2b6:	20 81       	ld	r18, Z
     2b8:	31 81       	ldd	r19, Z+1	; 0x01
     2ba:	82 0f       	add	r24, r18
     2bc:	93 1f       	adc	r25, r19
     2be:	fc 01       	movw	r30, r24
     2c0:	80 81       	ld	r24, Z
     2c2:	88 23       	and	r24, r24
     2c4:	29 f1       	breq	.+74     	; 0x310 <_ZL15TraverseRPM_cmdiPcS_+0xba>
     2c6:	89 81       	ldd	r24, Y+1	; 0x01
     2c8:	9a 81       	ldd	r25, Y+2	; 0x02
     2ca:	9e 01       	movw	r18, r28
     2cc:	29 5b       	subi	r18, 0xB9	; 185
     2ce:	3f 4f       	sbci	r19, 0xFF	; 255
     2d0:	f9 01       	movw	r30, r18
     2d2:	20 81       	ld	r18, Z
     2d4:	31 81       	ldd	r19, Z+1	; 0x01
     2d6:	82 0f       	add	r24, r18
     2d8:	93 1f       	adc	r25, r19
     2da:	fc 01       	movw	r30, r24
     2dc:	80 81       	ld	r24, Z
     2de:	88 2f       	mov	r24, r24
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	c0 97       	sbiw	r24, 0x30	; 48
     2e4:	0a 97       	sbiw	r24, 0x0a	; 10
     2e6:	10 f0       	brcs	.+4      	; 0x2ec <_ZL15TraverseRPM_cmdiPcS_+0x96>
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	01 c0       	rjmp	.+2      	; 0x2ee <_ZL15TraverseRPM_cmdiPcS_+0x98>
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	88 23       	and	r24, r24
     2f0:	49 f0       	breq	.+18     	; 0x304 <_ZL15TraverseRPM_cmdiPcS_+0xae>
     2f2:	61 e0       	ldi	r22, 0x01	; 1
     2f4:	72 e0       	ldi	r23, 0x02	; 2
     2f6:	88 e1       	ldi	r24, 0x18	; 24
     2f8:	94 e0       	ldi	r25, 0x04	; 4
     2fa:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     2fe:	80 e0       	ldi	r24, 0x00	; 0
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	61 c0       	rjmp	.+194    	; 0x3c6 <_ZL15TraverseRPM_cmdiPcS_+0x170>
     304:	89 81       	ldd	r24, Y+1	; 0x01
     306:	9a 81       	ldd	r25, Y+2	; 0x02
     308:	01 96       	adiw	r24, 0x01	; 1
     30a:	9a 83       	std	Y+2, r25	; 0x02
     30c:	89 83       	std	Y+1, r24	; 0x01
     30e:	cd cf       	rjmp	.-102    	; 0x2aa <_ZL15TraverseRPM_cmdiPcS_+0x54>
     310:	ce 01       	movw	r24, r28
     312:	89 5b       	subi	r24, 0xB9	; 185
     314:	9f 4f       	sbci	r25, 0xFF	; 255
     316:	fc 01       	movw	r30, r24
     318:	80 81       	ld	r24, Z
     31a:	91 81       	ldd	r25, Z+1	; 0x01
     31c:	4a e0       	ldi	r20, 0x0A	; 10
     31e:	50 e0       	ldi	r21, 0x00	; 0
     320:	60 e0       	ldi	r22, 0x00	; 0
     322:	70 e0       	ldi	r23, 0x00	; 0
     324:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <strtol>
     328:	dc 01       	movw	r26, r24
     32a:	cb 01       	movw	r24, r22
     32c:	8b 83       	std	Y+3, r24	; 0x03
     32e:	9c 83       	std	Y+4, r25	; 0x04
     330:	ad 83       	std	Y+5, r26	; 0x05
     332:	be 83       	std	Y+6, r27	; 0x06
     334:	8b 81       	ldd	r24, Y+3	; 0x03
     336:	9c 81       	ldd	r25, Y+4	; 0x04
     338:	ad 81       	ldd	r26, Y+5	; 0x05
     33a:	be 81       	ldd	r27, Y+6	; 0x06
     33c:	89 35       	cpi	r24, 0x59	; 89
     33e:	92 40       	sbci	r25, 0x02	; 2
     340:	a1 05       	cpc	r26, r1
     342:	b1 05       	cpc	r27, r1
     344:	68 f4       	brcc	.+26     	; 0x360 <_ZL15TraverseRPM_cmdiPcS_+0x10a>
     346:	8b 81       	ldd	r24, Y+3	; 0x03
     348:	9c 81       	ldd	r25, Y+4	; 0x04
     34a:	ad 81       	ldd	r26, Y+5	; 0x05
     34c:	be 81       	ldd	r27, Y+6	; 0x06
     34e:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <TRAVERSE_RPM>
     352:	90 93 0b 04 	sts	0x040B, r25	; 0x80040b <TRAVERSE_RPM+0x1>
     356:	a0 93 0c 04 	sts	0x040C, r26	; 0x80040c <TRAVERSE_RPM+0x2>
     35a:	b0 93 0d 04 	sts	0x040D, r27	; 0x80040d <TRAVERSE_RPM+0x3>
     35e:	33 c0       	rjmp	.+102    	; 0x3c6 <_ZL15TraverseRPM_cmdiPcS_+0x170>
     360:	88 e5       	ldi	r24, 0x58	; 88
     362:	92 e0       	ldi	r25, 0x02	; 2
     364:	a0 e0       	ldi	r26, 0x00	; 0
     366:	b0 e0       	ldi	r27, 0x00	; 0
     368:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <TRAVERSE_RPM>
     36c:	90 93 0b 04 	sts	0x040B, r25	; 0x80040b <TRAVERSE_RPM+0x1>
     370:	a0 93 0c 04 	sts	0x040C, r26	; 0x80040c <TRAVERSE_RPM+0x2>
     374:	b0 93 0d 04 	sts	0x040D, r27	; 0x80040d <TRAVERSE_RPM+0x3>
     378:	26 c0       	rjmp	.+76     	; 0x3c6 <_ZL15TraverseRPM_cmdiPcS_+0x170>
     37a:	2c e3       	ldi	r18, 0x3C	; 60
     37c:	ce 01       	movw	r24, r28
     37e:	07 96       	adiw	r24, 0x07	; 7
     380:	fc 01       	movw	r30, r24
     382:	32 2f       	mov	r19, r18
     384:	11 92       	st	Z+, r1
     386:	3a 95       	dec	r19
     388:	e9 f7       	brne	.-6      	; 0x384 <_ZL15TraverseRPM_cmdiPcS_+0x12e>
     38a:	80 91 0a 04 	lds	r24, 0x040A	; 0x80040a <TRAVERSE_RPM>
     38e:	90 91 0b 04 	lds	r25, 0x040B	; 0x80040b <TRAVERSE_RPM+0x1>
     392:	a0 91 0c 04 	lds	r26, 0x040C	; 0x80040c <TRAVERSE_RPM+0x2>
     396:	b0 91 0d 04 	lds	r27, 0x040D	; 0x80040d <TRAVERSE_RPM+0x3>
     39a:	9e 01       	movw	r18, r28
     39c:	2b 5b       	subi	r18, 0xBB	; 187
     39e:	3f 4f       	sbci	r19, 0xFF	; 255
     3a0:	f9 01       	movw	r30, r18
     3a2:	40 81       	ld	r20, Z
     3a4:	51 81       	ldd	r21, Z+1	; 0x01
     3a6:	fe 01       	movw	r30, r28
     3a8:	37 96       	adiw	r30, 0x07	; 7
     3aa:	8c 01       	movw	r16, r24
     3ac:	9d 01       	movw	r18, r26
     3ae:	63 e0       	ldi	r22, 0x03	; 3
     3b0:	70 e0       	ldi	r23, 0x00	; 0
     3b2:	cf 01       	movw	r24, r30
     3b4:	0e 94 ac 07 	call	0xf58	; 0xf58 <_Z17BuildSerialOutputPciS_m>
     3b8:	ce 01       	movw	r24, r28
     3ba:	07 96       	adiw	r24, 0x07	; 7
     3bc:	bc 01       	movw	r22, r24
     3be:	88 e1       	ldi	r24, 0x18	; 24
     3c0:	94 e0       	ldi	r25, 0x04	; 4
     3c2:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     3c6:	c8 5b       	subi	r28, 0xB8	; 184
     3c8:	df 4f       	sbci	r29, 0xFF	; 255
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	f8 94       	cli
     3ce:	de bf       	out	0x3e, r29	; 62
     3d0:	0f be       	out	0x3f, r0	; 63
     3d2:	cd bf       	out	0x3d, r28	; 61
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	1f 91       	pop	r17
     3da:	0f 91       	pop	r16
     3dc:	08 95       	ret

000003de <_ZL10Status_cmdiPcS_>:
     3de:	cf 93       	push	r28
     3e0:	df 93       	push	r29
     3e2:	00 d0       	rcall	.+0      	; 0x3e4 <_ZL10Status_cmdiPcS_+0x6>
     3e4:	00 d0       	rcall	.+0      	; 0x3e6 <_ZL10Status_cmdiPcS_+0x8>
     3e6:	00 d0       	rcall	.+0      	; 0x3e8 <_ZL10Status_cmdiPcS_+0xa>
     3e8:	cd b7       	in	r28, 0x3d	; 61
     3ea:	de b7       	in	r29, 0x3e	; 62
     3ec:	9a 83       	std	Y+2, r25	; 0x02
     3ee:	89 83       	std	Y+1, r24	; 0x01
     3f0:	7c 83       	std	Y+4, r23	; 0x04
     3f2:	6b 83       	std	Y+3, r22	; 0x03
     3f4:	5e 83       	std	Y+6, r21	; 0x06
     3f6:	4d 83       	std	Y+5, r20	; 0x05
     3f8:	64 e2       	ldi	r22, 0x24	; 36
     3fa:	72 e0       	ldi	r23, 0x02	; 2
     3fc:	88 e1       	ldi	r24, 0x18	; 24
     3fe:	94 e0       	ldi	r25, 0x04	; 4
     400:	0e 94 ff 1b 	call	0x37fe	; 0x37fe <_ZN5Print5printEPKc>
     404:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <RUN_MODE>
     408:	81 e0       	ldi	r24, 0x01	; 1
     40a:	93 30       	cpi	r25, 0x03	; 3
     40c:	09 f0       	breq	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     40e:	80 e0       	ldi	r24, 0x00	; 0
     410:	88 23       	and	r24, r24
     412:	31 f0       	breq	.+12     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     414:	68 e3       	ldi	r22, 0x38	; 56
     416:	72 e0       	ldi	r23, 0x02	; 2
     418:	88 e1       	ldi	r24, 0x18	; 24
     41a:	94 e0       	ldi	r25, 0x04	; 4
     41c:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     420:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <RUN_MODE>
     424:	81 e0       	ldi	r24, 0x01	; 1
     426:	94 30       	cpi	r25, 0x04	; 4
     428:	09 f0       	breq	.+2      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     42a:	80 e0       	ldi	r24, 0x00	; 0
     42c:	88 23       	and	r24, r24
     42e:	31 f0       	breq	.+12     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     430:	6d e4       	ldi	r22, 0x4D	; 77
     432:	72 e0       	ldi	r23, 0x02	; 2
     434:	88 e1       	ldi	r24, 0x18	; 24
     436:	94 e0       	ldi	r25, 0x04	; 4
     438:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     43c:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <RUN_MODE>
     440:	81 e0       	ldi	r24, 0x01	; 1
     442:	92 30       	cpi	r25, 0x02	; 2
     444:	09 f0       	breq	.+2      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     446:	80 e0       	ldi	r24, 0x00	; 0
     448:	88 23       	and	r24, r24
     44a:	31 f0       	breq	.+12     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     44c:	62 e6       	ldi	r22, 0x62	; 98
     44e:	72 e0       	ldi	r23, 0x02	; 2
     450:	88 e1       	ldi	r24, 0x18	; 24
     452:	94 e0       	ldi	r25, 0x04	; 4
     454:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     458:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <RUN_MODE>
     45c:	81 e0       	ldi	r24, 0x01	; 1
     45e:	99 23       	and	r25, r25
     460:	09 f0       	breq	.+2      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     462:	80 e0       	ldi	r24, 0x00	; 0
     464:	88 23       	and	r24, r24
     466:	31 f0       	breq	.+12     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
     468:	64 e7       	ldi	r22, 0x74	; 116
     46a:	72 e0       	ldi	r23, 0x02	; 2
     46c:	88 e1       	ldi	r24, 0x18	; 24
     46e:	94 e0       	ldi	r25, 0x04	; 4
     470:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     474:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <RUN_MODE>
     478:	81 e0       	ldi	r24, 0x01	; 1
     47a:	91 30       	cpi	r25, 0x01	; 1
     47c:	09 f0       	breq	.+2      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
     47e:	80 e0       	ldi	r24, 0x00	; 0
     480:	88 23       	and	r24, r24
     482:	31 f0       	breq	.+12     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     484:	6e e7       	ldi	r22, 0x7E	; 126
     486:	72 e0       	ldi	r23, 0x02	; 2
     488:	88 e1       	ldi	r24, 0x18	; 24
     48a:	94 e0       	ldi	r25, 0x04	; 4
     48c:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     490:	00 00       	nop
     492:	26 96       	adiw	r28, 0x06	; 6
     494:	0f b6       	in	r0, 0x3f	; 63
     496:	f8 94       	cli
     498:	de bf       	out	0x3e, r29	; 62
     49a:	0f be       	out	0x3f, r0	; 63
     49c:	cd bf       	out	0x3d, r28	; 61
     49e:	df 91       	pop	r29
     4a0:	cf 91       	pop	r28
     4a2:	08 95       	ret

000004a4 <_ZL8Stop_cmdiPcS_>:
     4a4:	cf 93       	push	r28
     4a6:	df 93       	push	r29
     4a8:	00 d0       	rcall	.+0      	; 0x4aa <_ZL8Stop_cmdiPcS_+0x6>
     4aa:	00 d0       	rcall	.+0      	; 0x4ac <_ZL8Stop_cmdiPcS_+0x8>
     4ac:	00 d0       	rcall	.+0      	; 0x4ae <_ZL8Stop_cmdiPcS_+0xa>
     4ae:	cd b7       	in	r28, 0x3d	; 61
     4b0:	de b7       	in	r29, 0x3e	; 62
     4b2:	9a 83       	std	Y+2, r25	; 0x02
     4b4:	89 83       	std	Y+1, r24	; 0x01
     4b6:	7c 83       	std	Y+4, r23	; 0x04
     4b8:	6b 83       	std	Y+3, r22	; 0x03
     4ba:	5e 83       	std	Y+6, r21	; 0x06
     4bc:	4d 83       	std	Y+5, r20	; 0x05
     4be:	81 e0       	ldi	r24, 0x01	; 1
     4c0:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <RUN_MODE>
     4c4:	00 00       	nop
     4c6:	26 96       	adiw	r28, 0x06	; 6
     4c8:	0f b6       	in	r0, 0x3f	; 63
     4ca:	f8 94       	cli
     4cc:	de bf       	out	0x3e, r29	; 62
     4ce:	0f be       	out	0x3f, r0	; 63
     4d0:	cd bf       	out	0x3d, r28	; 61
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	08 95       	ret

000004d8 <_ZL11RunMode_cmdiPcS_>:
     4d8:	0f 93       	push	r16
     4da:	1f 93       	push	r17
     4dc:	cf 93       	push	r28
     4de:	df 93       	push	r29
     4e0:	cd b7       	in	r28, 0x3d	; 61
     4e2:	de b7       	in	r29, 0x3e	; 62
     4e4:	c6 54       	subi	r28, 0x46	; 70
     4e6:	d1 09       	sbc	r29, r1
     4e8:	0f b6       	in	r0, 0x3f	; 63
     4ea:	f8 94       	cli
     4ec:	de bf       	out	0x3e, r29	; 62
     4ee:	0f be       	out	0x3f, r0	; 63
     4f0:	cd bf       	out	0x3d, r28	; 61
     4f2:	9e 01       	movw	r18, r28
     4f4:	2f 5b       	subi	r18, 0xBF	; 191
     4f6:	3f 4f       	sbci	r19, 0xFF	; 255
     4f8:	f9 01       	movw	r30, r18
     4fa:	91 83       	std	Z+1, r25	; 0x01
     4fc:	80 83       	st	Z, r24
     4fe:	ce 01       	movw	r24, r28
     500:	8d 5b       	subi	r24, 0xBD	; 189
     502:	9f 4f       	sbci	r25, 0xFF	; 255
     504:	fc 01       	movw	r30, r24
     506:	71 83       	std	Z+1, r23	; 0x01
     508:	60 83       	st	Z, r22
     50a:	ce 01       	movw	r24, r28
     50c:	8b 5b       	subi	r24, 0xBB	; 187
     50e:	9f 4f       	sbci	r25, 0xFF	; 255
     510:	fc 01       	movw	r30, r24
     512:	51 83       	std	Z+1, r21	; 0x01
     514:	40 83       	st	Z, r20
     516:	ce 01       	movw	r24, r28
     518:	8b 5b       	subi	r24, 0xBB	; 187
     51a:	9f 4f       	sbci	r25, 0xFF	; 255
     51c:	fc 01       	movw	r30, r24
     51e:	80 81       	ld	r24, Z
     520:	91 81       	ldd	r25, Z+1	; 0x01
     522:	89 2b       	or	r24, r25
     524:	09 f4       	brne	.+2      	; 0x528 <_ZL11RunMode_cmdiPcS_+0x50>
     526:	4d c0       	rjmp	.+154    	; 0x5c2 <_ZL11RunMode_cmdiPcS_+0xea>
     528:	1a 82       	std	Y+2, r1	; 0x02
     52a:	19 82       	std	Y+1, r1	; 0x01
     52c:	89 81       	ldd	r24, Y+1	; 0x01
     52e:	9a 81       	ldd	r25, Y+2	; 0x02
     530:	9e 01       	movw	r18, r28
     532:	2b 5b       	subi	r18, 0xBB	; 187
     534:	3f 4f       	sbci	r19, 0xFF	; 255
     536:	f9 01       	movw	r30, r18
     538:	20 81       	ld	r18, Z
     53a:	31 81       	ldd	r19, Z+1	; 0x01
     53c:	82 0f       	add	r24, r18
     53e:	93 1f       	adc	r25, r19
     540:	fc 01       	movw	r30, r24
     542:	80 81       	ld	r24, Z
     544:	88 23       	and	r24, r24
     546:	29 f1       	breq	.+74     	; 0x592 <_ZL11RunMode_cmdiPcS_+0xba>
     548:	89 81       	ldd	r24, Y+1	; 0x01
     54a:	9a 81       	ldd	r25, Y+2	; 0x02
     54c:	9e 01       	movw	r18, r28
     54e:	2b 5b       	subi	r18, 0xBB	; 187
     550:	3f 4f       	sbci	r19, 0xFF	; 255
     552:	f9 01       	movw	r30, r18
     554:	20 81       	ld	r18, Z
     556:	31 81       	ldd	r19, Z+1	; 0x01
     558:	82 0f       	add	r24, r18
     55a:	93 1f       	adc	r25, r19
     55c:	fc 01       	movw	r30, r24
     55e:	80 81       	ld	r24, Z
     560:	88 2f       	mov	r24, r24
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	c0 97       	sbiw	r24, 0x30	; 48
     566:	0a 97       	sbiw	r24, 0x0a	; 10
     568:	10 f0       	brcs	.+4      	; 0x56e <_ZL11RunMode_cmdiPcS_+0x96>
     56a:	81 e0       	ldi	r24, 0x01	; 1
     56c:	01 c0       	rjmp	.+2      	; 0x570 <_ZL11RunMode_cmdiPcS_+0x98>
     56e:	80 e0       	ldi	r24, 0x00	; 0
     570:	88 23       	and	r24, r24
     572:	49 f0       	breq	.+18     	; 0x586 <_ZL11RunMode_cmdiPcS_+0xae>
     574:	61 e9       	ldi	r22, 0x91	; 145
     576:	72 e0       	ldi	r23, 0x02	; 2
     578:	88 e1       	ldi	r24, 0x18	; 24
     57a:	94 e0       	ldi	r25, 0x04	; 4
     57c:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	42 c0       	rjmp	.+132    	; 0x60a <_ZL11RunMode_cmdiPcS_+0x132>
     586:	89 81       	ldd	r24, Y+1	; 0x01
     588:	9a 81       	ldd	r25, Y+2	; 0x02
     58a:	01 96       	adiw	r24, 0x01	; 1
     58c:	9a 83       	std	Y+2, r25	; 0x02
     58e:	89 83       	std	Y+1, r24	; 0x01
     590:	cd cf       	rjmp	.-102    	; 0x52c <_ZL11RunMode_cmdiPcS_+0x54>
     592:	ce 01       	movw	r24, r28
     594:	8b 5b       	subi	r24, 0xBB	; 187
     596:	9f 4f       	sbci	r25, 0xFF	; 255
     598:	fc 01       	movw	r30, r24
     59a:	80 81       	ld	r24, Z
     59c:	91 81       	ldd	r25, Z+1	; 0x01
     59e:	4a e0       	ldi	r20, 0x0A	; 10
     5a0:	50 e0       	ldi	r21, 0x00	; 0
     5a2:	60 e0       	ldi	r22, 0x00	; 0
     5a4:	70 e0       	ldi	r23, 0x00	; 0
     5a6:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <strtol>
     5aa:	dc 01       	movw	r26, r24
     5ac:	cb 01       	movw	r24, r22
     5ae:	9c 83       	std	Y+4, r25	; 0x04
     5b0:	8b 83       	std	Y+3, r24	; 0x03
     5b2:	8b 81       	ldd	r24, Y+3	; 0x03
     5b4:	9c 81       	ldd	r25, Y+4	; 0x04
     5b6:	05 97       	sbiw	r24, 0x05	; 5
     5b8:	40 f5       	brcc	.+80     	; 0x60a <_ZL11RunMode_cmdiPcS_+0x132>
     5ba:	8b 81       	ldd	r24, Y+3	; 0x03
     5bc:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <RUN_MODE>
     5c0:	24 c0       	rjmp	.+72     	; 0x60a <_ZL11RunMode_cmdiPcS_+0x132>
     5c2:	2c e3       	ldi	r18, 0x3C	; 60
     5c4:	ce 01       	movw	r24, r28
     5c6:	05 96       	adiw	r24, 0x05	; 5
     5c8:	fc 01       	movw	r30, r24
     5ca:	32 2f       	mov	r19, r18
     5cc:	11 92       	st	Z+, r1
     5ce:	3a 95       	dec	r19
     5d0:	e9 f7       	brne	.-6      	; 0x5cc <_ZL11RunMode_cmdiPcS_+0xf4>
     5d2:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <RUN_MODE>
     5d6:	88 2f       	mov	r24, r24
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	a0 e0       	ldi	r26, 0x00	; 0
     5dc:	b0 e0       	ldi	r27, 0x00	; 0
     5de:	9e 01       	movw	r18, r28
     5e0:	2d 5b       	subi	r18, 0xBD	; 189
     5e2:	3f 4f       	sbci	r19, 0xFF	; 255
     5e4:	f9 01       	movw	r30, r18
     5e6:	40 81       	ld	r20, Z
     5e8:	51 81       	ldd	r21, Z+1	; 0x01
     5ea:	fe 01       	movw	r30, r28
     5ec:	35 96       	adiw	r30, 0x05	; 5
     5ee:	8c 01       	movw	r16, r24
     5f0:	9d 01       	movw	r18, r26
     5f2:	63 e0       	ldi	r22, 0x03	; 3
     5f4:	70 e0       	ldi	r23, 0x00	; 0
     5f6:	cf 01       	movw	r24, r30
     5f8:	0e 94 ac 07 	call	0xf58	; 0xf58 <_Z17BuildSerialOutputPciS_m>
     5fc:	ce 01       	movw	r24, r28
     5fe:	05 96       	adiw	r24, 0x05	; 5
     600:	bc 01       	movw	r22, r24
     602:	88 e1       	ldi	r24, 0x18	; 24
     604:	94 e0       	ldi	r25, 0x04	; 4
     606:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     60a:	ca 5b       	subi	r28, 0xBA	; 186
     60c:	df 4f       	sbci	r29, 0xFF	; 255
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	1f 91       	pop	r17
     61e:	0f 91       	pop	r16
     620:	08 95       	ret

00000622 <_ZL16MoveAbsolute_cmdiPcS_>:
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	cd b7       	in	r28, 0x3d	; 61
     628:	de b7       	in	r29, 0x3e	; 62
     62a:	2c 97       	sbiw	r28, 0x0c	; 12
     62c:	0f b6       	in	r0, 0x3f	; 63
     62e:	f8 94       	cli
     630:	de bf       	out	0x3e, r29	; 62
     632:	0f be       	out	0x3f, r0	; 63
     634:	cd bf       	out	0x3d, r28	; 61
     636:	98 87       	std	Y+8, r25	; 0x08
     638:	8f 83       	std	Y+7, r24	; 0x07
     63a:	7a 87       	std	Y+10, r23	; 0x0a
     63c:	69 87       	std	Y+9, r22	; 0x09
     63e:	5c 87       	std	Y+12, r21	; 0x0c
     640:	4b 87       	std	Y+11, r20	; 0x0b
     642:	8b 85       	ldd	r24, Y+11	; 0x0b
     644:	9c 85       	ldd	r25, Y+12	; 0x0c
     646:	89 2b       	or	r24, r25
     648:	09 f4       	brne	.+2      	; 0x64c <_ZL16MoveAbsolute_cmdiPcS_+0x2a>
     64a:	a4 c0       	rjmp	.+328    	; 0x794 <_ZL16MoveAbsolute_cmdiPcS_+0x172>
     64c:	1a 82       	std	Y+2, r1	; 0x02
     64e:	19 82       	std	Y+1, r1	; 0x01
     650:	89 81       	ldd	r24, Y+1	; 0x01
     652:	9a 81       	ldd	r25, Y+2	; 0x02
     654:	2b 85       	ldd	r18, Y+11	; 0x0b
     656:	3c 85       	ldd	r19, Y+12	; 0x0c
     658:	82 0f       	add	r24, r18
     65a:	93 1f       	adc	r25, r19
     65c:	fc 01       	movw	r30, r24
     65e:	80 81       	ld	r24, Z
     660:	88 23       	and	r24, r24
     662:	09 f1       	breq	.+66     	; 0x6a6 <_ZL16MoveAbsolute_cmdiPcS_+0x84>
     664:	89 81       	ldd	r24, Y+1	; 0x01
     666:	9a 81       	ldd	r25, Y+2	; 0x02
     668:	2b 85       	ldd	r18, Y+11	; 0x0b
     66a:	3c 85       	ldd	r19, Y+12	; 0x0c
     66c:	82 0f       	add	r24, r18
     66e:	93 1f       	adc	r25, r19
     670:	fc 01       	movw	r30, r24
     672:	80 81       	ld	r24, Z
     674:	88 2f       	mov	r24, r24
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	c0 97       	sbiw	r24, 0x30	; 48
     67a:	0a 97       	sbiw	r24, 0x0a	; 10
     67c:	10 f0       	brcs	.+4      	; 0x682 <_ZL16MoveAbsolute_cmdiPcS_+0x60>
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	01 c0       	rjmp	.+2      	; 0x684 <_ZL16MoveAbsolute_cmdiPcS_+0x62>
     682:	80 e0       	ldi	r24, 0x00	; 0
     684:	88 23       	and	r24, r24
     686:	49 f0       	breq	.+18     	; 0x69a <_ZL16MoveAbsolute_cmdiPcS_+0x78>
     688:	69 eb       	ldi	r22, 0xB9	; 185
     68a:	72 e0       	ldi	r23, 0x02	; 2
     68c:	88 e1       	ldi	r24, 0x18	; 24
     68e:	94 e0       	ldi	r25, 0x04	; 4
     690:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     694:	80 e0       	ldi	r24, 0x00	; 0
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	7d c0       	rjmp	.+250    	; 0x794 <_ZL16MoveAbsolute_cmdiPcS_+0x172>
     69a:	89 81       	ldd	r24, Y+1	; 0x01
     69c:	9a 81       	ldd	r25, Y+2	; 0x02
     69e:	01 96       	adiw	r24, 0x01	; 1
     6a0:	9a 83       	std	Y+2, r25	; 0x02
     6a2:	89 83       	std	Y+1, r24	; 0x01
     6a4:	d5 cf       	rjmp	.-86     	; 0x650 <_ZL16MoveAbsolute_cmdiPcS_+0x2e>
     6a6:	8b 85       	ldd	r24, Y+11	; 0x0b
     6a8:	9c 85       	ldd	r25, Y+12	; 0x0c
     6aa:	4a e0       	ldi	r20, 0x0A	; 10
     6ac:	50 e0       	ldi	r21, 0x00	; 0
     6ae:	60 e0       	ldi	r22, 0x00	; 0
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <strtol>
     6b6:	dc 01       	movw	r26, r24
     6b8:	cb 01       	movw	r24, r22
     6ba:	8b 83       	std	Y+3, r24	; 0x03
     6bc:	9c 83       	std	Y+4, r25	; 0x04
     6be:	ad 83       	std	Y+5, r26	; 0x05
     6c0:	be 83       	std	Y+6, r27	; 0x06
     6c2:	2b 81       	ldd	r18, Y+3	; 0x03
     6c4:	3c 81       	ldd	r19, Y+4	; 0x04
     6c6:	4d 81       	ldd	r20, Y+5	; 0x05
     6c8:	5e 81       	ldd	r21, Y+6	; 0x06
     6ca:	88 ee       	ldi	r24, 0xE8	; 232
     6cc:	93 e0       	ldi	r25, 0x03	; 3
     6ce:	dc 01       	movw	r26, r24
     6d0:	0e 94 49 1e 	call	0x3c92	; 0x3c92 <__muluhisi3>
     6d4:	dc 01       	movw	r26, r24
     6d6:	cb 01       	movw	r24, r22
     6d8:	24 e3       	ldi	r18, 0x34	; 52
     6da:	36 e0       	ldi	r19, 0x06	; 6
     6dc:	40 e0       	ldi	r20, 0x00	; 0
     6de:	50 e0       	ldi	r21, 0x00	; 0
     6e0:	bc 01       	movw	r22, r24
     6e2:	cd 01       	movw	r24, r26
     6e4:	0e 94 2a 1e 	call	0x3c54	; 0x3c54 <__divmodsi4>
     6e8:	da 01       	movw	r26, r20
     6ea:	c9 01       	movw	r24, r18
     6ec:	8b 83       	std	Y+3, r24	; 0x03
     6ee:	9c 83       	std	Y+4, r25	; 0x04
     6f0:	ad 83       	std	Y+5, r26	; 0x05
     6f2:	be 83       	std	Y+6, r27	; 0x06
     6f4:	8b 81       	ldd	r24, Y+3	; 0x03
     6f6:	9c 81       	ldd	r25, Y+4	; 0x04
     6f8:	ad 81       	ldd	r26, Y+5	; 0x05
     6fa:	be 81       	ldd	r27, Y+6	; 0x06
     6fc:	bb 23       	and	r27, r27
     6fe:	ac f0       	brlt	.+42     	; 0x72a <_ZL16MoveAbsolute_cmdiPcS_+0x108>
     700:	8b 81       	ldd	r24, Y+3	; 0x03
     702:	9c 81       	ldd	r25, Y+4	; 0x04
     704:	ad 81       	ldd	r26, Y+5	; 0x05
     706:	be 81       	ldd	r27, Y+6	; 0x06
     708:	86 3c       	cpi	r24, 0xC6	; 198
     70a:	92 42       	sbci	r25, 0x22	; 34
     70c:	a1 40       	sbci	r26, 0x01	; 1
     70e:	b1 05       	cpc	r27, r1
     710:	64 f4       	brge	.+24     	; 0x72a <_ZL16MoveAbsolute_cmdiPcS_+0x108>
     712:	8b 81       	ldd	r24, Y+3	; 0x03
     714:	9c 81       	ldd	r25, Y+4	; 0x04
     716:	ad 81       	ldd	r26, Y+5	; 0x05
     718:	be 81       	ldd	r27, Y+6	; 0x06
     71a:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <DESIRED_POSITION>
     71e:	90 93 07 04 	sts	0x0407, r25	; 0x800407 <DESIRED_POSITION+0x1>
     722:	a0 93 08 04 	sts	0x0408, r26	; 0x800408 <DESIRED_POSITION+0x2>
     726:	b0 93 09 04 	sts	0x0409, r27	; 0x800409 <DESIRED_POSITION+0x3>
     72a:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <DESIRED_POSITION>
     72e:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
     732:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
     736:	50 91 09 04 	lds	r21, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
     73a:	80 e8       	ldi	r24, 0x80	; 128
     73c:	9c e0       	ldi	r25, 0x0C	; 12
     73e:	dc 01       	movw	r26, r24
     740:	0e 94 49 1e 	call	0x3c92	; 0x3c92 <__muluhisi3>
     744:	dc 01       	movw	r26, r24
     746:	cb 01       	movw	r24, r22
     748:	28 ee       	ldi	r18, 0xE8	; 232
     74a:	33 e0       	ldi	r19, 0x03	; 3
     74c:	40 e0       	ldi	r20, 0x00	; 0
     74e:	50 e0       	ldi	r21, 0x00	; 0
     750:	bc 01       	movw	r22, r24
     752:	cd 01       	movw	r24, r26
     754:	0e 94 2a 1e 	call	0x3c54	; 0x3c54 <__divmodsi4>
     758:	da 01       	movw	r26, r20
     75a:	c9 01       	movw	r24, r18
     75c:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <DESIRED_POSITION>
     760:	90 93 07 04 	sts	0x0407, r25	; 0x800407 <DESIRED_POSITION+0x1>
     764:	a0 93 08 04 	sts	0x0408, r26	; 0x800408 <DESIRED_POSITION+0x2>
     768:	b0 93 09 04 	sts	0x0409, r27	; 0x800409 <DESIRED_POSITION+0x3>
     76c:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <DESIRED_POSITION>
     770:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
     774:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
     778:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
     77c:	88 0f       	add	r24, r24
     77e:	99 1f       	adc	r25, r25
     780:	aa 1f       	adc	r26, r26
     782:	bb 1f       	adc	r27, r27
     784:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <DESIRED_POSITION>
     788:	90 93 07 04 	sts	0x0407, r25	; 0x800407 <DESIRED_POSITION+0x1>
     78c:	a0 93 08 04 	sts	0x0408, r26	; 0x800408 <DESIRED_POSITION+0x2>
     790:	b0 93 09 04 	sts	0x0409, r27	; 0x800409 <DESIRED_POSITION+0x3>
     794:	2c 96       	adiw	r28, 0x0c	; 12
     796:	0f b6       	in	r0, 0x3f	; 63
     798:	f8 94       	cli
     79a:	de bf       	out	0x3e, r29	; 62
     79c:	0f be       	out	0x3f, r0	; 63
     79e:	cd bf       	out	0x3d, r28	; 61
     7a0:	df 91       	pop	r29
     7a2:	cf 91       	pop	r28
     7a4:	08 95       	ret

000007a6 <_ZL12SpoolRPM_cmdiPcS_>:
     7a6:	0f 93       	push	r16
     7a8:	1f 93       	push	r17
     7aa:	cf 93       	push	r28
     7ac:	df 93       	push	r29
     7ae:	cd b7       	in	r28, 0x3d	; 61
     7b0:	de b7       	in	r29, 0x3e	; 62
     7b2:	c2 54       	subi	r28, 0x42	; 66
     7b4:	d1 09       	sbc	r29, r1
     7b6:	0f b6       	in	r0, 0x3f	; 63
     7b8:	f8 94       	cli
     7ba:	de bf       	out	0x3e, r29	; 62
     7bc:	0f be       	out	0x3f, r0	; 63
     7be:	cd bf       	out	0x3d, r28	; 61
     7c0:	9e af       	std	Y+62, r25	; 0x3e
     7c2:	8d af       	std	Y+61, r24	; 0x3d
     7c4:	ce 01       	movw	r24, r28
     7c6:	cf 96       	adiw	r24, 0x3f	; 63
     7c8:	fc 01       	movw	r30, r24
     7ca:	71 83       	std	Z+1, r23	; 0x01
     7cc:	60 83       	st	Z, r22
     7ce:	ce 01       	movw	r24, r28
     7d0:	8f 5b       	subi	r24, 0xBF	; 191
     7d2:	9f 4f       	sbci	r25, 0xFF	; 255
     7d4:	fc 01       	movw	r30, r24
     7d6:	51 83       	std	Z+1, r21	; 0x01
     7d8:	40 83       	st	Z, r20
     7da:	2c e3       	ldi	r18, 0x3C	; 60
     7dc:	ce 01       	movw	r24, r28
     7de:	01 96       	adiw	r24, 0x01	; 1
     7e0:	fc 01       	movw	r30, r24
     7e2:	32 2f       	mov	r19, r18
     7e4:	11 92       	st	Z+, r1
     7e6:	3a 95       	dec	r19
     7e8:	e9 f7       	brne	.-6      	; 0x7e4 <_ZL12SpoolRPM_cmdiPcS_+0x3e>
     7ea:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <SPOOLRPM>
     7ee:	90 91 0f 04 	lds	r25, 0x040F	; 0x80040f <SPOOLRPM+0x1>
     7f2:	cc 01       	movw	r24, r24
     7f4:	a0 e0       	ldi	r26, 0x00	; 0
     7f6:	b0 e0       	ldi	r27, 0x00	; 0
     7f8:	9e 01       	movw	r18, r28
     7fa:	21 5c       	subi	r18, 0xC1	; 193
     7fc:	3f 4f       	sbci	r19, 0xFF	; 255
     7fe:	f9 01       	movw	r30, r18
     800:	40 81       	ld	r20, Z
     802:	51 81       	ldd	r21, Z+1	; 0x01
     804:	8c 01       	movw	r16, r24
     806:	9d 01       	movw	r18, r26
     808:	63 e0       	ldi	r22, 0x03	; 3
     80a:	70 e0       	ldi	r23, 0x00	; 0
     80c:	ce 01       	movw	r24, r28
     80e:	01 96       	adiw	r24, 0x01	; 1
     810:	0e 94 ac 07 	call	0xf58	; 0xf58 <_Z17BuildSerialOutputPciS_m>
     814:	ce 01       	movw	r24, r28
     816:	01 96       	adiw	r24, 0x01	; 1
     818:	bc 01       	movw	r22, r24
     81a:	88 e1       	ldi	r24, 0x18	; 24
     81c:	94 e0       	ldi	r25, 0x04	; 4
     81e:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     822:	00 00       	nop
     824:	ce 5b       	subi	r28, 0xBE	; 190
     826:	df 4f       	sbci	r29, 0xFF	; 255
     828:	0f b6       	in	r0, 0x3f	; 63
     82a:	f8 94       	cli
     82c:	de bf       	out	0x3e, r29	; 62
     82e:	0f be       	out	0x3f, r0	; 63
     830:	cd bf       	out	0x3d, r28	; 61
     832:	df 91       	pop	r29
     834:	cf 91       	pop	r28
     836:	1f 91       	pop	r17
     838:	0f 91       	pop	r16
     83a:	08 95       	ret

0000083c <_ZL15InnerOffset_cmdiPcS_>:
     83c:	0f 93       	push	r16
     83e:	1f 93       	push	r17
     840:	cf 93       	push	r28
     842:	df 93       	push	r29
     844:	cd b7       	in	r28, 0x3d	; 61
     846:	de b7       	in	r29, 0x3e	; 62
     848:	c4 54       	subi	r28, 0x44	; 68
     84a:	d1 09       	sbc	r29, r1
     84c:	0f b6       	in	r0, 0x3f	; 63
     84e:	f8 94       	cli
     850:	de bf       	out	0x3e, r29	; 62
     852:	0f be       	out	0x3f, r0	; 63
     854:	cd bf       	out	0x3d, r28	; 61
     856:	9e 01       	movw	r18, r28
     858:	21 5c       	subi	r18, 0xC1	; 193
     85a:	3f 4f       	sbci	r19, 0xFF	; 255
     85c:	f9 01       	movw	r30, r18
     85e:	91 83       	std	Z+1, r25	; 0x01
     860:	80 83       	st	Z, r24
     862:	ce 01       	movw	r24, r28
     864:	8f 5b       	subi	r24, 0xBF	; 191
     866:	9f 4f       	sbci	r25, 0xFF	; 255
     868:	fc 01       	movw	r30, r24
     86a:	71 83       	std	Z+1, r23	; 0x01
     86c:	60 83       	st	Z, r22
     86e:	ce 01       	movw	r24, r28
     870:	8d 5b       	subi	r24, 0xBD	; 189
     872:	9f 4f       	sbci	r25, 0xFF	; 255
     874:	fc 01       	movw	r30, r24
     876:	51 83       	std	Z+1, r21	; 0x01
     878:	40 83       	st	Z, r20
     87a:	ce 01       	movw	r24, r28
     87c:	8d 5b       	subi	r24, 0xBD	; 189
     87e:	9f 4f       	sbci	r25, 0xFF	; 255
     880:	fc 01       	movw	r30, r24
     882:	80 81       	ld	r24, Z
     884:	91 81       	ldd	r25, Z+1	; 0x01
     886:	89 2b       	or	r24, r25
     888:	09 f4       	brne	.+2      	; 0x88c <_ZL15InnerOffset_cmdiPcS_+0x50>
     88a:	4c c0       	rjmp	.+152    	; 0x924 <__stack+0x25>
     88c:	1a 82       	std	Y+2, r1	; 0x02
     88e:	19 82       	std	Y+1, r1	; 0x01
     890:	89 81       	ldd	r24, Y+1	; 0x01
     892:	9a 81       	ldd	r25, Y+2	; 0x02
     894:	9e 01       	movw	r18, r28
     896:	2d 5b       	subi	r18, 0xBD	; 189
     898:	3f 4f       	sbci	r19, 0xFF	; 255
     89a:	f9 01       	movw	r30, r18
     89c:	20 81       	ld	r18, Z
     89e:	31 81       	ldd	r19, Z+1	; 0x01
     8a0:	82 0f       	add	r24, r18
     8a2:	93 1f       	adc	r25, r19
     8a4:	fc 01       	movw	r30, r24
     8a6:	80 81       	ld	r24, Z
     8a8:	88 23       	and	r24, r24
     8aa:	29 f1       	breq	.+74     	; 0x8f6 <_ZL15InnerOffset_cmdiPcS_+0xba>
     8ac:	89 81       	ldd	r24, Y+1	; 0x01
     8ae:	9a 81       	ldd	r25, Y+2	; 0x02
     8b0:	9e 01       	movw	r18, r28
     8b2:	2d 5b       	subi	r18, 0xBD	; 189
     8b4:	3f 4f       	sbci	r19, 0xFF	; 255
     8b6:	f9 01       	movw	r30, r18
     8b8:	20 81       	ld	r18, Z
     8ba:	31 81       	ldd	r19, Z+1	; 0x01
     8bc:	82 0f       	add	r24, r18
     8be:	93 1f       	adc	r25, r19
     8c0:	fc 01       	movw	r30, r24
     8c2:	80 81       	ld	r24, Z
     8c4:	88 2f       	mov	r24, r24
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	c0 97       	sbiw	r24, 0x30	; 48
     8ca:	0a 97       	sbiw	r24, 0x0a	; 10
     8cc:	10 f0       	brcs	.+4      	; 0x8d2 <_ZL15InnerOffset_cmdiPcS_+0x96>
     8ce:	81 e0       	ldi	r24, 0x01	; 1
     8d0:	01 c0       	rjmp	.+2      	; 0x8d4 <_ZL15InnerOffset_cmdiPcS_+0x98>
     8d2:	80 e0       	ldi	r24, 0x00	; 0
     8d4:	88 23       	and	r24, r24
     8d6:	49 f0       	breq	.+18     	; 0x8ea <_ZL15InnerOffset_cmdiPcS_+0xae>
     8d8:	61 ee       	ldi	r22, 0xE1	; 225
     8da:	72 e0       	ldi	r23, 0x02	; 2
     8dc:	88 e1       	ldi	r24, 0x18	; 24
     8de:	94 e0       	ldi	r25, 0x04	; 4
     8e0:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     8e4:	80 e0       	ldi	r24, 0x00	; 0
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	43 c0       	rjmp	.+134    	; 0x970 <__stack+0x71>
     8ea:	89 81       	ldd	r24, Y+1	; 0x01
     8ec:	9a 81       	ldd	r25, Y+2	; 0x02
     8ee:	01 96       	adiw	r24, 0x01	; 1
     8f0:	9a 83       	std	Y+2, r25	; 0x02
     8f2:	89 83       	std	Y+1, r24	; 0x01
     8f4:	cd cf       	rjmp	.-102    	; 0x890 <_ZL15InnerOffset_cmdiPcS_+0x54>
     8f6:	ce 01       	movw	r24, r28
     8f8:	8d 5b       	subi	r24, 0xBD	; 189
     8fa:	9f 4f       	sbci	r25, 0xFF	; 255
     8fc:	fc 01       	movw	r30, r24
     8fe:	80 81       	ld	r24, Z
     900:	91 81       	ldd	r25, Z+1	; 0x01
     902:	4a e0       	ldi	r20, 0x0A	; 10
     904:	50 e0       	ldi	r21, 0x00	; 0
     906:	60 e0       	ldi	r22, 0x00	; 0
     908:	70 e0       	ldi	r23, 0x00	; 0
     90a:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <strtol>
     90e:	dc 01       	movw	r26, r24
     910:	cb 01       	movw	r24, r22
     912:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <INNER_TRAVERSE_OFFSET>
     916:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
     91a:	a0 93 de 01 	sts	0x01DE, r26	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
     91e:	b0 93 df 01 	sts	0x01DF, r27	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
     922:	26 c0       	rjmp	.+76     	; 0x970 <__stack+0x71>
     924:	2c e3       	ldi	r18, 0x3C	; 60
     926:	ce 01       	movw	r24, r28
     928:	03 96       	adiw	r24, 0x03	; 3
     92a:	fc 01       	movw	r30, r24
     92c:	32 2f       	mov	r19, r18
     92e:	11 92       	st	Z+, r1
     930:	3a 95       	dec	r19
     932:	e9 f7       	brne	.-6      	; 0x92e <__stack+0x2f>
     934:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
     938:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
     93c:	a0 91 de 01 	lds	r26, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
     940:	b0 91 df 01 	lds	r27, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
     944:	9e 01       	movw	r18, r28
     946:	2f 5b       	subi	r18, 0xBF	; 191
     948:	3f 4f       	sbci	r19, 0xFF	; 255
     94a:	f9 01       	movw	r30, r18
     94c:	40 81       	ld	r20, Z
     94e:	51 81       	ldd	r21, Z+1	; 0x01
     950:	fe 01       	movw	r30, r28
     952:	33 96       	adiw	r30, 0x03	; 3
     954:	8c 01       	movw	r16, r24
     956:	9d 01       	movw	r18, r26
     958:	63 e0       	ldi	r22, 0x03	; 3
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	cf 01       	movw	r24, r30
     95e:	0e 94 ac 07 	call	0xf58	; 0xf58 <_Z17BuildSerialOutputPciS_m>
     962:	ce 01       	movw	r24, r28
     964:	03 96       	adiw	r24, 0x03	; 3
     966:	bc 01       	movw	r22, r24
     968:	88 e1       	ldi	r24, 0x18	; 24
     96a:	94 e0       	ldi	r25, 0x04	; 4
     96c:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     970:	cc 5b       	subi	r28, 0xBC	; 188
     972:	df 4f       	sbci	r29, 0xFF	; 255
     974:	0f b6       	in	r0, 0x3f	; 63
     976:	f8 94       	cli
     978:	de bf       	out	0x3e, r29	; 62
     97a:	0f be       	out	0x3f, r0	; 63
     97c:	cd bf       	out	0x3d, r28	; 61
     97e:	df 91       	pop	r29
     980:	cf 91       	pop	r28
     982:	1f 91       	pop	r17
     984:	0f 91       	pop	r16
     986:	08 95       	ret

00000988 <_ZL14SpoolWidth_cmdiPcS_>:
     988:	0f 93       	push	r16
     98a:	1f 93       	push	r17
     98c:	cf 93       	push	r28
     98e:	df 93       	push	r29
     990:	cd b7       	in	r28, 0x3d	; 61
     992:	de b7       	in	r29, 0x3e	; 62
     994:	c4 54       	subi	r28, 0x44	; 68
     996:	d1 09       	sbc	r29, r1
     998:	0f b6       	in	r0, 0x3f	; 63
     99a:	f8 94       	cli
     99c:	de bf       	out	0x3e, r29	; 62
     99e:	0f be       	out	0x3f, r0	; 63
     9a0:	cd bf       	out	0x3d, r28	; 61
     9a2:	9e 01       	movw	r18, r28
     9a4:	21 5c       	subi	r18, 0xC1	; 193
     9a6:	3f 4f       	sbci	r19, 0xFF	; 255
     9a8:	f9 01       	movw	r30, r18
     9aa:	91 83       	std	Z+1, r25	; 0x01
     9ac:	80 83       	st	Z, r24
     9ae:	ce 01       	movw	r24, r28
     9b0:	8f 5b       	subi	r24, 0xBF	; 191
     9b2:	9f 4f       	sbci	r25, 0xFF	; 255
     9b4:	fc 01       	movw	r30, r24
     9b6:	71 83       	std	Z+1, r23	; 0x01
     9b8:	60 83       	st	Z, r22
     9ba:	ce 01       	movw	r24, r28
     9bc:	8d 5b       	subi	r24, 0xBD	; 189
     9be:	9f 4f       	sbci	r25, 0xFF	; 255
     9c0:	fc 01       	movw	r30, r24
     9c2:	51 83       	std	Z+1, r21	; 0x01
     9c4:	40 83       	st	Z, r20
     9c6:	ce 01       	movw	r24, r28
     9c8:	8d 5b       	subi	r24, 0xBD	; 189
     9ca:	9f 4f       	sbci	r25, 0xFF	; 255
     9cc:	fc 01       	movw	r30, r24
     9ce:	80 81       	ld	r24, Z
     9d0:	91 81       	ldd	r25, Z+1	; 0x01
     9d2:	89 2b       	or	r24, r25
     9d4:	09 f4       	brne	.+2      	; 0x9d8 <_ZL14SpoolWidth_cmdiPcS_+0x50>
     9d6:	4c c0       	rjmp	.+152    	; 0xa70 <_ZL14SpoolWidth_cmdiPcS_+0xe8>
     9d8:	1a 82       	std	Y+2, r1	; 0x02
     9da:	19 82       	std	Y+1, r1	; 0x01
     9dc:	89 81       	ldd	r24, Y+1	; 0x01
     9de:	9a 81       	ldd	r25, Y+2	; 0x02
     9e0:	9e 01       	movw	r18, r28
     9e2:	2d 5b       	subi	r18, 0xBD	; 189
     9e4:	3f 4f       	sbci	r19, 0xFF	; 255
     9e6:	f9 01       	movw	r30, r18
     9e8:	20 81       	ld	r18, Z
     9ea:	31 81       	ldd	r19, Z+1	; 0x01
     9ec:	82 0f       	add	r24, r18
     9ee:	93 1f       	adc	r25, r19
     9f0:	fc 01       	movw	r30, r24
     9f2:	80 81       	ld	r24, Z
     9f4:	88 23       	and	r24, r24
     9f6:	29 f1       	breq	.+74     	; 0xa42 <_ZL14SpoolWidth_cmdiPcS_+0xba>
     9f8:	89 81       	ldd	r24, Y+1	; 0x01
     9fa:	9a 81       	ldd	r25, Y+2	; 0x02
     9fc:	9e 01       	movw	r18, r28
     9fe:	2d 5b       	subi	r18, 0xBD	; 189
     a00:	3f 4f       	sbci	r19, 0xFF	; 255
     a02:	f9 01       	movw	r30, r18
     a04:	20 81       	ld	r18, Z
     a06:	31 81       	ldd	r19, Z+1	; 0x01
     a08:	82 0f       	add	r24, r18
     a0a:	93 1f       	adc	r25, r19
     a0c:	fc 01       	movw	r30, r24
     a0e:	80 81       	ld	r24, Z
     a10:	88 2f       	mov	r24, r24
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	c0 97       	sbiw	r24, 0x30	; 48
     a16:	0a 97       	sbiw	r24, 0x0a	; 10
     a18:	10 f0       	brcs	.+4      	; 0xa1e <_ZL14SpoolWidth_cmdiPcS_+0x96>
     a1a:	81 e0       	ldi	r24, 0x01	; 1
     a1c:	01 c0       	rjmp	.+2      	; 0xa20 <_ZL14SpoolWidth_cmdiPcS_+0x98>
     a1e:	80 e0       	ldi	r24, 0x00	; 0
     a20:	88 23       	and	r24, r24
     a22:	49 f0       	breq	.+18     	; 0xa36 <_ZL14SpoolWidth_cmdiPcS_+0xae>
     a24:	67 e0       	ldi	r22, 0x07	; 7
     a26:	73 e0       	ldi	r23, 0x03	; 3
     a28:	88 e1       	ldi	r24, 0x18	; 24
     a2a:	94 e0       	ldi	r25, 0x04	; 4
     a2c:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     a30:	80 e0       	ldi	r24, 0x00	; 0
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	43 c0       	rjmp	.+134    	; 0xabc <_ZL14SpoolWidth_cmdiPcS_+0x134>
     a36:	89 81       	ldd	r24, Y+1	; 0x01
     a38:	9a 81       	ldd	r25, Y+2	; 0x02
     a3a:	01 96       	adiw	r24, 0x01	; 1
     a3c:	9a 83       	std	Y+2, r25	; 0x02
     a3e:	89 83       	std	Y+1, r24	; 0x01
     a40:	cd cf       	rjmp	.-102    	; 0x9dc <_ZL14SpoolWidth_cmdiPcS_+0x54>
     a42:	ce 01       	movw	r24, r28
     a44:	8d 5b       	subi	r24, 0xBD	; 189
     a46:	9f 4f       	sbci	r25, 0xFF	; 255
     a48:	fc 01       	movw	r30, r24
     a4a:	80 81       	ld	r24, Z
     a4c:	91 81       	ldd	r25, Z+1	; 0x01
     a4e:	4a e0       	ldi	r20, 0x0A	; 10
     a50:	50 e0       	ldi	r21, 0x00	; 0
     a52:	60 e0       	ldi	r22, 0x00	; 0
     a54:	70 e0       	ldi	r23, 0x00	; 0
     a56:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <strtol>
     a5a:	dc 01       	movw	r26, r24
     a5c:	cb 01       	movw	r24, r22
     a5e:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <SPOOL_WIDTH>
     a62:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <SPOOL_WIDTH+0x1>
     a66:	a0 93 e2 01 	sts	0x01E2, r26	; 0x8001e2 <SPOOL_WIDTH+0x2>
     a6a:	b0 93 e3 01 	sts	0x01E3, r27	; 0x8001e3 <SPOOL_WIDTH+0x3>
     a6e:	26 c0       	rjmp	.+76     	; 0xabc <_ZL14SpoolWidth_cmdiPcS_+0x134>
     a70:	2c e3       	ldi	r18, 0x3C	; 60
     a72:	ce 01       	movw	r24, r28
     a74:	03 96       	adiw	r24, 0x03	; 3
     a76:	fc 01       	movw	r30, r24
     a78:	32 2f       	mov	r19, r18
     a7a:	11 92       	st	Z+, r1
     a7c:	3a 95       	dec	r19
     a7e:	e9 f7       	brne	.-6      	; 0xa7a <_ZL14SpoolWidth_cmdiPcS_+0xf2>
     a80:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <SPOOL_WIDTH>
     a84:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <SPOOL_WIDTH+0x1>
     a88:	a0 91 e2 01 	lds	r26, 0x01E2	; 0x8001e2 <SPOOL_WIDTH+0x2>
     a8c:	b0 91 e3 01 	lds	r27, 0x01E3	; 0x8001e3 <SPOOL_WIDTH+0x3>
     a90:	9e 01       	movw	r18, r28
     a92:	2f 5b       	subi	r18, 0xBF	; 191
     a94:	3f 4f       	sbci	r19, 0xFF	; 255
     a96:	f9 01       	movw	r30, r18
     a98:	40 81       	ld	r20, Z
     a9a:	51 81       	ldd	r21, Z+1	; 0x01
     a9c:	fe 01       	movw	r30, r28
     a9e:	33 96       	adiw	r30, 0x03	; 3
     aa0:	8c 01       	movw	r16, r24
     aa2:	9d 01       	movw	r18, r26
     aa4:	63 e0       	ldi	r22, 0x03	; 3
     aa6:	70 e0       	ldi	r23, 0x00	; 0
     aa8:	cf 01       	movw	r24, r30
     aaa:	0e 94 ac 07 	call	0xf58	; 0xf58 <_Z17BuildSerialOutputPciS_m>
     aae:	ce 01       	movw	r24, r28
     ab0:	03 96       	adiw	r24, 0x03	; 3
     ab2:	bc 01       	movw	r22, r24
     ab4:	88 e1       	ldi	r24, 0x18	; 24
     ab6:	94 e0       	ldi	r25, 0x04	; 4
     ab8:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     abc:	cc 5b       	subi	r28, 0xBC	; 188
     abe:	df 4f       	sbci	r29, 0xFF	; 255
     ac0:	0f b6       	in	r0, 0x3f	; 63
     ac2:	f8 94       	cli
     ac4:	de bf       	out	0x3e, r29	; 62
     ac6:	0f be       	out	0x3f, r0	; 63
     ac8:	cd bf       	out	0x3d, r28	; 61
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	1f 91       	pop	r17
     ad0:	0f 91       	pop	r16
     ad2:	08 95       	ret

00000ad4 <_ZL20FilamentDiameter_cmdiPcS_>:
     ad4:	0f 93       	push	r16
     ad6:	1f 93       	push	r17
     ad8:	cf 93       	push	r28
     ada:	df 93       	push	r29
     adc:	cd b7       	in	r28, 0x3d	; 61
     ade:	de b7       	in	r29, 0x3e	; 62
     ae0:	c4 54       	subi	r28, 0x44	; 68
     ae2:	d1 09       	sbc	r29, r1
     ae4:	0f b6       	in	r0, 0x3f	; 63
     ae6:	f8 94       	cli
     ae8:	de bf       	out	0x3e, r29	; 62
     aea:	0f be       	out	0x3f, r0	; 63
     aec:	cd bf       	out	0x3d, r28	; 61
     aee:	9e 01       	movw	r18, r28
     af0:	21 5c       	subi	r18, 0xC1	; 193
     af2:	3f 4f       	sbci	r19, 0xFF	; 255
     af4:	f9 01       	movw	r30, r18
     af6:	91 83       	std	Z+1, r25	; 0x01
     af8:	80 83       	st	Z, r24
     afa:	ce 01       	movw	r24, r28
     afc:	8f 5b       	subi	r24, 0xBF	; 191
     afe:	9f 4f       	sbci	r25, 0xFF	; 255
     b00:	fc 01       	movw	r30, r24
     b02:	71 83       	std	Z+1, r23	; 0x01
     b04:	60 83       	st	Z, r22
     b06:	ce 01       	movw	r24, r28
     b08:	8d 5b       	subi	r24, 0xBD	; 189
     b0a:	9f 4f       	sbci	r25, 0xFF	; 255
     b0c:	fc 01       	movw	r30, r24
     b0e:	51 83       	std	Z+1, r21	; 0x01
     b10:	40 83       	st	Z, r20
     b12:	ce 01       	movw	r24, r28
     b14:	8d 5b       	subi	r24, 0xBD	; 189
     b16:	9f 4f       	sbci	r25, 0xFF	; 255
     b18:	fc 01       	movw	r30, r24
     b1a:	80 81       	ld	r24, Z
     b1c:	91 81       	ldd	r25, Z+1	; 0x01
     b1e:	89 2b       	or	r24, r25
     b20:	09 f4       	brne	.+2      	; 0xb24 <_ZL20FilamentDiameter_cmdiPcS_+0x50>
     b22:	4c c0       	rjmp	.+152    	; 0xbbc <_ZL20FilamentDiameter_cmdiPcS_+0xe8>
     b24:	1a 82       	std	Y+2, r1	; 0x02
     b26:	19 82       	std	Y+1, r1	; 0x01
     b28:	89 81       	ldd	r24, Y+1	; 0x01
     b2a:	9a 81       	ldd	r25, Y+2	; 0x02
     b2c:	9e 01       	movw	r18, r28
     b2e:	2d 5b       	subi	r18, 0xBD	; 189
     b30:	3f 4f       	sbci	r19, 0xFF	; 255
     b32:	f9 01       	movw	r30, r18
     b34:	20 81       	ld	r18, Z
     b36:	31 81       	ldd	r19, Z+1	; 0x01
     b38:	82 0f       	add	r24, r18
     b3a:	93 1f       	adc	r25, r19
     b3c:	fc 01       	movw	r30, r24
     b3e:	80 81       	ld	r24, Z
     b40:	88 23       	and	r24, r24
     b42:	29 f1       	breq	.+74     	; 0xb8e <_ZL20FilamentDiameter_cmdiPcS_+0xba>
     b44:	89 81       	ldd	r24, Y+1	; 0x01
     b46:	9a 81       	ldd	r25, Y+2	; 0x02
     b48:	9e 01       	movw	r18, r28
     b4a:	2d 5b       	subi	r18, 0xBD	; 189
     b4c:	3f 4f       	sbci	r19, 0xFF	; 255
     b4e:	f9 01       	movw	r30, r18
     b50:	20 81       	ld	r18, Z
     b52:	31 81       	ldd	r19, Z+1	; 0x01
     b54:	82 0f       	add	r24, r18
     b56:	93 1f       	adc	r25, r19
     b58:	fc 01       	movw	r30, r24
     b5a:	80 81       	ld	r24, Z
     b5c:	88 2f       	mov	r24, r24
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	c0 97       	sbiw	r24, 0x30	; 48
     b62:	0a 97       	sbiw	r24, 0x0a	; 10
     b64:	10 f0       	brcs	.+4      	; 0xb6a <_ZL20FilamentDiameter_cmdiPcS_+0x96>
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	01 c0       	rjmp	.+2      	; 0xb6c <_ZL20FilamentDiameter_cmdiPcS_+0x98>
     b6a:	80 e0       	ldi	r24, 0x00	; 0
     b6c:	88 23       	and	r24, r24
     b6e:	49 f0       	breq	.+18     	; 0xb82 <_ZL20FilamentDiameter_cmdiPcS_+0xae>
     b70:	67 e0       	ldi	r22, 0x07	; 7
     b72:	73 e0       	ldi	r23, 0x03	; 3
     b74:	88 e1       	ldi	r24, 0x18	; 24
     b76:	94 e0       	ldi	r25, 0x04	; 4
     b78:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     b7c:	80 e0       	ldi	r24, 0x00	; 0
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	43 c0       	rjmp	.+134    	; 0xc08 <_ZL20FilamentDiameter_cmdiPcS_+0x134>
     b82:	89 81       	ldd	r24, Y+1	; 0x01
     b84:	9a 81       	ldd	r25, Y+2	; 0x02
     b86:	01 96       	adiw	r24, 0x01	; 1
     b88:	9a 83       	std	Y+2, r25	; 0x02
     b8a:	89 83       	std	Y+1, r24	; 0x01
     b8c:	cd cf       	rjmp	.-102    	; 0xb28 <_ZL20FilamentDiameter_cmdiPcS_+0x54>
     b8e:	ce 01       	movw	r24, r28
     b90:	8d 5b       	subi	r24, 0xBD	; 189
     b92:	9f 4f       	sbci	r25, 0xFF	; 255
     b94:	fc 01       	movw	r30, r24
     b96:	80 81       	ld	r24, Z
     b98:	91 81       	ldd	r25, Z+1	; 0x01
     b9a:	4a e0       	ldi	r20, 0x0A	; 10
     b9c:	50 e0       	ldi	r21, 0x00	; 0
     b9e:	60 e0       	ldi	r22, 0x00	; 0
     ba0:	70 e0       	ldi	r23, 0x00	; 0
     ba2:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <strtol>
     ba6:	dc 01       	movw	r26, r24
     ba8:	cb 01       	movw	r24, r22
     baa:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <FILAMENT_DIAMETER>
     bae:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <FILAMENT_DIAMETER+0x1>
     bb2:	a0 93 e6 01 	sts	0x01E6, r26	; 0x8001e6 <FILAMENT_DIAMETER+0x2>
     bb6:	b0 93 e7 01 	sts	0x01E7, r27	; 0x8001e7 <FILAMENT_DIAMETER+0x3>
     bba:	26 c0       	rjmp	.+76     	; 0xc08 <_ZL20FilamentDiameter_cmdiPcS_+0x134>
     bbc:	2c e3       	ldi	r18, 0x3C	; 60
     bbe:	ce 01       	movw	r24, r28
     bc0:	03 96       	adiw	r24, 0x03	; 3
     bc2:	fc 01       	movw	r30, r24
     bc4:	32 2f       	mov	r19, r18
     bc6:	11 92       	st	Z+, r1
     bc8:	3a 95       	dec	r19
     bca:	e9 f7       	brne	.-6      	; 0xbc6 <_ZL20FilamentDiameter_cmdiPcS_+0xf2>
     bcc:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <FILAMENT_DIAMETER>
     bd0:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <FILAMENT_DIAMETER+0x1>
     bd4:	a0 91 e6 01 	lds	r26, 0x01E6	; 0x8001e6 <FILAMENT_DIAMETER+0x2>
     bd8:	b0 91 e7 01 	lds	r27, 0x01E7	; 0x8001e7 <FILAMENT_DIAMETER+0x3>
     bdc:	9e 01       	movw	r18, r28
     bde:	2f 5b       	subi	r18, 0xBF	; 191
     be0:	3f 4f       	sbci	r19, 0xFF	; 255
     be2:	f9 01       	movw	r30, r18
     be4:	40 81       	ld	r20, Z
     be6:	51 81       	ldd	r21, Z+1	; 0x01
     be8:	fe 01       	movw	r30, r28
     bea:	33 96       	adiw	r30, 0x03	; 3
     bec:	8c 01       	movw	r16, r24
     bee:	9d 01       	movw	r18, r26
     bf0:	63 e0       	ldi	r22, 0x03	; 3
     bf2:	70 e0       	ldi	r23, 0x00	; 0
     bf4:	cf 01       	movw	r24, r30
     bf6:	0e 94 ac 07 	call	0xf58	; 0xf58 <_Z17BuildSerialOutputPciS_m>
     bfa:	ce 01       	movw	r24, r28
     bfc:	03 96       	adiw	r24, 0x03	; 3
     bfe:	bc 01       	movw	r22, r24
     c00:	88 e1       	ldi	r24, 0x18	; 24
     c02:	94 e0       	ldi	r25, 0x04	; 4
     c04:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     c08:	cc 5b       	subi	r28, 0xBC	; 188
     c0a:	df 4f       	sbci	r29, 0xFF	; 255
     c0c:	0f b6       	in	r0, 0x3f	; 63
     c0e:	f8 94       	cli
     c10:	de bf       	out	0x3e, r29	; 62
     c12:	0f be       	out	0x3f, r0	; 63
     c14:	cd bf       	out	0x3d, r28	; 61
     c16:	df 91       	pop	r29
     c18:	cf 91       	pop	r28
     c1a:	1f 91       	pop	r17
     c1c:	0f 91       	pop	r16
     c1e:	08 95       	ret

00000c20 <_ZL13MoveToEnd_cmdiPcS_>:
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	00 d0       	rcall	.+0      	; 0xc26 <_ZL13MoveToEnd_cmdiPcS_+0x6>
     c26:	00 d0       	rcall	.+0      	; 0xc28 <_ZL13MoveToEnd_cmdiPcS_+0x8>
     c28:	00 d0       	rcall	.+0      	; 0xc2a <_ZL13MoveToEnd_cmdiPcS_+0xa>
     c2a:	cd b7       	in	r28, 0x3d	; 61
     c2c:	de b7       	in	r29, 0x3e	; 62
     c2e:	9a 83       	std	Y+2, r25	; 0x02
     c30:	89 83       	std	Y+1, r24	; 0x01
     c32:	7c 83       	std	Y+4, r23	; 0x04
     c34:	6b 83       	std	Y+3, r22	; 0x03
     c36:	5e 83       	std	Y+6, r21	; 0x06
     c38:	4d 83       	std	Y+5, r20	; 0x05
     c3a:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <RUN_MODE>
     c3e:	84 30       	cpi	r24, 0x04	; 4
     c40:	21 f0       	breq	.+8      	; 0xc4a <_ZL13MoveToEnd_cmdiPcS_+0x2a>
     c42:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <RUN_MODE>
     c46:	83 30       	cpi	r24, 0x03	; 3
     c48:	11 f4       	brne	.+4      	; 0xc4e <_ZL13MoveToEnd_cmdiPcS_+0x2e>
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	01 c0       	rjmp	.+2      	; 0xc50 <_ZL13MoveToEnd_cmdiPcS_+0x30>
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	88 23       	and	r24, r24
     c52:	19 f0       	breq	.+6      	; 0xc5a <_ZL13MoveToEnd_cmdiPcS_+0x3a>
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <MOVE_TO_END>
     c5a:	00 00       	nop
     c5c:	26 96       	adiw	r28, 0x06	; 6
     c5e:	0f b6       	in	r0, 0x3f	; 63
     c60:	f8 94       	cli
     c62:	de bf       	out	0x3e, r29	; 62
     c64:	0f be       	out	0x3f, r0	; 63
     c66:	cd bf       	out	0x3d, r28	; 61
     c68:	df 91       	pop	r29
     c6a:	cf 91       	pop	r28
     c6c:	08 95       	ret

00000c6e <_ZL17StartPosition_cmdiPcS_>:
     c6e:	0f 93       	push	r16
     c70:	1f 93       	push	r17
     c72:	cf 93       	push	r28
     c74:	df 93       	push	r29
     c76:	cd b7       	in	r28, 0x3d	; 61
     c78:	de b7       	in	r29, 0x3e	; 62
     c7a:	c6 54       	subi	r28, 0x46	; 70
     c7c:	d1 09       	sbc	r29, r1
     c7e:	0f b6       	in	r0, 0x3f	; 63
     c80:	f8 94       	cli
     c82:	de bf       	out	0x3e, r29	; 62
     c84:	0f be       	out	0x3f, r0	; 63
     c86:	cd bf       	out	0x3d, r28	; 61
     c88:	9e 01       	movw	r18, r28
     c8a:	2f 5b       	subi	r18, 0xBF	; 191
     c8c:	3f 4f       	sbci	r19, 0xFF	; 255
     c8e:	f9 01       	movw	r30, r18
     c90:	91 83       	std	Z+1, r25	; 0x01
     c92:	80 83       	st	Z, r24
     c94:	ce 01       	movw	r24, r28
     c96:	8d 5b       	subi	r24, 0xBD	; 189
     c98:	9f 4f       	sbci	r25, 0xFF	; 255
     c9a:	fc 01       	movw	r30, r24
     c9c:	71 83       	std	Z+1, r23	; 0x01
     c9e:	60 83       	st	Z, r22
     ca0:	ce 01       	movw	r24, r28
     ca2:	8b 5b       	subi	r24, 0xBB	; 187
     ca4:	9f 4f       	sbci	r25, 0xFF	; 255
     ca6:	fc 01       	movw	r30, r24
     ca8:	51 83       	std	Z+1, r21	; 0x01
     caa:	40 83       	st	Z, r20
     cac:	ce 01       	movw	r24, r28
     cae:	8b 5b       	subi	r24, 0xBB	; 187
     cb0:	9f 4f       	sbci	r25, 0xFF	; 255
     cb2:	fc 01       	movw	r30, r24
     cb4:	80 81       	ld	r24, Z
     cb6:	91 81       	ldd	r25, Z+1	; 0x01
     cb8:	89 2b       	or	r24, r25
     cba:	09 f4       	brne	.+2      	; 0xcbe <_ZL17StartPosition_cmdiPcS_+0x50>
     cbc:	4d c0       	rjmp	.+154    	; 0xd58 <_ZL17StartPosition_cmdiPcS_+0xea>
     cbe:	1a 82       	std	Y+2, r1	; 0x02
     cc0:	19 82       	std	Y+1, r1	; 0x01
     cc2:	89 81       	ldd	r24, Y+1	; 0x01
     cc4:	9a 81       	ldd	r25, Y+2	; 0x02
     cc6:	9e 01       	movw	r18, r28
     cc8:	2b 5b       	subi	r18, 0xBB	; 187
     cca:	3f 4f       	sbci	r19, 0xFF	; 255
     ccc:	f9 01       	movw	r30, r18
     cce:	20 81       	ld	r18, Z
     cd0:	31 81       	ldd	r19, Z+1	; 0x01
     cd2:	82 0f       	add	r24, r18
     cd4:	93 1f       	adc	r25, r19
     cd6:	fc 01       	movw	r30, r24
     cd8:	80 81       	ld	r24, Z
     cda:	88 23       	and	r24, r24
     cdc:	29 f1       	breq	.+74     	; 0xd28 <_ZL17StartPosition_cmdiPcS_+0xba>
     cde:	89 81       	ldd	r24, Y+1	; 0x01
     ce0:	9a 81       	ldd	r25, Y+2	; 0x02
     ce2:	9e 01       	movw	r18, r28
     ce4:	2b 5b       	subi	r18, 0xBB	; 187
     ce6:	3f 4f       	sbci	r19, 0xFF	; 255
     ce8:	f9 01       	movw	r30, r18
     cea:	20 81       	ld	r18, Z
     cec:	31 81       	ldd	r19, Z+1	; 0x01
     cee:	82 0f       	add	r24, r18
     cf0:	93 1f       	adc	r25, r19
     cf2:	fc 01       	movw	r30, r24
     cf4:	80 81       	ld	r24, Z
     cf6:	88 2f       	mov	r24, r24
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	c0 97       	sbiw	r24, 0x30	; 48
     cfc:	0a 97       	sbiw	r24, 0x0a	; 10
     cfe:	10 f0       	brcs	.+4      	; 0xd04 <_ZL17StartPosition_cmdiPcS_+0x96>
     d00:	81 e0       	ldi	r24, 0x01	; 1
     d02:	01 c0       	rjmp	.+2      	; 0xd06 <_ZL17StartPosition_cmdiPcS_+0x98>
     d04:	80 e0       	ldi	r24, 0x00	; 0
     d06:	88 23       	and	r24, r24
     d08:	49 f0       	breq	.+18     	; 0xd1c <_ZL17StartPosition_cmdiPcS_+0xae>
     d0a:	61 e9       	ldi	r22, 0x91	; 145
     d0c:	72 e0       	ldi	r23, 0x02	; 2
     d0e:	88 e1       	ldi	r24, 0x18	; 24
     d10:	94 e0       	ldi	r25, 0x04	; 4
     d12:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     d16:	80 e0       	ldi	r24, 0x00	; 0
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	42 c0       	rjmp	.+132    	; 0xda0 <_ZL17StartPosition_cmdiPcS_+0x132>
     d1c:	89 81       	ldd	r24, Y+1	; 0x01
     d1e:	9a 81       	ldd	r25, Y+2	; 0x02
     d20:	01 96       	adiw	r24, 0x01	; 1
     d22:	9a 83       	std	Y+2, r25	; 0x02
     d24:	89 83       	std	Y+1, r24	; 0x01
     d26:	cd cf       	rjmp	.-102    	; 0xcc2 <_ZL17StartPosition_cmdiPcS_+0x54>
     d28:	ce 01       	movw	r24, r28
     d2a:	8b 5b       	subi	r24, 0xBB	; 187
     d2c:	9f 4f       	sbci	r25, 0xFF	; 255
     d2e:	fc 01       	movw	r30, r24
     d30:	80 81       	ld	r24, Z
     d32:	91 81       	ldd	r25, Z+1	; 0x01
     d34:	4a e0       	ldi	r20, 0x0A	; 10
     d36:	50 e0       	ldi	r21, 0x00	; 0
     d38:	60 e0       	ldi	r22, 0x00	; 0
     d3a:	70 e0       	ldi	r23, 0x00	; 0
     d3c:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <strtol>
     d40:	dc 01       	movw	r26, r24
     d42:	cb 01       	movw	r24, r22
     d44:	9c 83       	std	Y+4, r25	; 0x04
     d46:	8b 83       	std	Y+3, r24	; 0x03
     d48:	8b 81       	ldd	r24, Y+3	; 0x03
     d4a:	9c 81       	ldd	r25, Y+4	; 0x04
     d4c:	04 97       	sbiw	r24, 0x04	; 4
     d4e:	40 f5       	brcc	.+80     	; 0xda0 <_ZL17StartPosition_cmdiPcS_+0x132>
     d50:	8b 81       	ldd	r24, Y+3	; 0x03
     d52:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <START_POSITION>
     d56:	24 c0       	rjmp	.+72     	; 0xda0 <_ZL17StartPosition_cmdiPcS_+0x132>
     d58:	2c e3       	ldi	r18, 0x3C	; 60
     d5a:	ce 01       	movw	r24, r28
     d5c:	05 96       	adiw	r24, 0x05	; 5
     d5e:	fc 01       	movw	r30, r24
     d60:	32 2f       	mov	r19, r18
     d62:	11 92       	st	Z+, r1
     d64:	3a 95       	dec	r19
     d66:	e9 f7       	brne	.-6      	; 0xd62 <_ZL17StartPosition_cmdiPcS_+0xf4>
     d68:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <START_POSITION>
     d6c:	88 2f       	mov	r24, r24
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	a0 e0       	ldi	r26, 0x00	; 0
     d72:	b0 e0       	ldi	r27, 0x00	; 0
     d74:	9e 01       	movw	r18, r28
     d76:	2d 5b       	subi	r18, 0xBD	; 189
     d78:	3f 4f       	sbci	r19, 0xFF	; 255
     d7a:	f9 01       	movw	r30, r18
     d7c:	40 81       	ld	r20, Z
     d7e:	51 81       	ldd	r21, Z+1	; 0x01
     d80:	fe 01       	movw	r30, r28
     d82:	35 96       	adiw	r30, 0x05	; 5
     d84:	8c 01       	movw	r16, r24
     d86:	9d 01       	movw	r18, r26
     d88:	63 e0       	ldi	r22, 0x03	; 3
     d8a:	70 e0       	ldi	r23, 0x00	; 0
     d8c:	cf 01       	movw	r24, r30
     d8e:	0e 94 ac 07 	call	0xf58	; 0xf58 <_Z17BuildSerialOutputPciS_m>
     d92:	ce 01       	movw	r24, r28
     d94:	05 96       	adiw	r24, 0x05	; 5
     d96:	bc 01       	movw	r22, r24
     d98:	88 e1       	ldi	r24, 0x18	; 24
     d9a:	94 e0       	ldi	r25, 0x04	; 4
     d9c:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     da0:	ca 5b       	subi	r28, 0xBA	; 186
     da2:	df 4f       	sbci	r29, 0xFF	; 255
     da4:	0f b6       	in	r0, 0x3f	; 63
     da6:	f8 94       	cli
     da8:	de bf       	out	0x3e, r29	; 62
     daa:	0f be       	out	0x3f, r0	; 63
     dac:	cd bf       	out	0x3d, r28	; 61
     dae:	df 91       	pop	r29
     db0:	cf 91       	pop	r28
     db2:	1f 91       	pop	r17
     db4:	0f 91       	pop	r16
     db6:	08 95       	ret

00000db8 <_ZL19FilamentCapture_cmdiPcS_>:
     db8:	0f 93       	push	r16
     dba:	1f 93       	push	r17
     dbc:	cf 93       	push	r28
     dbe:	df 93       	push	r29
     dc0:	cd b7       	in	r28, 0x3d	; 61
     dc2:	de b7       	in	r29, 0x3e	; 62
     dc4:	c6 54       	subi	r28, 0x46	; 70
     dc6:	d1 09       	sbc	r29, r1
     dc8:	0f b6       	in	r0, 0x3f	; 63
     dca:	f8 94       	cli
     dcc:	de bf       	out	0x3e, r29	; 62
     dce:	0f be       	out	0x3f, r0	; 63
     dd0:	cd bf       	out	0x3d, r28	; 61
     dd2:	9e 01       	movw	r18, r28
     dd4:	2f 5b       	subi	r18, 0xBF	; 191
     dd6:	3f 4f       	sbci	r19, 0xFF	; 255
     dd8:	f9 01       	movw	r30, r18
     dda:	91 83       	std	Z+1, r25	; 0x01
     ddc:	80 83       	st	Z, r24
     dde:	ce 01       	movw	r24, r28
     de0:	8d 5b       	subi	r24, 0xBD	; 189
     de2:	9f 4f       	sbci	r25, 0xFF	; 255
     de4:	fc 01       	movw	r30, r24
     de6:	71 83       	std	Z+1, r23	; 0x01
     de8:	60 83       	st	Z, r22
     dea:	ce 01       	movw	r24, r28
     dec:	8b 5b       	subi	r24, 0xBB	; 187
     dee:	9f 4f       	sbci	r25, 0xFF	; 255
     df0:	fc 01       	movw	r30, r24
     df2:	51 83       	std	Z+1, r21	; 0x01
     df4:	40 83       	st	Z, r20
     df6:	ce 01       	movw	r24, r28
     df8:	8b 5b       	subi	r24, 0xBB	; 187
     dfa:	9f 4f       	sbci	r25, 0xFF	; 255
     dfc:	fc 01       	movw	r30, r24
     dfe:	80 81       	ld	r24, Z
     e00:	91 81       	ldd	r25, Z+1	; 0x01
     e02:	89 2b       	or	r24, r25
     e04:	09 f4       	brne	.+2      	; 0xe08 <_ZL19FilamentCapture_cmdiPcS_+0x50>
     e06:	4e c0       	rjmp	.+156    	; 0xea4 <_ZL19FilamentCapture_cmdiPcS_+0xec>
     e08:	1a 82       	std	Y+2, r1	; 0x02
     e0a:	19 82       	std	Y+1, r1	; 0x01
     e0c:	89 81       	ldd	r24, Y+1	; 0x01
     e0e:	9a 81       	ldd	r25, Y+2	; 0x02
     e10:	9e 01       	movw	r18, r28
     e12:	2b 5b       	subi	r18, 0xBB	; 187
     e14:	3f 4f       	sbci	r19, 0xFF	; 255
     e16:	f9 01       	movw	r30, r18
     e18:	20 81       	ld	r18, Z
     e1a:	31 81       	ldd	r19, Z+1	; 0x01
     e1c:	82 0f       	add	r24, r18
     e1e:	93 1f       	adc	r25, r19
     e20:	fc 01       	movw	r30, r24
     e22:	80 81       	ld	r24, Z
     e24:	88 23       	and	r24, r24
     e26:	29 f1       	breq	.+74     	; 0xe72 <_ZL19FilamentCapture_cmdiPcS_+0xba>
     e28:	89 81       	ldd	r24, Y+1	; 0x01
     e2a:	9a 81       	ldd	r25, Y+2	; 0x02
     e2c:	9e 01       	movw	r18, r28
     e2e:	2b 5b       	subi	r18, 0xBB	; 187
     e30:	3f 4f       	sbci	r19, 0xFF	; 255
     e32:	f9 01       	movw	r30, r18
     e34:	20 81       	ld	r18, Z
     e36:	31 81       	ldd	r19, Z+1	; 0x01
     e38:	82 0f       	add	r24, r18
     e3a:	93 1f       	adc	r25, r19
     e3c:	fc 01       	movw	r30, r24
     e3e:	80 81       	ld	r24, Z
     e40:	88 2f       	mov	r24, r24
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	c0 97       	sbiw	r24, 0x30	; 48
     e46:	0a 97       	sbiw	r24, 0x0a	; 10
     e48:	10 f0       	brcs	.+4      	; 0xe4e <_ZL19FilamentCapture_cmdiPcS_+0x96>
     e4a:	81 e0       	ldi	r24, 0x01	; 1
     e4c:	01 c0       	rjmp	.+2      	; 0xe50 <_ZL19FilamentCapture_cmdiPcS_+0x98>
     e4e:	80 e0       	ldi	r24, 0x00	; 0
     e50:	88 23       	and	r24, r24
     e52:	49 f0       	breq	.+18     	; 0xe66 <_ZL19FilamentCapture_cmdiPcS_+0xae>
     e54:	61 e9       	ldi	r22, 0x91	; 145
     e56:	72 e0       	ldi	r23, 0x02	; 2
     e58:	88 e1       	ldi	r24, 0x18	; 24
     e5a:	94 e0       	ldi	r25, 0x04	; 4
     e5c:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     e60:	80 e0       	ldi	r24, 0x00	; 0
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	43 c0       	rjmp	.+134    	; 0xeec <_ZL19FilamentCapture_cmdiPcS_+0x134>
     e66:	89 81       	ldd	r24, Y+1	; 0x01
     e68:	9a 81       	ldd	r25, Y+2	; 0x02
     e6a:	01 96       	adiw	r24, 0x01	; 1
     e6c:	9a 83       	std	Y+2, r25	; 0x02
     e6e:	89 83       	std	Y+1, r24	; 0x01
     e70:	cd cf       	rjmp	.-102    	; 0xe0c <_ZL19FilamentCapture_cmdiPcS_+0x54>
     e72:	ce 01       	movw	r24, r28
     e74:	8b 5b       	subi	r24, 0xBB	; 187
     e76:	9f 4f       	sbci	r25, 0xFF	; 255
     e78:	fc 01       	movw	r30, r24
     e7a:	80 81       	ld	r24, Z
     e7c:	91 81       	ldd	r25, Z+1	; 0x01
     e7e:	4a e0       	ldi	r20, 0x0A	; 10
     e80:	50 e0       	ldi	r21, 0x00	; 0
     e82:	60 e0       	ldi	r22, 0x00	; 0
     e84:	70 e0       	ldi	r23, 0x00	; 0
     e86:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <strtol>
     e8a:	dc 01       	movw	r26, r24
     e8c:	cb 01       	movw	r24, r22
     e8e:	9c 83       	std	Y+4, r25	; 0x04
     e90:	8b 83       	std	Y+3, r24	; 0x03
     e92:	21 e0       	ldi	r18, 0x01	; 1
     e94:	8b 81       	ldd	r24, Y+3	; 0x03
     e96:	9c 81       	ldd	r25, Y+4	; 0x04
     e98:	01 97       	sbiw	r24, 0x01	; 1
     e9a:	09 f0       	breq	.+2      	; 0xe9e <_ZL19FilamentCapture_cmdiPcS_+0xe6>
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	20 93 12 04 	sts	0x0412, r18	; 0x800412 <FILAMENT_CAPTURE>
     ea2:	24 c0       	rjmp	.+72     	; 0xeec <_ZL19FilamentCapture_cmdiPcS_+0x134>
     ea4:	2c e3       	ldi	r18, 0x3C	; 60
     ea6:	ce 01       	movw	r24, r28
     ea8:	05 96       	adiw	r24, 0x05	; 5
     eaa:	fc 01       	movw	r30, r24
     eac:	32 2f       	mov	r19, r18
     eae:	11 92       	st	Z+, r1
     eb0:	3a 95       	dec	r19
     eb2:	e9 f7       	brne	.-6      	; 0xeae <_ZL19FilamentCapture_cmdiPcS_+0xf6>
     eb4:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <FILAMENT_CAPTURE>
     eb8:	88 2f       	mov	r24, r24
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	a0 e0       	ldi	r26, 0x00	; 0
     ebe:	b0 e0       	ldi	r27, 0x00	; 0
     ec0:	9e 01       	movw	r18, r28
     ec2:	2d 5b       	subi	r18, 0xBD	; 189
     ec4:	3f 4f       	sbci	r19, 0xFF	; 255
     ec6:	f9 01       	movw	r30, r18
     ec8:	40 81       	ld	r20, Z
     eca:	51 81       	ldd	r21, Z+1	; 0x01
     ecc:	fe 01       	movw	r30, r28
     ece:	35 96       	adiw	r30, 0x05	; 5
     ed0:	8c 01       	movw	r16, r24
     ed2:	9d 01       	movw	r18, r26
     ed4:	63 e0       	ldi	r22, 0x03	; 3
     ed6:	70 e0       	ldi	r23, 0x00	; 0
     ed8:	cf 01       	movw	r24, r30
     eda:	0e 94 ac 07 	call	0xf58	; 0xf58 <_Z17BuildSerialOutputPciS_m>
     ede:	ce 01       	movw	r24, r28
     ee0:	05 96       	adiw	r24, 0x05	; 5
     ee2:	bc 01       	movw	r22, r24
     ee4:	88 e1       	ldi	r24, 0x18	; 24
     ee6:	94 e0       	ldi	r25, 0x04	; 4
     ee8:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
     eec:	ca 5b       	subi	r28, 0xBA	; 186
     eee:	df 4f       	sbci	r29, 0xFF	; 255
     ef0:	0f b6       	in	r0, 0x3f	; 63
     ef2:	f8 94       	cli
     ef4:	de bf       	out	0x3e, r29	; 62
     ef6:	0f be       	out	0x3f, r0	; 63
     ef8:	cd bf       	out	0x3d, r28	; 61
     efa:	df 91       	pop	r29
     efc:	cf 91       	pop	r28
     efe:	1f 91       	pop	r17
     f00:	0f 91       	pop	r16
     f02:	08 95       	ret

00000f04 <_ZN15Serial_Commands15commandsProcessEv>:
     f04:	cf 93       	push	r28
     f06:	df 93       	push	r29
     f08:	cd b7       	in	r28, 0x3d	; 61
     f0a:	de b7       	in	r29, 0x3e	; 62
     f0c:	c2 58       	subi	r28, 0x82	; 130
     f0e:	d1 09       	sbc	r29, r1
     f10:	0f b6       	in	r0, 0x3f	; 63
     f12:	f8 94       	cli
     f14:	de bf       	out	0x3e, r29	; 62
     f16:	0f be       	out	0x3f, r0	; 63
     f18:	cd bf       	out	0x3d, r28	; 61
     f1a:	9e 01       	movw	r18, r28
     f1c:	2f 57       	subi	r18, 0x7F	; 127
     f1e:	3f 4f       	sbci	r19, 0xFF	; 255
     f20:	f9 01       	movw	r30, r18
     f22:	91 83       	std	Z+1, r25	; 0x01
     f24:	80 83       	st	Z, r24
     f26:	ce 01       	movw	r24, r28
     f28:	01 96       	adiw	r24, 0x01	; 1
     f2a:	0e 94 0d 08 	call	0x101a	; 0x101a <_ZN17Serial_ProcessingC1Ev>
     f2e:	64 e9       	ldi	r22, 0x94	; 148
     f30:	71 e0       	ldi	r23, 0x01	; 1
     f32:	ce 01       	movw	r24, r28
     f34:	01 96       	adiw	r24, 0x01	; 1
     f36:	0e 94 34 08 	call	0x1068	; 0x1068 <_ZN17Serial_Processing15CommandsProcessEP8sCommand>
     f3a:	ce 01       	movw	r24, r28
     f3c:	01 96       	adiw	r24, 0x01	; 1
     f3e:	0e 94 ce 09 	call	0x139c	; 0x139c <_ZN17Serial_ProcessingD1Ev>
     f42:	00 00       	nop
     f44:	ce 57       	subi	r28, 0x7E	; 126
     f46:	df 4f       	sbci	r29, 0xFF	; 255
     f48:	0f b6       	in	r0, 0x3f	; 63
     f4a:	f8 94       	cli
     f4c:	de bf       	out	0x3e, r29	; 62
     f4e:	0f be       	out	0x3f, r0	; 63
     f50:	cd bf       	out	0x3d, r28	; 61
     f52:	df 91       	pop	r29
     f54:	cf 91       	pop	r28
     f56:	08 95       	ret

00000f58 <_Z17BuildSerialOutputPciS_m>:
     f58:	0f 93       	push	r16
     f5a:	1f 93       	push	r17
     f5c:	cf 93       	push	r28
     f5e:	df 93       	push	r29
     f60:	cd b7       	in	r28, 0x3d	; 61
     f62:	de b7       	in	r29, 0x3e	; 62
     f64:	2a 97       	sbiw	r28, 0x0a	; 10
     f66:	0f b6       	in	r0, 0x3f	; 63
     f68:	f8 94       	cli
     f6a:	de bf       	out	0x3e, r29	; 62
     f6c:	0f be       	out	0x3f, r0	; 63
     f6e:	cd bf       	out	0x3d, r28	; 61
     f70:	9a 83       	std	Y+2, r25	; 0x02
     f72:	89 83       	std	Y+1, r24	; 0x01
     f74:	7c 83       	std	Y+4, r23	; 0x04
     f76:	6b 83       	std	Y+3, r22	; 0x03
     f78:	5e 83       	std	Y+6, r21	; 0x06
     f7a:	4d 83       	std	Y+5, r20	; 0x05
     f7c:	0f 83       	std	Y+7, r16	; 0x07
     f7e:	18 87       	std	Y+8, r17	; 0x08
     f80:	29 87       	std	Y+9, r18	; 0x09
     f82:	3a 87       	std	Y+10, r19	; 0x0a
     f84:	8a 85       	ldd	r24, Y+10	; 0x0a
     f86:	8f 93       	push	r24
     f88:	89 85       	ldd	r24, Y+9	; 0x09
     f8a:	8f 93       	push	r24
     f8c:	88 85       	ldd	r24, Y+8	; 0x08
     f8e:	8f 93       	push	r24
     f90:	8f 81       	ldd	r24, Y+7	; 0x07
     f92:	8f 93       	push	r24
     f94:	8e 81       	ldd	r24, Y+6	; 0x06
     f96:	8f 93       	push	r24
     f98:	8d 81       	ldd	r24, Y+5	; 0x05
     f9a:	8f 93       	push	r24
     f9c:	8c 81       	ldd	r24, Y+4	; 0x04
     f9e:	8f 93       	push	r24
     fa0:	8b 81       	ldd	r24, Y+3	; 0x03
     fa2:	8f 93       	push	r24
     fa4:	88 e3       	ldi	r24, 0x38	; 56
     fa6:	93 e0       	ldi	r25, 0x03	; 3
     fa8:	89 2f       	mov	r24, r25
     faa:	8f 93       	push	r24
     fac:	88 e3       	ldi	r24, 0x38	; 56
     fae:	93 e0       	ldi	r25, 0x03	; 3
     fb0:	8f 93       	push	r24
     fb2:	8a 81       	ldd	r24, Y+2	; 0x02
     fb4:	8f 93       	push	r24
     fb6:	89 81       	ldd	r24, Y+1	; 0x01
     fb8:	8f 93       	push	r24
     fba:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <sprintf>
     fbe:	8d b7       	in	r24, 0x3d	; 61
     fc0:	9e b7       	in	r25, 0x3e	; 62
     fc2:	0c 96       	adiw	r24, 0x0c	; 12
     fc4:	0f b6       	in	r0, 0x3f	; 63
     fc6:	f8 94       	cli
     fc8:	de bf       	out	0x3e, r29	; 62
     fca:	0f be       	out	0x3f, r0	; 63
     fcc:	cd bf       	out	0x3d, r28	; 61
     fce:	00 00       	nop
     fd0:	2a 96       	adiw	r28, 0x0a	; 10
     fd2:	0f b6       	in	r0, 0x3f	; 63
     fd4:	f8 94       	cli
     fd6:	de bf       	out	0x3e, r29	; 62
     fd8:	0f be       	out	0x3f, r0	; 63
     fda:	cd bf       	out	0x3d, r28	; 61
     fdc:	df 91       	pop	r29
     fde:	cf 91       	pop	r28
     fe0:	1f 91       	pop	r17
     fe2:	0f 91       	pop	r16
     fe4:	08 95       	ret

00000fe6 <_ZN15Serial_CommandsC1Ev>:



// default constructor
Serial_Commands::Serial_Commands()
     fe6:	cf 93       	push	r28
     fe8:	df 93       	push	r29
     fea:	00 d0       	rcall	.+0      	; 0xfec <_ZN15Serial_CommandsC1Ev+0x6>
     fec:	cd b7       	in	r28, 0x3d	; 61
     fee:	de b7       	in	r29, 0x3e	; 62
     ff0:	9a 83       	std	Y+2, r25	; 0x02
     ff2:	89 83       	std	Y+1, r24	; 0x01
{
} //Serial_Commands
     ff4:	00 00       	nop
     ff6:	0f 90       	pop	r0
     ff8:	0f 90       	pop	r0
     ffa:	df 91       	pop	r29
     ffc:	cf 91       	pop	r28
     ffe:	08 95       	ret

00001000 <_ZN15Serial_CommandsD1Ev>:

// default destructor
Serial_Commands::~Serial_Commands()
    1000:	cf 93       	push	r28
    1002:	df 93       	push	r29
    1004:	00 d0       	rcall	.+0      	; 0x1006 <_ZN15Serial_CommandsD1Ev+0x6>
    1006:	cd b7       	in	r28, 0x3d	; 61
    1008:	de b7       	in	r29, 0x3e	; 62
    100a:	9a 83       	std	Y+2, r25	; 0x02
    100c:	89 83       	std	Y+1, r24	; 0x01
{
} //~Serial_Commands
    100e:	00 00       	nop
    1010:	0f 90       	pop	r0
    1012:	0f 90       	pop	r0
    1014:	df 91       	pop	r29
    1016:	cf 91       	pop	r28
    1018:	08 95       	ret

0000101a <_ZN17Serial_ProcessingC1Ev>:

void Serial_Processing::Setup(void)
{
  //Serial.begin(SERIAL_BAUD);               //Set the hardware serial port speed
  //Serial.setTimeout(50);
}
    101a:	cf 93       	push	r28
    101c:	df 93       	push	r29
    101e:	00 d0       	rcall	.+0      	; 0x1020 <_ZN17Serial_ProcessingC1Ev+0x6>
    1020:	cd b7       	in	r28, 0x3d	; 61
    1022:	de b7       	in	r29, 0x3e	; 62
    1024:	9a 83       	std	Y+2, r25	; 0x02
    1026:	89 83       	std	Y+1, r24	; 0x01
    1028:	89 81       	ldd	r24, Y+1	; 0x01
    102a:	9a 81       	ldd	r25, Y+2	; 0x02
    102c:	fc 01       	movw	r30, r24
    102e:	10 82       	st	Z, r1
    1030:	89 81       	ldd	r24, Y+1	; 0x01
    1032:	9a 81       	ldd	r25, Y+2	; 0x02
    1034:	fc 01       	movw	r30, r24
    1036:	11 82       	std	Z+1, r1	; 0x01
    1038:	89 81       	ldd	r24, Y+1	; 0x01
    103a:	9a 81       	ldd	r25, Y+2	; 0x02
    103c:	2c e3       	ldi	r18, 0x3C	; 60
    103e:	02 96       	adiw	r24, 0x02	; 2
    1040:	fc 01       	movw	r30, r24
    1042:	32 2f       	mov	r19, r18
    1044:	11 92       	st	Z+, r1
    1046:	3a 95       	dec	r19
    1048:	e9 f7       	brne	.-6      	; 0x1044 <_ZN17Serial_ProcessingC1Ev+0x2a>
    104a:	89 81       	ldd	r24, Y+1	; 0x01
    104c:	9a 81       	ldd	r25, Y+2	; 0x02
    104e:	2c e3       	ldi	r18, 0x3C	; 60
    1050:	ce 96       	adiw	r24, 0x3e	; 62
    1052:	fc 01       	movw	r30, r24
    1054:	32 2f       	mov	r19, r18
    1056:	11 92       	st	Z+, r1
    1058:	3a 95       	dec	r19
    105a:	e9 f7       	brne	.-6      	; 0x1056 <_ZN17Serial_ProcessingC1Ev+0x3c>
    105c:	00 00       	nop
    105e:	0f 90       	pop	r0
    1060:	0f 90       	pop	r0
    1062:	df 91       	pop	r29
    1064:	cf 91       	pop	r28
    1066:	08 95       	ret

00001068 <_ZN17Serial_Processing15CommandsProcessEP8sCommand>:


int Serial_Processing::CommandsProcess(sCommand *ptrCmds)
{
    1068:	cf 93       	push	r28
    106a:	df 93       	push	r29
    106c:	00 d0       	rcall	.+0      	; 0x106e <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x6>
    106e:	00 d0       	rcall	.+0      	; 0x1070 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x8>
    1070:	cd b7       	in	r28, 0x3d	; 61
    1072:	de b7       	in	r29, 0x3e	; 62
    1074:	9a 83       	std	Y+2, r25	; 0x02
    1076:	89 83       	std	Y+1, r24	; 0x01
    1078:	7c 83       	std	Y+4, r23	; 0x04
    107a:	6b 83       	std	Y+3, r22	; 0x03


  if (Serial.available() > 0)
    107c:	88 e1       	ldi	r24, 0x18	; 24
    107e:	94 e0       	ldi	r25, 0x04	; 4
    1080:	0e 94 e0 19 	call	0x33c0	; 0x33c0 <_ZN14HardwareSerial9availableEv>
    1084:	21 e0       	ldi	r18, 0x01	; 1
    1086:	18 16       	cp	r1, r24
    1088:	19 06       	cpc	r1, r25
    108a:	0c f0       	brlt	.+2      	; 0x108e <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x26>
    108c:	20 e0       	ldi	r18, 0x00	; 0
    108e:	22 23       	and	r18, r18
    1090:	19 f1       	breq	.+70     	; 0x10d8 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x70>
  {
    computer_bytes_received = Serial.readBytesUntil(10, computerdata, MAX_CMD_LENGTH); //We read the data sent from the serial monitor(pc/mac/other) until we see a <CR>. We also count how many characters have been received
    1092:	89 81       	ldd	r24, Y+1	; 0x01
    1094:	9a 81       	ldd	r25, Y+2	; 0x02
    1096:	02 96       	adiw	r24, 0x02	; 2
    1098:	2c e3       	ldi	r18, 0x3C	; 60
    109a:	30 e0       	ldi	r19, 0x00	; 0
    109c:	ac 01       	movw	r20, r24
    109e:	6a e0       	ldi	r22, 0x0A	; 10
    10a0:	88 e1       	ldi	r24, 0x18	; 24
    10a2:	94 e0       	ldi	r25, 0x04	; 4
    10a4:	0e 94 f7 1c 	call	0x39ee	; 0x39ee <_ZN6Stream14readBytesUntilEcPcj>
    10a8:	28 2f       	mov	r18, r24
    10aa:	89 81       	ldd	r24, Y+1	; 0x01
    10ac:	9a 81       	ldd	r25, Y+2	; 0x02
    10ae:	fc 01       	movw	r30, r24
    10b0:	20 83       	st	Z, r18
    computerdata[computer_bytes_received] = 0; //We add a 0 to the spot in the array just after the last character we received.. This will stop us from transmitting incorrect data that may have been left in the buffer
    10b2:	89 81       	ldd	r24, Y+1	; 0x01
    10b4:	9a 81       	ldd	r25, Y+2	; 0x02
    10b6:	fc 01       	movw	r30, r24
    10b8:	80 81       	ld	r24, Z
    10ba:	88 2f       	mov	r24, r24
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	29 81       	ldd	r18, Y+1	; 0x01
    10c0:	3a 81       	ldd	r19, Y+2	; 0x02
    10c2:	82 0f       	add	r24, r18
    10c4:	93 1f       	adc	r25, r19
    10c6:	02 96       	adiw	r24, 0x02	; 2
    10c8:	fc 01       	movw	r30, r24
    10ca:	10 82       	st	Z, r1
  else
  {
	  return 0;
  }

  if (computerdata != 0) {             //If computer_bytes_received does not equal zero
    10cc:	89 81       	ldd	r24, Y+1	; 0x01
    10ce:	9a 81       	ldd	r25, Y+2	; 0x02
    10d0:	02 96       	adiw	r24, 0x02	; 2
    10d2:	89 2b       	or	r24, r25
    10d4:	09 f1       	breq	.+66     	; 0x1118 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0xb0>
    10d6:	03 c0       	rjmp	.+6      	; 0x10de <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x76>
    computerdata[computer_bytes_received] = 0; //We add a 0 to the spot in the array just after the last character we received.. This will stop us from transmitting incorrect data that may have been left in the buffer
	
  }
  else
  {
	  return 0;
    10d8:	80 e0       	ldi	r24, 0x00	; 0
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	1f c0       	rjmp	.+62     	; 0x111c <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0xb4>
  }

  if (computerdata != 0) {             //If computer_bytes_received does not equal zero
    
    CommandParse(ptrCmds, computerdata);
    10de:	89 81       	ldd	r24, Y+1	; 0x01
    10e0:	9a 81       	ldd	r25, Y+2	; 0x02
    10e2:	ac 01       	movw	r20, r24
    10e4:	4e 5f       	subi	r20, 0xFE	; 254
    10e6:	5f 4f       	sbci	r21, 0xFF	; 255
    10e8:	2b 81       	ldd	r18, Y+3	; 0x03
    10ea:	3c 81       	ldd	r19, Y+4	; 0x04
    10ec:	89 81       	ldd	r24, Y+1	; 0x01
    10ee:	9a 81       	ldd	r25, Y+2	; 0x02
    10f0:	b9 01       	movw	r22, r18
    10f2:	0e 94 95 08 	call	0x112a	; 0x112a <_ZN17Serial_Processing12CommandParseEP8sCommandPc>
    
    computer_bytes_received = 0;                  //Reset the var computer_bytes_received to equal 0
    10f6:	89 81       	ldd	r24, Y+1	; 0x01
    10f8:	9a 81       	ldd	r25, Y+2	; 0x02
    10fa:	fc 01       	movw	r30, r24
    10fc:	10 82       	st	Z, r1
	computerdata[computer_bytes_received] = {0};
    10fe:	89 81       	ldd	r24, Y+1	; 0x01
    1100:	9a 81       	ldd	r25, Y+2	; 0x02
    1102:	fc 01       	movw	r30, r24
    1104:	80 81       	ld	r24, Z
    1106:	88 2f       	mov	r24, r24
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	29 81       	ldd	r18, Y+1	; 0x01
    110c:	3a 81       	ldd	r19, Y+2	; 0x02
    110e:	82 0f       	add	r24, r18
    1110:	93 1f       	adc	r25, r19
    1112:	02 96       	adiw	r24, 0x02	; 2
    1114:	fc 01       	movw	r30, r24
    1116:	10 82       	st	Z, r1
  }

  return 0;
    1118:	80 e0       	ldi	r24, 0x00	; 0
    111a:	90 e0       	ldi	r25, 0x00	; 0
}
    111c:	0f 90       	pop	r0
    111e:	0f 90       	pop	r0
    1120:	0f 90       	pop	r0
    1122:	0f 90       	pop	r0
    1124:	df 91       	pop	r29
    1126:	cf 91       	pop	r28
    1128:	08 95       	ret

0000112a <_ZN17Serial_Processing12CommandParseEP8sCommandPc>:


unsigned int Serial_Processing::CommandParse(sCommand *ptrCmds, char str[MAX_CMD_LENGTH])
{
    112a:	cf 93       	push	r28
    112c:	df 93       	push	r29
    112e:	cd b7       	in	r28, 0x3d	; 61
    1130:	de b7       	in	r29, 0x3e	; 62
    1132:	2e 97       	sbiw	r28, 0x0e	; 14
    1134:	0f b6       	in	r0, 0x3f	; 63
    1136:	f8 94       	cli
    1138:	de bf       	out	0x3e, r29	; 62
    113a:	0f be       	out	0x3f, r0	; 63
    113c:	cd bf       	out	0x3d, r28	; 61
    113e:	9a 87       	std	Y+10, r25	; 0x0a
    1140:	89 87       	std	Y+9, r24	; 0x09
    1142:	7c 87       	std	Y+12, r23	; 0x0c
    1144:	6b 87       	std	Y+11, r22	; 0x0b
    1146:	5e 87       	std	Y+14, r21	; 0x0e
    1148:	4d 87       	std	Y+13, r20	; 0x0d
  hardwareType = strtok(str, DELIMITER); //hardware ID
    114a:	8d 85       	ldd	r24, Y+13	; 0x0d
    114c:	9e 85       	ldd	r25, Y+14	; 0x0e
    114e:	62 e4       	ldi	r22, 0x42	; 66
    1150:	73 e0       	ldi	r23, 0x03	; 3
    1152:	0e 94 ae 1f 	call	0x3f5c	; 0x3f5c <strtok>
    1156:	9c 01       	movw	r18, r24
    1158:	89 85       	ldd	r24, Y+9	; 0x09
    115a:	9a 85       	ldd	r25, Y+10	; 0x0a
    115c:	86 58       	subi	r24, 0x86	; 134
    115e:	9f 4f       	sbci	r25, 0xFF	; 255
    1160:	fc 01       	movw	r30, r24
    1162:	31 83       	std	Z+1, r19	; 0x01
    1164:	20 83       	st	Z, r18
  cmd = strtok(NULL, DELIMITER);
    1166:	62 e4       	ldi	r22, 0x42	; 66
    1168:	73 e0       	ldi	r23, 0x03	; 3
    116a:	80 e0       	ldi	r24, 0x00	; 0
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	0e 94 ae 1f 	call	0x3f5c	; 0x3f5c <strtok>
    1172:	9c 01       	movw	r18, r24
    1174:	89 85       	ldd	r24, Y+9	; 0x09
    1176:	9a 85       	ldd	r25, Y+10	; 0x0a
    1178:	84 58       	subi	r24, 0x84	; 132
    117a:	9f 4f       	sbci	r25, 0xFF	; 255
    117c:	fc 01       	movw	r30, r24
    117e:	31 83       	std	Z+1, r19	; 0x01
    1180:	20 83       	st	Z, r18
  arguments = strtok(NULL, DELIMITER);
    1182:	62 e4       	ldi	r22, 0x42	; 66
    1184:	73 e0       	ldi	r23, 0x03	; 3
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	0e 94 ae 1f 	call	0x3f5c	; 0x3f5c <strtok>
    118e:	9c 01       	movw	r18, r24
    1190:	89 85       	ldd	r24, Y+9	; 0x09
    1192:	9a 85       	ldd	r25, Y+10	; 0x0a
    1194:	82 58       	subi	r24, 0x82	; 130
    1196:	9f 4f       	sbci	r25, 0xFF	; 255
    1198:	fc 01       	movw	r30, r24
    119a:	31 83       	std	Z+1, r19	; 0x01
    119c:	20 83       	st	Z, r18

  for (int i=0; hardwareType[i]!= '\0'; i++)
    119e:	1a 82       	std	Y+2, r1	; 0x02
    11a0:	19 82       	std	Y+1, r1	; 0x01
    11a2:	89 85       	ldd	r24, Y+9	; 0x09
    11a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    11a6:	86 58       	subi	r24, 0x86	; 134
    11a8:	9f 4f       	sbci	r25, 0xFF	; 255
    11aa:	fc 01       	movw	r30, r24
    11ac:	20 81       	ld	r18, Z
    11ae:	31 81       	ldd	r19, Z+1	; 0x01
    11b0:	89 81       	ldd	r24, Y+1	; 0x01
    11b2:	9a 81       	ldd	r25, Y+2	; 0x02
    11b4:	82 0f       	add	r24, r18
    11b6:	93 1f       	adc	r25, r19
    11b8:	fc 01       	movw	r30, r24
    11ba:	80 81       	ld	r24, Z
    11bc:	88 23       	and	r24, r24
    11be:	31 f1       	breq	.+76     	; 0x120c <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xe2>
  {
    //Serial.println(hardwareType[i]);
    if (!isdigit(hardwareType[i]) != 0)
    11c0:	89 85       	ldd	r24, Y+9	; 0x09
    11c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    11c4:	86 58       	subi	r24, 0x86	; 134
    11c6:	9f 4f       	sbci	r25, 0xFF	; 255
    11c8:	fc 01       	movw	r30, r24
    11ca:	20 81       	ld	r18, Z
    11cc:	31 81       	ldd	r19, Z+1	; 0x01
    11ce:	89 81       	ldd	r24, Y+1	; 0x01
    11d0:	9a 81       	ldd	r25, Y+2	; 0x02
    11d2:	82 0f       	add	r24, r18
    11d4:	93 1f       	adc	r25, r19
    11d6:	fc 01       	movw	r30, r24
    11d8:	80 81       	ld	r24, Z
    11da:	88 2f       	mov	r24, r24
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	c0 97       	sbiw	r24, 0x30	; 48
    11e0:	0a 97       	sbiw	r24, 0x0a	; 10
    11e2:	10 f0       	brcs	.+4      	; 0x11e8 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xbe>
    11e4:	81 e0       	ldi	r24, 0x01	; 1
    11e6:	01 c0       	rjmp	.+2      	; 0x11ea <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xc0>
    11e8:	80 e0       	ldi	r24, 0x00	; 0
    11ea:	88 23       	and	r24, r24
    11ec:	49 f0       	breq	.+18     	; 0x1200 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xd6>
    {
      Serial.println("Invalid Hardware ID, number is not a digit");
    11ee:	64 e4       	ldi	r22, 0x44	; 68
    11f0:	73 e0       	ldi	r23, 0x03	; 3
    11f2:	88 e1       	ldi	r24, 0x18	; 24
    11f4:	94 e0       	ldi	r25, 0x04	; 4
    11f6:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
      return 0;
    11fa:	80 e0       	ldi	r24, 0x00	; 0
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	79 c0       	rjmp	.+242    	; 0x12f2 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c8>
{
  hardwareType = strtok(str, DELIMITER); //hardware ID
  cmd = strtok(NULL, DELIMITER);
  arguments = strtok(NULL, DELIMITER);

  for (int i=0; hardwareType[i]!= '\0'; i++)
    1200:	89 81       	ldd	r24, Y+1	; 0x01
    1202:	9a 81       	ldd	r25, Y+2	; 0x02
    1204:	01 96       	adiw	r24, 0x01	; 1
    1206:	9a 83       	std	Y+2, r25	; 0x02
    1208:	89 83       	std	Y+1, r24	; 0x01
    120a:	cb cf       	rjmp	.-106    	; 0x11a2 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x78>
      Serial.println("Invalid Hardware ID, number is not a digit");
      return 0;
    }
  }

  if (MYHARDWARETYPE != atoi(hardwareType))
    120c:	89 85       	ldd	r24, Y+9	; 0x09
    120e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1210:	86 58       	subi	r24, 0x86	; 134
    1212:	9f 4f       	sbci	r25, 0xFF	; 255
    1214:	fc 01       	movw	r30, r24
    1216:	80 81       	ld	r24, Z
    1218:	91 81       	ldd	r25, Z+1	; 0x01
    121a:	0e 94 7f 1f 	call	0x3efe	; 0x3efe <atoi>
    121e:	03 97       	sbiw	r24, 0x03	; 3
    1220:	49 f0       	breq	.+18     	; 0x1234 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x10a>
  {
    Serial.println("Invalid Hardware ID");
    1222:	6f e6       	ldi	r22, 0x6F	; 111
    1224:	73 e0       	ldi	r23, 0x03	; 3
    1226:	88 e1       	ldi	r24, 0x18	; 24
    1228:	94 e0       	ldi	r25, 0x04	; 4
    122a:	0e 94 0c 1c 	call	0x3818	; 0x3818 <_ZN5Print7printlnEPKc>
    return 0;
    122e:	80 e0       	ldi	r24, 0x00	; 0
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	5f c0       	rjmp	.+190    	; 0x12f2 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c8>
  }

  unsigned int i;
  sCommand cmd_list;
  i=0;
    1234:	1c 82       	std	Y+4, r1	; 0x04
    1236:	1b 82       	std	Y+3, r1	; 0x03

  memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
    1238:	8b 81       	ldd	r24, Y+3	; 0x03
    123a:	9c 81       	ldd	r25, Y+4	; 0x04
    123c:	88 0f       	add	r24, r24
    123e:	99 1f       	adc	r25, r25
    1240:	88 0f       	add	r24, r24
    1242:	99 1f       	adc	r25, r25
    1244:	2b 85       	ldd	r18, Y+11	; 0x0b
    1246:	3c 85       	ldd	r19, Y+12	; 0x0c
    1248:	82 0f       	add	r24, r18
    124a:	93 1f       	adc	r25, r19
    124c:	fc 01       	movw	r30, r24
    124e:	80 81       	ld	r24, Z
    1250:	91 81       	ldd	r25, Z+1	; 0x01
    1252:	a2 81       	ldd	r26, Z+2	; 0x02
    1254:	b3 81       	ldd	r27, Z+3	; 0x03
    1256:	8d 83       	std	Y+5, r24	; 0x05
    1258:	9e 83       	std	Y+6, r25	; 0x06
    125a:	af 83       	std	Y+7, r26	; 0x07
    125c:	b8 87       	std	Y+8, r27	; 0x08
  
  
  while(cmd_list.function!=0)
    125e:	8f 81       	ldd	r24, Y+7	; 0x07
    1260:	98 85       	ldd	r25, Y+8	; 0x08
    1262:	89 2b       	or	r24, r25
    1264:	09 f4       	brne	.+2      	; 0x1268 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x13e>
    1266:	43 c0       	rjmp	.+134    	; 0x12ee <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c4>
  {
    if (strcicmp(cmd,cmd_list.name)==0){
    1268:	4d 81       	ldd	r20, Y+5	; 0x05
    126a:	5e 81       	ldd	r21, Y+6	; 0x06
    126c:	89 85       	ldd	r24, Y+9	; 0x09
    126e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1270:	84 58       	subi	r24, 0x84	; 132
    1272:	9f 4f       	sbci	r25, 0xFF	; 255
    1274:	fc 01       	movw	r30, r24
    1276:	20 81       	ld	r18, Z
    1278:	31 81       	ldd	r19, Z+1	; 0x01
    127a:	89 85       	ldd	r24, Y+9	; 0x09
    127c:	9a 85       	ldd	r25, Y+10	; 0x0a
    127e:	b9 01       	movw	r22, r18
    1280:	0e 94 82 09 	call	0x1304	; 0x1304 <_ZN17Serial_Processing8strcicmpEPKcS1_>
    1284:	21 e0       	ldi	r18, 0x01	; 1
    1286:	89 2b       	or	r24, r25
    1288:	09 f0       	breq	.+2      	; 0x128c <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x162>
    128a:	20 e0       	ldi	r18, 0x00	; 0
    128c:	22 23       	and	r18, r18
    128e:	b1 f0       	breq	.+44     	; 0x12bc <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x192>
      return (*cmd_list.function)(0,cmd,arguments);
    1290:	2f 81       	ldd	r18, Y+7	; 0x07
    1292:	38 85       	ldd	r19, Y+8	; 0x08
    1294:	89 85       	ldd	r24, Y+9	; 0x09
    1296:	9a 85       	ldd	r25, Y+10	; 0x0a
    1298:	82 58       	subi	r24, 0x82	; 130
    129a:	9f 4f       	sbci	r25, 0xFF	; 255
    129c:	fc 01       	movw	r30, r24
    129e:	40 81       	ld	r20, Z
    12a0:	51 81       	ldd	r21, Z+1	; 0x01
    12a2:	89 85       	ldd	r24, Y+9	; 0x09
    12a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    12a6:	84 58       	subi	r24, 0x84	; 132
    12a8:	9f 4f       	sbci	r25, 0xFF	; 255
    12aa:	fc 01       	movw	r30, r24
    12ac:	80 81       	ld	r24, Z
    12ae:	91 81       	ldd	r25, Z+1	; 0x01
    12b0:	bc 01       	movw	r22, r24
    12b2:	80 e0       	ldi	r24, 0x00	; 0
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	f9 01       	movw	r30, r18
    12b8:	09 95       	icall
    12ba:	1b c0       	rjmp	.+54     	; 0x12f2 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c8>
    }

    i=i+1;
    12bc:	8b 81       	ldd	r24, Y+3	; 0x03
    12be:	9c 81       	ldd	r25, Y+4	; 0x04
    12c0:	01 96       	adiw	r24, 0x01	; 1
    12c2:	9c 83       	std	Y+4, r25	; 0x04
    12c4:	8b 83       	std	Y+3, r24	; 0x03
    memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
    12c6:	8b 81       	ldd	r24, Y+3	; 0x03
    12c8:	9c 81       	ldd	r25, Y+4	; 0x04
    12ca:	88 0f       	add	r24, r24
    12cc:	99 1f       	adc	r25, r25
    12ce:	88 0f       	add	r24, r24
    12d0:	99 1f       	adc	r25, r25
    12d2:	2b 85       	ldd	r18, Y+11	; 0x0b
    12d4:	3c 85       	ldd	r19, Y+12	; 0x0c
    12d6:	82 0f       	add	r24, r18
    12d8:	93 1f       	adc	r25, r19
    12da:	fc 01       	movw	r30, r24
    12dc:	80 81       	ld	r24, Z
    12de:	91 81       	ldd	r25, Z+1	; 0x01
    12e0:	a2 81       	ldd	r26, Z+2	; 0x02
    12e2:	b3 81       	ldd	r27, Z+3	; 0x03
    12e4:	8d 83       	std	Y+5, r24	; 0x05
    12e6:	9e 83       	std	Y+6, r25	; 0x06
    12e8:	af 83       	std	Y+7, r26	; 0x07
    12ea:	b8 87       	std	Y+8, r27	; 0x08
  i=0;

  memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
  
  
  while(cmd_list.function!=0)
    12ec:	b8 cf       	rjmp	.-144    	; 0x125e <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x134>
    i=i+1;
    memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
  }
  

  return 1;
    12ee:	81 e0       	ldi	r24, 0x01	; 1
    12f0:	90 e0       	ldi	r25, 0x00	; 0
}
    12f2:	2e 96       	adiw	r28, 0x0e	; 14
    12f4:	0f b6       	in	r0, 0x3f	; 63
    12f6:	f8 94       	cli
    12f8:	de bf       	out	0x3e, r29	; 62
    12fa:	0f be       	out	0x3f, r0	; 63
    12fc:	cd bf       	out	0x3d, r28	; 61
    12fe:	df 91       	pop	r29
    1300:	cf 91       	pop	r28
    1302:	08 95       	ret

00001304 <_ZN17Serial_Processing8strcicmpEPKcS1_>:

int Serial_Processing::strcicmp(char const *a, char const *b)
{
    1304:	0f 93       	push	r16
    1306:	1f 93       	push	r17
    1308:	cf 93       	push	r28
    130a:	df 93       	push	r29
    130c:	cd b7       	in	r28, 0x3d	; 61
    130e:	de b7       	in	r29, 0x3e	; 62
    1310:	28 97       	sbiw	r28, 0x08	; 8
    1312:	0f b6       	in	r0, 0x3f	; 63
    1314:	f8 94       	cli
    1316:	de bf       	out	0x3e, r29	; 62
    1318:	0f be       	out	0x3f, r0	; 63
    131a:	cd bf       	out	0x3d, r28	; 61
    131c:	9c 83       	std	Y+4, r25	; 0x04
    131e:	8b 83       	std	Y+3, r24	; 0x03
    1320:	7e 83       	std	Y+6, r23	; 0x06
    1322:	6d 83       	std	Y+5, r22	; 0x05
    1324:	58 87       	std	Y+8, r21	; 0x08
    1326:	4f 83       	std	Y+7, r20	; 0x07
  for (;; a++, b++) {
    int d = tolower(*a) - tolower(*b);
    1328:	8d 81       	ldd	r24, Y+5	; 0x05
    132a:	9e 81       	ldd	r25, Y+6	; 0x06
    132c:	fc 01       	movw	r30, r24
    132e:	80 81       	ld	r24, Z
    1330:	88 2f       	mov	r24, r24
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	0e 94 a6 1f 	call	0x3f4c	; 0x3f4c <tolower>
    1338:	8c 01       	movw	r16, r24
    133a:	8f 81       	ldd	r24, Y+7	; 0x07
    133c:	98 85       	ldd	r25, Y+8	; 0x08
    133e:	fc 01       	movw	r30, r24
    1340:	80 81       	ld	r24, Z
    1342:	88 2f       	mov	r24, r24
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	0e 94 a6 1f 	call	0x3f4c	; 0x3f4c <tolower>
    134a:	98 01       	movw	r18, r16
    134c:	28 1b       	sub	r18, r24
    134e:	39 0b       	sbc	r19, r25
    1350:	c9 01       	movw	r24, r18
    1352:	9a 83       	std	Y+2, r25	; 0x02
    1354:	89 83       	std	Y+1, r24	; 0x01
    if (d != 0 || !*a)
    1356:	89 81       	ldd	r24, Y+1	; 0x01
    1358:	9a 81       	ldd	r25, Y+2	; 0x02
    135a:	89 2b       	or	r24, r25
    135c:	31 f4       	brne	.+12     	; 0x136a <_ZN17Serial_Processing8strcicmpEPKcS1_+0x66>
    135e:	8d 81       	ldd	r24, Y+5	; 0x05
    1360:	9e 81       	ldd	r25, Y+6	; 0x06
    1362:	fc 01       	movw	r30, r24
    1364:	80 81       	ld	r24, Z
    1366:	88 23       	and	r24, r24
    1368:	19 f4       	brne	.+6      	; 0x1370 <_ZN17Serial_Processing8strcicmpEPKcS1_+0x6c>
    return d;
    136a:	89 81       	ldd	r24, Y+1	; 0x01
    136c:	9a 81       	ldd	r25, Y+2	; 0x02
    136e:	0b c0       	rjmp	.+22     	; 0x1386 <_ZN17Serial_Processing8strcicmpEPKcS1_+0x82>
  return 1;
}

int Serial_Processing::strcicmp(char const *a, char const *b)
{
  for (;; a++, b++) {
    1370:	8d 81       	ldd	r24, Y+5	; 0x05
    1372:	9e 81       	ldd	r25, Y+6	; 0x06
    1374:	01 96       	adiw	r24, 0x01	; 1
    1376:	9e 83       	std	Y+6, r25	; 0x06
    1378:	8d 83       	std	Y+5, r24	; 0x05
    137a:	8f 81       	ldd	r24, Y+7	; 0x07
    137c:	98 85       	ldd	r25, Y+8	; 0x08
    137e:	01 96       	adiw	r24, 0x01	; 1
    1380:	98 87       	std	Y+8, r25	; 0x08
    1382:	8f 83       	std	Y+7, r24	; 0x07
    1384:	d1 cf       	rjmp	.-94     	; 0x1328 <_ZN17Serial_Processing8strcicmpEPKcS1_+0x24>
    int d = tolower(*a) - tolower(*b);
    if (d != 0 || !*a)
    return d;
  }
}
    1386:	28 96       	adiw	r28, 0x08	; 8
    1388:	0f b6       	in	r0, 0x3f	; 63
    138a:	f8 94       	cli
    138c:	de bf       	out	0x3e, r29	; 62
    138e:	0f be       	out	0x3f, r0	; 63
    1390:	cd bf       	out	0x3d, r28	; 61
    1392:	df 91       	pop	r29
    1394:	cf 91       	pop	r28
    1396:	1f 91       	pop	r17
    1398:	0f 91       	pop	r16
    139a:	08 95       	ret

0000139c <_ZN17Serial_ProcessingD1Ev>:


// default destructor
Serial_Processing::~Serial_Processing()
    139c:	cf 93       	push	r28
    139e:	df 93       	push	r29
    13a0:	00 d0       	rcall	.+0      	; 0x13a2 <_ZN17Serial_ProcessingD1Ev+0x6>
    13a2:	cd b7       	in	r28, 0x3d	; 61
    13a4:	de b7       	in	r29, 0x3e	; 62
    13a6:	9a 83       	std	Y+2, r25	; 0x02
    13a8:	89 83       	std	Y+1, r24	; 0x01
{
} //~Serial_Processing
    13aa:	00 00       	nop
    13ac:	0f 90       	pop	r0
    13ae:	0f 90       	pop	r0
    13b0:	df 91       	pop	r29
    13b2:	cf 91       	pop	r28
    13b4:	08 95       	ret

000013b6 <_ZN14HardwareSerial5beginEm>:
	position = position / MOTOR_STEPS_PER_REV;
	position = position * SCREW_PITCH_MM;
	position = (float)(position / 1000) + 1;

	return position;
}
    13b6:	cf 93       	push	r28
    13b8:	df 93       	push	r29
    13ba:	00 d0       	rcall	.+0      	; 0x13bc <_ZN14HardwareSerial5beginEm+0x6>
    13bc:	00 d0       	rcall	.+0      	; 0x13be <_ZN14HardwareSerial5beginEm+0x8>
    13be:	00 d0       	rcall	.+0      	; 0x13c0 <_ZN14HardwareSerial5beginEm+0xa>
    13c0:	cd b7       	in	r28, 0x3d	; 61
    13c2:	de b7       	in	r29, 0x3e	; 62
    13c4:	9a 83       	std	Y+2, r25	; 0x02
    13c6:	89 83       	std	Y+1, r24	; 0x01
    13c8:	4b 83       	std	Y+3, r20	; 0x03
    13ca:	5c 83       	std	Y+4, r21	; 0x04
    13cc:	6d 83       	std	Y+5, r22	; 0x05
    13ce:	7e 83       	std	Y+6, r23	; 0x06
    13d0:	8b 81       	ldd	r24, Y+3	; 0x03
    13d2:	9c 81       	ldd	r25, Y+4	; 0x04
    13d4:	ad 81       	ldd	r26, Y+5	; 0x05
    13d6:	be 81       	ldd	r27, Y+6	; 0x06
    13d8:	e9 81       	ldd	r30, Y+1	; 0x01
    13da:	fa 81       	ldd	r31, Y+2	; 0x02
    13dc:	26 e0       	ldi	r18, 0x06	; 6
    13de:	ac 01       	movw	r20, r24
    13e0:	bd 01       	movw	r22, r26
    13e2:	cf 01       	movw	r24, r30
    13e4:	0e 94 bc 1a 	call	0x3578	; 0x3578 <_ZN14HardwareSerial5beginEmh>
    13e8:	00 00       	nop
    13ea:	26 96       	adiw	r28, 0x06	; 6
    13ec:	0f b6       	in	r0, 0x3f	; 63
    13ee:	f8 94       	cli
    13f0:	de bf       	out	0x3e, r29	; 62
    13f2:	0f be       	out	0x3f, r0	; 63
    13f4:	cd bf       	out	0x3d, r28	; 61
    13f6:	df 91       	pop	r29
    13f8:	cf 91       	pop	r28
    13fa:	08 95       	ret

000013fc <_Z15enableInterrupthPFvvEh>:
    13fc:	cf 93       	push	r28
    13fe:	df 93       	push	r29
    1400:	cd b7       	in	r28, 0x3d	; 61
    1402:	de b7       	in	r29, 0x3e	; 62
    1404:	a0 97       	sbiw	r28, 0x20	; 32
    1406:	0f b6       	in	r0, 0x3f	; 63
    1408:	f8 94       	cli
    140a:	de bf       	out	0x3e, r29	; 62
    140c:	0f be       	out	0x3f, r0	; 63
    140e:	cd bf       	out	0x3d, r28	; 61
    1410:	8d 8f       	std	Y+29, r24	; 0x1d
    1412:	7f 8f       	std	Y+31, r23	; 0x1f
    1414:	6e 8f       	std	Y+30, r22	; 0x1e
    1416:	48 a3       	std	Y+32, r20	; 0x20
    1418:	19 82       	std	Y+1, r1	; 0x01
    141a:	1a 82       	std	Y+2, r1	; 0x02
    141c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    141e:	8f 77       	andi	r24, 0x7F	; 127
    1420:	8b 83       	std	Y+3, r24	; 0x03
    1422:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1424:	88 23       	and	r24, r24
    1426:	44 f0       	brlt	.+16     	; 0x1438 <_Z15enableInterrupthPFvvEh+0x3c>
    1428:	8b 81       	ldd	r24, Y+3	; 0x03
    142a:	82 30       	cpi	r24, 0x02	; 2
    142c:	09 f4       	brne	.+2      	; 0x1430 <_Z15enableInterrupthPFvvEh+0x34>
    142e:	30 c1       	rjmp	.+608    	; 0x1690 <_Z15enableInterrupthPFvvEh+0x294>
    1430:	8b 81       	ldd	r24, Y+3	; 0x03
    1432:	83 30       	cpi	r24, 0x03	; 3
    1434:	09 f4       	brne	.+2      	; 0x1438 <_Z15enableInterrupthPFvvEh+0x3c>
    1436:	2c c1       	rjmp	.+600    	; 0x1690 <_Z15enableInterrupthPFvvEh+0x294>
    1438:	8b 81       	ldd	r24, Y+3	; 0x03
    143a:	88 2f       	mov	r24, r24
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	84 58       	subi	r24, 0x84	; 132
    1440:	9f 4f       	sbci	r25, 0xFF	; 255
    1442:	9e 83       	std	Y+6, r25	; 0x06
    1444:	8d 83       	std	Y+5, r24	; 0x05
    1446:	8d 81       	ldd	r24, Y+5	; 0x05
    1448:	9e 81       	ldd	r25, Y+6	; 0x06
    144a:	fc 01       	movw	r30, r24
    144c:	84 91       	lpm	r24, Z
    144e:	8f 83       	std	Y+7, r24	; 0x07
    1450:	8f 81       	ldd	r24, Y+7	; 0x07
    1452:	8a 83       	std	Y+2, r24	; 0x02
    1454:	8b 81       	ldd	r24, Y+3	; 0x03
    1456:	88 2f       	mov	r24, r24
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	80 57       	subi	r24, 0x70	; 112
    145c:	9f 4f       	sbci	r25, 0xFF	; 255
    145e:	99 87       	std	Y+9, r25	; 0x09
    1460:	88 87       	std	Y+8, r24	; 0x08
    1462:	88 85       	ldd	r24, Y+8	; 0x08
    1464:	99 85       	ldd	r25, Y+9	; 0x09
    1466:	fc 01       	movw	r30, r24
    1468:	84 91       	lpm	r24, Z
    146a:	8a 87       	std	Y+10, r24	; 0x0a
    146c:	8a 85       	ldd	r24, Y+10	; 0x0a
    146e:	89 83       	std	Y+1, r24	; 0x01
    1470:	88 a1       	ldd	r24, Y+32	; 0x20
    1472:	83 30       	cpi	r24, 0x03	; 3
    1474:	19 f0       	breq	.+6      	; 0x147c <_Z15enableInterrupthPFvvEh+0x80>
    1476:	88 a1       	ldd	r24, Y+32	; 0x20
    1478:	81 30       	cpi	r24, 0x01	; 1
    147a:	d9 f4       	brne	.+54     	; 0x14b2 <_Z15enableInterrupthPFvvEh+0xb6>
    147c:	89 81       	ldd	r24, Y+1	; 0x01
    147e:	82 30       	cpi	r24, 0x02	; 2
    1480:	31 f4       	brne	.+12     	; 0x148e <_Z15enableInterrupthPFvvEh+0x92>
    1482:	90 91 d4 03 	lds	r25, 0x03D4	; 0x8003d4 <risingPinsPORTB>
    1486:	8a 81       	ldd	r24, Y+2	; 0x02
    1488:	89 2b       	or	r24, r25
    148a:	80 93 d4 03 	sts	0x03D4, r24	; 0x8003d4 <risingPinsPORTB>
    148e:	89 81       	ldd	r24, Y+1	; 0x01
    1490:	83 30       	cpi	r24, 0x03	; 3
    1492:	31 f4       	brne	.+12     	; 0x14a0 <_Z15enableInterrupthPFvvEh+0xa4>
    1494:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <risingPinsPORTC>
    1498:	8a 81       	ldd	r24, Y+2	; 0x02
    149a:	89 2b       	or	r24, r25
    149c:	80 93 d7 03 	sts	0x03D7, r24	; 0x8003d7 <risingPinsPORTC>
    14a0:	89 81       	ldd	r24, Y+1	; 0x01
    14a2:	84 30       	cpi	r24, 0x04	; 4
    14a4:	31 f4       	brne	.+12     	; 0x14b2 <_Z15enableInterrupthPFvvEh+0xb6>
    14a6:	90 91 da 03 	lds	r25, 0x03DA	; 0x8003da <risingPinsPORTD>
    14aa:	8a 81       	ldd	r24, Y+2	; 0x02
    14ac:	89 2b       	or	r24, r25
    14ae:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <risingPinsPORTD>
    14b2:	88 a1       	ldd	r24, Y+32	; 0x20
    14b4:	82 30       	cpi	r24, 0x02	; 2
    14b6:	19 f0       	breq	.+6      	; 0x14be <_Z15enableInterrupthPFvvEh+0xc2>
    14b8:	88 a1       	ldd	r24, Y+32	; 0x20
    14ba:	81 30       	cpi	r24, 0x01	; 1
    14bc:	d9 f4       	brne	.+54     	; 0x14f4 <_Z15enableInterrupthPFvvEh+0xf8>
    14be:	89 81       	ldd	r24, Y+1	; 0x01
    14c0:	82 30       	cpi	r24, 0x02	; 2
    14c2:	31 f4       	brne	.+12     	; 0x14d0 <_Z15enableInterrupthPFvvEh+0xd4>
    14c4:	90 91 d5 03 	lds	r25, 0x03D5	; 0x8003d5 <fallingPinsPORTB>
    14c8:	8a 81       	ldd	r24, Y+2	; 0x02
    14ca:	89 2b       	or	r24, r25
    14cc:	80 93 d5 03 	sts	0x03D5, r24	; 0x8003d5 <fallingPinsPORTB>
    14d0:	89 81       	ldd	r24, Y+1	; 0x01
    14d2:	83 30       	cpi	r24, 0x03	; 3
    14d4:	31 f4       	brne	.+12     	; 0x14e2 <_Z15enableInterrupthPFvvEh+0xe6>
    14d6:	90 91 d8 03 	lds	r25, 0x03D8	; 0x8003d8 <fallingPinsPORTC>
    14da:	8a 81       	ldd	r24, Y+2	; 0x02
    14dc:	89 2b       	or	r24, r25
    14de:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <fallingPinsPORTC>
    14e2:	89 81       	ldd	r24, Y+1	; 0x01
    14e4:	84 30       	cpi	r24, 0x04	; 4
    14e6:	31 f4       	brne	.+12     	; 0x14f4 <_Z15enableInterrupthPFvvEh+0xf8>
    14e8:	90 91 db 03 	lds	r25, 0x03DB	; 0x8003db <fallingPinsPORTD>
    14ec:	8a 81       	ldd	r24, Y+2	; 0x02
    14ee:	89 2b       	or	r24, r25
    14f0:	80 93 db 03 	sts	0x03DB, r24	; 0x8003db <fallingPinsPORTD>
    14f4:	8b 81       	ldd	r24, Y+3	; 0x03
    14f6:	88 2f       	mov	r24, r24
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	88 59       	subi	r24, 0x98	; 152
    14fc:	9f 4f       	sbci	r25, 0xFF	; 255
    14fe:	9c 87       	std	Y+12, r25	; 0x0c
    1500:	8b 87       	std	Y+11, r24	; 0x0b
    1502:	8b 85       	ldd	r24, Y+11	; 0x0b
    1504:	9c 85       	ldd	r25, Y+12	; 0x0c
    1506:	fc 01       	movw	r30, r24
    1508:	84 91       	lpm	r24, Z
    150a:	8d 87       	std	Y+13, r24	; 0x0d
    150c:	8d 85       	ldd	r24, Y+13	; 0x0d
    150e:	8e 87       	std	Y+14, r24	; 0x0e
    1510:	89 81       	ldd	r24, Y+1	; 0x01
    1512:	82 30       	cpi	r24, 0x02	; 2
    1514:	c1 f5       	brne	.+112    	; 0x1586 <_Z15enableInterrupthPFvvEh+0x18a>
    1516:	8e 85       	ldd	r24, Y+14	; 0x0e
    1518:	88 2f       	mov	r24, r24
    151a:	90 e0       	ldi	r25, 0x00	; 0
    151c:	88 0f       	add	r24, r24
    151e:	99 1f       	adc	r25, r25
    1520:	84 55       	subi	r24, 0x54	; 84
    1522:	9c 4f       	sbci	r25, 0xFC	; 252
    1524:	98 8b       	std	Y+16, r25	; 0x10
    1526:	8f 87       	std	Y+15, r24	; 0x0f
    1528:	8f 85       	ldd	r24, Y+15	; 0x0f
    152a:	98 89       	ldd	r25, Y+16	; 0x10
    152c:	2e 8d       	ldd	r18, Y+30	; 0x1e
    152e:	3f 8d       	ldd	r19, Y+31	; 0x1f
    1530:	fc 01       	movw	r30, r24
    1532:	31 83       	std	Z+1, r19	; 0x01
    1534:	20 83       	st	Z, r18
    1536:	89 81       	ldd	r24, Y+1	; 0x01
    1538:	88 2f       	mov	r24, r24
    153a:	90 e0       	ldi	r25, 0x00	; 0
    153c:	88 0f       	add	r24, r24
    153e:	99 1f       	adc	r25, r25
    1540:	8c 55       	subi	r24, 0x5C	; 92
    1542:	9f 4f       	sbci	r25, 0xFF	; 255
    1544:	9a 8b       	std	Y+18, r25	; 0x12
    1546:	89 8b       	std	Y+17, r24	; 0x11
    1548:	89 89       	ldd	r24, Y+17	; 0x11
    154a:	9a 89       	ldd	r25, Y+18	; 0x12
    154c:	fc 01       	movw	r30, r24
    154e:	25 91       	lpm	r18, Z+
    1550:	34 91       	lpm	r19, Z
    1552:	cf 01       	movw	r24, r30
    1554:	3c 8b       	std	Y+20, r19	; 0x14
    1556:	2b 8b       	std	Y+19, r18	; 0x13
    1558:	9a 8b       	std	Y+18, r25	; 0x12
    155a:	89 8b       	std	Y+17, r24	; 0x11
    155c:	8b 89       	ldd	r24, Y+19	; 0x13
    155e:	9c 89       	ldd	r25, Y+20	; 0x14
    1560:	fc 01       	movw	r30, r24
    1562:	80 81       	ld	r24, Z
    1564:	80 93 d6 03 	sts	0x03D6, r24	; 0x8003d6 <_ZL13portSnapshotB>
    1568:	8b e6       	ldi	r24, 0x6B	; 107
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	90 93 a7 03 	sts	0x03A7, r25	; 0x8003a7 <pcmsk+0x1>
    1570:	80 93 a6 03 	sts	0x03A6, r24	; 0x8003a6 <pcmsk>
    1574:	88 e6       	ldi	r24, 0x68	; 104
    1576:	90 e0       	ldi	r25, 0x00	; 0
    1578:	28 e6       	ldi	r18, 0x68	; 104
    157a:	30 e0       	ldi	r19, 0x00	; 0
    157c:	f9 01       	movw	r30, r18
    157e:	20 81       	ld	r18, Z
    1580:	21 60       	ori	r18, 0x01	; 1
    1582:	fc 01       	movw	r30, r24
    1584:	20 83       	st	Z, r18
    1586:	89 81       	ldd	r24, Y+1	; 0x01
    1588:	83 30       	cpi	r24, 0x03	; 3
    158a:	c1 f5       	brne	.+112    	; 0x15fc <_Z15enableInterrupthPFvvEh+0x200>
    158c:	8e 85       	ldd	r24, Y+14	; 0x0e
    158e:	88 2f       	mov	r24, r24
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	88 0f       	add	r24, r24
    1594:	99 1f       	adc	r25, r25
    1596:	88 54       	subi	r24, 0x48	; 72
    1598:	9c 4f       	sbci	r25, 0xFC	; 252
    159a:	98 8b       	std	Y+16, r25	; 0x10
    159c:	8f 87       	std	Y+15, r24	; 0x0f
    159e:	8f 85       	ldd	r24, Y+15	; 0x0f
    15a0:	98 89       	ldd	r25, Y+16	; 0x10
    15a2:	2e 8d       	ldd	r18, Y+30	; 0x1e
    15a4:	3f 8d       	ldd	r19, Y+31	; 0x1f
    15a6:	fc 01       	movw	r30, r24
    15a8:	31 83       	std	Z+1, r19	; 0x01
    15aa:	20 83       	st	Z, r18
    15ac:	89 81       	ldd	r24, Y+1	; 0x01
    15ae:	88 2f       	mov	r24, r24
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	88 0f       	add	r24, r24
    15b4:	99 1f       	adc	r25, r25
    15b6:	8c 55       	subi	r24, 0x5C	; 92
    15b8:	9f 4f       	sbci	r25, 0xFF	; 255
    15ba:	9e 8b       	std	Y+22, r25	; 0x16
    15bc:	8d 8b       	std	Y+21, r24	; 0x15
    15be:	8d 89       	ldd	r24, Y+21	; 0x15
    15c0:	9e 89       	ldd	r25, Y+22	; 0x16
    15c2:	fc 01       	movw	r30, r24
    15c4:	25 91       	lpm	r18, Z+
    15c6:	34 91       	lpm	r19, Z
    15c8:	cf 01       	movw	r24, r30
    15ca:	38 8f       	std	Y+24, r19	; 0x18
    15cc:	2f 8b       	std	Y+23, r18	; 0x17
    15ce:	9e 8b       	std	Y+22, r25	; 0x16
    15d0:	8d 8b       	std	Y+21, r24	; 0x15
    15d2:	8f 89       	ldd	r24, Y+23	; 0x17
    15d4:	98 8d       	ldd	r25, Y+24	; 0x18
    15d6:	fc 01       	movw	r30, r24
    15d8:	80 81       	ld	r24, Z
    15da:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <_ZL13portSnapshotC>
    15de:	8c e6       	ldi	r24, 0x6C	; 108
    15e0:	90 e0       	ldi	r25, 0x00	; 0
    15e2:	90 93 a7 03 	sts	0x03A7, r25	; 0x8003a7 <pcmsk+0x1>
    15e6:	80 93 a6 03 	sts	0x03A6, r24	; 0x8003a6 <pcmsk>
    15ea:	88 e6       	ldi	r24, 0x68	; 104
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	28 e6       	ldi	r18, 0x68	; 104
    15f0:	30 e0       	ldi	r19, 0x00	; 0
    15f2:	f9 01       	movw	r30, r18
    15f4:	20 81       	ld	r18, Z
    15f6:	22 60       	ori	r18, 0x02	; 2
    15f8:	fc 01       	movw	r30, r24
    15fa:	20 83       	st	Z, r18
    15fc:	89 81       	ldd	r24, Y+1	; 0x01
    15fe:	84 30       	cpi	r24, 0x04	; 4
    1600:	c1 f5       	brne	.+112    	; 0x1672 <_Z15enableInterrupthPFvvEh+0x276>
    1602:	8e 85       	ldd	r24, Y+14	; 0x0e
    1604:	88 2f       	mov	r24, r24
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	88 0f       	add	r24, r24
    160a:	99 1f       	adc	r25, r25
    160c:	8c 53       	subi	r24, 0x3C	; 60
    160e:	9c 4f       	sbci	r25, 0xFC	; 252
    1610:	98 8b       	std	Y+16, r25	; 0x10
    1612:	8f 87       	std	Y+15, r24	; 0x0f
    1614:	8f 85       	ldd	r24, Y+15	; 0x0f
    1616:	98 89       	ldd	r25, Y+16	; 0x10
    1618:	2e 8d       	ldd	r18, Y+30	; 0x1e
    161a:	3f 8d       	ldd	r19, Y+31	; 0x1f
    161c:	fc 01       	movw	r30, r24
    161e:	31 83       	std	Z+1, r19	; 0x01
    1620:	20 83       	st	Z, r18
    1622:	89 81       	ldd	r24, Y+1	; 0x01
    1624:	88 2f       	mov	r24, r24
    1626:	90 e0       	ldi	r25, 0x00	; 0
    1628:	88 0f       	add	r24, r24
    162a:	99 1f       	adc	r25, r25
    162c:	8c 55       	subi	r24, 0x5C	; 92
    162e:	9f 4f       	sbci	r25, 0xFF	; 255
    1630:	9a 8f       	std	Y+26, r25	; 0x1a
    1632:	89 8f       	std	Y+25, r24	; 0x19
    1634:	89 8d       	ldd	r24, Y+25	; 0x19
    1636:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1638:	fc 01       	movw	r30, r24
    163a:	25 91       	lpm	r18, Z+
    163c:	34 91       	lpm	r19, Z
    163e:	cf 01       	movw	r24, r30
    1640:	3c 8f       	std	Y+28, r19	; 0x1c
    1642:	2b 8f       	std	Y+27, r18	; 0x1b
    1644:	9a 8f       	std	Y+26, r25	; 0x1a
    1646:	89 8f       	std	Y+25, r24	; 0x19
    1648:	8b 8d       	ldd	r24, Y+27	; 0x1b
    164a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    164c:	fc 01       	movw	r30, r24
    164e:	80 81       	ld	r24, Z
    1650:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <_ZL13portSnapshotD>
    1654:	8d e6       	ldi	r24, 0x6D	; 109
    1656:	90 e0       	ldi	r25, 0x00	; 0
    1658:	90 93 a7 03 	sts	0x03A7, r25	; 0x8003a7 <pcmsk+0x1>
    165c:	80 93 a6 03 	sts	0x03A6, r24	; 0x8003a6 <pcmsk>
    1660:	88 e6       	ldi	r24, 0x68	; 104
    1662:	90 e0       	ldi	r25, 0x00	; 0
    1664:	28 e6       	ldi	r18, 0x68	; 104
    1666:	30 e0       	ldi	r19, 0x00	; 0
    1668:	f9 01       	movw	r30, r18
    166a:	20 81       	ld	r18, Z
    166c:	24 60       	ori	r18, 0x04	; 4
    166e:	fc 01       	movw	r30, r24
    1670:	20 83       	st	Z, r18
    1672:	80 91 a6 03 	lds	r24, 0x03A6	; 0x8003a6 <pcmsk>
    1676:	90 91 a7 03 	lds	r25, 0x03A7	; 0x8003a7 <pcmsk+0x1>
    167a:	20 91 a6 03 	lds	r18, 0x03A6	; 0x8003a6 <pcmsk>
    167e:	30 91 a7 03 	lds	r19, 0x03A7	; 0x8003a7 <pcmsk+0x1>
    1682:	f9 01       	movw	r30, r18
    1684:	30 81       	ld	r19, Z
    1686:	2a 81       	ldd	r18, Y+2	; 0x02
    1688:	23 2b       	or	r18, r19
    168a:	fc 01       	movw	r30, r24
    168c:	20 83       	st	Z, r18
    168e:	80 c0       	rjmp	.+256    	; 0x1790 <_Z15enableInterrupthPFvvEh+0x394>
    1690:	8f e5       	ldi	r24, 0x5F	; 95
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	fc 01       	movw	r30, r24
    1696:	80 81       	ld	r24, Z
    1698:	8c 83       	std	Y+4, r24	; 0x04
    169a:	f8 94       	cli
    169c:	8b 81       	ldd	r24, Y+3	; 0x03
    169e:	82 30       	cpi	r24, 0x02	; 2
    16a0:	a1 f5       	brne	.+104    	; 0x170a <_Z15enableInterrupthPFvvEh+0x30e>
    16a2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    16a4:	9f 8d       	ldd	r25, Y+31	; 0x1f
    16a6:	90 93 a9 03 	sts	0x03A9, r25	; 0x8003a9 <functionPointerArrayEXTERNAL+0x1>
    16aa:	80 93 a8 03 	sts	0x03A8, r24	; 0x8003a8 <functionPointerArrayEXTERNAL>
    16ae:	8d e3       	ldi	r24, 0x3D	; 61
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	2d e3       	ldi	r18, 0x3D	; 61
    16b4:	30 e0       	ldi	r19, 0x00	; 0
    16b6:	f9 01       	movw	r30, r18
    16b8:	20 81       	ld	r18, Z
    16ba:	2e 7f       	andi	r18, 0xFE	; 254
    16bc:	fc 01       	movw	r30, r24
    16be:	20 83       	st	Z, r18
    16c0:	89 e6       	ldi	r24, 0x69	; 105
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	29 e6       	ldi	r18, 0x69	; 105
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	f9 01       	movw	r30, r18
    16ca:	20 81       	ld	r18, Z
    16cc:	2c 7f       	andi	r18, 0xFC	; 252
    16ce:	fc 01       	movw	r30, r24
    16d0:	20 83       	st	Z, r18
    16d2:	89 e6       	ldi	r24, 0x69	; 105
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	29 e6       	ldi	r18, 0x69	; 105
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	f9 01       	movw	r30, r18
    16dc:	30 81       	ld	r19, Z
    16de:	28 a1       	ldd	r18, Y+32	; 0x20
    16e0:	23 2b       	or	r18, r19
    16e2:	fc 01       	movw	r30, r24
    16e4:	20 83       	st	Z, r18
    16e6:	8c e3       	ldi	r24, 0x3C	; 60
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	2c e3       	ldi	r18, 0x3C	; 60
    16ec:	30 e0       	ldi	r19, 0x00	; 0
    16ee:	f9 01       	movw	r30, r18
    16f0:	20 81       	ld	r18, Z
    16f2:	21 60       	ori	r18, 0x01	; 1
    16f4:	fc 01       	movw	r30, r24
    16f6:	20 83       	st	Z, r18
    16f8:	8d e3       	ldi	r24, 0x3D	; 61
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	2d e3       	ldi	r18, 0x3D	; 61
    16fe:	30 e0       	ldi	r19, 0x00	; 0
    1700:	f9 01       	movw	r30, r18
    1702:	20 81       	ld	r18, Z
    1704:	21 60       	ori	r18, 0x01	; 1
    1706:	fc 01       	movw	r30, r24
    1708:	20 83       	st	Z, r18
    170a:	8b 81       	ldd	r24, Y+3	; 0x03
    170c:	83 30       	cpi	r24, 0x03	; 3
    170e:	d9 f5       	brne	.+118    	; 0x1786 <_Z15enableInterrupthPFvvEh+0x38a>
    1710:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1712:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1714:	90 93 ab 03 	sts	0x03AB, r25	; 0x8003ab <functionPointerArrayEXTERNAL+0x3>
    1718:	80 93 aa 03 	sts	0x03AA, r24	; 0x8003aa <functionPointerArrayEXTERNAL+0x2>
    171c:	8d e3       	ldi	r24, 0x3D	; 61
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	2d e3       	ldi	r18, 0x3D	; 61
    1722:	30 e0       	ldi	r19, 0x00	; 0
    1724:	f9 01       	movw	r30, r18
    1726:	20 81       	ld	r18, Z
    1728:	2d 7f       	andi	r18, 0xFD	; 253
    172a:	fc 01       	movw	r30, r24
    172c:	20 83       	st	Z, r18
    172e:	89 e6       	ldi	r24, 0x69	; 105
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	29 e6       	ldi	r18, 0x69	; 105
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	f9 01       	movw	r30, r18
    1738:	20 81       	ld	r18, Z
    173a:	23 7f       	andi	r18, 0xF3	; 243
    173c:	fc 01       	movw	r30, r24
    173e:	20 83       	st	Z, r18
    1740:	89 e6       	ldi	r24, 0x69	; 105
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	29 e6       	ldi	r18, 0x69	; 105
    1746:	30 e0       	ldi	r19, 0x00	; 0
    1748:	f9 01       	movw	r30, r18
    174a:	20 81       	ld	r18, Z
    174c:	42 2f       	mov	r20, r18
    174e:	28 a1       	ldd	r18, Y+32	; 0x20
    1750:	22 2f       	mov	r18, r18
    1752:	30 e0       	ldi	r19, 0x00	; 0
    1754:	22 0f       	add	r18, r18
    1756:	33 1f       	adc	r19, r19
    1758:	22 0f       	add	r18, r18
    175a:	33 1f       	adc	r19, r19
    175c:	24 2b       	or	r18, r20
    175e:	fc 01       	movw	r30, r24
    1760:	20 83       	st	Z, r18
    1762:	8c e3       	ldi	r24, 0x3C	; 60
    1764:	90 e0       	ldi	r25, 0x00	; 0
    1766:	2c e3       	ldi	r18, 0x3C	; 60
    1768:	30 e0       	ldi	r19, 0x00	; 0
    176a:	f9 01       	movw	r30, r18
    176c:	20 81       	ld	r18, Z
    176e:	22 60       	ori	r18, 0x02	; 2
    1770:	fc 01       	movw	r30, r24
    1772:	20 83       	st	Z, r18
    1774:	8d e3       	ldi	r24, 0x3D	; 61
    1776:	90 e0       	ldi	r25, 0x00	; 0
    1778:	2d e3       	ldi	r18, 0x3D	; 61
    177a:	30 e0       	ldi	r19, 0x00	; 0
    177c:	f9 01       	movw	r30, r18
    177e:	20 81       	ld	r18, Z
    1780:	22 60       	ori	r18, 0x02	; 2
    1782:	fc 01       	movw	r30, r24
    1784:	20 83       	st	Z, r18
    1786:	8f e5       	ldi	r24, 0x5F	; 95
    1788:	90 e0       	ldi	r25, 0x00	; 0
    178a:	2c 81       	ldd	r18, Y+4	; 0x04
    178c:	fc 01       	movw	r30, r24
    178e:	20 83       	st	Z, r18
    1790:	00 00       	nop
    1792:	a0 96       	adiw	r28, 0x20	; 32
    1794:	0f b6       	in	r0, 0x3f	; 63
    1796:	f8 94       	cli
    1798:	de bf       	out	0x3e, r29	; 62
    179a:	0f be       	out	0x3f, r0	; 63
    179c:	cd bf       	out	0x3d, r28	; 61
    179e:	df 91       	pop	r29
    17a0:	cf 91       	pop	r28
    17a2:	08 95       	ret

000017a4 <__vector_1>:
    17a4:	1f 92       	push	r1
    17a6:	0f 92       	push	r0
    17a8:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    17ac:	0f 92       	push	r0
    17ae:	11 24       	eor	r1, r1
    17b0:	2f 93       	push	r18
    17b2:	3f 93       	push	r19
    17b4:	4f 93       	push	r20
    17b6:	5f 93       	push	r21
    17b8:	6f 93       	push	r22
    17ba:	7f 93       	push	r23
    17bc:	8f 93       	push	r24
    17be:	9f 93       	push	r25
    17c0:	af 93       	push	r26
    17c2:	bf 93       	push	r27
    17c4:	ef 93       	push	r30
    17c6:	ff 93       	push	r31
    17c8:	cf 93       	push	r28
    17ca:	df 93       	push	r29
    17cc:	cd b7       	in	r28, 0x3d	; 61
    17ce:	de b7       	in	r29, 0x3e	; 62
    17d0:	80 91 a8 03 	lds	r24, 0x03A8	; 0x8003a8 <functionPointerArrayEXTERNAL>
    17d4:	90 91 a9 03 	lds	r25, 0x03A9	; 0x8003a9 <functionPointerArrayEXTERNAL+0x1>
    17d8:	fc 01       	movw	r30, r24
    17da:	09 95       	icall
    17dc:	00 00       	nop
    17de:	df 91       	pop	r29
    17e0:	cf 91       	pop	r28
    17e2:	ff 91       	pop	r31
    17e4:	ef 91       	pop	r30
    17e6:	bf 91       	pop	r27
    17e8:	af 91       	pop	r26
    17ea:	9f 91       	pop	r25
    17ec:	8f 91       	pop	r24
    17ee:	7f 91       	pop	r23
    17f0:	6f 91       	pop	r22
    17f2:	5f 91       	pop	r21
    17f4:	4f 91       	pop	r20
    17f6:	3f 91       	pop	r19
    17f8:	2f 91       	pop	r18
    17fa:	0f 90       	pop	r0
    17fc:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1800:	0f 90       	pop	r0
    1802:	1f 90       	pop	r1
    1804:	18 95       	reti

00001806 <__vector_2>:
    1806:	1f 92       	push	r1
    1808:	0f 92       	push	r0
    180a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    180e:	0f 92       	push	r0
    1810:	11 24       	eor	r1, r1
    1812:	2f 93       	push	r18
    1814:	3f 93       	push	r19
    1816:	4f 93       	push	r20
    1818:	5f 93       	push	r21
    181a:	6f 93       	push	r22
    181c:	7f 93       	push	r23
    181e:	8f 93       	push	r24
    1820:	9f 93       	push	r25
    1822:	af 93       	push	r26
    1824:	bf 93       	push	r27
    1826:	ef 93       	push	r30
    1828:	ff 93       	push	r31
    182a:	cf 93       	push	r28
    182c:	df 93       	push	r29
    182e:	cd b7       	in	r28, 0x3d	; 61
    1830:	de b7       	in	r29, 0x3e	; 62
    1832:	80 91 aa 03 	lds	r24, 0x03AA	; 0x8003aa <functionPointerArrayEXTERNAL+0x2>
    1836:	90 91 ab 03 	lds	r25, 0x03AB	; 0x8003ab <functionPointerArrayEXTERNAL+0x3>
    183a:	fc 01       	movw	r30, r24
    183c:	09 95       	icall
    183e:	00 00       	nop
    1840:	df 91       	pop	r29
    1842:	cf 91       	pop	r28
    1844:	ff 91       	pop	r31
    1846:	ef 91       	pop	r30
    1848:	bf 91       	pop	r27
    184a:	af 91       	pop	r26
    184c:	9f 91       	pop	r25
    184e:	8f 91       	pop	r24
    1850:	7f 91       	pop	r23
    1852:	6f 91       	pop	r22
    1854:	5f 91       	pop	r21
    1856:	4f 91       	pop	r20
    1858:	3f 91       	pop	r19
    185a:	2f 91       	pop	r18
    185c:	0f 90       	pop	r0
    185e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1862:	0f 90       	pop	r0
    1864:	1f 90       	pop	r1
    1866:	18 95       	reti

00001868 <__vector_3>:
    1868:	1f 92       	push	r1
    186a:	0f 92       	push	r0
    186c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1870:	0f 92       	push	r0
    1872:	11 24       	eor	r1, r1
    1874:	2f 93       	push	r18
    1876:	3f 93       	push	r19
    1878:	4f 93       	push	r20
    187a:	5f 93       	push	r21
    187c:	6f 93       	push	r22
    187e:	7f 93       	push	r23
    1880:	8f 93       	push	r24
    1882:	9f 93       	push	r25
    1884:	af 93       	push	r26
    1886:	bf 93       	push	r27
    1888:	ef 93       	push	r30
    188a:	ff 93       	push	r31
    188c:	cf 93       	push	r28
    188e:	df 93       	push	r29
    1890:	00 d0       	rcall	.+0      	; 0x1892 <__vector_3+0x2a>
    1892:	00 d0       	rcall	.+0      	; 0x1894 <__vector_3+0x2c>
    1894:	cd b7       	in	r28, 0x3d	; 61
    1896:	de b7       	in	r29, 0x3e	; 62
    1898:	83 e2       	ldi	r24, 0x23	; 35
    189a:	90 e0       	ldi	r25, 0x00	; 0
    189c:	fc 01       	movw	r30, r24
    189e:	80 81       	ld	r24, Z
    18a0:	89 83       	std	Y+1, r24	; 0x01
    18a2:	90 91 d6 03 	lds	r25, 0x03D6	; 0x8003d6 <_ZL13portSnapshotB>
    18a6:	89 81       	ldd	r24, Y+1	; 0x01
    18a8:	89 27       	eor	r24, r25
    18aa:	8a 83       	std	Y+2, r24	; 0x02
    18ac:	90 91 d4 03 	lds	r25, 0x03D4	; 0x8003d4 <risingPinsPORTB>
    18b0:	89 81       	ldd	r24, Y+1	; 0x01
    18b2:	89 23       	and	r24, r25
    18b4:	8b 83       	std	Y+3, r24	; 0x03
    18b6:	89 81       	ldd	r24, Y+1	; 0x01
    18b8:	80 95       	com	r24
    18ba:	90 91 d5 03 	lds	r25, 0x03D5	; 0x8003d5 <fallingPinsPORTB>
    18be:	89 23       	and	r24, r25
    18c0:	8c 83       	std	Y+4, r24	; 0x04
    18c2:	9c 81       	ldd	r25, Y+4	; 0x04
    18c4:	8b 81       	ldd	r24, Y+3	; 0x03
    18c6:	89 2b       	or	r24, r25
    18c8:	8c 83       	std	Y+4, r24	; 0x04
    18ca:	9c 81       	ldd	r25, Y+4	; 0x04
    18cc:	8a 81       	ldd	r24, Y+2	; 0x02
    18ce:	89 23       	and	r24, r25
    18d0:	8c 83       	std	Y+4, r24	; 0x04
    18d2:	8b e6       	ldi	r24, 0x6B	; 107
    18d4:	90 e0       	ldi	r25, 0x00	; 0
    18d6:	fc 01       	movw	r30, r24
    18d8:	80 81       	ld	r24, Z
    18da:	9c 81       	ldd	r25, Y+4	; 0x04
    18dc:	89 23       	and	r24, r25
    18de:	8c 83       	std	Y+4, r24	; 0x04
    18e0:	89 81       	ldd	r24, Y+1	; 0x01
    18e2:	80 93 d6 03 	sts	0x03D6, r24	; 0x8003d6 <_ZL13portSnapshotB>
    18e6:	8c 81       	ldd	r24, Y+4	; 0x04
    18e8:	88 23       	and	r24, r24
    18ea:	09 f4       	brne	.+2      	; 0x18ee <__vector_3+0x86>
    18ec:	4f c0       	rjmp	.+158    	; 0x198c <__vector_3+0x124>
    18ee:	8c 81       	ldd	r24, Y+4	; 0x04
    18f0:	88 2f       	mov	r24, r24
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	81 70       	andi	r24, 0x01	; 1
    18f6:	99 27       	eor	r25, r25
    18f8:	89 2b       	or	r24, r25
    18fa:	31 f0       	breq	.+12     	; 0x1908 <__vector_3+0xa0>
    18fc:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <portBFunctions>
    1900:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <portBFunctions+0x1>
    1904:	fc 01       	movw	r30, r24
    1906:	09 95       	icall
    1908:	8c 81       	ldd	r24, Y+4	; 0x04
    190a:	88 2f       	mov	r24, r24
    190c:	90 e0       	ldi	r25, 0x00	; 0
    190e:	82 70       	andi	r24, 0x02	; 2
    1910:	99 27       	eor	r25, r25
    1912:	89 2b       	or	r24, r25
    1914:	31 f0       	breq	.+12     	; 0x1922 <__vector_3+0xba>
    1916:	80 91 ae 03 	lds	r24, 0x03AE	; 0x8003ae <portBFunctions+0x2>
    191a:	90 91 af 03 	lds	r25, 0x03AF	; 0x8003af <portBFunctions+0x3>
    191e:	fc 01       	movw	r30, r24
    1920:	09 95       	icall
    1922:	8c 81       	ldd	r24, Y+4	; 0x04
    1924:	88 2f       	mov	r24, r24
    1926:	90 e0       	ldi	r25, 0x00	; 0
    1928:	84 70       	andi	r24, 0x04	; 4
    192a:	99 27       	eor	r25, r25
    192c:	89 2b       	or	r24, r25
    192e:	31 f0       	breq	.+12     	; 0x193c <__vector_3+0xd4>
    1930:	80 91 b0 03 	lds	r24, 0x03B0	; 0x8003b0 <portBFunctions+0x4>
    1934:	90 91 b1 03 	lds	r25, 0x03B1	; 0x8003b1 <portBFunctions+0x5>
    1938:	fc 01       	movw	r30, r24
    193a:	09 95       	icall
    193c:	8c 81       	ldd	r24, Y+4	; 0x04
    193e:	88 2f       	mov	r24, r24
    1940:	90 e0       	ldi	r25, 0x00	; 0
    1942:	88 70       	andi	r24, 0x08	; 8
    1944:	99 27       	eor	r25, r25
    1946:	89 2b       	or	r24, r25
    1948:	31 f0       	breq	.+12     	; 0x1956 <__vector_3+0xee>
    194a:	80 91 b2 03 	lds	r24, 0x03B2	; 0x8003b2 <portBFunctions+0x6>
    194e:	90 91 b3 03 	lds	r25, 0x03B3	; 0x8003b3 <portBFunctions+0x7>
    1952:	fc 01       	movw	r30, r24
    1954:	09 95       	icall
    1956:	8c 81       	ldd	r24, Y+4	; 0x04
    1958:	88 2f       	mov	r24, r24
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	80 71       	andi	r24, 0x10	; 16
    195e:	99 27       	eor	r25, r25
    1960:	89 2b       	or	r24, r25
    1962:	31 f0       	breq	.+12     	; 0x1970 <__vector_3+0x108>
    1964:	80 91 b4 03 	lds	r24, 0x03B4	; 0x8003b4 <portBFunctions+0x8>
    1968:	90 91 b5 03 	lds	r25, 0x03B5	; 0x8003b5 <portBFunctions+0x9>
    196c:	fc 01       	movw	r30, r24
    196e:	09 95       	icall
    1970:	8c 81       	ldd	r24, Y+4	; 0x04
    1972:	88 2f       	mov	r24, r24
    1974:	90 e0       	ldi	r25, 0x00	; 0
    1976:	80 72       	andi	r24, 0x20	; 32
    1978:	99 27       	eor	r25, r25
    197a:	89 2b       	or	r24, r25
    197c:	49 f0       	breq	.+18     	; 0x1990 <__vector_3+0x128>
    197e:	80 91 b6 03 	lds	r24, 0x03B6	; 0x8003b6 <portBFunctions+0xa>
    1982:	90 91 b7 03 	lds	r25, 0x03B7	; 0x8003b7 <portBFunctions+0xb>
    1986:	fc 01       	movw	r30, r24
    1988:	09 95       	icall
    198a:	01 c0       	rjmp	.+2      	; 0x198e <__vector_3+0x126>
    198c:	00 00       	nop
    198e:	00 00       	nop
    1990:	00 00       	nop
    1992:	0f 90       	pop	r0
    1994:	0f 90       	pop	r0
    1996:	0f 90       	pop	r0
    1998:	0f 90       	pop	r0
    199a:	df 91       	pop	r29
    199c:	cf 91       	pop	r28
    199e:	ff 91       	pop	r31
    19a0:	ef 91       	pop	r30
    19a2:	bf 91       	pop	r27
    19a4:	af 91       	pop	r26
    19a6:	9f 91       	pop	r25
    19a8:	8f 91       	pop	r24
    19aa:	7f 91       	pop	r23
    19ac:	6f 91       	pop	r22
    19ae:	5f 91       	pop	r21
    19b0:	4f 91       	pop	r20
    19b2:	3f 91       	pop	r19
    19b4:	2f 91       	pop	r18
    19b6:	0f 90       	pop	r0
    19b8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    19bc:	0f 90       	pop	r0
    19be:	1f 90       	pop	r1
    19c0:	18 95       	reti

000019c2 <__vector_4>:
    19c2:	1f 92       	push	r1
    19c4:	0f 92       	push	r0
    19c6:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    19ca:	0f 92       	push	r0
    19cc:	11 24       	eor	r1, r1
    19ce:	2f 93       	push	r18
    19d0:	3f 93       	push	r19
    19d2:	4f 93       	push	r20
    19d4:	5f 93       	push	r21
    19d6:	6f 93       	push	r22
    19d8:	7f 93       	push	r23
    19da:	8f 93       	push	r24
    19dc:	9f 93       	push	r25
    19de:	af 93       	push	r26
    19e0:	bf 93       	push	r27
    19e2:	ef 93       	push	r30
    19e4:	ff 93       	push	r31
    19e6:	cf 93       	push	r28
    19e8:	df 93       	push	r29
    19ea:	00 d0       	rcall	.+0      	; 0x19ec <__vector_4+0x2a>
    19ec:	00 d0       	rcall	.+0      	; 0x19ee <__vector_4+0x2c>
    19ee:	cd b7       	in	r28, 0x3d	; 61
    19f0:	de b7       	in	r29, 0x3e	; 62
    19f2:	86 e2       	ldi	r24, 0x26	; 38
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	fc 01       	movw	r30, r24
    19f8:	80 81       	ld	r24, Z
    19fa:	89 83       	std	Y+1, r24	; 0x01
    19fc:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <_ZL13portSnapshotC>
    1a00:	89 81       	ldd	r24, Y+1	; 0x01
    1a02:	89 27       	eor	r24, r25
    1a04:	8a 83       	std	Y+2, r24	; 0x02
    1a06:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <risingPinsPORTC>
    1a0a:	89 81       	ldd	r24, Y+1	; 0x01
    1a0c:	89 23       	and	r24, r25
    1a0e:	8b 83       	std	Y+3, r24	; 0x03
    1a10:	89 81       	ldd	r24, Y+1	; 0x01
    1a12:	80 95       	com	r24
    1a14:	90 91 d8 03 	lds	r25, 0x03D8	; 0x8003d8 <fallingPinsPORTC>
    1a18:	89 23       	and	r24, r25
    1a1a:	8c 83       	std	Y+4, r24	; 0x04
    1a1c:	9c 81       	ldd	r25, Y+4	; 0x04
    1a1e:	8b 81       	ldd	r24, Y+3	; 0x03
    1a20:	89 2b       	or	r24, r25
    1a22:	8c 83       	std	Y+4, r24	; 0x04
    1a24:	9c 81       	ldd	r25, Y+4	; 0x04
    1a26:	8a 81       	ldd	r24, Y+2	; 0x02
    1a28:	89 23       	and	r24, r25
    1a2a:	8c 83       	std	Y+4, r24	; 0x04
    1a2c:	8c e6       	ldi	r24, 0x6C	; 108
    1a2e:	90 e0       	ldi	r25, 0x00	; 0
    1a30:	fc 01       	movw	r30, r24
    1a32:	80 81       	ld	r24, Z
    1a34:	9c 81       	ldd	r25, Y+4	; 0x04
    1a36:	89 23       	and	r24, r25
    1a38:	8c 83       	std	Y+4, r24	; 0x04
    1a3a:	89 81       	ldd	r24, Y+1	; 0x01
    1a3c:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <_ZL13portSnapshotC>
    1a40:	8c 81       	ldd	r24, Y+4	; 0x04
    1a42:	88 23       	and	r24, r24
    1a44:	09 f4       	brne	.+2      	; 0x1a48 <__vector_4+0x86>
    1a46:	4f c0       	rjmp	.+158    	; 0x1ae6 <__vector_4+0x124>
    1a48:	8c 81       	ldd	r24, Y+4	; 0x04
    1a4a:	88 2f       	mov	r24, r24
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	81 70       	andi	r24, 0x01	; 1
    1a50:	99 27       	eor	r25, r25
    1a52:	89 2b       	or	r24, r25
    1a54:	31 f0       	breq	.+12     	; 0x1a62 <__vector_4+0xa0>
    1a56:	80 91 b8 03 	lds	r24, 0x03B8	; 0x8003b8 <portCFunctions>
    1a5a:	90 91 b9 03 	lds	r25, 0x03B9	; 0x8003b9 <portCFunctions+0x1>
    1a5e:	fc 01       	movw	r30, r24
    1a60:	09 95       	icall
    1a62:	8c 81       	ldd	r24, Y+4	; 0x04
    1a64:	88 2f       	mov	r24, r24
    1a66:	90 e0       	ldi	r25, 0x00	; 0
    1a68:	82 70       	andi	r24, 0x02	; 2
    1a6a:	99 27       	eor	r25, r25
    1a6c:	89 2b       	or	r24, r25
    1a6e:	31 f0       	breq	.+12     	; 0x1a7c <__vector_4+0xba>
    1a70:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <portCFunctions+0x2>
    1a74:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <portCFunctions+0x3>
    1a78:	fc 01       	movw	r30, r24
    1a7a:	09 95       	icall
    1a7c:	8c 81       	ldd	r24, Y+4	; 0x04
    1a7e:	88 2f       	mov	r24, r24
    1a80:	90 e0       	ldi	r25, 0x00	; 0
    1a82:	84 70       	andi	r24, 0x04	; 4
    1a84:	99 27       	eor	r25, r25
    1a86:	89 2b       	or	r24, r25
    1a88:	31 f0       	breq	.+12     	; 0x1a96 <__vector_4+0xd4>
    1a8a:	80 91 bc 03 	lds	r24, 0x03BC	; 0x8003bc <portCFunctions+0x4>
    1a8e:	90 91 bd 03 	lds	r25, 0x03BD	; 0x8003bd <portCFunctions+0x5>
    1a92:	fc 01       	movw	r30, r24
    1a94:	09 95       	icall
    1a96:	8c 81       	ldd	r24, Y+4	; 0x04
    1a98:	88 2f       	mov	r24, r24
    1a9a:	90 e0       	ldi	r25, 0x00	; 0
    1a9c:	88 70       	andi	r24, 0x08	; 8
    1a9e:	99 27       	eor	r25, r25
    1aa0:	89 2b       	or	r24, r25
    1aa2:	31 f0       	breq	.+12     	; 0x1ab0 <__vector_4+0xee>
    1aa4:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <portCFunctions+0x6>
    1aa8:	90 91 bf 03 	lds	r25, 0x03BF	; 0x8003bf <portCFunctions+0x7>
    1aac:	fc 01       	movw	r30, r24
    1aae:	09 95       	icall
    1ab0:	8c 81       	ldd	r24, Y+4	; 0x04
    1ab2:	88 2f       	mov	r24, r24
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	80 71       	andi	r24, 0x10	; 16
    1ab8:	99 27       	eor	r25, r25
    1aba:	89 2b       	or	r24, r25
    1abc:	31 f0       	breq	.+12     	; 0x1aca <__vector_4+0x108>
    1abe:	80 91 c0 03 	lds	r24, 0x03C0	; 0x8003c0 <portCFunctions+0x8>
    1ac2:	90 91 c1 03 	lds	r25, 0x03C1	; 0x8003c1 <portCFunctions+0x9>
    1ac6:	fc 01       	movw	r30, r24
    1ac8:	09 95       	icall
    1aca:	8c 81       	ldd	r24, Y+4	; 0x04
    1acc:	88 2f       	mov	r24, r24
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	80 72       	andi	r24, 0x20	; 32
    1ad2:	99 27       	eor	r25, r25
    1ad4:	89 2b       	or	r24, r25
    1ad6:	49 f0       	breq	.+18     	; 0x1aea <__vector_4+0x128>
    1ad8:	80 91 c2 03 	lds	r24, 0x03C2	; 0x8003c2 <portCFunctions+0xa>
    1adc:	90 91 c3 03 	lds	r25, 0x03C3	; 0x8003c3 <portCFunctions+0xb>
    1ae0:	fc 01       	movw	r30, r24
    1ae2:	09 95       	icall
    1ae4:	01 c0       	rjmp	.+2      	; 0x1ae8 <__vector_4+0x126>
    1ae6:	00 00       	nop
    1ae8:	00 00       	nop
    1aea:	00 00       	nop
    1aec:	0f 90       	pop	r0
    1aee:	0f 90       	pop	r0
    1af0:	0f 90       	pop	r0
    1af2:	0f 90       	pop	r0
    1af4:	df 91       	pop	r29
    1af6:	cf 91       	pop	r28
    1af8:	ff 91       	pop	r31
    1afa:	ef 91       	pop	r30
    1afc:	bf 91       	pop	r27
    1afe:	af 91       	pop	r26
    1b00:	9f 91       	pop	r25
    1b02:	8f 91       	pop	r24
    1b04:	7f 91       	pop	r23
    1b06:	6f 91       	pop	r22
    1b08:	5f 91       	pop	r21
    1b0a:	4f 91       	pop	r20
    1b0c:	3f 91       	pop	r19
    1b0e:	2f 91       	pop	r18
    1b10:	0f 90       	pop	r0
    1b12:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1b16:	0f 90       	pop	r0
    1b18:	1f 90       	pop	r1
    1b1a:	18 95       	reti

00001b1c <__vector_5>:
    1b1c:	1f 92       	push	r1
    1b1e:	0f 92       	push	r0
    1b20:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1b24:	0f 92       	push	r0
    1b26:	11 24       	eor	r1, r1
    1b28:	2f 93       	push	r18
    1b2a:	3f 93       	push	r19
    1b2c:	4f 93       	push	r20
    1b2e:	5f 93       	push	r21
    1b30:	6f 93       	push	r22
    1b32:	7f 93       	push	r23
    1b34:	8f 93       	push	r24
    1b36:	9f 93       	push	r25
    1b38:	af 93       	push	r26
    1b3a:	bf 93       	push	r27
    1b3c:	ef 93       	push	r30
    1b3e:	ff 93       	push	r31
    1b40:	cf 93       	push	r28
    1b42:	df 93       	push	r29
    1b44:	00 d0       	rcall	.+0      	; 0x1b46 <__vector_5+0x2a>
    1b46:	00 d0       	rcall	.+0      	; 0x1b48 <__vector_5+0x2c>
    1b48:	cd b7       	in	r28, 0x3d	; 61
    1b4a:	de b7       	in	r29, 0x3e	; 62
    1b4c:	89 e2       	ldi	r24, 0x29	; 41
    1b4e:	90 e0       	ldi	r25, 0x00	; 0
    1b50:	fc 01       	movw	r30, r24
    1b52:	80 81       	ld	r24, Z
    1b54:	89 83       	std	Y+1, r24	; 0x01
    1b56:	90 91 dc 03 	lds	r25, 0x03DC	; 0x8003dc <_ZL13portSnapshotD>
    1b5a:	89 81       	ldd	r24, Y+1	; 0x01
    1b5c:	89 27       	eor	r24, r25
    1b5e:	8a 83       	std	Y+2, r24	; 0x02
    1b60:	90 91 da 03 	lds	r25, 0x03DA	; 0x8003da <risingPinsPORTD>
    1b64:	89 81       	ldd	r24, Y+1	; 0x01
    1b66:	89 23       	and	r24, r25
    1b68:	8b 83       	std	Y+3, r24	; 0x03
    1b6a:	89 81       	ldd	r24, Y+1	; 0x01
    1b6c:	80 95       	com	r24
    1b6e:	90 91 db 03 	lds	r25, 0x03DB	; 0x8003db <fallingPinsPORTD>
    1b72:	89 23       	and	r24, r25
    1b74:	8c 83       	std	Y+4, r24	; 0x04
    1b76:	9c 81       	ldd	r25, Y+4	; 0x04
    1b78:	8b 81       	ldd	r24, Y+3	; 0x03
    1b7a:	89 2b       	or	r24, r25
    1b7c:	8c 83       	std	Y+4, r24	; 0x04
    1b7e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b80:	8a 81       	ldd	r24, Y+2	; 0x02
    1b82:	89 23       	and	r24, r25
    1b84:	8c 83       	std	Y+4, r24	; 0x04
    1b86:	8d e6       	ldi	r24, 0x6D	; 109
    1b88:	90 e0       	ldi	r25, 0x00	; 0
    1b8a:	fc 01       	movw	r30, r24
    1b8c:	80 81       	ld	r24, Z
    1b8e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b90:	89 23       	and	r24, r25
    1b92:	8c 83       	std	Y+4, r24	; 0x04
    1b94:	89 81       	ldd	r24, Y+1	; 0x01
    1b96:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <_ZL13portSnapshotD>
    1b9a:	8c 81       	ldd	r24, Y+4	; 0x04
    1b9c:	88 23       	and	r24, r24
    1b9e:	09 f4       	brne	.+2      	; 0x1ba2 <__vector_5+0x86>
    1ba0:	65 c0       	rjmp	.+202    	; 0x1c6c <__vector_5+0x150>
    1ba2:	8c 81       	ldd	r24, Y+4	; 0x04
    1ba4:	88 2f       	mov	r24, r24
    1ba6:	90 e0       	ldi	r25, 0x00	; 0
    1ba8:	81 70       	andi	r24, 0x01	; 1
    1baa:	99 27       	eor	r25, r25
    1bac:	89 2b       	or	r24, r25
    1bae:	31 f0       	breq	.+12     	; 0x1bbc <__vector_5+0xa0>
    1bb0:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <portDFunctions>
    1bb4:	90 91 c5 03 	lds	r25, 0x03C5	; 0x8003c5 <portDFunctions+0x1>
    1bb8:	fc 01       	movw	r30, r24
    1bba:	09 95       	icall
    1bbc:	8c 81       	ldd	r24, Y+4	; 0x04
    1bbe:	88 2f       	mov	r24, r24
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	82 70       	andi	r24, 0x02	; 2
    1bc4:	99 27       	eor	r25, r25
    1bc6:	89 2b       	or	r24, r25
    1bc8:	31 f0       	breq	.+12     	; 0x1bd6 <__vector_5+0xba>
    1bca:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <portDFunctions+0x2>
    1bce:	90 91 c7 03 	lds	r25, 0x03C7	; 0x8003c7 <portDFunctions+0x3>
    1bd2:	fc 01       	movw	r30, r24
    1bd4:	09 95       	icall
    1bd6:	8c 81       	ldd	r24, Y+4	; 0x04
    1bd8:	88 2f       	mov	r24, r24
    1bda:	90 e0       	ldi	r25, 0x00	; 0
    1bdc:	84 70       	andi	r24, 0x04	; 4
    1bde:	99 27       	eor	r25, r25
    1be0:	89 2b       	or	r24, r25
    1be2:	31 f0       	breq	.+12     	; 0x1bf0 <__vector_5+0xd4>
    1be4:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <portDFunctions+0x4>
    1be8:	90 91 c9 03 	lds	r25, 0x03C9	; 0x8003c9 <portDFunctions+0x5>
    1bec:	fc 01       	movw	r30, r24
    1bee:	09 95       	icall
    1bf0:	8c 81       	ldd	r24, Y+4	; 0x04
    1bf2:	88 2f       	mov	r24, r24
    1bf4:	90 e0       	ldi	r25, 0x00	; 0
    1bf6:	88 70       	andi	r24, 0x08	; 8
    1bf8:	99 27       	eor	r25, r25
    1bfa:	89 2b       	or	r24, r25
    1bfc:	31 f0       	breq	.+12     	; 0x1c0a <__vector_5+0xee>
    1bfe:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <portDFunctions+0x6>
    1c02:	90 91 cb 03 	lds	r25, 0x03CB	; 0x8003cb <portDFunctions+0x7>
    1c06:	fc 01       	movw	r30, r24
    1c08:	09 95       	icall
    1c0a:	8c 81       	ldd	r24, Y+4	; 0x04
    1c0c:	88 2f       	mov	r24, r24
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	80 71       	andi	r24, 0x10	; 16
    1c12:	99 27       	eor	r25, r25
    1c14:	89 2b       	or	r24, r25
    1c16:	31 f0       	breq	.+12     	; 0x1c24 <__vector_5+0x108>
    1c18:	80 91 cc 03 	lds	r24, 0x03CC	; 0x8003cc <portDFunctions+0x8>
    1c1c:	90 91 cd 03 	lds	r25, 0x03CD	; 0x8003cd <portDFunctions+0x9>
    1c20:	fc 01       	movw	r30, r24
    1c22:	09 95       	icall
    1c24:	8c 81       	ldd	r24, Y+4	; 0x04
    1c26:	88 2f       	mov	r24, r24
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	80 72       	andi	r24, 0x20	; 32
    1c2c:	99 27       	eor	r25, r25
    1c2e:	89 2b       	or	r24, r25
    1c30:	31 f0       	breq	.+12     	; 0x1c3e <__vector_5+0x122>
    1c32:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <portDFunctions+0xa>
    1c36:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <portDFunctions+0xb>
    1c3a:	fc 01       	movw	r30, r24
    1c3c:	09 95       	icall
    1c3e:	8c 81       	ldd	r24, Y+4	; 0x04
    1c40:	88 2f       	mov	r24, r24
    1c42:	90 e0       	ldi	r25, 0x00	; 0
    1c44:	80 74       	andi	r24, 0x40	; 64
    1c46:	99 27       	eor	r25, r25
    1c48:	89 2b       	or	r24, r25
    1c4a:	31 f0       	breq	.+12     	; 0x1c58 <__vector_5+0x13c>
    1c4c:	80 91 d0 03 	lds	r24, 0x03D0	; 0x8003d0 <portDFunctions+0xc>
    1c50:	90 91 d1 03 	lds	r25, 0x03D1	; 0x8003d1 <portDFunctions+0xd>
    1c54:	fc 01       	movw	r30, r24
    1c56:	09 95       	icall
    1c58:	8c 81       	ldd	r24, Y+4	; 0x04
    1c5a:	88 23       	and	r24, r24
    1c5c:	4c f4       	brge	.+18     	; 0x1c70 <__vector_5+0x154>
    1c5e:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <portDFunctions+0xe>
    1c62:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <portDFunctions+0xf>
    1c66:	fc 01       	movw	r30, r24
    1c68:	09 95       	icall
    1c6a:	01 c0       	rjmp	.+2      	; 0x1c6e <__vector_5+0x152>
    1c6c:	00 00       	nop
    1c6e:	00 00       	nop
    1c70:	00 00       	nop
    1c72:	0f 90       	pop	r0
    1c74:	0f 90       	pop	r0
    1c76:	0f 90       	pop	r0
    1c78:	0f 90       	pop	r0
    1c7a:	df 91       	pop	r29
    1c7c:	cf 91       	pop	r28
    1c7e:	ff 91       	pop	r31
    1c80:	ef 91       	pop	r30
    1c82:	bf 91       	pop	r27
    1c84:	af 91       	pop	r26
    1c86:	9f 91       	pop	r25
    1c88:	8f 91       	pop	r24
    1c8a:	7f 91       	pop	r23
    1c8c:	6f 91       	pop	r22
    1c8e:	5f 91       	pop	r21
    1c90:	4f 91       	pop	r20
    1c92:	3f 91       	pop	r19
    1c94:	2f 91       	pop	r18
    1c96:	0f 90       	pop	r0
    1c98:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1c9c:	0f 90       	pop	r0
    1c9e:	1f 90       	pop	r1
    1ca0:	18 95       	reti

00001ca2 <__vector_13>:
    1ca2:	1f 92       	push	r1
    1ca4:	0f 92       	push	r0
    1ca6:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1caa:	0f 92       	push	r0
    1cac:	11 24       	eor	r1, r1
    1cae:	2f 93       	push	r18
    1cb0:	3f 93       	push	r19
    1cb2:	4f 93       	push	r20
    1cb4:	5f 93       	push	r21
    1cb6:	6f 93       	push	r22
    1cb8:	7f 93       	push	r23
    1cba:	8f 93       	push	r24
    1cbc:	9f 93       	push	r25
    1cbe:	af 93       	push	r26
    1cc0:	bf 93       	push	r27
    1cc2:	ef 93       	push	r30
    1cc4:	ff 93       	push	r31
    1cc6:	cf 93       	push	r28
    1cc8:	df 93       	push	r29
    1cca:	cd b7       	in	r28, 0x3d	; 61
    1ccc:	de b7       	in	r29, 0x3e	; 62
    1cce:	26 97       	sbiw	r28, 0x06	; 6
    1cd0:	de bf       	out	0x3e, r29	; 62
    1cd2:	cd bf       	out	0x3d, r28	; 61
    1cd4:	24 e8       	ldi	r18, 0x84	; 132
    1cd6:	30 e0       	ldi	r19, 0x00	; 0
    1cd8:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <stepDelay>
    1cdc:	90 91 d5 01 	lds	r25, 0x01D5	; 0x8001d5 <stepDelay+0x1>
    1ce0:	a0 91 d6 01 	lds	r26, 0x01D6	; 0x8001d6 <stepDelay+0x2>
    1ce4:	b0 91 d7 01 	lds	r27, 0x01D7	; 0x8001d7 <stepDelay+0x3>
    1ce8:	80 95       	com	r24
    1cea:	90 95       	com	r25
    1cec:	f9 01       	movw	r30, r18
    1cee:	91 83       	std	Z+1, r25	; 0x01
    1cf0:	80 83       	st	Z, r24
    1cf2:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <RUN_MODE>
    1cf6:	81 e0       	ldi	r24, 0x01	; 1
    1cf8:	91 30       	cpi	r25, 0x01	; 1
    1cfa:	09 f4       	brne	.+2      	; 0x1cfe <__vector_13+0x5c>
    1cfc:	80 e0       	ldi	r24, 0x00	; 0
    1cfe:	88 23       	and	r24, r24
    1d00:	09 f4       	brne	.+2      	; 0x1d04 <__vector_13+0x62>
    1d02:	a8 c0       	rjmp	.+336    	; 0x1e54 <__vector_13+0x1b2>
    1d04:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <DESIRED_POSITION>
    1d08:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    1d0c:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    1d10:	50 91 09 04 	lds	r21, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    1d14:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <STEPS>
    1d18:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <STEPS+0x1>
    1d1c:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <STEPS+0x2>
    1d20:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <STEPS+0x3>
    1d24:	61 e0       	ldi	r22, 0x01	; 1
    1d26:	28 17       	cp	r18, r24
    1d28:	39 07       	cpc	r19, r25
    1d2a:	4a 07       	cpc	r20, r26
    1d2c:	5b 07       	cpc	r21, r27
    1d2e:	09 f4       	brne	.+2      	; 0x1d32 <__vector_13+0x90>
    1d30:	60 e0       	ldi	r22, 0x00	; 0
    1d32:	66 23       	and	r22, r22
    1d34:	11 f0       	breq	.+4      	; 0x1d3a <__vector_13+0x98>
    1d36:	0e 94 32 15 	call	0x2a64	; 0x2a64 <_Z16ToggleStepOutputv>
    1d3a:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <DESIRED_POSITION>
    1d3e:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    1d42:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    1d46:	50 91 09 04 	lds	r21, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    1d4a:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <STEPS>
    1d4e:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <STEPS+0x1>
    1d52:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <STEPS+0x2>
    1d56:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <STEPS+0x3>
    1d5a:	61 e0       	ldi	r22, 0x01	; 1
    1d5c:	82 17       	cp	r24, r18
    1d5e:	93 07       	cpc	r25, r19
    1d60:	a4 07       	cpc	r26, r20
    1d62:	b5 07       	cpc	r27, r21
    1d64:	0c f0       	brlt	.+2      	; 0x1d68 <__vector_13+0xc6>
    1d66:	60 e0       	ldi	r22, 0x00	; 0
    1d68:	66 23       	and	r22, r22
    1d6a:	51 f1       	breq	.+84     	; 0x1dc0 <__vector_13+0x11e>
    1d6c:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <_ZL18directionOutputPin>
    1d70:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <_ZL18directionOutputPin+0x1>
    1d74:	84 58       	subi	r24, 0x84	; 132
    1d76:	9f 4f       	sbci	r25, 0xFF	; 255
    1d78:	9a 83       	std	Y+2, r25	; 0x02
    1d7a:	89 83       	std	Y+1, r24	; 0x01
    1d7c:	89 81       	ldd	r24, Y+1	; 0x01
    1d7e:	9a 81       	ldd	r25, Y+2	; 0x02
    1d80:	fc 01       	movw	r30, r24
    1d82:	84 91       	lpm	r24, Z
    1d84:	8b 83       	std	Y+3, r24	; 0x03
    1d86:	4b 81       	ldd	r20, Y+3	; 0x03
    1d88:	8b e2       	ldi	r24, 0x2B	; 43
    1d8a:	90 e0       	ldi	r25, 0x00	; 0
    1d8c:	2b e2       	ldi	r18, 0x2B	; 43
    1d8e:	30 e0       	ldi	r19, 0x00	; 0
    1d90:	f9 01       	movw	r30, r18
    1d92:	20 81       	ld	r18, Z
    1d94:	24 2b       	or	r18, r20
    1d96:	fc 01       	movw	r30, r24
    1d98:	20 83       	st	Z, r18
    1d9a:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <STEPS>
    1d9e:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <STEPS+0x1>
    1da2:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <STEPS+0x2>
    1da6:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <STEPS+0x3>
    1daa:	01 96       	adiw	r24, 0x01	; 1
    1dac:	a1 1d       	adc	r26, r1
    1dae:	b1 1d       	adc	r27, r1
    1db0:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <STEPS>
    1db4:	90 93 03 04 	sts	0x0403, r25	; 0x800403 <STEPS+0x1>
    1db8:	a0 93 04 04 	sts	0x0404, r26	; 0x800404 <STEPS+0x2>
    1dbc:	b0 93 05 04 	sts	0x0405, r27	; 0x800405 <STEPS+0x3>
    1dc0:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <DESIRED_POSITION>
    1dc4:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    1dc8:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    1dcc:	50 91 09 04 	lds	r21, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    1dd0:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <STEPS>
    1dd4:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <STEPS+0x1>
    1dd8:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <STEPS+0x2>
    1ddc:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <STEPS+0x3>
    1de0:	61 e0       	ldi	r22, 0x01	; 1
    1de2:	28 17       	cp	r18, r24
    1de4:	39 07       	cpc	r19, r25
    1de6:	4a 07       	cpc	r20, r26
    1de8:	5b 07       	cpc	r21, r27
    1dea:	0c f0       	brlt	.+2      	; 0x1dee <__vector_13+0x14c>
    1dec:	60 e0       	ldi	r22, 0x00	; 0
    1dee:	66 23       	and	r22, r22
    1df0:	89 f1       	breq	.+98     	; 0x1e54 <__vector_13+0x1b2>
    1df2:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <_ZL18directionOutputPin>
    1df6:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <_ZL18directionOutputPin+0x1>
    1dfa:	84 58       	subi	r24, 0x84	; 132
    1dfc:	9f 4f       	sbci	r25, 0xFF	; 255
    1dfe:	9d 83       	std	Y+5, r25	; 0x05
    1e00:	8c 83       	std	Y+4, r24	; 0x04
    1e02:	8c 81       	ldd	r24, Y+4	; 0x04
    1e04:	9d 81       	ldd	r25, Y+5	; 0x05
    1e06:	fc 01       	movw	r30, r24
    1e08:	84 91       	lpm	r24, Z
    1e0a:	8e 83       	std	Y+6, r24	; 0x06
    1e0c:	8e 81       	ldd	r24, Y+6	; 0x06
    1e0e:	88 2f       	mov	r24, r24
    1e10:	90 e0       	ldi	r25, 0x00	; 0
    1e12:	ac 01       	movw	r20, r24
    1e14:	40 95       	com	r20
    1e16:	50 95       	com	r21
    1e18:	8b e2       	ldi	r24, 0x2B	; 43
    1e1a:	90 e0       	ldi	r25, 0x00	; 0
    1e1c:	2b e2       	ldi	r18, 0x2B	; 43
    1e1e:	30 e0       	ldi	r19, 0x00	; 0
    1e20:	f9 01       	movw	r30, r18
    1e22:	20 81       	ld	r18, Z
    1e24:	32 2f       	mov	r19, r18
    1e26:	24 2f       	mov	r18, r20
    1e28:	23 23       	and	r18, r19
    1e2a:	fc 01       	movw	r30, r24
    1e2c:	20 83       	st	Z, r18
    1e2e:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <STEPS>
    1e32:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <STEPS+0x1>
    1e36:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <STEPS+0x2>
    1e3a:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <STEPS+0x3>
    1e3e:	01 97       	sbiw	r24, 0x01	; 1
    1e40:	a1 09       	sbc	r26, r1
    1e42:	b1 09       	sbc	r27, r1
    1e44:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <STEPS>
    1e48:	90 93 03 04 	sts	0x0403, r25	; 0x800403 <STEPS+0x1>
    1e4c:	a0 93 04 04 	sts	0x0404, r26	; 0x800404 <STEPS+0x2>
    1e50:	b0 93 05 04 	sts	0x0405, r27	; 0x800405 <STEPS+0x3>
    1e54:	00 00       	nop
    1e56:	26 96       	adiw	r28, 0x06	; 6
    1e58:	0f b6       	in	r0, 0x3f	; 63
    1e5a:	f8 94       	cli
    1e5c:	de bf       	out	0x3e, r29	; 62
    1e5e:	0f be       	out	0x3f, r0	; 63
    1e60:	cd bf       	out	0x3d, r28	; 61
    1e62:	df 91       	pop	r29
    1e64:	cf 91       	pop	r28
    1e66:	ff 91       	pop	r31
    1e68:	ef 91       	pop	r30
    1e6a:	bf 91       	pop	r27
    1e6c:	af 91       	pop	r26
    1e6e:	9f 91       	pop	r25
    1e70:	8f 91       	pop	r24
    1e72:	7f 91       	pop	r23
    1e74:	6f 91       	pop	r22
    1e76:	5f 91       	pop	r21
    1e78:	4f 91       	pop	r20
    1e7a:	3f 91       	pop	r19
    1e7c:	2f 91       	pop	r18
    1e7e:	0f 90       	pop	r0
    1e80:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1e84:	0f 90       	pop	r0
    1e86:	1f 90       	pop	r1
    1e88:	18 95       	reti

00001e8a <__vector_11>:
    1e8a:	1f 92       	push	r1
    1e8c:	0f 92       	push	r0
    1e8e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1e92:	0f 92       	push	r0
    1e94:	11 24       	eor	r1, r1
    1e96:	2f 93       	push	r18
    1e98:	3f 93       	push	r19
    1e9a:	4f 93       	push	r20
    1e9c:	5f 93       	push	r21
    1e9e:	6f 93       	push	r22
    1ea0:	7f 93       	push	r23
    1ea2:	8f 93       	push	r24
    1ea4:	9f 93       	push	r25
    1ea6:	af 93       	push	r26
    1ea8:	bf 93       	push	r27
    1eaa:	ef 93       	push	r30
    1eac:	ff 93       	push	r31
    1eae:	cf 93       	push	r28
    1eb0:	df 93       	push	r29
    1eb2:	cd b7       	in	r28, 0x3d	; 61
    1eb4:	de b7       	in	r29, 0x3e	; 62
    1eb6:	26 97       	sbiw	r28, 0x06	; 6
    1eb8:	de bf       	out	0x3e, r29	; 62
    1eba:	cd bf       	out	0x3d, r28	; 61
    1ebc:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <RUN_MODE>
    1ec0:	81 e0       	ldi	r24, 0x01	; 1
    1ec2:	91 30       	cpi	r25, 0x01	; 1
    1ec4:	09 f4       	brne	.+2      	; 0x1ec8 <__vector_11+0x3e>
    1ec6:	80 e0       	ldi	r24, 0x00	; 0
    1ec8:	88 23       	and	r24, r24
    1eca:	09 f4       	brne	.+2      	; 0x1ece <__vector_11+0x44>
    1ecc:	a8 c0       	rjmp	.+336    	; 0x201e <__vector_11+0x194>
    1ece:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <DESIRED_POSITION>
    1ed2:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    1ed6:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    1eda:	50 91 09 04 	lds	r21, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    1ede:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <STEPS>
    1ee2:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <STEPS+0x1>
    1ee6:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <STEPS+0x2>
    1eea:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <STEPS+0x3>
    1eee:	61 e0       	ldi	r22, 0x01	; 1
    1ef0:	28 17       	cp	r18, r24
    1ef2:	39 07       	cpc	r19, r25
    1ef4:	4a 07       	cpc	r20, r26
    1ef6:	5b 07       	cpc	r21, r27
    1ef8:	09 f4       	brne	.+2      	; 0x1efc <__vector_11+0x72>
    1efa:	60 e0       	ldi	r22, 0x00	; 0
    1efc:	66 23       	and	r22, r22
    1efe:	11 f0       	breq	.+4      	; 0x1f04 <__vector_11+0x7a>
    1f00:	0e 94 32 15 	call	0x2a64	; 0x2a64 <_Z16ToggleStepOutputv>
    1f04:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <DESIRED_POSITION>
    1f08:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    1f0c:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    1f10:	50 91 09 04 	lds	r21, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    1f14:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <STEPS>
    1f18:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <STEPS+0x1>
    1f1c:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <STEPS+0x2>
    1f20:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <STEPS+0x3>
    1f24:	61 e0       	ldi	r22, 0x01	; 1
    1f26:	82 17       	cp	r24, r18
    1f28:	93 07       	cpc	r25, r19
    1f2a:	a4 07       	cpc	r26, r20
    1f2c:	b5 07       	cpc	r27, r21
    1f2e:	0c f0       	brlt	.+2      	; 0x1f32 <__vector_11+0xa8>
    1f30:	60 e0       	ldi	r22, 0x00	; 0
    1f32:	66 23       	and	r22, r22
    1f34:	51 f1       	breq	.+84     	; 0x1f8a <__vector_11+0x100>
    1f36:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <_ZL18directionOutputPin>
    1f3a:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <_ZL18directionOutputPin+0x1>
    1f3e:	84 58       	subi	r24, 0x84	; 132
    1f40:	9f 4f       	sbci	r25, 0xFF	; 255
    1f42:	9a 83       	std	Y+2, r25	; 0x02
    1f44:	89 83       	std	Y+1, r24	; 0x01
    1f46:	89 81       	ldd	r24, Y+1	; 0x01
    1f48:	9a 81       	ldd	r25, Y+2	; 0x02
    1f4a:	fc 01       	movw	r30, r24
    1f4c:	84 91       	lpm	r24, Z
    1f4e:	8b 83       	std	Y+3, r24	; 0x03
    1f50:	4b 81       	ldd	r20, Y+3	; 0x03
    1f52:	8b e2       	ldi	r24, 0x2B	; 43
    1f54:	90 e0       	ldi	r25, 0x00	; 0
    1f56:	2b e2       	ldi	r18, 0x2B	; 43
    1f58:	30 e0       	ldi	r19, 0x00	; 0
    1f5a:	f9 01       	movw	r30, r18
    1f5c:	20 81       	ld	r18, Z
    1f5e:	24 2b       	or	r18, r20
    1f60:	fc 01       	movw	r30, r24
    1f62:	20 83       	st	Z, r18
    1f64:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <STEPS>
    1f68:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <STEPS+0x1>
    1f6c:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <STEPS+0x2>
    1f70:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <STEPS+0x3>
    1f74:	01 96       	adiw	r24, 0x01	; 1
    1f76:	a1 1d       	adc	r26, r1
    1f78:	b1 1d       	adc	r27, r1
    1f7a:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <STEPS>
    1f7e:	90 93 03 04 	sts	0x0403, r25	; 0x800403 <STEPS+0x1>
    1f82:	a0 93 04 04 	sts	0x0404, r26	; 0x800404 <STEPS+0x2>
    1f86:	b0 93 05 04 	sts	0x0405, r27	; 0x800405 <STEPS+0x3>
    1f8a:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <DESIRED_POSITION>
    1f8e:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    1f92:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    1f96:	50 91 09 04 	lds	r21, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    1f9a:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <STEPS>
    1f9e:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <STEPS+0x1>
    1fa2:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <STEPS+0x2>
    1fa6:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <STEPS+0x3>
    1faa:	61 e0       	ldi	r22, 0x01	; 1
    1fac:	28 17       	cp	r18, r24
    1fae:	39 07       	cpc	r19, r25
    1fb0:	4a 07       	cpc	r20, r26
    1fb2:	5b 07       	cpc	r21, r27
    1fb4:	0c f0       	brlt	.+2      	; 0x1fb8 <__vector_11+0x12e>
    1fb6:	60 e0       	ldi	r22, 0x00	; 0
    1fb8:	66 23       	and	r22, r22
    1fba:	89 f1       	breq	.+98     	; 0x201e <__vector_11+0x194>
    1fbc:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <_ZL18directionOutputPin>
    1fc0:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <_ZL18directionOutputPin+0x1>
    1fc4:	84 58       	subi	r24, 0x84	; 132
    1fc6:	9f 4f       	sbci	r25, 0xFF	; 255
    1fc8:	9d 83       	std	Y+5, r25	; 0x05
    1fca:	8c 83       	std	Y+4, r24	; 0x04
    1fcc:	8c 81       	ldd	r24, Y+4	; 0x04
    1fce:	9d 81       	ldd	r25, Y+5	; 0x05
    1fd0:	fc 01       	movw	r30, r24
    1fd2:	84 91       	lpm	r24, Z
    1fd4:	8e 83       	std	Y+6, r24	; 0x06
    1fd6:	8e 81       	ldd	r24, Y+6	; 0x06
    1fd8:	88 2f       	mov	r24, r24
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	ac 01       	movw	r20, r24
    1fde:	40 95       	com	r20
    1fe0:	50 95       	com	r21
    1fe2:	8b e2       	ldi	r24, 0x2B	; 43
    1fe4:	90 e0       	ldi	r25, 0x00	; 0
    1fe6:	2b e2       	ldi	r18, 0x2B	; 43
    1fe8:	30 e0       	ldi	r19, 0x00	; 0
    1fea:	f9 01       	movw	r30, r18
    1fec:	20 81       	ld	r18, Z
    1fee:	32 2f       	mov	r19, r18
    1ff0:	24 2f       	mov	r18, r20
    1ff2:	23 23       	and	r18, r19
    1ff4:	fc 01       	movw	r30, r24
    1ff6:	20 83       	st	Z, r18
    1ff8:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <STEPS>
    1ffc:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <STEPS+0x1>
    2000:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <STEPS+0x2>
    2004:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <STEPS+0x3>
    2008:	01 97       	sbiw	r24, 0x01	; 1
    200a:	a1 09       	sbc	r26, r1
    200c:	b1 09       	sbc	r27, r1
    200e:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <STEPS>
    2012:	90 93 03 04 	sts	0x0403, r25	; 0x800403 <STEPS+0x1>
    2016:	a0 93 04 04 	sts	0x0404, r26	; 0x800404 <STEPS+0x2>
    201a:	b0 93 05 04 	sts	0x0405, r27	; 0x800405 <STEPS+0x3>
    201e:	00 00       	nop
    2020:	26 96       	adiw	r28, 0x06	; 6
    2022:	0f b6       	in	r0, 0x3f	; 63
    2024:	f8 94       	cli
    2026:	de bf       	out	0x3e, r29	; 62
    2028:	0f be       	out	0x3f, r0	; 63
    202a:	cd bf       	out	0x3d, r28	; 61
    202c:	df 91       	pop	r29
    202e:	cf 91       	pop	r28
    2030:	ff 91       	pop	r31
    2032:	ef 91       	pop	r30
    2034:	bf 91       	pop	r27
    2036:	af 91       	pop	r26
    2038:	9f 91       	pop	r25
    203a:	8f 91       	pop	r24
    203c:	7f 91       	pop	r23
    203e:	6f 91       	pop	r22
    2040:	5f 91       	pop	r21
    2042:	4f 91       	pop	r20
    2044:	3f 91       	pop	r19
    2046:	2f 91       	pop	r18
    2048:	0f 90       	pop	r0
    204a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    204e:	0f 90       	pop	r0
    2050:	1f 90       	pop	r1
    2052:	18 95       	reti

00002054 <_Z17spoolPulse_Vectorv>:
    2054:	cf 93       	push	r28
    2056:	df 93       	push	r29
    2058:	cd b7       	in	r28, 0x3d	; 61
    205a:	de b7       	in	r29, 0x3e	; 62
    205c:	0e 94 75 1d 	call	0x3aea	; 0x3aea <millis>
    2060:	dc 01       	movw	r26, r24
    2062:	cb 01       	movw	r24, r22
    2064:	80 93 fe 03 	sts	0x03FE, r24	; 0x8003fe <m>
    2068:	90 93 ff 03 	sts	0x03FF, r25	; 0x8003ff <m+0x1>
    206c:	a0 93 00 04 	sts	0x0400, r26	; 0x800400 <m+0x2>
    2070:	b0 93 01 04 	sts	0x0401, r27	; 0x800401 <m+0x3>
    2074:	20 91 fe 03 	lds	r18, 0x03FE	; 0x8003fe <m>
    2078:	30 91 ff 03 	lds	r19, 0x03FF	; 0x8003ff <m+0x1>
    207c:	40 91 00 04 	lds	r20, 0x0400	; 0x800400 <m+0x2>
    2080:	50 91 01 04 	lds	r21, 0x0401	; 0x800401 <m+0x3>
    2084:	80 91 fa 03 	lds	r24, 0x03FA	; 0x8003fa <_ZL11last_millis>
    2088:	90 91 fb 03 	lds	r25, 0x03FB	; 0x8003fb <_ZL11last_millis+0x1>
    208c:	a0 91 fc 03 	lds	r26, 0x03FC	; 0x8003fc <_ZL11last_millis+0x2>
    2090:	b0 91 fd 03 	lds	r27, 0x03FD	; 0x8003fd <_ZL11last_millis+0x3>
    2094:	28 17       	cp	r18, r24
    2096:	39 07       	cpc	r19, r25
    2098:	4a 07       	cpc	r20, r26
    209a:	5b 07       	cpc	r21, r27
    209c:	09 f4       	brne	.+2      	; 0x20a0 <_Z17spoolPulse_Vectorv+0x4c>
    209e:	6c c0       	rjmp	.+216    	; 0x2178 <_Z17spoolPulse_Vectorv+0x124>
    20a0:	80 91 fe 03 	lds	r24, 0x03FE	; 0x8003fe <m>
    20a4:	90 91 ff 03 	lds	r25, 0x03FF	; 0x8003ff <m+0x1>
    20a8:	a0 91 00 04 	lds	r26, 0x0400	; 0x800400 <m+0x2>
    20ac:	b0 91 01 04 	lds	r27, 0x0401	; 0x800401 <m+0x3>
    20b0:	80 93 fa 03 	sts	0x03FA, r24	; 0x8003fa <_ZL11last_millis>
    20b4:	90 93 fb 03 	sts	0x03FB, r25	; 0x8003fb <_ZL11last_millis+0x1>
    20b8:	a0 93 fc 03 	sts	0x03FC, r26	; 0x8003fc <_ZL11last_millis+0x2>
    20bc:	b0 93 fd 03 	sts	0x03FD, r27	; 0x8003fd <_ZL11last_millis+0x3>
    20c0:	80 91 e2 03 	lds	r24, 0x03E2	; 0x8003e2 <spoolPulses>
    20c4:	90 91 e3 03 	lds	r25, 0x03E3	; 0x8003e3 <spoolPulses+0x1>
    20c8:	a0 91 e4 03 	lds	r26, 0x03E4	; 0x8003e4 <spoolPulses+0x2>
    20cc:	b0 91 e5 03 	lds	r27, 0x03E5	; 0x8003e5 <spoolPulses+0x3>
    20d0:	21 e0       	ldi	r18, 0x01	; 1
    20d2:	89 2b       	or	r24, r25
    20d4:	8a 2b       	or	r24, r26
    20d6:	8b 2b       	or	r24, r27
    20d8:	09 f0       	breq	.+2      	; 0x20dc <_Z17spoolPulse_Vectorv+0x88>
    20da:	20 e0       	ldi	r18, 0x00	; 0
    20dc:	22 23       	and	r18, r18
    20de:	61 f0       	breq	.+24     	; 0x20f8 <_Z17spoolPulse_Vectorv+0xa4>
    20e0:	0e 94 75 1d 	call	0x3aea	; 0x3aea <millis>
    20e4:	dc 01       	movw	r26, r24
    20e6:	cb 01       	movw	r24, r22
    20e8:	80 93 e6 03 	sts	0x03E6, r24	; 0x8003e6 <spoolTime>
    20ec:	90 93 e7 03 	sts	0x03E7, r25	; 0x8003e7 <spoolTime+0x1>
    20f0:	a0 93 e8 03 	sts	0x03E8, r26	; 0x8003e8 <spoolTime+0x2>
    20f4:	b0 93 e9 03 	sts	0x03E9, r27	; 0x8003e9 <spoolTime+0x3>
    20f8:	80 91 e2 03 	lds	r24, 0x03E2	; 0x8003e2 <spoolPulses>
    20fc:	90 91 e3 03 	lds	r25, 0x03E3	; 0x8003e3 <spoolPulses+0x1>
    2100:	a0 91 e4 03 	lds	r26, 0x03E4	; 0x8003e4 <spoolPulses+0x2>
    2104:	b0 91 e5 03 	lds	r27, 0x03E5	; 0x8003e5 <spoolPulses+0x3>
    2108:	01 96       	adiw	r24, 0x01	; 1
    210a:	a1 1d       	adc	r26, r1
    210c:	b1 1d       	adc	r27, r1
    210e:	80 93 e2 03 	sts	0x03E2, r24	; 0x8003e2 <spoolPulses>
    2112:	90 93 e3 03 	sts	0x03E3, r25	; 0x8003e3 <spoolPulses+0x1>
    2116:	a0 93 e4 03 	sts	0x03E4, r26	; 0x8003e4 <spoolPulses+0x2>
    211a:	b0 93 e5 03 	sts	0x03E5, r27	; 0x8003e5 <spoolPulses+0x3>
    211e:	90 91 13 04 	lds	r25, 0x0413	; 0x800413 <tickFlag>
    2122:	81 e0       	ldi	r24, 0x01	; 1
    2124:	89 27       	eor	r24, r25
    2126:	88 23       	and	r24, r24
    2128:	71 f0       	breq	.+28     	; 0x2146 <_Z17spoolPulse_Vectorv+0xf2>
    212a:	80 91 e2 03 	lds	r24, 0x03E2	; 0x8003e2 <spoolPulses>
    212e:	90 91 e3 03 	lds	r25, 0x03E3	; 0x8003e3 <spoolPulses+0x1>
    2132:	a0 91 e4 03 	lds	r26, 0x03E4	; 0x8003e4 <spoolPulses+0x2>
    2136:	b0 91 e5 03 	lds	r27, 0x03E5	; 0x8003e5 <spoolPulses+0x3>
    213a:	0a 97       	sbiw	r24, 0x0a	; 10
    213c:	a1 05       	cpc	r26, r1
    213e:	b1 05       	cpc	r27, r1
    2140:	14 f0       	brlt	.+4      	; 0x2146 <_Z17spoolPulse_Vectorv+0xf2>
    2142:	81 e0       	ldi	r24, 0x01	; 1
    2144:	01 c0       	rjmp	.+2      	; 0x2148 <_Z17spoolPulse_Vectorv+0xf4>
    2146:	80 e0       	ldi	r24, 0x00	; 0
    2148:	88 23       	and	r24, r24
    214a:	19 f0       	breq	.+6      	; 0x2152 <_Z17spoolPulse_Vectorv+0xfe>
    214c:	81 e0       	ldi	r24, 0x01	; 1
    214e:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <tickFlag>
    2152:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <totalspoolTicks>
    2156:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <totalspoolTicks+0x1>
    215a:	a0 91 f4 03 	lds	r26, 0x03F4	; 0x8003f4 <totalspoolTicks+0x2>
    215e:	b0 91 f5 03 	lds	r27, 0x03F5	; 0x8003f5 <totalspoolTicks+0x3>
    2162:	01 96       	adiw	r24, 0x01	; 1
    2164:	a1 1d       	adc	r26, r1
    2166:	b1 1d       	adc	r27, r1
    2168:	80 93 f2 03 	sts	0x03F2, r24	; 0x8003f2 <totalspoolTicks>
    216c:	90 93 f3 03 	sts	0x03F3, r25	; 0x8003f3 <totalspoolTicks+0x1>
    2170:	a0 93 f4 03 	sts	0x03F4, r26	; 0x8003f4 <totalspoolTicks+0x2>
    2174:	b0 93 f5 03 	sts	0x03F5, r27	; 0x8003f5 <totalspoolTicks+0x3>
    2178:	00 00       	nop
    217a:	df 91       	pop	r29
    217c:	cf 91       	pop	r28
    217e:	08 95       	ret

00002180 <setup>:
    2180:	cf 93       	push	r28
    2182:	df 93       	push	r29
    2184:	00 d0       	rcall	.+0      	; 0x2186 <setup+0x6>
    2186:	cd b7       	in	r28, 0x3d	; 61
    2188:	de b7       	in	r29, 0x3e	; 62
    218a:	61 e0       	ldi	r22, 0x01	; 1
    218c:	83 e0       	ldi	r24, 0x03	; 3
    218e:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <pinMode>
    2192:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <_ZL18directionOutputPin>
    2196:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <_ZL18directionOutputPin+0x1>
    219a:	61 e0       	ldi	r22, 0x01	; 1
    219c:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <pinMode>
    21a0:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <_ZL14directionInput>
    21a4:	90 91 d1 01 	lds	r25, 0x01D1	; 0x8001d1 <_ZL14directionInput+0x1>
    21a8:	60 e0       	ldi	r22, 0x00	; 0
    21aa:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <pinMode>
    21ae:	60 e0       	ldi	r22, 0x00	; 0
    21b0:	86 e0       	ldi	r24, 0x06	; 6
    21b2:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <pinMode>
    21b6:	41 e0       	ldi	r20, 0x01	; 1
    21b8:	6a e2       	ldi	r22, 0x2A	; 42
    21ba:	70 e1       	ldi	r23, 0x10	; 16
    21bc:	86 e0       	ldi	r24, 0x06	; 6
    21be:	0e 94 fe 09 	call	0x13fc	; 0x13fc <_Z15enableInterrupthPFvvEh>
    21c2:	ce 01       	movw	r24, r28
    21c4:	01 96       	adiw	r24, 0x01	; 1
    21c6:	0e 94 8e 00 	call	0x11c	; 0x11c <_ZN17ADC_ConfigurationC1Ev>
    21ca:	ce 01       	movw	r24, r28
    21cc:	02 96       	adiw	r24, 0x02	; 2
    21ce:	0e 94 76 18 	call	0x30ec	; 0x30ec <_ZN25Step_Output_ConfigurationC1Ev>
    21d2:	0e 94 9b 00 	call	0x136	; 0x136 <_ZN17ADC_Configuration8SetupADCEv>
    21d6:	0e 94 83 18 	call	0x3106	; 0x3106 <_ZN25Step_Output_Configuration15SetupStepOutputEv>
    21da:	40 e0       	ldi	r20, 0x00	; 0
    21dc:	52 ec       	ldi	r21, 0xC2	; 194
    21de:	61 e0       	ldi	r22, 0x01	; 1
    21e0:	70 e0       	ldi	r23, 0x00	; 0
    21e2:	88 e1       	ldi	r24, 0x18	; 24
    21e4:	94 e0       	ldi	r25, 0x04	; 4
    21e6:	0e 94 db 09 	call	0x13b6	; 0x13b6 <_ZN14HardwareSerial5beginEm>
    21ea:	42 e3       	ldi	r20, 0x32	; 50
    21ec:	50 e0       	ldi	r21, 0x00	; 0
    21ee:	60 e0       	ldi	r22, 0x00	; 0
    21f0:	70 e0       	ldi	r23, 0x00	; 0
    21f2:	88 e1       	ldi	r24, 0x18	; 24
    21f4:	94 e0       	ldi	r25, 0x04	; 4
    21f6:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <_ZN6Stream10setTimeoutEm>
    21fa:	10 92 e8 01 	sts	0x01E8, r1	; 0x8001e8 <RUN_MODE>
    21fe:	ce 01       	movw	r24, r28
    2200:	02 96       	adiw	r24, 0x02	; 2
    2202:	0e 94 a2 18 	call	0x3144	; 0x3144 <_ZN25Step_Output_ConfigurationD1Ev>
    2206:	ce 01       	movw	r24, r28
    2208:	01 96       	adiw	r24, 0x01	; 1
    220a:	0e 94 be 00 	call	0x17c	; 0x17c <_ZN17ADC_ConfigurationD1Ev>
    220e:	00 00       	nop
    2210:	0f 90       	pop	r0
    2212:	0f 90       	pop	r0
    2214:	df 91       	pop	r29
    2216:	cf 91       	pop	r28
    2218:	08 95       	ret

0000221a <loop>:
    221a:	cf 92       	push	r12
    221c:	df 92       	push	r13
    221e:	ef 92       	push	r14
    2220:	ff 92       	push	r15
    2222:	0f 93       	push	r16
    2224:	1f 93       	push	r17
    2226:	cf 93       	push	r28
    2228:	df 93       	push	r29
    222a:	cd b7       	in	r28, 0x3d	; 61
    222c:	de b7       	in	r29, 0x3e	; 62
    222e:	2c 97       	sbiw	r28, 0x0c	; 12
    2230:	0f b6       	in	r0, 0x3f	; 63
    2232:	f8 94       	cli
    2234:	de bf       	out	0x3e, r29	; 62
    2236:	0f be       	out	0x3f, r0	; 63
    2238:	cd bf       	out	0x3d, r28	; 61
    223a:	86 e1       	ldi	r24, 0x16	; 22
    223c:	94 e0       	ldi	r25, 0x04	; 4
    223e:	0e 94 82 07 	call	0xf04	; 0xf04 <_ZN15Serial_Commands15commandsProcessEv>
    2242:	89 e2       	ldi	r24, 0x29	; 41
    2244:	90 e0       	ldi	r25, 0x00	; 0
    2246:	fc 01       	movw	r30, r24
    2248:	80 81       	ld	r24, Z
    224a:	88 2f       	mov	r24, r24
    224c:	90 e0       	ldi	r25, 0x00	; 0
    224e:	80 72       	andi	r24, 0x20	; 32
    2250:	99 27       	eor	r25, r25
    2252:	21 e0       	ldi	r18, 0x01	; 1
    2254:	89 2b       	or	r24, r25
    2256:	09 f4       	brne	.+2      	; 0x225a <loop+0x40>
    2258:	20 e0       	ldi	r18, 0x00	; 0
    225a:	20 93 e1 03 	sts	0x03E1, r18	; 0x8003e1 <directionInputState>
    225e:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <RUN_MODE>
    2262:	81 e0       	ldi	r24, 0x01	; 1
    2264:	92 30       	cpi	r25, 0x02	; 2
    2266:	09 f0       	breq	.+2      	; 0x226a <loop+0x50>
    2268:	80 e0       	ldi	r24, 0x00	; 0
    226a:	88 23       	and	r24, r24
    226c:	29 f1       	breq	.+74     	; 0x22b8 <loop+0x9e>
    226e:	80 91 0a 04 	lds	r24, 0x040A	; 0x80040a <TRAVERSE_RPM>
    2272:	90 91 0b 04 	lds	r25, 0x040B	; 0x80040b <TRAVERSE_RPM+0x1>
    2276:	a0 91 0c 04 	lds	r26, 0x040C	; 0x80040c <TRAVERSE_RPM+0x2>
    227a:	b0 91 0d 04 	lds	r27, 0x040D	; 0x80040d <TRAVERSE_RPM+0x3>
    227e:	20 91 dd 03 	lds	r18, 0x03DD	; 0x8003dd <traverse_rpm>
    2282:	30 91 de 03 	lds	r19, 0x03DE	; 0x8003de <traverse_rpm+0x1>
    2286:	40 91 df 03 	lds	r20, 0x03DF	; 0x8003df <traverse_rpm+0x2>
    228a:	50 91 e0 03 	lds	r21, 0x03E0	; 0x8003e0 <traverse_rpm+0x3>
    228e:	61 e0       	ldi	r22, 0x01	; 1
    2290:	82 17       	cp	r24, r18
    2292:	93 07       	cpc	r25, r19
    2294:	a4 07       	cpc	r26, r20
    2296:	b5 07       	cpc	r27, r21
    2298:	09 f4       	brne	.+2      	; 0x229c <loop+0x82>
    229a:	60 e0       	ldi	r22, 0x00	; 0
    229c:	66 23       	and	r22, r22
    229e:	61 f0       	breq	.+24     	; 0x22b8 <loop+0x9e>
    22a0:	80 91 0a 04 	lds	r24, 0x040A	; 0x80040a <TRAVERSE_RPM>
    22a4:	90 91 0b 04 	lds	r25, 0x040B	; 0x80040b <TRAVERSE_RPM+0x1>
    22a8:	a0 91 0c 04 	lds	r26, 0x040C	; 0x80040c <TRAVERSE_RPM+0x2>
    22ac:	b0 91 0d 04 	lds	r27, 0x040D	; 0x80040d <TRAVERSE_RPM+0x3>
    22b0:	bc 01       	movw	r22, r24
    22b2:	cd 01       	movw	r24, r26
    22b4:	0e 94 a8 17 	call	0x2f50	; 0x2f50 <_Z16Set_Traverse_RPMl>
    22b8:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <RUN_MODE>
    22bc:	81 e0       	ldi	r24, 0x01	; 1
    22be:	93 30       	cpi	r25, 0x03	; 3
    22c0:	09 f0       	breq	.+2      	; 0x22c4 <loop+0xaa>
    22c2:	80 e0       	ldi	r24, 0x00	; 0
    22c4:	88 23       	and	r24, r24
    22c6:	09 f4       	brne	.+2      	; 0x22ca <loop+0xb0>
    22c8:	75 c0       	rjmp	.+234    	; 0x23b4 <loop+0x19a>
    22ca:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <TRAVERSE_DIRECTION>
    22ce:	81 e0       	ldi	r24, 0x01	; 1
    22d0:	91 30       	cpi	r25, 0x01	; 1
    22d2:	09 f0       	breq	.+2      	; 0x22d6 <loop+0xbc>
    22d4:	80 e0       	ldi	r24, 0x00	; 0
    22d6:	88 23       	and	r24, r24
    22d8:	41 f1       	breq	.+80     	; 0x232a <loop+0x110>
    22da:	c0 90 0a 04 	lds	r12, 0x040A	; 0x80040a <TRAVERSE_RPM>
    22de:	d0 90 0b 04 	lds	r13, 0x040B	; 0x80040b <TRAVERSE_RPM+0x1>
    22e2:	e0 90 0c 04 	lds	r14, 0x040C	; 0x80040c <TRAVERSE_RPM+0x2>
    22e6:	f0 90 0d 04 	lds	r15, 0x040D	; 0x80040d <TRAVERSE_RPM+0x3>
    22ea:	20 91 e0 01 	lds	r18, 0x01E0	; 0x8001e0 <SPOOL_WIDTH>
    22ee:	30 91 e1 01 	lds	r19, 0x01E1	; 0x8001e1 <SPOOL_WIDTH+0x1>
    22f2:	40 91 e2 01 	lds	r20, 0x01E2	; 0x8001e2 <SPOOL_WIDTH+0x2>
    22f6:	50 91 e3 01 	lds	r21, 0x01E3	; 0x8001e3 <SPOOL_WIDTH+0x3>
    22fa:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
    22fe:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
    2302:	a0 91 de 01 	lds	r26, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
    2306:	b0 91 df 01 	lds	r27, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
    230a:	82 0f       	add	r24, r18
    230c:	93 1f       	adc	r25, r19
    230e:	a4 1f       	adc	r26, r20
    2310:	b5 1f       	adc	r27, r21
    2312:	bc 01       	movw	r22, r24
    2314:	cd 01       	movw	r24, r26
    2316:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <_Z9MMToStepsm>
    231a:	dc 01       	movw	r26, r24
    231c:	cb 01       	movw	r24, r22
    231e:	a7 01       	movw	r20, r14
    2320:	96 01       	movw	r18, r12
    2322:	bc 01       	movw	r22, r24
    2324:	cd 01       	movw	r24, r26
    2326:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <_Z20MoveAbsolutePositionmm>
    232a:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <TRAVERSE_DIRECTION>
    232e:	81 e0       	ldi	r24, 0x01	; 1
    2330:	99 23       	and	r25, r25
    2332:	09 f0       	breq	.+2      	; 0x2336 <loop+0x11c>
    2334:	80 e0       	ldi	r24, 0x00	; 0
    2336:	88 23       	and	r24, r24
    2338:	e1 f0       	breq	.+56     	; 0x2372 <loop+0x158>
    233a:	c0 90 0a 04 	lds	r12, 0x040A	; 0x80040a <TRAVERSE_RPM>
    233e:	d0 90 0b 04 	lds	r13, 0x040B	; 0x80040b <TRAVERSE_RPM+0x1>
    2342:	e0 90 0c 04 	lds	r14, 0x040C	; 0x80040c <TRAVERSE_RPM+0x2>
    2346:	f0 90 0d 04 	lds	r15, 0x040D	; 0x80040d <TRAVERSE_RPM+0x3>
    234a:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
    234e:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
    2352:	a0 91 de 01 	lds	r26, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
    2356:	b0 91 df 01 	lds	r27, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
    235a:	bc 01       	movw	r22, r24
    235c:	cd 01       	movw	r24, r26
    235e:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <_Z9MMToStepsm>
    2362:	dc 01       	movw	r26, r24
    2364:	cb 01       	movw	r24, r22
    2366:	a7 01       	movw	r20, r14
    2368:	96 01       	movw	r18, r12
    236a:	bc 01       	movw	r22, r24
    236c:	cd 01       	movw	r24, r26
    236e:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <_Z20MoveAbsolutePositionmm>
    2372:	20 91 02 04 	lds	r18, 0x0402	; 0x800402 <STEPS>
    2376:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <STEPS+0x1>
    237a:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <STEPS+0x2>
    237e:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <STEPS+0x3>
    2382:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <DESIRED_POSITION>
    2386:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    238a:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    238e:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    2392:	61 e0       	ldi	r22, 0x01	; 1
    2394:	28 17       	cp	r18, r24
    2396:	39 07       	cpc	r19, r25
    2398:	4a 07       	cpc	r20, r26
    239a:	5b 07       	cpc	r21, r27
    239c:	09 f0       	breq	.+2      	; 0x23a0 <loop+0x186>
    239e:	60 e0       	ldi	r22, 0x00	; 0
    23a0:	66 23       	and	r22, r22
    23a2:	41 f0       	breq	.+16     	; 0x23b4 <loop+0x19a>
    23a4:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <TRAVERSE_DIRECTION>
    23a8:	81 e0       	ldi	r24, 0x01	; 1
    23aa:	91 30       	cpi	r25, 0x01	; 1
    23ac:	09 f4       	brne	.+2      	; 0x23b0 <loop+0x196>
    23ae:	80 e0       	ldi	r24, 0x00	; 0
    23b0:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <TRAVERSE_DIRECTION>
    23b4:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <RUN_MODE>
    23b8:	81 e0       	ldi	r24, 0x01	; 1
    23ba:	94 30       	cpi	r25, 0x04	; 4
    23bc:	09 f0       	breq	.+2      	; 0x23c0 <loop+0x1a6>
    23be:	80 e0       	ldi	r24, 0x00	; 0
    23c0:	88 23       	and	r24, r24
    23c2:	09 f4       	brne	.+2      	; 0x23c6 <loop+0x1ac>
    23c4:	b1 c2       	rjmp	.+1378   	; 0x2928 <loop+0x70e>
    23c6:	90 91 14 04 	lds	r25, 0x0414	; 0x800414 <previousCaptureState>
    23ca:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <FILAMENT_CAPTURE>
    23ce:	98 17       	cp	r25, r24
    23d0:	31 f4       	brne	.+12     	; 0x23de <loop+0x1c4>
    23d2:	90 91 15 04 	lds	r25, 0x0415	; 0x800415 <previousStartPosition>
    23d6:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <START_POSITION>
    23da:	98 17       	cp	r25, r24
    23dc:	11 f0       	breq	.+4      	; 0x23e2 <loop+0x1c8>
    23de:	81 e0       	ldi	r24, 0x01	; 1
    23e0:	01 c0       	rjmp	.+2      	; 0x23e4 <loop+0x1ca>
    23e2:	80 e0       	ldi	r24, 0x00	; 0
    23e4:	88 23       	and	r24, r24
    23e6:	09 f4       	brne	.+2      	; 0x23ea <loop+0x1d0>
    23e8:	c5 c0       	rjmp	.+394    	; 0x2574 <loop+0x35a>
    23ea:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <FILAMENT_CAPTURE>
    23ee:	81 e0       	ldi	r24, 0x01	; 1
    23f0:	89 27       	eor	r24, r25
    23f2:	88 23       	and	r24, r24
    23f4:	09 f4       	brne	.+2      	; 0x23f8 <loop+0x1de>
    23f6:	ba c0       	rjmp	.+372    	; 0x256c <loop+0x352>
    23f8:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <START_POSITION>
    23fc:	88 2f       	mov	r24, r24
    23fe:	90 e0       	ldi	r25, 0x00	; 0
    2400:	81 30       	cpi	r24, 0x01	; 1
    2402:	91 05       	cpc	r25, r1
    2404:	09 f1       	breq	.+66     	; 0x2448 <loop+0x22e>
    2406:	82 30       	cpi	r24, 0x02	; 2
    2408:	91 05       	cpc	r25, r1
    240a:	09 f4       	brne	.+2      	; 0x240e <loop+0x1f4>
    240c:	8a c0       	rjmp	.+276    	; 0x2522 <loop+0x308>
    240e:	89 2b       	or	r24, r25
    2410:	09 f0       	breq	.+2      	; 0x2414 <loop+0x1fa>
    2412:	ac c0       	rjmp	.+344    	; 0x256c <loop+0x352>
    2414:	81 e0       	ldi	r24, 0x01	; 1
    2416:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <TRAVERSE_DIRECTION>
    241a:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
    241e:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
    2422:	a0 91 de 01 	lds	r26, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
    2426:	b0 91 df 01 	lds	r27, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
    242a:	bc 01       	movw	r22, r24
    242c:	cd 01       	movw	r24, r26
    242e:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <_Z9MMToStepsm>
    2432:	dc 01       	movw	r26, r24
    2434:	cb 01       	movw	r24, r22
    2436:	28 e5       	ldi	r18, 0x58	; 88
    2438:	32 e0       	ldi	r19, 0x02	; 2
    243a:	40 e0       	ldi	r20, 0x00	; 0
    243c:	50 e0       	ldi	r21, 0x00	; 0
    243e:	bc 01       	movw	r22, r24
    2440:	cd 01       	movw	r24, r26
    2442:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <_Z20MoveAbsolutePositionmm>
    2446:	92 c0       	rjmp	.+292    	; 0x256c <loop+0x352>
    2448:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <TRAVERSE_DIRECTION>
    244c:	20 91 e0 01 	lds	r18, 0x01E0	; 0x8001e0 <SPOOL_WIDTH>
    2450:	30 91 e1 01 	lds	r19, 0x01E1	; 0x8001e1 <SPOOL_WIDTH+0x1>
    2454:	40 91 e2 01 	lds	r20, 0x01E2	; 0x8001e2 <SPOOL_WIDTH+0x2>
    2458:	50 91 e3 01 	lds	r21, 0x01E3	; 0x8001e3 <SPOOL_WIDTH+0x3>
    245c:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
    2460:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
    2464:	a0 91 de 01 	lds	r26, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
    2468:	b0 91 df 01 	lds	r27, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
    246c:	79 01       	movw	r14, r18
    246e:	8a 01       	movw	r16, r20
    2470:	e8 1a       	sub	r14, r24
    2472:	f9 0a       	sbc	r15, r25
    2474:	0a 0b       	sbc	r16, r26
    2476:	1b 0b       	sbc	r17, r27
    2478:	d8 01       	movw	r26, r16
    247a:	c7 01       	movw	r24, r14
    247c:	02 97       	sbiw	r24, 0x02	; 2
    247e:	a1 05       	cpc	r26, r1
    2480:	b1 05       	cpc	r27, r1
    2482:	e8 f0       	brcs	.+58     	; 0x24be <loop+0x2a4>
    2484:	20 91 e0 01 	lds	r18, 0x01E0	; 0x8001e0 <SPOOL_WIDTH>
    2488:	30 91 e1 01 	lds	r19, 0x01E1	; 0x8001e1 <SPOOL_WIDTH+0x1>
    248c:	40 91 e2 01 	lds	r20, 0x01E2	; 0x8001e2 <SPOOL_WIDTH+0x2>
    2490:	50 91 e3 01 	lds	r21, 0x01E3	; 0x8001e3 <SPOOL_WIDTH+0x3>
    2494:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
    2498:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
    249c:	a0 91 de 01 	lds	r26, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
    24a0:	b0 91 df 01 	lds	r27, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
    24a4:	79 01       	movw	r14, r18
    24a6:	8a 01       	movw	r16, r20
    24a8:	e8 1a       	sub	r14, r24
    24aa:	f9 0a       	sbc	r15, r25
    24ac:	0a 0b       	sbc	r16, r26
    24ae:	1b 0b       	sbc	r17, r27
    24b0:	d8 01       	movw	r26, r16
    24b2:	c7 01       	movw	r24, r14
    24b4:	b6 95       	lsr	r27
    24b6:	a7 95       	ror	r26
    24b8:	97 95       	ror	r25
    24ba:	87 95       	ror	r24
    24bc:	23 c0       	rjmp	.+70     	; 0x2504 <loop+0x2ea>
    24be:	20 91 e0 01 	lds	r18, 0x01E0	; 0x8001e0 <SPOOL_WIDTH>
    24c2:	30 91 e1 01 	lds	r19, 0x01E1	; 0x8001e1 <SPOOL_WIDTH+0x1>
    24c6:	40 91 e2 01 	lds	r20, 0x01E2	; 0x8001e2 <SPOOL_WIDTH+0x2>
    24ca:	50 91 e3 01 	lds	r21, 0x01E3	; 0x8001e3 <SPOOL_WIDTH+0x3>
    24ce:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
    24d2:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
    24d6:	a0 91 de 01 	lds	r26, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
    24da:	b0 91 df 01 	lds	r27, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
    24de:	79 01       	movw	r14, r18
    24e0:	8a 01       	movw	r16, r20
    24e2:	e8 1a       	sub	r14, r24
    24e4:	f9 0a       	sbc	r15, r25
    24e6:	0a 0b       	sbc	r16, r26
    24e8:	1b 0b       	sbc	r17, r27
    24ea:	d8 01       	movw	r26, r16
    24ec:	c7 01       	movw	r24, r14
    24ee:	b6 95       	lsr	r27
    24f0:	a7 95       	ror	r26
    24f2:	97 95       	ror	r25
    24f4:	87 95       	ror	r24
    24f6:	b0 95       	com	r27
    24f8:	a0 95       	com	r26
    24fa:	90 95       	com	r25
    24fc:	81 95       	neg	r24
    24fe:	9f 4f       	sbci	r25, 0xFF	; 255
    2500:	af 4f       	sbci	r26, 0xFF	; 255
    2502:	bf 4f       	sbci	r27, 0xFF	; 255
    2504:	bc 01       	movw	r22, r24
    2506:	cd 01       	movw	r24, r26
    2508:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <_Z9MMToStepsm>
    250c:	dc 01       	movw	r26, r24
    250e:	cb 01       	movw	r24, r22
    2510:	28 e5       	ldi	r18, 0x58	; 88
    2512:	32 e0       	ldi	r19, 0x02	; 2
    2514:	40 e0       	ldi	r20, 0x00	; 0
    2516:	50 e0       	ldi	r21, 0x00	; 0
    2518:	bc 01       	movw	r22, r24
    251a:	cd 01       	movw	r24, r26
    251c:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <_Z20MoveAbsolutePositionmm>
    2520:	25 c0       	rjmp	.+74     	; 0x256c <loop+0x352>
    2522:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <TRAVERSE_DIRECTION>
    2526:	20 91 dc 01 	lds	r18, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
    252a:	30 91 dd 01 	lds	r19, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
    252e:	40 91 de 01 	lds	r20, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
    2532:	50 91 df 01 	lds	r21, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
    2536:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <SPOOL_WIDTH>
    253a:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <SPOOL_WIDTH+0x1>
    253e:	a0 91 e2 01 	lds	r26, 0x01E2	; 0x8001e2 <SPOOL_WIDTH+0x2>
    2542:	b0 91 e3 01 	lds	r27, 0x01E3	; 0x8001e3 <SPOOL_WIDTH+0x3>
    2546:	82 0f       	add	r24, r18
    2548:	93 1f       	adc	r25, r19
    254a:	a4 1f       	adc	r26, r20
    254c:	b5 1f       	adc	r27, r21
    254e:	bc 01       	movw	r22, r24
    2550:	cd 01       	movw	r24, r26
    2552:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <_Z9MMToStepsm>
    2556:	dc 01       	movw	r26, r24
    2558:	cb 01       	movw	r24, r22
    255a:	28 e5       	ldi	r18, 0x58	; 88
    255c:	32 e0       	ldi	r19, 0x02	; 2
    255e:	40 e0       	ldi	r20, 0x00	; 0
    2560:	50 e0       	ldi	r21, 0x00	; 0
    2562:	bc 01       	movw	r22, r24
    2564:	cd 01       	movw	r24, r26
    2566:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <_Z20MoveAbsolutePositionmm>
    256a:	00 00       	nop
    256c:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <FILAMENT_CAPTURE>
    2570:	80 93 14 04 	sts	0x0414, r24	; 0x800414 <previousCaptureState>
    2574:	0e 94 75 1d 	call	0x3aea	; 0x3aea <millis>
    2578:	7b 01       	movw	r14, r22
    257a:	8c 01       	movw	r16, r24
    257c:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <fullAutoUpdateInterval>
    2580:	90 91 db 01 	lds	r25, 0x01DB	; 0x8001db <fullAutoUpdateInterval+0x1>
    2584:	9c 01       	movw	r18, r24
    2586:	99 0f       	add	r25, r25
    2588:	44 0b       	sbc	r20, r20
    258a:	55 0b       	sbc	r21, r21
    258c:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <previousFullAutoTime>
    2590:	90 91 eb 03 	lds	r25, 0x03EB	; 0x8003eb <previousFullAutoTime+0x1>
    2594:	a0 91 ec 03 	lds	r26, 0x03EC	; 0x8003ec <previousFullAutoTime+0x2>
    2598:	b0 91 ed 03 	lds	r27, 0x03ED	; 0x8003ed <previousFullAutoTime+0x3>
    259c:	82 0f       	add	r24, r18
    259e:	93 1f       	adc	r25, r19
    25a0:	a4 1f       	adc	r26, r20
    25a2:	b5 1f       	adc	r27, r21
    25a4:	8e 15       	cp	r24, r14
    25a6:	9f 05       	cpc	r25, r15
    25a8:	a0 07       	cpc	r26, r16
    25aa:	b1 07       	cpc	r27, r17
    25ac:	30 f4       	brcc	.+12     	; 0x25ba <loop+0x3a0>
    25ae:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <FILAMENT_CAPTURE>
    25b2:	88 23       	and	r24, r24
    25b4:	11 f0       	breq	.+4      	; 0x25ba <loop+0x3a0>
    25b6:	81 e0       	ldi	r24, 0x01	; 1
    25b8:	01 c0       	rjmp	.+2      	; 0x25bc <loop+0x3a2>
    25ba:	80 e0       	ldi	r24, 0x00	; 0
    25bc:	88 23       	and	r24, r24
    25be:	09 f4       	brne	.+2      	; 0x25c2 <loop+0x3a8>
    25c0:	b3 c1       	rjmp	.+870    	; 0x2928 <loop+0x70e>
    25c2:	90 91 11 04 	lds	r25, 0x0411	; 0x800411 <MOVE_TO_END>
    25c6:	81 e0       	ldi	r24, 0x01	; 1
    25c8:	89 27       	eor	r24, r25
    25ca:	88 23       	and	r24, r24
    25cc:	09 f4       	brne	.+2      	; 0x25d0 <loop+0x3b6>
    25ce:	40 c1       	rjmp	.+640    	; 0x2850 <loop+0x636>
    25d0:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
    25d4:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
    25d8:	a0 91 de 01 	lds	r26, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
    25dc:	b0 91 df 01 	lds	r27, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
    25e0:	bc 01       	movw	r22, r24
    25e2:	cd 01       	movw	r24, r26
    25e4:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <_Z9MMToStepsm>
    25e8:	dc 01       	movw	r26, r24
    25ea:	cb 01       	movw	r24, r22
    25ec:	9c 01       	movw	r18, r24
    25ee:	ad 01       	movw	r20, r26
    25f0:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <STEPS>
    25f4:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <STEPS+0x1>
    25f8:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <STEPS+0x2>
    25fc:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <STEPS+0x3>
    2600:	61 e0       	ldi	r22, 0x01	; 1
    2602:	82 17       	cp	r24, r18
    2604:	93 07       	cpc	r25, r19
    2606:	a4 07       	cpc	r26, r20
    2608:	b5 07       	cpc	r27, r21
    260a:	0c f0       	brlt	.+2      	; 0x260e <loop+0x3f4>
    260c:	60 e0       	ldi	r22, 0x00	; 0
    260e:	66 23       	and	r22, r22
    2610:	51 f1       	breq	.+84     	; 0x2666 <loop+0x44c>
    2612:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
    2616:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
    261a:	a0 91 de 01 	lds	r26, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
    261e:	b0 91 df 01 	lds	r27, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
    2622:	bc 01       	movw	r22, r24
    2624:	cd 01       	movw	r24, r26
    2626:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <_Z9MMToStepsm>
    262a:	dc 01       	movw	r26, r24
    262c:	cb 01       	movw	r24, r22
    262e:	28 e5       	ldi	r18, 0x58	; 88
    2630:	32 e0       	ldi	r19, 0x02	; 2
    2632:	40 e0       	ldi	r20, 0x00	; 0
    2634:	50 e0       	ldi	r21, 0x00	; 0
    2636:	bc 01       	movw	r22, r24
    2638:	cd 01       	movw	r24, r26
    263a:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <_Z20MoveAbsolutePositionmm>
    263e:	81 e0       	ldi	r24, 0x01	; 1
    2640:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <TRAVERSE_DIRECTION>
    2644:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <previousSpoolTicks>
    2648:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <previousSpoolTicks+0x1>
    264c:	10 92 f8 03 	sts	0x03F8, r1	; 0x8003f8 <previousSpoolTicks+0x2>
    2650:	10 92 f9 03 	sts	0x03F9, r1	; 0x8003f9 <previousSpoolTicks+0x3>
    2654:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <totalspoolTicks>
    2658:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <totalspoolTicks+0x1>
    265c:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <totalspoolTicks+0x2>
    2660:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <totalspoolTicks+0x3>
    2664:	55 c1       	rjmp	.+682    	; 0x2910 <loop+0x6f6>
    2666:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <FILAMENT_DIAMETER>
    266a:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <FILAMENT_DIAMETER+0x1>
    266e:	a0 91 e6 01 	lds	r26, 0x01E6	; 0x8001e6 <FILAMENT_DIAMETER+0x2>
    2672:	b0 91 e7 01 	lds	r27, 0x01E7	; 0x8001e7 <FILAMENT_DIAMETER+0x3>
    2676:	bc 01       	movw	r22, r24
    2678:	cd 01       	movw	r24, r26
    267a:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <_Z9MMToStepsm>
    267e:	dc 01       	movw	r26, r24
    2680:	cb 01       	movw	r24, r22
    2682:	24 e6       	ldi	r18, 0x64	; 100
    2684:	30 e0       	ldi	r19, 0x00	; 0
    2686:	40 e0       	ldi	r20, 0x00	; 0
    2688:	50 e0       	ldi	r21, 0x00	; 0
    268a:	bc 01       	movw	r22, r24
    268c:	cd 01       	movw	r24, r26
    268e:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <__udivmodsi4>
    2692:	da 01       	movw	r26, r20
    2694:	c9 01       	movw	r24, r18
    2696:	89 83       	std	Y+1, r24	; 0x01
    2698:	9a 83       	std	Y+2, r25	; 0x02
    269a:	ab 83       	std	Y+3, r26	; 0x03
    269c:	bc 83       	std	Y+4, r27	; 0x04
    269e:	20 91 f2 03 	lds	r18, 0x03F2	; 0x8003f2 <totalspoolTicks>
    26a2:	30 91 f3 03 	lds	r19, 0x03F3	; 0x8003f3 <totalspoolTicks+0x1>
    26a6:	40 91 f4 03 	lds	r20, 0x03F4	; 0x8003f4 <totalspoolTicks+0x2>
    26aa:	50 91 f5 03 	lds	r21, 0x03F5	; 0x8003f5 <totalspoolTicks+0x3>
    26ae:	80 91 f6 03 	lds	r24, 0x03F6	; 0x8003f6 <previousSpoolTicks>
    26b2:	90 91 f7 03 	lds	r25, 0x03F7	; 0x8003f7 <previousSpoolTicks+0x1>
    26b6:	a0 91 f8 03 	lds	r26, 0x03F8	; 0x8003f8 <previousSpoolTicks+0x2>
    26ba:	b0 91 f9 03 	lds	r27, 0x03F9	; 0x8003f9 <previousSpoolTicks+0x3>
    26be:	79 01       	movw	r14, r18
    26c0:	8a 01       	movw	r16, r20
    26c2:	e8 1a       	sub	r14, r24
    26c4:	f9 0a       	sbc	r15, r25
    26c6:	0a 0b       	sbc	r16, r26
    26c8:	1b 0b       	sbc	r17, r27
    26ca:	d8 01       	movw	r26, r16
    26cc:	c7 01       	movw	r24, r14
    26ce:	8d 83       	std	Y+5, r24	; 0x05
    26d0:	9e 83       	std	Y+6, r25	; 0x06
    26d2:	af 83       	std	Y+7, r26	; 0x07
    26d4:	b8 87       	std	Y+8, r27	; 0x08
    26d6:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <TRAVERSE_DIRECTION>
    26da:	81 e0       	ldi	r24, 0x01	; 1
    26dc:	91 30       	cpi	r25, 0x01	; 1
    26de:	09 f0       	breq	.+2      	; 0x26e2 <loop+0x4c8>
    26e0:	80 e0       	ldi	r24, 0x00	; 0
    26e2:	88 23       	and	r24, r24
    26e4:	89 f1       	breq	.+98     	; 0x2748 <loop+0x52e>
    26e6:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <SPOOLRPM>
    26ea:	90 91 0f 04 	lds	r25, 0x040F	; 0x80040f <SPOOLRPM+0x1>
    26ee:	cc 01       	movw	r24, r24
    26f0:	a0 e0       	ldi	r26, 0x00	; 0
    26f2:	b0 e0       	ldi	r27, 0x00	; 0
    26f4:	bc 01       	movw	r22, r24
    26f6:	cd 01       	movw	r24, r26
    26f8:	0e 94 e5 18 	call	0x31ca	; 0x31ca <__floatunsisf>
    26fc:	dc 01       	movw	r26, r24
    26fe:	cb 01       	movw	r24, r22
    2700:	20 e0       	ldi	r18, 0x00	; 0
    2702:	30 e0       	ldi	r19, 0x00	; 0
    2704:	40 ee       	ldi	r20, 0xE0	; 224
    2706:	5f e3       	ldi	r21, 0x3F	; 63
    2708:	bc 01       	movw	r22, r24
    270a:	cd 01       	movw	r24, r26
    270c:	0e 94 73 19 	call	0x32e6	; 0x32e6 <__mulsf3>
    2710:	dc 01       	movw	r26, r24
    2712:	cb 01       	movw	r24, r22
    2714:	bc 01       	movw	r22, r24
    2716:	cd 01       	movw	r24, r26
    2718:	0e 94 af 18 	call	0x315e	; 0x315e <__fixsfsi>
    271c:	7b 01       	movw	r14, r22
    271e:	8c 01       	movw	r16, r24
    2720:	2d 81       	ldd	r18, Y+5	; 0x05
    2722:	3e 81       	ldd	r19, Y+6	; 0x06
    2724:	4f 81       	ldd	r20, Y+7	; 0x07
    2726:	58 85       	ldd	r21, Y+8	; 0x08
    2728:	89 81       	ldd	r24, Y+1	; 0x01
    272a:	9a 81       	ldd	r25, Y+2	; 0x02
    272c:	ab 81       	ldd	r26, Y+3	; 0x03
    272e:	bc 81       	ldd	r27, Y+4	; 0x04
    2730:	bc 01       	movw	r22, r24
    2732:	cd 01       	movw	r24, r26
    2734:	0e 94 f8 1d 	call	0x3bf0	; 0x3bf0 <__mulsi3>
    2738:	dc 01       	movw	r26, r24
    273a:	cb 01       	movw	r24, r22
    273c:	a8 01       	movw	r20, r16
    273e:	97 01       	movw	r18, r14
    2740:	bc 01       	movw	r22, r24
    2742:	cd 01       	movw	r24, r26
    2744:	0e 94 82 15 	call	0x2b04	; 0x2b04 <_Z20MoveRelativePositionll>
    2748:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <TRAVERSE_DIRECTION>
    274c:	81 e0       	ldi	r24, 0x01	; 1
    274e:	99 23       	and	r25, r25
    2750:	09 f0       	breq	.+2      	; 0x2754 <loop+0x53a>
    2752:	80 e0       	ldi	r24, 0x00	; 0
    2754:	88 23       	and	r24, r24
    2756:	c1 f1       	breq	.+112    	; 0x27c8 <loop+0x5ae>
    2758:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <SPOOLRPM>
    275c:	90 91 0f 04 	lds	r25, 0x040F	; 0x80040f <SPOOLRPM+0x1>
    2760:	cc 01       	movw	r24, r24
    2762:	a0 e0       	ldi	r26, 0x00	; 0
    2764:	b0 e0       	ldi	r27, 0x00	; 0
    2766:	bc 01       	movw	r22, r24
    2768:	cd 01       	movw	r24, r26
    276a:	0e 94 e5 18 	call	0x31ca	; 0x31ca <__floatunsisf>
    276e:	dc 01       	movw	r26, r24
    2770:	cb 01       	movw	r24, r22
    2772:	20 e0       	ldi	r18, 0x00	; 0
    2774:	30 e0       	ldi	r19, 0x00	; 0
    2776:	40 ee       	ldi	r20, 0xE0	; 224
    2778:	5f e3       	ldi	r21, 0x3F	; 63
    277a:	bc 01       	movw	r22, r24
    277c:	cd 01       	movw	r24, r26
    277e:	0e 94 73 19 	call	0x32e6	; 0x32e6 <__mulsf3>
    2782:	dc 01       	movw	r26, r24
    2784:	cb 01       	movw	r24, r22
    2786:	bc 01       	movw	r22, r24
    2788:	cd 01       	movw	r24, r26
    278a:	0e 94 af 18 	call	0x315e	; 0x315e <__fixsfsi>
    278e:	7b 01       	movw	r14, r22
    2790:	8c 01       	movw	r16, r24
    2792:	2d 81       	ldd	r18, Y+5	; 0x05
    2794:	3e 81       	ldd	r19, Y+6	; 0x06
    2796:	4f 81       	ldd	r20, Y+7	; 0x07
    2798:	58 85       	ldd	r21, Y+8	; 0x08
    279a:	89 81       	ldd	r24, Y+1	; 0x01
    279c:	9a 81       	ldd	r25, Y+2	; 0x02
    279e:	ab 81       	ldd	r26, Y+3	; 0x03
    27a0:	bc 81       	ldd	r27, Y+4	; 0x04
    27a2:	bc 01       	movw	r22, r24
    27a4:	cd 01       	movw	r24, r26
    27a6:	0e 94 f8 1d 	call	0x3bf0	; 0x3bf0 <__mulsi3>
    27aa:	dc 01       	movw	r26, r24
    27ac:	cb 01       	movw	r24, r22
    27ae:	b0 95       	com	r27
    27b0:	a0 95       	com	r26
    27b2:	90 95       	com	r25
    27b4:	81 95       	neg	r24
    27b6:	9f 4f       	sbci	r25, 0xFF	; 255
    27b8:	af 4f       	sbci	r26, 0xFF	; 255
    27ba:	bf 4f       	sbci	r27, 0xFF	; 255
    27bc:	a8 01       	movw	r20, r16
    27be:	97 01       	movw	r18, r14
    27c0:	bc 01       	movw	r22, r24
    27c2:	cd 01       	movw	r24, r26
    27c4:	0e 94 82 15 	call	0x2b04	; 0x2b04 <_Z20MoveRelativePositionll>
    27c8:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
    27cc:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
    27d0:	a0 91 de 01 	lds	r26, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
    27d4:	b0 91 df 01 	lds	r27, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
    27d8:	bc 01       	movw	r22, r24
    27da:	cd 01       	movw	r24, r26
    27dc:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <_Z9MMToStepsm>
    27e0:	6b 01       	movw	r12, r22
    27e2:	7c 01       	movw	r14, r24
    27e4:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <SPOOL_WIDTH>
    27e8:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <SPOOL_WIDTH+0x1>
    27ec:	a0 91 e2 01 	lds	r26, 0x01E2	; 0x8001e2 <SPOOL_WIDTH+0x2>
    27f0:	b0 91 e3 01 	lds	r27, 0x01E3	; 0x8001e3 <SPOOL_WIDTH+0x3>
    27f4:	bc 01       	movw	r22, r24
    27f6:	cd 01       	movw	r24, r26
    27f8:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <_Z9MMToStepsm>
    27fc:	dc 01       	movw	r26, r24
    27fe:	cb 01       	movw	r24, r22
    2800:	8c 0d       	add	r24, r12
    2802:	9d 1d       	adc	r25, r13
    2804:	ae 1d       	adc	r26, r14
    2806:	bf 1d       	adc	r27, r15
    2808:	20 91 02 04 	lds	r18, 0x0402	; 0x800402 <STEPS>
    280c:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <STEPS+0x1>
    2810:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <STEPS+0x2>
    2814:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <STEPS+0x3>
    2818:	61 e0       	ldi	r22, 0x01	; 1
    281a:	28 17       	cp	r18, r24
    281c:	39 07       	cpc	r19, r25
    281e:	4a 07       	cpc	r20, r26
    2820:	5b 07       	cpc	r21, r27
    2822:	08 f4       	brcc	.+2      	; 0x2826 <loop+0x60c>
    2824:	60 e0       	ldi	r22, 0x00	; 0
    2826:	66 23       	and	r22, r22
    2828:	11 f0       	breq	.+4      	; 0x282e <loop+0x614>
    282a:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <TRAVERSE_DIRECTION>
    282e:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <totalspoolTicks>
    2832:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <totalspoolTicks+0x1>
    2836:	a0 91 f4 03 	lds	r26, 0x03F4	; 0x8003f4 <totalspoolTicks+0x2>
    283a:	b0 91 f5 03 	lds	r27, 0x03F5	; 0x8003f5 <totalspoolTicks+0x3>
    283e:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <previousSpoolTicks>
    2842:	90 93 f7 03 	sts	0x03F7, r25	; 0x8003f7 <previousSpoolTicks+0x1>
    2846:	a0 93 f8 03 	sts	0x03F8, r26	; 0x8003f8 <previousSpoolTicks+0x2>
    284a:	b0 93 f9 03 	sts	0x03F9, r27	; 0x8003f9 <previousSpoolTicks+0x3>
    284e:	60 c0       	rjmp	.+192    	; 0x2910 <loop+0x6f6>
    2850:	20 91 e0 01 	lds	r18, 0x01E0	; 0x8001e0 <SPOOL_WIDTH>
    2854:	30 91 e1 01 	lds	r19, 0x01E1	; 0x8001e1 <SPOOL_WIDTH+0x1>
    2858:	40 91 e2 01 	lds	r20, 0x01E2	; 0x8001e2 <SPOOL_WIDTH+0x2>
    285c:	50 91 e3 01 	lds	r21, 0x01E3	; 0x8001e3 <SPOOL_WIDTH+0x3>
    2860:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
    2864:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
    2868:	a0 91 de 01 	lds	r26, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
    286c:	b0 91 df 01 	lds	r27, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
    2870:	82 0f       	add	r24, r18
    2872:	93 1f       	adc	r25, r19
    2874:	a4 1f       	adc	r26, r20
    2876:	b5 1f       	adc	r27, r21
    2878:	bc 01       	movw	r22, r24
    287a:	cd 01       	movw	r24, r26
    287c:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <_Z9MMToStepsm>
    2880:	dc 01       	movw	r26, r24
    2882:	cb 01       	movw	r24, r22
    2884:	28 e5       	ldi	r18, 0x58	; 88
    2886:	32 e0       	ldi	r19, 0x02	; 2
    2888:	40 e0       	ldi	r20, 0x00	; 0
    288a:	50 e0       	ldi	r21, 0x00	; 0
    288c:	bc 01       	movw	r22, r24
    288e:	cd 01       	movw	r24, r26
    2890:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <_Z20MoveAbsolutePositionmm>
    2894:	20 91 02 04 	lds	r18, 0x0402	; 0x800402 <STEPS>
    2898:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <STEPS+0x1>
    289c:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <STEPS+0x2>
    28a0:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <STEPS+0x3>
    28a4:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <DESIRED_POSITION>
    28a8:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    28ac:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    28b0:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    28b4:	61 e0       	ldi	r22, 0x01	; 1
    28b6:	28 17       	cp	r18, r24
    28b8:	39 07       	cpc	r19, r25
    28ba:	4a 07       	cpc	r20, r26
    28bc:	5b 07       	cpc	r21, r27
    28be:	09 f4       	brne	.+2      	; 0x28c2 <loop+0x6a8>
    28c0:	60 e0       	ldi	r22, 0x00	; 0
    28c2:	66 23       	and	r22, r22
    28c4:	19 f1       	breq	.+70     	; 0x290c <loop+0x6f2>
    28c6:	20 91 e0 01 	lds	r18, 0x01E0	; 0x8001e0 <SPOOL_WIDTH>
    28ca:	30 91 e1 01 	lds	r19, 0x01E1	; 0x8001e1 <SPOOL_WIDTH+0x1>
    28ce:	40 91 e2 01 	lds	r20, 0x01E2	; 0x8001e2 <SPOOL_WIDTH+0x2>
    28d2:	50 91 e3 01 	lds	r21, 0x01E3	; 0x8001e3 <SPOOL_WIDTH+0x3>
    28d6:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <INNER_TRAVERSE_OFFSET>
    28da:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <INNER_TRAVERSE_OFFSET+0x1>
    28de:	a0 91 de 01 	lds	r26, 0x01DE	; 0x8001de <INNER_TRAVERSE_OFFSET+0x2>
    28e2:	b0 91 df 01 	lds	r27, 0x01DF	; 0x8001df <INNER_TRAVERSE_OFFSET+0x3>
    28e6:	82 0f       	add	r24, r18
    28e8:	93 1f       	adc	r25, r19
    28ea:	a4 1f       	adc	r26, r20
    28ec:	b5 1f       	adc	r27, r21
    28ee:	bc 01       	movw	r22, r24
    28f0:	cd 01       	movw	r24, r26
    28f2:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <_Z9MMToStepsm>
    28f6:	dc 01       	movw	r26, r24
    28f8:	cb 01       	movw	r24, r22
    28fa:	28 e5       	ldi	r18, 0x58	; 88
    28fc:	32 e0       	ldi	r19, 0x02	; 2
    28fe:	40 e0       	ldi	r20, 0x00	; 0
    2900:	50 e0       	ldi	r21, 0x00	; 0
    2902:	bc 01       	movw	r22, r24
    2904:	cd 01       	movw	r24, r26
    2906:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <_Z20MoveAbsolutePositionmm>
    290a:	c4 cf       	rjmp	.-120    	; 0x2894 <loop+0x67a>
    290c:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <MOVE_TO_END>
    2910:	0e 94 75 1d 	call	0x3aea	; 0x3aea <millis>
    2914:	dc 01       	movw	r26, r24
    2916:	cb 01       	movw	r24, r22
    2918:	80 93 ea 03 	sts	0x03EA, r24	; 0x8003ea <previousFullAutoTime>
    291c:	90 93 eb 03 	sts	0x03EB, r25	; 0x8003eb <previousFullAutoTime+0x1>
    2920:	a0 93 ec 03 	sts	0x03EC, r26	; 0x8003ec <previousFullAutoTime+0x2>
    2924:	b0 93 ed 03 	sts	0x03ED, r27	; 0x8003ed <previousFullAutoTime+0x3>
    2928:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <RUN_MODE>
    292c:	81 e0       	ldi	r24, 0x01	; 1
    292e:	99 23       	and	r25, r25
    2930:	09 f0       	breq	.+2      	; 0x2934 <loop+0x71a>
    2932:	80 e0       	ldi	r24, 0x00	; 0
    2934:	88 23       	and	r24, r24
    2936:	41 f0       	breq	.+16     	; 0x2948 <loop+0x72e>
    2938:	68 e5       	ldi	r22, 0x58	; 88
    293a:	72 e0       	ldi	r23, 0x02	; 2
    293c:	80 e0       	ldi	r24, 0x00	; 0
    293e:	90 e0       	ldi	r25, 0x00	; 0
    2940:	0e 94 a8 17 	call	0x2f50	; 0x2f50 <_Z16Set_Traverse_RPMl>
    2944:	0e 94 be 15 	call	0x2b7c	; 0x2b7c <_Z4homev>
    2948:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <tickFlag>
    294c:	88 23       	and	r24, r24
    294e:	e9 f4       	brne	.+58     	; 0x298a <loop+0x770>
    2950:	0e 94 75 1d 	call	0x3aea	; 0x3aea <millis>
    2954:	7b 01       	movw	r14, r22
    2956:	8c 01       	movw	r16, r24
    2958:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <spoolUpdateInterval>
    295c:	90 91 d9 01 	lds	r25, 0x01D9	; 0x8001d9 <spoolUpdateInterval+0x1>
    2960:	9c 01       	movw	r18, r24
    2962:	99 0f       	add	r25, r25
    2964:	44 0b       	sbc	r20, r20
    2966:	55 0b       	sbc	r21, r21
    2968:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <previousSpoolTime>
    296c:	90 91 ef 03 	lds	r25, 0x03EF	; 0x8003ef <previousSpoolTime+0x1>
    2970:	a0 91 f0 03 	lds	r26, 0x03F0	; 0x8003f0 <previousSpoolTime+0x2>
    2974:	b0 91 f1 03 	lds	r27, 0x03F1	; 0x8003f1 <previousSpoolTime+0x3>
    2978:	82 0f       	add	r24, r18
    297a:	93 1f       	adc	r25, r19
    297c:	a4 1f       	adc	r26, r20
    297e:	b5 1f       	adc	r27, r21
    2980:	8e 15       	cp	r24, r14
    2982:	9f 05       	cpc	r25, r15
    2984:	a0 07       	cpc	r26, r16
    2986:	b1 07       	cpc	r27, r17
    2988:	10 f4       	brcc	.+4      	; 0x298e <loop+0x774>
    298a:	81 e0       	ldi	r24, 0x01	; 1
    298c:	01 c0       	rjmp	.+2      	; 0x2990 <loop+0x776>
    298e:	80 e0       	ldi	r24, 0x00	; 0
    2990:	88 23       	and	r24, r24
    2992:	09 f4       	brne	.+2      	; 0x2996 <loop+0x77c>
    2994:	57 c0       	rjmp	.+174    	; 0x2a44 <loop+0x82a>
    2996:	0e 94 75 1d 	call	0x3aea	; 0x3aea <millis>
    299a:	9b 01       	movw	r18, r22
    299c:	ac 01       	movw	r20, r24
    299e:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <previousSpoolTime>
    29a2:	90 91 ef 03 	lds	r25, 0x03EF	; 0x8003ef <previousSpoolTime+0x1>
    29a6:	a0 91 f0 03 	lds	r26, 0x03F0	; 0x8003f0 <previousSpoolTime+0x2>
    29aa:	b0 91 f1 03 	lds	r27, 0x03F1	; 0x8003f1 <previousSpoolTime+0x3>
    29ae:	79 01       	movw	r14, r18
    29b0:	8a 01       	movw	r16, r20
    29b2:	e8 1a       	sub	r14, r24
    29b4:	f9 0a       	sbc	r15, r25
    29b6:	0a 0b       	sbc	r16, r26
    29b8:	1b 0b       	sbc	r17, r27
    29ba:	d8 01       	movw	r26, r16
    29bc:	c7 01       	movw	r24, r14
    29be:	89 87       	std	Y+9, r24	; 0x09
    29c0:	9a 87       	std	Y+10, r25	; 0x0a
    29c2:	ab 87       	std	Y+11, r26	; 0x0b
    29c4:	bc 87       	std	Y+12, r27	; 0x0c
    29c6:	f8 94       	cli
    29c8:	20 91 e2 03 	lds	r18, 0x03E2	; 0x8003e2 <spoolPulses>
    29cc:	30 91 e3 03 	lds	r19, 0x03E3	; 0x8003e3 <spoolPulses+0x1>
    29d0:	40 91 e4 03 	lds	r20, 0x03E4	; 0x8003e4 <spoolPulses+0x2>
    29d4:	50 91 e5 03 	lds	r21, 0x03E5	; 0x8003e5 <spoolPulses+0x3>
    29d8:	80 e6       	ldi	r24, 0x60	; 96
    29da:	9a ee       	ldi	r25, 0xEA	; 234
    29dc:	dc 01       	movw	r26, r24
    29de:	0e 94 49 1e 	call	0x3c92	; 0x3c92 <__muluhisi3>
    29e2:	dc 01       	movw	r26, r24
    29e4:	cb 01       	movw	r24, r22
    29e6:	29 85       	ldd	r18, Y+9	; 0x09
    29e8:	3a 85       	ldd	r19, Y+10	; 0x0a
    29ea:	4b 85       	ldd	r20, Y+11	; 0x0b
    29ec:	5c 85       	ldd	r21, Y+12	; 0x0c
    29ee:	bc 01       	movw	r22, r24
    29f0:	cd 01       	movw	r24, r26
    29f2:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <__udivmodsi4>
    29f6:	da 01       	movw	r26, r20
    29f8:	c9 01       	movw	r24, r18
    29fa:	24 e6       	ldi	r18, 0x64	; 100
    29fc:	30 e0       	ldi	r19, 0x00	; 0
    29fe:	40 e0       	ldi	r20, 0x00	; 0
    2a00:	50 e0       	ldi	r21, 0x00	; 0
    2a02:	bc 01       	movw	r22, r24
    2a04:	cd 01       	movw	r24, r26
    2a06:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <__udivmodsi4>
    2a0a:	da 01       	movw	r26, r20
    2a0c:	c9 01       	movw	r24, r18
    2a0e:	90 93 0f 04 	sts	0x040F, r25	; 0x80040f <SPOOLRPM+0x1>
    2a12:	80 93 0e 04 	sts	0x040E, r24	; 0x80040e <SPOOLRPM>
    2a16:	10 92 e2 03 	sts	0x03E2, r1	; 0x8003e2 <spoolPulses>
    2a1a:	10 92 e3 03 	sts	0x03E3, r1	; 0x8003e3 <spoolPulses+0x1>
    2a1e:	10 92 e4 03 	sts	0x03E4, r1	; 0x8003e4 <spoolPulses+0x2>
    2a22:	10 92 e5 03 	sts	0x03E5, r1	; 0x8003e5 <spoolPulses+0x3>
    2a26:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <tickFlag>
    2a2a:	78 94       	sei
    2a2c:	0e 94 75 1d 	call	0x3aea	; 0x3aea <millis>
    2a30:	dc 01       	movw	r26, r24
    2a32:	cb 01       	movw	r24, r22
    2a34:	80 93 ee 03 	sts	0x03EE, r24	; 0x8003ee <previousSpoolTime>
    2a38:	90 93 ef 03 	sts	0x03EF, r25	; 0x8003ef <previousSpoolTime+0x1>
    2a3c:	a0 93 f0 03 	sts	0x03F0, r26	; 0x8003f0 <previousSpoolTime+0x2>
    2a40:	b0 93 f1 03 	sts	0x03F1, r27	; 0x8003f1 <previousSpoolTime+0x3>
    2a44:	00 00       	nop
    2a46:	2c 96       	adiw	r28, 0x0c	; 12
    2a48:	0f b6       	in	r0, 0x3f	; 63
    2a4a:	f8 94       	cli
    2a4c:	de bf       	out	0x3e, r29	; 62
    2a4e:	0f be       	out	0x3f, r0	; 63
    2a50:	cd bf       	out	0x3d, r28	; 61
    2a52:	df 91       	pop	r29
    2a54:	cf 91       	pop	r28
    2a56:	1f 91       	pop	r17
    2a58:	0f 91       	pop	r16
    2a5a:	ff 90       	pop	r15
    2a5c:	ef 90       	pop	r14
    2a5e:	df 90       	pop	r13
    2a60:	cf 90       	pop	r12
    2a62:	08 95       	ret

00002a64 <_Z16ToggleStepOutputv>:
    2a64:	cf 93       	push	r28
    2a66:	df 93       	push	r29
    2a68:	cd b7       	in	r28, 0x3d	; 61
    2a6a:	de b7       	in	r29, 0x3e	; 62
    2a6c:	89 e2       	ldi	r24, 0x29	; 41
    2a6e:	90 e0       	ldi	r25, 0x00	; 0
    2a70:	fc 01       	movw	r30, r24
    2a72:	80 81       	ld	r24, Z
    2a74:	88 2f       	mov	r24, r24
    2a76:	90 e0       	ldi	r25, 0x00	; 0
    2a78:	88 70       	andi	r24, 0x08	; 8
    2a7a:	99 27       	eor	r25, r25
    2a7c:	89 2b       	or	r24, r25
    2a7e:	19 f4       	brne	.+6      	; 0x2a86 <_Z16ToggleStepOutputv+0x22>
    2a80:	89 e0       	ldi	r24, 0x09	; 9
    2a82:	90 e0       	ldi	r25, 0x00	; 0
    2a84:	02 c0       	rjmp	.+4      	; 0x2a8a <_Z16ToggleStepOutputv+0x26>
    2a86:	88 e0       	ldi	r24, 0x08	; 8
    2a88:	90 e0       	ldi	r25, 0x00	; 0
    2a8a:	2b e2       	ldi	r18, 0x2B	; 43
    2a8c:	30 e0       	ldi	r19, 0x00	; 0
    2a8e:	4b e2       	ldi	r20, 0x2B	; 43
    2a90:	50 e0       	ldi	r21, 0x00	; 0
    2a92:	fa 01       	movw	r30, r20
    2a94:	40 81       	ld	r20, Z
    2a96:	84 27       	eor	r24, r20
    2a98:	f9 01       	movw	r30, r18
    2a9a:	80 83       	st	Z, r24
    2a9c:	00 00       	nop
    2a9e:	df 91       	pop	r29
    2aa0:	cf 91       	pop	r28
    2aa2:	08 95       	ret

00002aa4 <_Z20MoveAbsolutePositionmm>:
    2aa4:	cf 93       	push	r28
    2aa6:	df 93       	push	r29
    2aa8:	cd b7       	in	r28, 0x3d	; 61
    2aaa:	de b7       	in	r29, 0x3e	; 62
    2aac:	28 97       	sbiw	r28, 0x08	; 8
    2aae:	0f b6       	in	r0, 0x3f	; 63
    2ab0:	f8 94       	cli
    2ab2:	de bf       	out	0x3e, r29	; 62
    2ab4:	0f be       	out	0x3f, r0	; 63
    2ab6:	cd bf       	out	0x3d, r28	; 61
    2ab8:	69 83       	std	Y+1, r22	; 0x01
    2aba:	7a 83       	std	Y+2, r23	; 0x02
    2abc:	8b 83       	std	Y+3, r24	; 0x03
    2abe:	9c 83       	std	Y+4, r25	; 0x04
    2ac0:	2d 83       	std	Y+5, r18	; 0x05
    2ac2:	3e 83       	std	Y+6, r19	; 0x06
    2ac4:	4f 83       	std	Y+7, r20	; 0x07
    2ac6:	58 87       	std	Y+8, r21	; 0x08
    2ac8:	8d 81       	ldd	r24, Y+5	; 0x05
    2aca:	9e 81       	ldd	r25, Y+6	; 0x06
    2acc:	af 81       	ldd	r26, Y+7	; 0x07
    2ace:	b8 85       	ldd	r27, Y+8	; 0x08
    2ad0:	bc 01       	movw	r22, r24
    2ad2:	cd 01       	movw	r24, r26
    2ad4:	0e 94 a8 17 	call	0x2f50	; 0x2f50 <_Z16Set_Traverse_RPMl>
    2ad8:	89 81       	ldd	r24, Y+1	; 0x01
    2ada:	9a 81       	ldd	r25, Y+2	; 0x02
    2adc:	ab 81       	ldd	r26, Y+3	; 0x03
    2ade:	bc 81       	ldd	r27, Y+4	; 0x04
    2ae0:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <DESIRED_POSITION>
    2ae4:	90 93 07 04 	sts	0x0407, r25	; 0x800407 <DESIRED_POSITION+0x1>
    2ae8:	a0 93 08 04 	sts	0x0408, r26	; 0x800408 <DESIRED_POSITION+0x2>
    2aec:	b0 93 09 04 	sts	0x0409, r27	; 0x800409 <DESIRED_POSITION+0x3>
    2af0:	00 00       	nop
    2af2:	28 96       	adiw	r28, 0x08	; 8
    2af4:	0f b6       	in	r0, 0x3f	; 63
    2af6:	f8 94       	cli
    2af8:	de bf       	out	0x3e, r29	; 62
    2afa:	0f be       	out	0x3f, r0	; 63
    2afc:	cd bf       	out	0x3d, r28	; 61
    2afe:	df 91       	pop	r29
    2b00:	cf 91       	pop	r28
    2b02:	08 95       	ret

00002b04 <_Z20MoveRelativePositionll>:
    2b04:	cf 93       	push	r28
    2b06:	df 93       	push	r29
    2b08:	cd b7       	in	r28, 0x3d	; 61
    2b0a:	de b7       	in	r29, 0x3e	; 62
    2b0c:	28 97       	sbiw	r28, 0x08	; 8
    2b0e:	0f b6       	in	r0, 0x3f	; 63
    2b10:	f8 94       	cli
    2b12:	de bf       	out	0x3e, r29	; 62
    2b14:	0f be       	out	0x3f, r0	; 63
    2b16:	cd bf       	out	0x3d, r28	; 61
    2b18:	69 83       	std	Y+1, r22	; 0x01
    2b1a:	7a 83       	std	Y+2, r23	; 0x02
    2b1c:	8b 83       	std	Y+3, r24	; 0x03
    2b1e:	9c 83       	std	Y+4, r25	; 0x04
    2b20:	2d 83       	std	Y+5, r18	; 0x05
    2b22:	3e 83       	std	Y+6, r19	; 0x06
    2b24:	4f 83       	std	Y+7, r20	; 0x07
    2b26:	58 87       	std	Y+8, r21	; 0x08
    2b28:	8d 81       	ldd	r24, Y+5	; 0x05
    2b2a:	9e 81       	ldd	r25, Y+6	; 0x06
    2b2c:	af 81       	ldd	r26, Y+7	; 0x07
    2b2e:	b8 85       	ldd	r27, Y+8	; 0x08
    2b30:	bc 01       	movw	r22, r24
    2b32:	cd 01       	movw	r24, r26
    2b34:	0e 94 a8 17 	call	0x2f50	; 0x2f50 <_Z16Set_Traverse_RPMl>
    2b38:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <DESIRED_POSITION>
    2b3c:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    2b40:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    2b44:	50 91 09 04 	lds	r21, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    2b48:	89 81       	ldd	r24, Y+1	; 0x01
    2b4a:	9a 81       	ldd	r25, Y+2	; 0x02
    2b4c:	ab 81       	ldd	r26, Y+3	; 0x03
    2b4e:	bc 81       	ldd	r27, Y+4	; 0x04
    2b50:	82 0f       	add	r24, r18
    2b52:	93 1f       	adc	r25, r19
    2b54:	a4 1f       	adc	r26, r20
    2b56:	b5 1f       	adc	r27, r21
    2b58:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <DESIRED_POSITION>
    2b5c:	90 93 07 04 	sts	0x0407, r25	; 0x800407 <DESIRED_POSITION+0x1>
    2b60:	a0 93 08 04 	sts	0x0408, r26	; 0x800408 <DESIRED_POSITION+0x2>
    2b64:	b0 93 09 04 	sts	0x0409, r27	; 0x800409 <DESIRED_POSITION+0x3>
    2b68:	00 00       	nop
    2b6a:	28 96       	adiw	r28, 0x08	; 8
    2b6c:	0f b6       	in	r0, 0x3f	; 63
    2b6e:	f8 94       	cli
    2b70:	de bf       	out	0x3e, r29	; 62
    2b72:	0f be       	out	0x3f, r0	; 63
    2b74:	cd bf       	out	0x3d, r28	; 61
    2b76:	df 91       	pop	r29
    2b78:	cf 91       	pop	r28
    2b7a:	08 95       	ret

00002b7c <_Z4homev>:
    2b7c:	cf 93       	push	r28
    2b7e:	df 93       	push	r29
    2b80:	cd b7       	in	r28, 0x3d	; 61
    2b82:	de b7       	in	r29, 0x3e	; 62
    2b84:	10 92 06 04 	sts	0x0406, r1	; 0x800406 <DESIRED_POSITION>
    2b88:	10 92 07 04 	sts	0x0407, r1	; 0x800407 <DESIRED_POSITION+0x1>
    2b8c:	10 92 08 04 	sts	0x0408, r1	; 0x800408 <DESIRED_POSITION+0x2>
    2b90:	10 92 09 04 	sts	0x0409, r1	; 0x800409 <DESIRED_POSITION+0x3>
    2b94:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <directionInputState>
    2b98:	81 e0       	ldi	r24, 0x01	; 1
    2b9a:	89 27       	eor	r24, r25
    2b9c:	88 23       	and	r24, r24
    2b9e:	91 f1       	breq	.+100    	; 0x2c04 <_Z4homev+0x88>
    2ba0:	89 e2       	ldi	r24, 0x29	; 41
    2ba2:	90 e0       	ldi	r25, 0x00	; 0
    2ba4:	fc 01       	movw	r30, r24
    2ba6:	80 81       	ld	r24, Z
    2ba8:	88 2f       	mov	r24, r24
    2baa:	90 e0       	ldi	r25, 0x00	; 0
    2bac:	80 72       	andi	r24, 0x20	; 32
    2bae:	99 27       	eor	r25, r25
    2bb0:	21 e0       	ldi	r18, 0x01	; 1
    2bb2:	89 2b       	or	r24, r25
    2bb4:	09 f4       	brne	.+2      	; 0x2bb8 <_Z4homev+0x3c>
    2bb6:	20 e0       	ldi	r18, 0x00	; 0
    2bb8:	20 93 e1 03 	sts	0x03E1, r18	; 0x8003e1 <directionInputState>
    2bbc:	20 91 02 04 	lds	r18, 0x0402	; 0x800402 <STEPS>
    2bc0:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <STEPS+0x1>
    2bc4:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <STEPS+0x2>
    2bc8:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <STEPS+0x3>
    2bcc:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <DESIRED_POSITION>
    2bd0:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    2bd4:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    2bd8:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    2bdc:	61 e0       	ldi	r22, 0x01	; 1
    2bde:	28 17       	cp	r18, r24
    2be0:	39 07       	cpc	r19, r25
    2be2:	4a 07       	cpc	r20, r26
    2be4:	5b 07       	cpc	r21, r27
    2be6:	09 f0       	breq	.+2      	; 0x2bea <_Z4homev+0x6e>
    2be8:	60 e0       	ldi	r22, 0x00	; 0
    2bea:	66 23       	and	r22, r22
    2bec:	99 f2       	breq	.-90     	; 0x2b94 <_Z4homev+0x18>
    2bee:	28 e5       	ldi	r18, 0x58	; 88
    2bf0:	32 e0       	ldi	r19, 0x02	; 2
    2bf2:	40 e0       	ldi	r20, 0x00	; 0
    2bf4:	50 e0       	ldi	r21, 0x00	; 0
    2bf6:	6c e9       	ldi	r22, 0x9C	; 156
    2bf8:	7f ef       	ldi	r23, 0xFF	; 255
    2bfa:	8f ef       	ldi	r24, 0xFF	; 255
    2bfc:	9f ef       	ldi	r25, 0xFF	; 255
    2bfe:	0e 94 82 15 	call	0x2b04	; 0x2b04 <_Z20MoveRelativePositionll>
    2c02:	c8 cf       	rjmp	.-112    	; 0x2b94 <_Z4homev+0x18>
    2c04:	28 e5       	ldi	r18, 0x58	; 88
    2c06:	32 e0       	ldi	r19, 0x02	; 2
    2c08:	40 e0       	ldi	r20, 0x00	; 0
    2c0a:	50 e0       	ldi	r21, 0x00	; 0
    2c0c:	68 e1       	ldi	r22, 0x18	; 24
    2c0e:	7c ef       	ldi	r23, 0xFC	; 252
    2c10:	8f ef       	ldi	r24, 0xFF	; 255
    2c12:	9f ef       	ldi	r25, 0xFF	; 255
    2c14:	0e 94 82 15 	call	0x2b04	; 0x2b04 <_Z20MoveRelativePositionll>
    2c18:	20 91 02 04 	lds	r18, 0x0402	; 0x800402 <STEPS>
    2c1c:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <STEPS+0x1>
    2c20:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <STEPS+0x2>
    2c24:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <STEPS+0x3>
    2c28:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <DESIRED_POSITION>
    2c2c:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    2c30:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    2c34:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    2c38:	61 e0       	ldi	r22, 0x01	; 1
    2c3a:	28 17       	cp	r18, r24
    2c3c:	39 07       	cpc	r19, r25
    2c3e:	4a 07       	cpc	r20, r26
    2c40:	5b 07       	cpc	r21, r27
    2c42:	09 f4       	brne	.+2      	; 0x2c46 <_Z4homev+0xca>
    2c44:	60 e0       	ldi	r22, 0x00	; 0
    2c46:	66 23       	and	r22, r22
    2c48:	09 f0       	breq	.+2      	; 0x2c4c <_Z4homev+0xd0>
    2c4a:	e6 cf       	rjmp	.-52     	; 0x2c18 <_Z4homev+0x9c>
    2c4c:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <directionInputState>
    2c50:	88 23       	and	r24, r24
    2c52:	91 f1       	breq	.+100    	; 0x2cb8 <_Z4homev+0x13c>
    2c54:	89 e2       	ldi	r24, 0x29	; 41
    2c56:	90 e0       	ldi	r25, 0x00	; 0
    2c58:	fc 01       	movw	r30, r24
    2c5a:	80 81       	ld	r24, Z
    2c5c:	88 2f       	mov	r24, r24
    2c5e:	90 e0       	ldi	r25, 0x00	; 0
    2c60:	80 72       	andi	r24, 0x20	; 32
    2c62:	99 27       	eor	r25, r25
    2c64:	21 e0       	ldi	r18, 0x01	; 1
    2c66:	89 2b       	or	r24, r25
    2c68:	09 f4       	brne	.+2      	; 0x2c6c <_Z4homev+0xf0>
    2c6a:	20 e0       	ldi	r18, 0x00	; 0
    2c6c:	20 93 e1 03 	sts	0x03E1, r18	; 0x8003e1 <directionInputState>
    2c70:	20 91 02 04 	lds	r18, 0x0402	; 0x800402 <STEPS>
    2c74:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <STEPS+0x1>
    2c78:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <STEPS+0x2>
    2c7c:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <STEPS+0x3>
    2c80:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <DESIRED_POSITION>
    2c84:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    2c88:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    2c8c:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    2c90:	61 e0       	ldi	r22, 0x01	; 1
    2c92:	28 17       	cp	r18, r24
    2c94:	39 07       	cpc	r19, r25
    2c96:	4a 07       	cpc	r20, r26
    2c98:	5b 07       	cpc	r21, r27
    2c9a:	09 f0       	breq	.+2      	; 0x2c9e <_Z4homev+0x122>
    2c9c:	60 e0       	ldi	r22, 0x00	; 0
    2c9e:	66 23       	and	r22, r22
    2ca0:	a9 f2       	breq	.-86     	; 0x2c4c <_Z4homev+0xd0>
    2ca2:	28 e5       	ldi	r18, 0x58	; 88
    2ca4:	32 e0       	ldi	r19, 0x02	; 2
    2ca6:	40 e0       	ldi	r20, 0x00	; 0
    2ca8:	50 e0       	ldi	r21, 0x00	; 0
    2caa:	64 e6       	ldi	r22, 0x64	; 100
    2cac:	70 e0       	ldi	r23, 0x00	; 0
    2cae:	80 e0       	ldi	r24, 0x00	; 0
    2cb0:	90 e0       	ldi	r25, 0x00	; 0
    2cb2:	0e 94 82 15 	call	0x2b04	; 0x2b04 <_Z20MoveRelativePositionll>
    2cb6:	ca cf       	rjmp	.-108    	; 0x2c4c <_Z4homev+0xd0>
    2cb8:	28 e5       	ldi	r18, 0x58	; 88
    2cba:	32 e0       	ldi	r19, 0x02	; 2
    2cbc:	40 e0       	ldi	r20, 0x00	; 0
    2cbe:	50 e0       	ldi	r21, 0x00	; 0
    2cc0:	68 e8       	ldi	r22, 0x88	; 136
    2cc2:	73 e1       	ldi	r23, 0x13	; 19
    2cc4:	80 e0       	ldi	r24, 0x00	; 0
    2cc6:	90 e0       	ldi	r25, 0x00	; 0
    2cc8:	0e 94 82 15 	call	0x2b04	; 0x2b04 <_Z20MoveRelativePositionll>
    2ccc:	20 91 02 04 	lds	r18, 0x0402	; 0x800402 <STEPS>
    2cd0:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <STEPS+0x1>
    2cd4:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <STEPS+0x2>
    2cd8:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <STEPS+0x3>
    2cdc:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <DESIRED_POSITION>
    2ce0:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    2ce4:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    2ce8:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    2cec:	61 e0       	ldi	r22, 0x01	; 1
    2cee:	28 17       	cp	r18, r24
    2cf0:	39 07       	cpc	r19, r25
    2cf2:	4a 07       	cpc	r20, r26
    2cf4:	5b 07       	cpc	r21, r27
    2cf6:	09 f4       	brne	.+2      	; 0x2cfa <_Z4homev+0x17e>
    2cf8:	60 e0       	ldi	r22, 0x00	; 0
    2cfa:	66 23       	and	r22, r22
    2cfc:	09 f0       	breq	.+2      	; 0x2d00 <_Z4homev+0x184>
    2cfe:	e6 cf       	rjmp	.-52     	; 0x2ccc <_Z4homev+0x150>
    2d00:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <directionInputState>
    2d04:	81 e0       	ldi	r24, 0x01	; 1
    2d06:	89 27       	eor	r24, r25
    2d08:	88 23       	and	r24, r24
    2d0a:	91 f1       	breq	.+100    	; 0x2d70 <_Z4homev+0x1f4>
    2d0c:	89 e2       	ldi	r24, 0x29	; 41
    2d0e:	90 e0       	ldi	r25, 0x00	; 0
    2d10:	fc 01       	movw	r30, r24
    2d12:	80 81       	ld	r24, Z
    2d14:	88 2f       	mov	r24, r24
    2d16:	90 e0       	ldi	r25, 0x00	; 0
    2d18:	80 72       	andi	r24, 0x20	; 32
    2d1a:	99 27       	eor	r25, r25
    2d1c:	21 e0       	ldi	r18, 0x01	; 1
    2d1e:	89 2b       	or	r24, r25
    2d20:	09 f4       	brne	.+2      	; 0x2d24 <_Z4homev+0x1a8>
    2d22:	20 e0       	ldi	r18, 0x00	; 0
    2d24:	20 93 e1 03 	sts	0x03E1, r18	; 0x8003e1 <directionInputState>
    2d28:	20 91 02 04 	lds	r18, 0x0402	; 0x800402 <STEPS>
    2d2c:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <STEPS+0x1>
    2d30:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <STEPS+0x2>
    2d34:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <STEPS+0x3>
    2d38:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <DESIRED_POSITION>
    2d3c:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    2d40:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    2d44:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    2d48:	61 e0       	ldi	r22, 0x01	; 1
    2d4a:	28 17       	cp	r18, r24
    2d4c:	39 07       	cpc	r19, r25
    2d4e:	4a 07       	cpc	r20, r26
    2d50:	5b 07       	cpc	r21, r27
    2d52:	09 f0       	breq	.+2      	; 0x2d56 <_Z4homev+0x1da>
    2d54:	60 e0       	ldi	r22, 0x00	; 0
    2d56:	66 23       	and	r22, r22
    2d58:	99 f2       	breq	.-90     	; 0x2d00 <_Z4homev+0x184>
    2d5a:	26 e9       	ldi	r18, 0x96	; 150
    2d5c:	30 e0       	ldi	r19, 0x00	; 0
    2d5e:	40 e0       	ldi	r20, 0x00	; 0
    2d60:	50 e0       	ldi	r21, 0x00	; 0
    2d62:	6c e9       	ldi	r22, 0x9C	; 156
    2d64:	7f ef       	ldi	r23, 0xFF	; 255
    2d66:	8f ef       	ldi	r24, 0xFF	; 255
    2d68:	9f ef       	ldi	r25, 0xFF	; 255
    2d6a:	0e 94 82 15 	call	0x2b04	; 0x2b04 <_Z20MoveRelativePositionll>
    2d6e:	c8 cf       	rjmp	.-112    	; 0x2d00 <_Z4homev+0x184>
    2d70:	26 e9       	ldi	r18, 0x96	; 150
    2d72:	30 e0       	ldi	r19, 0x00	; 0
    2d74:	40 e0       	ldi	r20, 0x00	; 0
    2d76:	50 e0       	ldi	r21, 0x00	; 0
    2d78:	68 e1       	ldi	r22, 0x18	; 24
    2d7a:	7c ef       	ldi	r23, 0xFC	; 252
    2d7c:	8f ef       	ldi	r24, 0xFF	; 255
    2d7e:	9f ef       	ldi	r25, 0xFF	; 255
    2d80:	0e 94 82 15 	call	0x2b04	; 0x2b04 <_Z20MoveRelativePositionll>
    2d84:	20 91 02 04 	lds	r18, 0x0402	; 0x800402 <STEPS>
    2d88:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <STEPS+0x1>
    2d8c:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <STEPS+0x2>
    2d90:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <STEPS+0x3>
    2d94:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <DESIRED_POSITION>
    2d98:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    2d9c:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    2da0:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    2da4:	61 e0       	ldi	r22, 0x01	; 1
    2da6:	28 17       	cp	r18, r24
    2da8:	39 07       	cpc	r19, r25
    2daa:	4a 07       	cpc	r20, r26
    2dac:	5b 07       	cpc	r21, r27
    2dae:	09 f4       	brne	.+2      	; 0x2db2 <_Z4homev+0x236>
    2db0:	60 e0       	ldi	r22, 0x00	; 0
    2db2:	66 23       	and	r22, r22
    2db4:	09 f0       	breq	.+2      	; 0x2db8 <_Z4homev+0x23c>
    2db6:	e6 cf       	rjmp	.-52     	; 0x2d84 <_Z4homev+0x208>
    2db8:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <directionInputState>
    2dbc:	88 23       	and	r24, r24
    2dbe:	91 f1       	breq	.+100    	; 0x2e24 <_Z4homev+0x2a8>
    2dc0:	89 e2       	ldi	r24, 0x29	; 41
    2dc2:	90 e0       	ldi	r25, 0x00	; 0
    2dc4:	fc 01       	movw	r30, r24
    2dc6:	80 81       	ld	r24, Z
    2dc8:	88 2f       	mov	r24, r24
    2dca:	90 e0       	ldi	r25, 0x00	; 0
    2dcc:	80 72       	andi	r24, 0x20	; 32
    2dce:	99 27       	eor	r25, r25
    2dd0:	21 e0       	ldi	r18, 0x01	; 1
    2dd2:	89 2b       	or	r24, r25
    2dd4:	09 f4       	brne	.+2      	; 0x2dd8 <_Z4homev+0x25c>
    2dd6:	20 e0       	ldi	r18, 0x00	; 0
    2dd8:	20 93 e1 03 	sts	0x03E1, r18	; 0x8003e1 <directionInputState>
    2ddc:	20 91 02 04 	lds	r18, 0x0402	; 0x800402 <STEPS>
    2de0:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <STEPS+0x1>
    2de4:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <STEPS+0x2>
    2de8:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <STEPS+0x3>
    2dec:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <DESIRED_POSITION>
    2df0:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    2df4:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    2df8:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    2dfc:	61 e0       	ldi	r22, 0x01	; 1
    2dfe:	28 17       	cp	r18, r24
    2e00:	39 07       	cpc	r19, r25
    2e02:	4a 07       	cpc	r20, r26
    2e04:	5b 07       	cpc	r21, r27
    2e06:	09 f0       	breq	.+2      	; 0x2e0a <_Z4homev+0x28e>
    2e08:	60 e0       	ldi	r22, 0x00	; 0
    2e0a:	66 23       	and	r22, r22
    2e0c:	a9 f2       	breq	.-86     	; 0x2db8 <_Z4homev+0x23c>
    2e0e:	26 e9       	ldi	r18, 0x96	; 150
    2e10:	30 e0       	ldi	r19, 0x00	; 0
    2e12:	40 e0       	ldi	r20, 0x00	; 0
    2e14:	50 e0       	ldi	r21, 0x00	; 0
    2e16:	64 e6       	ldi	r22, 0x64	; 100
    2e18:	70 e0       	ldi	r23, 0x00	; 0
    2e1a:	80 e0       	ldi	r24, 0x00	; 0
    2e1c:	90 e0       	ldi	r25, 0x00	; 0
    2e1e:	0e 94 82 15 	call	0x2b04	; 0x2b04 <_Z20MoveRelativePositionll>
    2e22:	ca cf       	rjmp	.-108    	; 0x2db8 <_Z4homev+0x23c>
    2e24:	26 e9       	ldi	r18, 0x96	; 150
    2e26:	30 e0       	ldi	r19, 0x00	; 0
    2e28:	40 e0       	ldi	r20, 0x00	; 0
    2e2a:	50 e0       	ldi	r21, 0x00	; 0
    2e2c:	68 ee       	ldi	r22, 0xE8	; 232
    2e2e:	73 e0       	ldi	r23, 0x03	; 3
    2e30:	80 e0       	ldi	r24, 0x00	; 0
    2e32:	90 e0       	ldi	r25, 0x00	; 0
    2e34:	0e 94 82 15 	call	0x2b04	; 0x2b04 <_Z20MoveRelativePositionll>
    2e38:	20 91 02 04 	lds	r18, 0x0402	; 0x800402 <STEPS>
    2e3c:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <STEPS+0x1>
    2e40:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <STEPS+0x2>
    2e44:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <STEPS+0x3>
    2e48:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <DESIRED_POSITION>
    2e4c:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <DESIRED_POSITION+0x1>
    2e50:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <DESIRED_POSITION+0x2>
    2e54:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <DESIRED_POSITION+0x3>
    2e58:	61 e0       	ldi	r22, 0x01	; 1
    2e5a:	28 17       	cp	r18, r24
    2e5c:	39 07       	cpc	r19, r25
    2e5e:	4a 07       	cpc	r20, r26
    2e60:	5b 07       	cpc	r21, r27
    2e62:	09 f4       	brne	.+2      	; 0x2e66 <_Z4homev+0x2ea>
    2e64:	60 e0       	ldi	r22, 0x00	; 0
    2e66:	66 23       	and	r22, r22
    2e68:	09 f0       	breq	.+2      	; 0x2e6c <_Z4homev+0x2f0>
    2e6a:	e6 cf       	rjmp	.-52     	; 0x2e38 <_Z4homev+0x2bc>
    2e6c:	10 92 02 04 	sts	0x0402, r1	; 0x800402 <STEPS>
    2e70:	10 92 03 04 	sts	0x0403, r1	; 0x800403 <STEPS+0x1>
    2e74:	10 92 04 04 	sts	0x0404, r1	; 0x800404 <STEPS+0x2>
    2e78:	10 92 05 04 	sts	0x0405, r1	; 0x800405 <STEPS+0x3>
    2e7c:	10 92 06 04 	sts	0x0406, r1	; 0x800406 <DESIRED_POSITION>
    2e80:	10 92 07 04 	sts	0x0407, r1	; 0x800407 <DESIRED_POSITION+0x1>
    2e84:	10 92 08 04 	sts	0x0408, r1	; 0x800408 <DESIRED_POSITION+0x2>
    2e88:	10 92 09 04 	sts	0x0409, r1	; 0x800409 <DESIRED_POSITION+0x3>
    2e8c:	81 e0       	ldi	r24, 0x01	; 1
    2e8e:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <RUN_MODE>
    2e92:	00 00       	nop
    2e94:	df 91       	pop	r29
    2e96:	cf 91       	pop	r28
    2e98:	08 95       	ret

00002e9a <_Z9MMToStepsm>:

uint32_t MMToSteps(uint32_t mm)
{
    2e9a:	cf 93       	push	r28
    2e9c:	df 93       	push	r29
    2e9e:	cd b7       	in	r28, 0x3d	; 61
    2ea0:	de b7       	in	r29, 0x3e	; 62
    2ea2:	28 97       	sbiw	r28, 0x08	; 8
    2ea4:	0f b6       	in	r0, 0x3f	; 63
    2ea6:	f8 94       	cli
    2ea8:	de bf       	out	0x3e, r29	; 62
    2eaa:	0f be       	out	0x3f, r0	; 63
    2eac:	cd bf       	out	0x3d, r28	; 61
    2eae:	6d 83       	std	Y+5, r22	; 0x05
    2eb0:	7e 83       	std	Y+6, r23	; 0x06
    2eb2:	8f 83       	std	Y+7, r24	; 0x07
    2eb4:	98 87       	std	Y+8, r25	; 0x08
	uint32_t position = (mm * 1000) / SCREW_PITCH_MM;
    2eb6:	2d 81       	ldd	r18, Y+5	; 0x05
    2eb8:	3e 81       	ldd	r19, Y+6	; 0x06
    2eba:	4f 81       	ldd	r20, Y+7	; 0x07
    2ebc:	58 85       	ldd	r21, Y+8	; 0x08
    2ebe:	88 ee       	ldi	r24, 0xE8	; 232
    2ec0:	93 e0       	ldi	r25, 0x03	; 3
    2ec2:	dc 01       	movw	r26, r24
    2ec4:	0e 94 49 1e 	call	0x3c92	; 0x3c92 <__muluhisi3>
    2ec8:	dc 01       	movw	r26, r24
    2eca:	cb 01       	movw	r24, r22
    2ecc:	24 e3       	ldi	r18, 0x34	; 52
    2ece:	36 e0       	ldi	r19, 0x06	; 6
    2ed0:	40 e0       	ldi	r20, 0x00	; 0
    2ed2:	50 e0       	ldi	r21, 0x00	; 0
    2ed4:	bc 01       	movw	r22, r24
    2ed6:	cd 01       	movw	r24, r26
    2ed8:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <__udivmodsi4>
    2edc:	da 01       	movw	r26, r20
    2ede:	c9 01       	movw	r24, r18
    2ee0:	89 83       	std	Y+1, r24	; 0x01
    2ee2:	9a 83       	std	Y+2, r25	; 0x02
    2ee4:	ab 83       	std	Y+3, r26	; 0x03
    2ee6:	bc 83       	std	Y+4, r27	; 0x04
	position = (position * MOTOR_STEPS_PER_REV) / 1000;
    2ee8:	29 81       	ldd	r18, Y+1	; 0x01
    2eea:	3a 81       	ldd	r19, Y+2	; 0x02
    2eec:	4b 81       	ldd	r20, Y+3	; 0x03
    2eee:	5c 81       	ldd	r21, Y+4	; 0x04
    2ef0:	80 e8       	ldi	r24, 0x80	; 128
    2ef2:	9c e0       	ldi	r25, 0x0C	; 12
    2ef4:	dc 01       	movw	r26, r24
    2ef6:	0e 94 49 1e 	call	0x3c92	; 0x3c92 <__muluhisi3>
    2efa:	dc 01       	movw	r26, r24
    2efc:	cb 01       	movw	r24, r22
    2efe:	28 ee       	ldi	r18, 0xE8	; 232
    2f00:	33 e0       	ldi	r19, 0x03	; 3
    2f02:	40 e0       	ldi	r20, 0x00	; 0
    2f04:	50 e0       	ldi	r21, 0x00	; 0
    2f06:	bc 01       	movw	r22, r24
    2f08:	cd 01       	movw	r24, r26
    2f0a:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <__udivmodsi4>
    2f0e:	da 01       	movw	r26, r20
    2f10:	c9 01       	movw	r24, r18
    2f12:	89 83       	std	Y+1, r24	; 0x01
    2f14:	9a 83       	std	Y+2, r25	; 0x02
    2f16:	ab 83       	std	Y+3, r26	; 0x03
    2f18:	bc 83       	std	Y+4, r27	; 0x04
	position = position * 2;
    2f1a:	89 81       	ldd	r24, Y+1	; 0x01
    2f1c:	9a 81       	ldd	r25, Y+2	; 0x02
    2f1e:	ab 81       	ldd	r26, Y+3	; 0x03
    2f20:	bc 81       	ldd	r27, Y+4	; 0x04
    2f22:	88 0f       	add	r24, r24
    2f24:	99 1f       	adc	r25, r25
    2f26:	aa 1f       	adc	r26, r26
    2f28:	bb 1f       	adc	r27, r27
    2f2a:	89 83       	std	Y+1, r24	; 0x01
    2f2c:	9a 83       	std	Y+2, r25	; 0x02
    2f2e:	ab 83       	std	Y+3, r26	; 0x03
    2f30:	bc 83       	std	Y+4, r27	; 0x04

	return position;
    2f32:	89 81       	ldd	r24, Y+1	; 0x01
    2f34:	9a 81       	ldd	r25, Y+2	; 0x02
    2f36:	ab 81       	ldd	r26, Y+3	; 0x03
    2f38:	bc 81       	ldd	r27, Y+4	; 0x04
}
    2f3a:	bc 01       	movw	r22, r24
    2f3c:	cd 01       	movw	r24, r26
    2f3e:	28 96       	adiw	r28, 0x08	; 8
    2f40:	0f b6       	in	r0, 0x3f	; 63
    2f42:	f8 94       	cli
    2f44:	de bf       	out	0x3e, r29	; 62
    2f46:	0f be       	out	0x3f, r0	; 63
    2f48:	cd bf       	out	0x3d, r28	; 61
    2f4a:	df 91       	pop	r29
    2f4c:	cf 91       	pop	r28
    2f4e:	08 95       	ret

00002f50 <_Z16Set_Traverse_RPMl>:



void Set_Traverse_RPM(long rpm)
{
    2f50:	cf 93       	push	r28
    2f52:	df 93       	push	r29
    2f54:	cd b7       	in	r28, 0x3d	; 61
    2f56:	de b7       	in	r29, 0x3e	; 62
    2f58:	28 97       	sbiw	r28, 0x08	; 8
    2f5a:	0f b6       	in	r0, 0x3f	; 63
    2f5c:	f8 94       	cli
    2f5e:	de bf       	out	0x3e, r29	; 62
    2f60:	0f be       	out	0x3f, r0	; 63
    2f62:	cd bf       	out	0x3d, r28	; 61
    2f64:	6d 83       	std	Y+5, r22	; 0x05
    2f66:	7e 83       	std	Y+6, r23	; 0x06
    2f68:	8f 83       	std	Y+7, r24	; 0x07
    2f6a:	98 87       	std	Y+8, r25	; 0x08
	
	uint32_t pps = (rpm * MOTOR_STEPS_PER_REV) / 60; // pps is also the frequency, 60 is minutes to seconds
    2f6c:	2d 81       	ldd	r18, Y+5	; 0x05
    2f6e:	3e 81       	ldd	r19, Y+6	; 0x06
    2f70:	4f 81       	ldd	r20, Y+7	; 0x07
    2f72:	58 85       	ldd	r21, Y+8	; 0x08
    2f74:	80 e8       	ldi	r24, 0x80	; 128
    2f76:	9c e0       	ldi	r25, 0x0C	; 12
    2f78:	dc 01       	movw	r26, r24
    2f7a:	0e 94 49 1e 	call	0x3c92	; 0x3c92 <__muluhisi3>
    2f7e:	dc 01       	movw	r26, r24
    2f80:	cb 01       	movw	r24, r22
    2f82:	2c e3       	ldi	r18, 0x3C	; 60
    2f84:	30 e0       	ldi	r19, 0x00	; 0
    2f86:	40 e0       	ldi	r20, 0x00	; 0
    2f88:	50 e0       	ldi	r21, 0x00	; 0
    2f8a:	bc 01       	movw	r22, r24
    2f8c:	cd 01       	movw	r24, r26
    2f8e:	0e 94 2a 1e 	call	0x3c54	; 0x3c54 <__divmodsi4>
    2f92:	da 01       	movw	r26, r20
    2f94:	c9 01       	movw	r24, r18
    2f96:	89 83       	std	Y+1, r24	; 0x01
    2f98:	9a 83       	std	Y+2, r25	; 0x02
    2f9a:	ab 83       	std	Y+3, r26	; 0x03
    2f9c:	bc 83       	std	Y+4, r27	; 0x04
	pps = pps * 2; //* 2 to get two half period waves
    2f9e:	89 81       	ldd	r24, Y+1	; 0x01
    2fa0:	9a 81       	ldd	r25, Y+2	; 0x02
    2fa2:	ab 81       	ldd	r26, Y+3	; 0x03
    2fa4:	bc 81       	ldd	r27, Y+4	; 0x04
    2fa6:	88 0f       	add	r24, r24
    2fa8:	99 1f       	adc	r25, r25
    2faa:	aa 1f       	adc	r26, r26
    2fac:	bb 1f       	adc	r27, r27
    2fae:	89 83       	std	Y+1, r24	; 0x01
    2fb0:	9a 83       	std	Y+2, r25	; 0x02
    2fb2:	ab 83       	std	Y+3, r26	; 0x03
    2fb4:	bc 83       	std	Y+4, r27	; 0x04
	stepDelay = F_CPU / (1 * pps) - 1;
    2fb6:	80 e0       	ldi	r24, 0x00	; 0
    2fb8:	94 e2       	ldi	r25, 0x24	; 36
    2fba:	a4 ef       	ldi	r26, 0xF4	; 244
    2fbc:	b0 e0       	ldi	r27, 0x00	; 0
    2fbe:	29 81       	ldd	r18, Y+1	; 0x01
    2fc0:	3a 81       	ldd	r19, Y+2	; 0x02
    2fc2:	4b 81       	ldd	r20, Y+3	; 0x03
    2fc4:	5c 81       	ldd	r21, Y+4	; 0x04
    2fc6:	bc 01       	movw	r22, r24
    2fc8:	cd 01       	movw	r24, r26
    2fca:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <__udivmodsi4>
    2fce:	da 01       	movw	r26, r20
    2fd0:	c9 01       	movw	r24, r18
    2fd2:	01 97       	sbiw	r24, 0x01	; 1
    2fd4:	a1 09       	sbc	r26, r1
    2fd6:	b1 09       	sbc	r27, r1
    2fd8:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <stepDelay>
    2fdc:	90 93 d5 01 	sts	0x01D5, r25	; 0x8001d5 <stepDelay+0x1>
    2fe0:	a0 93 d6 01 	sts	0x01D6, r26	; 0x8001d6 <stepDelay+0x2>
    2fe4:	b0 93 d7 01 	sts	0x01D7, r27	; 0x8001d7 <stepDelay+0x3>
	}
    2fe8:	00 00       	nop
    2fea:	28 96       	adiw	r28, 0x08	; 8
    2fec:	0f b6       	in	r0, 0x3f	; 63
    2fee:	f8 94       	cli
    2ff0:	de bf       	out	0x3e, r29	; 62
    2ff2:	0f be       	out	0x3f, r0	; 63
    2ff4:	cd bf       	out	0x3d, r28	; 61
    2ff6:	df 91       	pop	r29
    2ff8:	cf 91       	pop	r28
    2ffa:	08 95       	ret

00002ffc <_Z41__static_initialization_and_destruction_0ii>:
    2ffc:	cf 93       	push	r28
    2ffe:	df 93       	push	r29
    3000:	00 d0       	rcall	.+0      	; 0x3002 <_Z41__static_initialization_and_destruction_0ii+0x6>
    3002:	00 d0       	rcall	.+0      	; 0x3004 <_Z41__static_initialization_and_destruction_0ii+0x8>
    3004:	cd b7       	in	r28, 0x3d	; 61
    3006:	de b7       	in	r29, 0x3e	; 62
    3008:	9a 83       	std	Y+2, r25	; 0x02
    300a:	89 83       	std	Y+1, r24	; 0x01
    300c:	7c 83       	std	Y+4, r23	; 0x04
    300e:	6b 83       	std	Y+3, r22	; 0x03
    3010:	89 81       	ldd	r24, Y+1	; 0x01
    3012:	9a 81       	ldd	r25, Y+2	; 0x02
    3014:	01 97       	sbiw	r24, 0x01	; 1
    3016:	c1 f5       	brne	.+112    	; 0x3088 <_Z41__static_initialization_and_destruction_0ii+0x8c>
    3018:	8b 81       	ldd	r24, Y+3	; 0x03
    301a:	9c 81       	ldd	r25, Y+4	; 0x04
    301c:	01 96       	adiw	r24, 0x01	; 1
    301e:	a1 f5       	brne	.+104    	; 0x3088 <_Z41__static_initialization_and_destruction_0ii+0x8c>



int spoolUpdateInterval = 2000;
int fullAutoUpdateInterval = 50;
long previousFullAutoTime = fullAutoUpdateInterval;
    3020:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <fullAutoUpdateInterval>
    3024:	90 91 db 01 	lds	r25, 0x01DB	; 0x8001db <fullAutoUpdateInterval+0x1>
    3028:	09 2e       	mov	r0, r25
    302a:	00 0c       	add	r0, r0
    302c:	aa 0b       	sbc	r26, r26
    302e:	bb 0b       	sbc	r27, r27
    3030:	80 93 ea 03 	sts	0x03EA, r24	; 0x8003ea <previousFullAutoTime>
    3034:	90 93 eb 03 	sts	0x03EB, r25	; 0x8003eb <previousFullAutoTime+0x1>
    3038:	a0 93 ec 03 	sts	0x03EC, r26	; 0x8003ec <previousFullAutoTime+0x2>
    303c:	b0 93 ed 03 	sts	0x03ED, r27	; 0x8003ed <previousFullAutoTime+0x3>
long previousSpoolTime = spoolUpdateInterval;
    3040:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <spoolUpdateInterval>
    3044:	90 91 d9 01 	lds	r25, 0x01D9	; 0x8001d9 <spoolUpdateInterval+0x1>
    3048:	09 2e       	mov	r0, r25
    304a:	00 0c       	add	r0, r0
    304c:	aa 0b       	sbc	r26, r26
    304e:	bb 0b       	sbc	r27, r27
    3050:	80 93 ee 03 	sts	0x03EE, r24	; 0x8003ee <previousSpoolTime>
    3054:	90 93 ef 03 	sts	0x03EF, r25	; 0x8003ef <previousSpoolTime+0x1>
    3058:	a0 93 f0 03 	sts	0x03F0, r26	; 0x8003f0 <previousSpoolTime+0x2>
    305c:	b0 93 f1 03 	sts	0x03F1, r27	; 0x8003f1 <previousSpoolTime+0x3>
uint32_t serialTimerMillis = 1000; //Serial output scheduler delay time
uint32_t serialTimerPreviousMillis = 0; //Current delay time
volatile uint32_t totalspoolTicks = 0;
volatile uint32_t previousSpoolTicks = 0;
static unsigned long last_millis = 0;
unsigned long m = millis();
    3060:	0e 94 75 1d 	call	0x3aea	; 0x3aea <millis>
    3064:	dc 01       	movw	r26, r24
    3066:	cb 01       	movw	r24, r22
    3068:	80 93 fe 03 	sts	0x03FE, r24	; 0x8003fe <m>
    306c:	90 93 ff 03 	sts	0x03FF, r25	; 0x8003ff <m+0x1>
    3070:	a0 93 00 04 	sts	0x0400, r26	; 0x800400 <m+0x2>
    3074:	b0 93 01 04 	sts	0x0401, r27	; 0x800401 <m+0x3>
volatile bool potEnabled = true;
#else
volatile bool potEnabled = false;
#endif

Serial_Commands _Serial_Commands;
    3078:	86 e1       	ldi	r24, 0x16	; 22
    307a:	94 e0       	ldi	r25, 0x04	; 4
    307c:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <_ZN15Serial_CommandsC1Ev>
Math_Helpers _Math_Helpers;
    3080:	87 e1       	ldi	r24, 0x17	; 23
    3082:	94 e0       	ldi	r25, 0x04	; 4
    3084:	0e 94 cb 00 	call	0x196	; 0x196 <_ZN12Math_HelpersC1Ev>
    3088:	89 81       	ldd	r24, Y+1	; 0x01
    308a:	9a 81       	ldd	r25, Y+2	; 0x02
    308c:	89 2b       	or	r24, r25
    308e:	61 f4       	brne	.+24     	; 0x30a8 <_Z41__static_initialization_and_destruction_0ii+0xac>
    3090:	8b 81       	ldd	r24, Y+3	; 0x03
    3092:	9c 81       	ldd	r25, Y+4	; 0x04
    3094:	01 96       	adiw	r24, 0x01	; 1
    3096:	41 f4       	brne	.+16     	; 0x30a8 <_Z41__static_initialization_and_destruction_0ii+0xac>
    3098:	87 e1       	ldi	r24, 0x17	; 23
    309a:	94 e0       	ldi	r25, 0x04	; 4
    309c:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <_ZN12Math_HelpersD1Ev>
volatile bool potEnabled = true;
#else
volatile bool potEnabled = false;
#endif

Serial_Commands _Serial_Commands;
    30a0:	86 e1       	ldi	r24, 0x16	; 22
    30a2:	94 e0       	ldi	r25, 0x04	; 4
    30a4:	0e 94 00 08 	call	0x1000	; 0x1000 <_ZN15Serial_CommandsD1Ev>
{
	
	uint32_t pps = (rpm * MOTOR_STEPS_PER_REV) / 60; // pps is also the frequency, 60 is minutes to seconds
	pps = pps * 2; //* 2 to get two half period waves
	stepDelay = F_CPU / (1 * pps) - 1;
	}
    30a8:	00 00       	nop
    30aa:	0f 90       	pop	r0
    30ac:	0f 90       	pop	r0
    30ae:	0f 90       	pop	r0
    30b0:	0f 90       	pop	r0
    30b2:	df 91       	pop	r29
    30b4:	cf 91       	pop	r28
    30b6:	08 95       	ret

000030b8 <_GLOBAL__sub_I_pcmsk>:
    30b8:	cf 93       	push	r28
    30ba:	df 93       	push	r29
    30bc:	cd b7       	in	r28, 0x3d	; 61
    30be:	de b7       	in	r29, 0x3e	; 62
    30c0:	6f ef       	ldi	r22, 0xFF	; 255
    30c2:	7f ef       	ldi	r23, 0xFF	; 255
    30c4:	81 e0       	ldi	r24, 0x01	; 1
    30c6:	90 e0       	ldi	r25, 0x00	; 0
    30c8:	0e 94 fe 17 	call	0x2ffc	; 0x2ffc <_Z41__static_initialization_and_destruction_0ii>
    30cc:	df 91       	pop	r29
    30ce:	cf 91       	pop	r28
    30d0:	08 95       	ret

000030d2 <_GLOBAL__sub_D_pcmsk>:
    30d2:	cf 93       	push	r28
    30d4:	df 93       	push	r29
    30d6:	cd b7       	in	r28, 0x3d	; 61
    30d8:	de b7       	in	r29, 0x3e	; 62
    30da:	6f ef       	ldi	r22, 0xFF	; 255
    30dc:	7f ef       	ldi	r23, 0xFF	; 255
    30de:	80 e0       	ldi	r24, 0x00	; 0
    30e0:	90 e0       	ldi	r25, 0x00	; 0
    30e2:	0e 94 fe 17 	call	0x2ffc	; 0x2ffc <_Z41__static_initialization_and_destruction_0ii>
    30e6:	df 91       	pop	r29
    30e8:	cf 91       	pop	r28
    30ea:	08 95       	ret

000030ec <_ZN25Step_Output_ConfigurationC1Ev>:
#include <Arduino.h>
#include "Step_Output_Configuration.h"


// default constructor
Step_Output_Configuration::Step_Output_Configuration()
    30ec:	cf 93       	push	r28
    30ee:	df 93       	push	r29
    30f0:	00 d0       	rcall	.+0      	; 0x30f2 <_ZN25Step_Output_ConfigurationC1Ev+0x6>
    30f2:	cd b7       	in	r28, 0x3d	; 61
    30f4:	de b7       	in	r29, 0x3e	; 62
    30f6:	9a 83       	std	Y+2, r25	; 0x02
    30f8:	89 83       	std	Y+1, r24	; 0x01
{
} //Step_Output_Configuration
    30fa:	00 00       	nop
    30fc:	0f 90       	pop	r0
    30fe:	0f 90       	pop	r0
    3100:	df 91       	pop	r29
    3102:	cf 91       	pop	r28
    3104:	08 95       	ret

00003106 <_ZN25Step_Output_Configuration15SetupStepOutputEv>:

void Step_Output_Configuration::SetupStepOutput(void)
{
    3106:	cf 93       	push	r28
    3108:	df 93       	push	r29
    310a:	cd b7       	in	r28, 0x3d	; 61
    310c:	de b7       	in	r29, 0x3e	; 62
  //normal mode
  TCCR1A = 0x00;
    310e:	80 e8       	ldi	r24, 0x80	; 128
    3110:	90 e0       	ldi	r25, 0x00	; 0
    3112:	fc 01       	movw	r30, r24
    3114:	10 82       	st	Z, r1
  OCR1A   = 0;
    3116:	88 e8       	ldi	r24, 0x88	; 136
    3118:	90 e0       	ldi	r25, 0x00	; 0
    311a:	fc 01       	movw	r30, r24
    311c:	11 82       	std	Z+1, r1	; 0x01
    311e:	10 82       	st	Z, r1
  TCCR1B = (1<<CS10);
    3120:	81 e8       	ldi	r24, 0x81	; 129
    3122:	90 e0       	ldi	r25, 0x00	; 0
    3124:	21 e0       	ldi	r18, 0x01	; 1
    3126:	fc 01       	movw	r30, r24
    3128:	20 83       	st	Z, r18
  TIMSK1 |= bit (TOIE1);
    312a:	8f e6       	ldi	r24, 0x6F	; 111
    312c:	90 e0       	ldi	r25, 0x00	; 0
    312e:	2f e6       	ldi	r18, 0x6F	; 111
    3130:	30 e0       	ldi	r19, 0x00	; 0
    3132:	f9 01       	movw	r30, r18
    3134:	20 81       	ld	r18, Z
    3136:	21 60       	ori	r18, 0x01	; 1
    3138:	fc 01       	movw	r30, r24
    313a:	20 83       	st	Z, r18
}
    313c:	00 00       	nop
    313e:	df 91       	pop	r29
    3140:	cf 91       	pop	r28
    3142:	08 95       	ret

00003144 <_ZN25Step_Output_ConfigurationD1Ev>:

// default destructor
Step_Output_Configuration::~Step_Output_Configuration()
    3144:	cf 93       	push	r28
    3146:	df 93       	push	r29
    3148:	00 d0       	rcall	.+0      	; 0x314a <_ZN25Step_Output_ConfigurationD1Ev+0x6>
    314a:	cd b7       	in	r28, 0x3d	; 61
    314c:	de b7       	in	r29, 0x3e	; 62
    314e:	9a 83       	std	Y+2, r25	; 0x02
    3150:	89 83       	std	Y+1, r24	; 0x01
{
} //~Step_Output_Configuration
    3152:	00 00       	nop
    3154:	0f 90       	pop	r0
    3156:	0f 90       	pop	r0
    3158:	df 91       	pop	r29
    315a:	cf 91       	pop	r28
    315c:	08 95       	ret

0000315e <__fixsfsi>:
    315e:	0e 94 b6 18 	call	0x316c	; 0x316c <__fixunssfsi>
    3162:	68 94       	set
    3164:	b1 11       	cpse	r27, r1
    3166:	0c 94 6d 19 	jmp	0x32da	; 0x32da <__fp_szero>
    316a:	08 95       	ret

0000316c <__fixunssfsi>:
    316c:	0e 94 52 19 	call	0x32a4	; 0x32a4 <__fp_splitA>
    3170:	88 f0       	brcs	.+34     	; 0x3194 <__fixunssfsi+0x28>
    3172:	9f 57       	subi	r25, 0x7F	; 127
    3174:	98 f0       	brcs	.+38     	; 0x319c <__fixunssfsi+0x30>
    3176:	b9 2f       	mov	r27, r25
    3178:	99 27       	eor	r25, r25
    317a:	b7 51       	subi	r27, 0x17	; 23
    317c:	b0 f0       	brcs	.+44     	; 0x31aa <__fixunssfsi+0x3e>
    317e:	e1 f0       	breq	.+56     	; 0x31b8 <__fixunssfsi+0x4c>
    3180:	66 0f       	add	r22, r22
    3182:	77 1f       	adc	r23, r23
    3184:	88 1f       	adc	r24, r24
    3186:	99 1f       	adc	r25, r25
    3188:	1a f0       	brmi	.+6      	; 0x3190 <__fixunssfsi+0x24>
    318a:	ba 95       	dec	r27
    318c:	c9 f7       	brne	.-14     	; 0x3180 <__fixunssfsi+0x14>
    318e:	14 c0       	rjmp	.+40     	; 0x31b8 <__fixunssfsi+0x4c>
    3190:	b1 30       	cpi	r27, 0x01	; 1
    3192:	91 f0       	breq	.+36     	; 0x31b8 <__fixunssfsi+0x4c>
    3194:	0e 94 6c 19 	call	0x32d8	; 0x32d8 <__fp_zero>
    3198:	b1 e0       	ldi	r27, 0x01	; 1
    319a:	08 95       	ret
    319c:	0c 94 6c 19 	jmp	0x32d8	; 0x32d8 <__fp_zero>
    31a0:	67 2f       	mov	r22, r23
    31a2:	78 2f       	mov	r23, r24
    31a4:	88 27       	eor	r24, r24
    31a6:	b8 5f       	subi	r27, 0xF8	; 248
    31a8:	39 f0       	breq	.+14     	; 0x31b8 <__fixunssfsi+0x4c>
    31aa:	b9 3f       	cpi	r27, 0xF9	; 249
    31ac:	cc f3       	brlt	.-14     	; 0x31a0 <__fixunssfsi+0x34>
    31ae:	86 95       	lsr	r24
    31b0:	77 95       	ror	r23
    31b2:	67 95       	ror	r22
    31b4:	b3 95       	inc	r27
    31b6:	d9 f7       	brne	.-10     	; 0x31ae <__fixunssfsi+0x42>
    31b8:	3e f4       	brtc	.+14     	; 0x31c8 <__fixunssfsi+0x5c>
    31ba:	90 95       	com	r25
    31bc:	80 95       	com	r24
    31be:	70 95       	com	r23
    31c0:	61 95       	neg	r22
    31c2:	7f 4f       	sbci	r23, 0xFF	; 255
    31c4:	8f 4f       	sbci	r24, 0xFF	; 255
    31c6:	9f 4f       	sbci	r25, 0xFF	; 255
    31c8:	08 95       	ret

000031ca <__floatunsisf>:
    31ca:	e8 94       	clt
    31cc:	09 c0       	rjmp	.+18     	; 0x31e0 <__floatsisf+0x12>

000031ce <__floatsisf>:
    31ce:	97 fb       	bst	r25, 7
    31d0:	3e f4       	brtc	.+14     	; 0x31e0 <__floatsisf+0x12>
    31d2:	90 95       	com	r25
    31d4:	80 95       	com	r24
    31d6:	70 95       	com	r23
    31d8:	61 95       	neg	r22
    31da:	7f 4f       	sbci	r23, 0xFF	; 255
    31dc:	8f 4f       	sbci	r24, 0xFF	; 255
    31de:	9f 4f       	sbci	r25, 0xFF	; 255
    31e0:	99 23       	and	r25, r25
    31e2:	a9 f0       	breq	.+42     	; 0x320e <__floatsisf+0x40>
    31e4:	f9 2f       	mov	r31, r25
    31e6:	96 e9       	ldi	r25, 0x96	; 150
    31e8:	bb 27       	eor	r27, r27
    31ea:	93 95       	inc	r25
    31ec:	f6 95       	lsr	r31
    31ee:	87 95       	ror	r24
    31f0:	77 95       	ror	r23
    31f2:	67 95       	ror	r22
    31f4:	b7 95       	ror	r27
    31f6:	f1 11       	cpse	r31, r1
    31f8:	f8 cf       	rjmp	.-16     	; 0x31ea <__floatsisf+0x1c>
    31fa:	fa f4       	brpl	.+62     	; 0x323a <__floatsisf+0x6c>
    31fc:	bb 0f       	add	r27, r27
    31fe:	11 f4       	brne	.+4      	; 0x3204 <__floatsisf+0x36>
    3200:	60 ff       	sbrs	r22, 0
    3202:	1b c0       	rjmp	.+54     	; 0x323a <__floatsisf+0x6c>
    3204:	6f 5f       	subi	r22, 0xFF	; 255
    3206:	7f 4f       	sbci	r23, 0xFF	; 255
    3208:	8f 4f       	sbci	r24, 0xFF	; 255
    320a:	9f 4f       	sbci	r25, 0xFF	; 255
    320c:	16 c0       	rjmp	.+44     	; 0x323a <__floatsisf+0x6c>
    320e:	88 23       	and	r24, r24
    3210:	11 f0       	breq	.+4      	; 0x3216 <__floatsisf+0x48>
    3212:	96 e9       	ldi	r25, 0x96	; 150
    3214:	11 c0       	rjmp	.+34     	; 0x3238 <__floatsisf+0x6a>
    3216:	77 23       	and	r23, r23
    3218:	21 f0       	breq	.+8      	; 0x3222 <__floatsisf+0x54>
    321a:	9e e8       	ldi	r25, 0x8E	; 142
    321c:	87 2f       	mov	r24, r23
    321e:	76 2f       	mov	r23, r22
    3220:	05 c0       	rjmp	.+10     	; 0x322c <__floatsisf+0x5e>
    3222:	66 23       	and	r22, r22
    3224:	71 f0       	breq	.+28     	; 0x3242 <__floatsisf+0x74>
    3226:	96 e8       	ldi	r25, 0x86	; 134
    3228:	86 2f       	mov	r24, r22
    322a:	70 e0       	ldi	r23, 0x00	; 0
    322c:	60 e0       	ldi	r22, 0x00	; 0
    322e:	2a f0       	brmi	.+10     	; 0x323a <__floatsisf+0x6c>
    3230:	9a 95       	dec	r25
    3232:	66 0f       	add	r22, r22
    3234:	77 1f       	adc	r23, r23
    3236:	88 1f       	adc	r24, r24
    3238:	da f7       	brpl	.-10     	; 0x3230 <__floatsisf+0x62>
    323a:	88 0f       	add	r24, r24
    323c:	96 95       	lsr	r25
    323e:	87 95       	ror	r24
    3240:	97 f9       	bld	r25, 7
    3242:	08 95       	ret

00003244 <__fp_inf>:
    3244:	97 f9       	bld	r25, 7
    3246:	9f 67       	ori	r25, 0x7F	; 127
    3248:	80 e8       	ldi	r24, 0x80	; 128
    324a:	70 e0       	ldi	r23, 0x00	; 0
    324c:	60 e0       	ldi	r22, 0x00	; 0
    324e:	08 95       	ret

00003250 <__fp_nan>:
    3250:	9f ef       	ldi	r25, 0xFF	; 255
    3252:	80 ec       	ldi	r24, 0xC0	; 192
    3254:	08 95       	ret

00003256 <__fp_pscA>:
    3256:	00 24       	eor	r0, r0
    3258:	0a 94       	dec	r0
    325a:	16 16       	cp	r1, r22
    325c:	17 06       	cpc	r1, r23
    325e:	18 06       	cpc	r1, r24
    3260:	09 06       	cpc	r0, r25
    3262:	08 95       	ret

00003264 <__fp_pscB>:
    3264:	00 24       	eor	r0, r0
    3266:	0a 94       	dec	r0
    3268:	12 16       	cp	r1, r18
    326a:	13 06       	cpc	r1, r19
    326c:	14 06       	cpc	r1, r20
    326e:	05 06       	cpc	r0, r21
    3270:	08 95       	ret

00003272 <__fp_round>:
    3272:	09 2e       	mov	r0, r25
    3274:	03 94       	inc	r0
    3276:	00 0c       	add	r0, r0
    3278:	11 f4       	brne	.+4      	; 0x327e <__fp_round+0xc>
    327a:	88 23       	and	r24, r24
    327c:	52 f0       	brmi	.+20     	; 0x3292 <__fp_round+0x20>
    327e:	bb 0f       	add	r27, r27
    3280:	40 f4       	brcc	.+16     	; 0x3292 <__fp_round+0x20>
    3282:	bf 2b       	or	r27, r31
    3284:	11 f4       	brne	.+4      	; 0x328a <__fp_round+0x18>
    3286:	60 ff       	sbrs	r22, 0
    3288:	04 c0       	rjmp	.+8      	; 0x3292 <__fp_round+0x20>
    328a:	6f 5f       	subi	r22, 0xFF	; 255
    328c:	7f 4f       	sbci	r23, 0xFF	; 255
    328e:	8f 4f       	sbci	r24, 0xFF	; 255
    3290:	9f 4f       	sbci	r25, 0xFF	; 255
    3292:	08 95       	ret

00003294 <__fp_split3>:
    3294:	57 fd       	sbrc	r21, 7
    3296:	90 58       	subi	r25, 0x80	; 128
    3298:	44 0f       	add	r20, r20
    329a:	55 1f       	adc	r21, r21
    329c:	59 f0       	breq	.+22     	; 0x32b4 <__fp_splitA+0x10>
    329e:	5f 3f       	cpi	r21, 0xFF	; 255
    32a0:	71 f0       	breq	.+28     	; 0x32be <__fp_splitA+0x1a>
    32a2:	47 95       	ror	r20

000032a4 <__fp_splitA>:
    32a4:	88 0f       	add	r24, r24
    32a6:	97 fb       	bst	r25, 7
    32a8:	99 1f       	adc	r25, r25
    32aa:	61 f0       	breq	.+24     	; 0x32c4 <__fp_splitA+0x20>
    32ac:	9f 3f       	cpi	r25, 0xFF	; 255
    32ae:	79 f0       	breq	.+30     	; 0x32ce <__fp_splitA+0x2a>
    32b0:	87 95       	ror	r24
    32b2:	08 95       	ret
    32b4:	12 16       	cp	r1, r18
    32b6:	13 06       	cpc	r1, r19
    32b8:	14 06       	cpc	r1, r20
    32ba:	55 1f       	adc	r21, r21
    32bc:	f2 cf       	rjmp	.-28     	; 0x32a2 <__fp_split3+0xe>
    32be:	46 95       	lsr	r20
    32c0:	f1 df       	rcall	.-30     	; 0x32a4 <__fp_splitA>
    32c2:	08 c0       	rjmp	.+16     	; 0x32d4 <__fp_splitA+0x30>
    32c4:	16 16       	cp	r1, r22
    32c6:	17 06       	cpc	r1, r23
    32c8:	18 06       	cpc	r1, r24
    32ca:	99 1f       	adc	r25, r25
    32cc:	f1 cf       	rjmp	.-30     	; 0x32b0 <__fp_splitA+0xc>
    32ce:	86 95       	lsr	r24
    32d0:	71 05       	cpc	r23, r1
    32d2:	61 05       	cpc	r22, r1
    32d4:	08 94       	sec
    32d6:	08 95       	ret

000032d8 <__fp_zero>:
    32d8:	e8 94       	clt

000032da <__fp_szero>:
    32da:	bb 27       	eor	r27, r27
    32dc:	66 27       	eor	r22, r22
    32de:	77 27       	eor	r23, r23
    32e0:	cb 01       	movw	r24, r22
    32e2:	97 f9       	bld	r25, 7
    32e4:	08 95       	ret

000032e6 <__mulsf3>:
    32e6:	0e 94 86 19 	call	0x330c	; 0x330c <__mulsf3x>
    32ea:	0c 94 39 19 	jmp	0x3272	; 0x3272 <__fp_round>
    32ee:	0e 94 2b 19 	call	0x3256	; 0x3256 <__fp_pscA>
    32f2:	38 f0       	brcs	.+14     	; 0x3302 <__mulsf3+0x1c>
    32f4:	0e 94 32 19 	call	0x3264	; 0x3264 <__fp_pscB>
    32f8:	20 f0       	brcs	.+8      	; 0x3302 <__mulsf3+0x1c>
    32fa:	95 23       	and	r25, r21
    32fc:	11 f0       	breq	.+4      	; 0x3302 <__mulsf3+0x1c>
    32fe:	0c 94 22 19 	jmp	0x3244	; 0x3244 <__fp_inf>
    3302:	0c 94 28 19 	jmp	0x3250	; 0x3250 <__fp_nan>
    3306:	11 24       	eor	r1, r1
    3308:	0c 94 6d 19 	jmp	0x32da	; 0x32da <__fp_szero>

0000330c <__mulsf3x>:
    330c:	0e 94 4a 19 	call	0x3294	; 0x3294 <__fp_split3>
    3310:	70 f3       	brcs	.-36     	; 0x32ee <__mulsf3+0x8>

00003312 <__mulsf3_pse>:
    3312:	95 9f       	mul	r25, r21
    3314:	c1 f3       	breq	.-16     	; 0x3306 <__mulsf3+0x20>
    3316:	95 0f       	add	r25, r21
    3318:	50 e0       	ldi	r21, 0x00	; 0
    331a:	55 1f       	adc	r21, r21
    331c:	62 9f       	mul	r22, r18
    331e:	f0 01       	movw	r30, r0
    3320:	72 9f       	mul	r23, r18
    3322:	bb 27       	eor	r27, r27
    3324:	f0 0d       	add	r31, r0
    3326:	b1 1d       	adc	r27, r1
    3328:	63 9f       	mul	r22, r19
    332a:	aa 27       	eor	r26, r26
    332c:	f0 0d       	add	r31, r0
    332e:	b1 1d       	adc	r27, r1
    3330:	aa 1f       	adc	r26, r26
    3332:	64 9f       	mul	r22, r20
    3334:	66 27       	eor	r22, r22
    3336:	b0 0d       	add	r27, r0
    3338:	a1 1d       	adc	r26, r1
    333a:	66 1f       	adc	r22, r22
    333c:	82 9f       	mul	r24, r18
    333e:	22 27       	eor	r18, r18
    3340:	b0 0d       	add	r27, r0
    3342:	a1 1d       	adc	r26, r1
    3344:	62 1f       	adc	r22, r18
    3346:	73 9f       	mul	r23, r19
    3348:	b0 0d       	add	r27, r0
    334a:	a1 1d       	adc	r26, r1
    334c:	62 1f       	adc	r22, r18
    334e:	83 9f       	mul	r24, r19
    3350:	a0 0d       	add	r26, r0
    3352:	61 1d       	adc	r22, r1
    3354:	22 1f       	adc	r18, r18
    3356:	74 9f       	mul	r23, r20
    3358:	33 27       	eor	r19, r19
    335a:	a0 0d       	add	r26, r0
    335c:	61 1d       	adc	r22, r1
    335e:	23 1f       	adc	r18, r19
    3360:	84 9f       	mul	r24, r20
    3362:	60 0d       	add	r22, r0
    3364:	21 1d       	adc	r18, r1
    3366:	82 2f       	mov	r24, r18
    3368:	76 2f       	mov	r23, r22
    336a:	6a 2f       	mov	r22, r26
    336c:	11 24       	eor	r1, r1
    336e:	9f 57       	subi	r25, 0x7F	; 127
    3370:	50 40       	sbci	r21, 0x00	; 0
    3372:	9a f0       	brmi	.+38     	; 0x339a <__mulsf3_pse+0x88>
    3374:	f1 f0       	breq	.+60     	; 0x33b2 <__mulsf3_pse+0xa0>
    3376:	88 23       	and	r24, r24
    3378:	4a f0       	brmi	.+18     	; 0x338c <__mulsf3_pse+0x7a>
    337a:	ee 0f       	add	r30, r30
    337c:	ff 1f       	adc	r31, r31
    337e:	bb 1f       	adc	r27, r27
    3380:	66 1f       	adc	r22, r22
    3382:	77 1f       	adc	r23, r23
    3384:	88 1f       	adc	r24, r24
    3386:	91 50       	subi	r25, 0x01	; 1
    3388:	50 40       	sbci	r21, 0x00	; 0
    338a:	a9 f7       	brne	.-22     	; 0x3376 <__mulsf3_pse+0x64>
    338c:	9e 3f       	cpi	r25, 0xFE	; 254
    338e:	51 05       	cpc	r21, r1
    3390:	80 f0       	brcs	.+32     	; 0x33b2 <__mulsf3_pse+0xa0>
    3392:	0c 94 22 19 	jmp	0x3244	; 0x3244 <__fp_inf>
    3396:	0c 94 6d 19 	jmp	0x32da	; 0x32da <__fp_szero>
    339a:	5f 3f       	cpi	r21, 0xFF	; 255
    339c:	e4 f3       	brlt	.-8      	; 0x3396 <__mulsf3_pse+0x84>
    339e:	98 3e       	cpi	r25, 0xE8	; 232
    33a0:	d4 f3       	brlt	.-12     	; 0x3396 <__mulsf3_pse+0x84>
    33a2:	86 95       	lsr	r24
    33a4:	77 95       	ror	r23
    33a6:	67 95       	ror	r22
    33a8:	b7 95       	ror	r27
    33aa:	f7 95       	ror	r31
    33ac:	e7 95       	ror	r30
    33ae:	9f 5f       	subi	r25, 0xFF	; 255
    33b0:	c1 f7       	brne	.-16     	; 0x33a2 <__mulsf3_pse+0x90>
    33b2:	fe 2b       	or	r31, r30
    33b4:	88 0f       	add	r24, r24
    33b6:	91 1d       	adc	r25, r1
    33b8:	96 95       	lsr	r25
    33ba:	87 95       	ror	r24
    33bc:	97 f9       	bld	r25, 7
    33be:	08 95       	ret

000033c0 <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    33c0:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    33c2:	91 8d       	ldd	r25, Z+25	; 0x19
    33c4:	22 8d       	ldd	r18, Z+26	; 0x1a
    33c6:	89 2f       	mov	r24, r25
    33c8:	90 e0       	ldi	r25, 0x00	; 0
    33ca:	80 5c       	subi	r24, 0xC0	; 192
    33cc:	9f 4f       	sbci	r25, 0xFF	; 255
    33ce:	82 1b       	sub	r24, r18
    33d0:	91 09       	sbc	r25, r1
}
    33d2:	8f 73       	andi	r24, 0x3F	; 63
    33d4:	99 27       	eor	r25, r25
    33d6:	08 95       	ret

000033d8 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    33d8:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    33da:	91 8d       	ldd	r25, Z+25	; 0x19
    33dc:	82 8d       	ldd	r24, Z+26	; 0x1a
    33de:	98 17       	cp	r25, r24
    33e0:	31 f0       	breq	.+12     	; 0x33ee <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    33e2:	82 8d       	ldd	r24, Z+26	; 0x1a
    33e4:	e8 0f       	add	r30, r24
    33e6:	f1 1d       	adc	r31, r1
    33e8:	85 8d       	ldd	r24, Z+29	; 0x1d
    33ea:	90 e0       	ldi	r25, 0x00	; 0
    33ec:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    33ee:	8f ef       	ldi	r24, 0xFF	; 255
    33f0:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    33f2:	08 95       	ret

000033f4 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    33f4:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    33f6:	91 8d       	ldd	r25, Z+25	; 0x19
    33f8:	82 8d       	ldd	r24, Z+26	; 0x1a
    33fa:	98 17       	cp	r25, r24
    33fc:	61 f0       	breq	.+24     	; 0x3416 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    33fe:	82 8d       	ldd	r24, Z+26	; 0x1a
    3400:	df 01       	movw	r26, r30
    3402:	a8 0f       	add	r26, r24
    3404:	b1 1d       	adc	r27, r1
    3406:	5d 96       	adiw	r26, 0x1d	; 29
    3408:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    340a:	92 8d       	ldd	r25, Z+26	; 0x1a
    340c:	9f 5f       	subi	r25, 0xFF	; 255
    340e:	9f 73       	andi	r25, 0x3F	; 63
    3410:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    3412:	90 e0       	ldi	r25, 0x00	; 0
    3414:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    3416:	8f ef       	ldi	r24, 0xFF	; 255
    3418:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    341a:	08 95       	ret

0000341c <_ZN14HardwareSerial17availableForWriteEv>:
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    341c:	fc 01       	movw	r30, r24
    341e:	53 8d       	ldd	r21, Z+27	; 0x1b
    tail = _tx_buffer_tail;
    3420:	44 8d       	ldd	r20, Z+28	; 0x1c
    3422:	25 2f       	mov	r18, r21
    3424:	30 e0       	ldi	r19, 0x00	; 0
    3426:	84 2f       	mov	r24, r20
    3428:	90 e0       	ldi	r25, 0x00	; 0
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    342a:	82 1b       	sub	r24, r18
    342c:	93 0b       	sbc	r25, r19
    342e:	54 17       	cp	r21, r20
    3430:	10 f0       	brcs	.+4      	; 0x3436 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    3432:	cf 96       	adiw	r24, 0x3f	; 63
    3434:	08 95       	ret
  return tail - head - 1;
    3436:	01 97       	sbiw	r24, 0x01	; 1
}
    3438:	08 95       	ret

0000343a <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    343a:	89 e7       	ldi	r24, 0x79	; 121
    343c:	9b e1       	ldi	r25, 0x1B	; 27
    343e:	89 2b       	or	r24, r25
    3440:	49 f0       	breq	.+18     	; 0x3454 <_Z14serialEventRunv+0x1a>
    3442:	80 e0       	ldi	r24, 0x00	; 0
    3444:	90 e0       	ldi	r25, 0x00	; 0
    3446:	89 2b       	or	r24, r25
    3448:	29 f0       	breq	.+10     	; 0x3454 <_Z14serialEventRunv+0x1a>
    344a:	0e 94 79 1b 	call	0x36f2	; 0x36f2 <_Z17Serial0_availablev>
    344e:	81 11       	cpse	r24, r1
    3450:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    3454:	08 95       	ret

00003456 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    3456:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    3458:	84 8d       	ldd	r24, Z+28	; 0x1c
    345a:	df 01       	movw	r26, r30
    345c:	a8 0f       	add	r26, r24
    345e:	b1 1d       	adc	r27, r1
    3460:	a3 5a       	subi	r26, 0xA3	; 163
    3462:	bf 4f       	sbci	r27, 0xFF	; 255
    3464:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    3466:	84 8d       	ldd	r24, Z+28	; 0x1c
    3468:	90 e0       	ldi	r25, 0x00	; 0
    346a:	01 96       	adiw	r24, 0x01	; 1
    346c:	8f 73       	andi	r24, 0x3F	; 63
    346e:	99 27       	eor	r25, r25
    3470:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    3472:	a6 89       	ldd	r26, Z+22	; 0x16
    3474:	b7 89       	ldd	r27, Z+23	; 0x17
    3476:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    3478:	a0 89       	ldd	r26, Z+16	; 0x10
    347a:	b1 89       	ldd	r27, Z+17	; 0x11
    347c:	8c 91       	ld	r24, X
    347e:	83 70       	andi	r24, 0x03	; 3
    3480:	80 64       	ori	r24, 0x40	; 64
    3482:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    3484:	93 8d       	ldd	r25, Z+27	; 0x1b
    3486:	84 8d       	ldd	r24, Z+28	; 0x1c
    3488:	98 13       	cpse	r25, r24
    348a:	06 c0       	rjmp	.+12     	; 0x3498 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    348c:	02 88       	ldd	r0, Z+18	; 0x12
    348e:	f3 89       	ldd	r31, Z+19	; 0x13
    3490:	e0 2d       	mov	r30, r0
    3492:	80 81       	ld	r24, Z
    3494:	8f 7d       	andi	r24, 0xDF	; 223
    3496:	80 83       	st	Z, r24
    3498:	08 95       	ret

0000349a <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    349a:	ef 92       	push	r14
    349c:	ff 92       	push	r15
    349e:	0f 93       	push	r16
    34a0:	1f 93       	push	r17
    34a2:	cf 93       	push	r28
    34a4:	df 93       	push	r29
    34a6:	ec 01       	movw	r28, r24
  _written = true;
    34a8:	81 e0       	ldi	r24, 0x01	; 1
    34aa:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    34ac:	9b 8d       	ldd	r25, Y+27	; 0x1b
    34ae:	8c 8d       	ldd	r24, Y+28	; 0x1c
    34b0:	98 13       	cpse	r25, r24
    34b2:	05 c0       	rjmp	.+10     	; 0x34be <_ZN14HardwareSerial5writeEh+0x24>
    34b4:	e8 89       	ldd	r30, Y+16	; 0x10
    34b6:	f9 89       	ldd	r31, Y+17	; 0x11
    34b8:	80 81       	ld	r24, Z
    34ba:	85 fd       	sbrc	r24, 5
    34bc:	26 c0       	rjmp	.+76     	; 0x350a <_ZN14HardwareSerial5writeEh+0x70>
    34be:	f6 2e       	mov	r15, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    34c0:	0b 8d       	ldd	r16, Y+27	; 0x1b
    34c2:	10 e0       	ldi	r17, 0x00	; 0
    34c4:	0f 5f       	subi	r16, 0xFF	; 255
    34c6:	1f 4f       	sbci	r17, 0xFF	; 255
    34c8:	0f 73       	andi	r16, 0x3F	; 63
    34ca:	11 27       	eor	r17, r17
    34cc:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    34ce:	8c 8d       	ldd	r24, Y+28	; 0x1c
    34d0:	e8 12       	cpse	r14, r24
    34d2:	0c c0       	rjmp	.+24     	; 0x34ec <_ZN14HardwareSerial5writeEh+0x52>
    if (bit_is_clear(SREG, SREG_I)) {
    34d4:	0f b6       	in	r0, 0x3f	; 63
    34d6:	07 fc       	sbrc	r0, 7
    34d8:	fa cf       	rjmp	.-12     	; 0x34ce <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    34da:	e8 89       	ldd	r30, Y+16	; 0x10
    34dc:	f9 89       	ldd	r31, Y+17	; 0x11
    34de:	80 81       	ld	r24, Z
    34e0:	85 ff       	sbrs	r24, 5
    34e2:	f5 cf       	rjmp	.-22     	; 0x34ce <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    34e4:	ce 01       	movw	r24, r28
    34e6:	0e 94 2b 1a 	call	0x3456	; 0x3456 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    34ea:	f1 cf       	rjmp	.-30     	; 0x34ce <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    34ec:	8b 8d       	ldd	r24, Y+27	; 0x1b
    34ee:	fe 01       	movw	r30, r28
    34f0:	e8 0f       	add	r30, r24
    34f2:	f1 1d       	adc	r31, r1
    34f4:	e3 5a       	subi	r30, 0xA3	; 163
    34f6:	ff 4f       	sbci	r31, 0xFF	; 255
    34f8:	f0 82       	st	Z, r15

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    34fa:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    34fc:	f8 94       	cli
    _tx_buffer_head = i;
    34fe:	0b 8f       	std	Y+27, r16	; 0x1b
    sbi(*_ucsrb, UDRIE0);
    3500:	ea 89       	ldd	r30, Y+18	; 0x12
    3502:	fb 89       	ldd	r31, Y+19	; 0x13
    3504:	80 81       	ld	r24, Z
    3506:	80 62       	ori	r24, 0x20	; 32
    3508:	0a c0       	rjmp	.+20     	; 0x351e <_ZN14HardwareSerial5writeEh+0x84>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    350a:	9f b7       	in	r25, 0x3f	; 63
    350c:	f8 94       	cli
      *_udr = c;
    350e:	ee 89       	ldd	r30, Y+22	; 0x16
    3510:	ff 89       	ldd	r31, Y+23	; 0x17
    3512:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    3514:	e8 89       	ldd	r30, Y+16	; 0x10
    3516:	f9 89       	ldd	r31, Y+17	; 0x11
    3518:	80 81       	ld	r24, Z
    351a:	83 70       	andi	r24, 0x03	; 3
    351c:	80 64       	ori	r24, 0x40	; 64
    351e:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    3520:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
    3522:	81 e0       	ldi	r24, 0x01	; 1
    3524:	90 e0       	ldi	r25, 0x00	; 0
    3526:	df 91       	pop	r29
    3528:	cf 91       	pop	r28
    352a:	1f 91       	pop	r17
    352c:	0f 91       	pop	r16
    352e:	ff 90       	pop	r15
    3530:	ef 90       	pop	r14
    3532:	08 95       	ret

00003534 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    3534:	cf 93       	push	r28
    3536:	df 93       	push	r29
    3538:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    353a:	88 8d       	ldd	r24, Y+24	; 0x18
    353c:	88 23       	and	r24, r24
    353e:	c9 f0       	breq	.+50     	; 0x3572 <_ZN14HardwareSerial5flushEv+0x3e>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    3540:	ea 89       	ldd	r30, Y+18	; 0x12
    3542:	fb 89       	ldd	r31, Y+19	; 0x13
    3544:	80 81       	ld	r24, Z
    3546:	85 fd       	sbrc	r24, 5
    3548:	05 c0       	rjmp	.+10     	; 0x3554 <_ZN14HardwareSerial5flushEv+0x20>
    354a:	a8 89       	ldd	r26, Y+16	; 0x10
    354c:	b9 89       	ldd	r27, Y+17	; 0x11
    354e:	8c 91       	ld	r24, X
    3550:	86 fd       	sbrc	r24, 6
    3552:	0f c0       	rjmp	.+30     	; 0x3572 <_ZN14HardwareSerial5flushEv+0x3e>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    3554:	0f b6       	in	r0, 0x3f	; 63
    3556:	07 fc       	sbrc	r0, 7
    3558:	f5 cf       	rjmp	.-22     	; 0x3544 <_ZN14HardwareSerial5flushEv+0x10>
    355a:	80 81       	ld	r24, Z
    355c:	85 ff       	sbrs	r24, 5
    355e:	f2 cf       	rjmp	.-28     	; 0x3544 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    3560:	a8 89       	ldd	r26, Y+16	; 0x10
    3562:	b9 89       	ldd	r27, Y+17	; 0x11
    3564:	8c 91       	ld	r24, X
    3566:	85 ff       	sbrs	r24, 5
    3568:	ed cf       	rjmp	.-38     	; 0x3544 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    356a:	ce 01       	movw	r24, r28
    356c:	0e 94 2b 1a 	call	0x3456	; 0x3456 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    3570:	e7 cf       	rjmp	.-50     	; 0x3540 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    3572:	df 91       	pop	r29
    3574:	cf 91       	pop	r28
    3576:	08 95       	ret

00003578 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    3578:	cf 92       	push	r12
    357a:	df 92       	push	r13
    357c:	ef 92       	push	r14
    357e:	ff 92       	push	r15
    3580:	1f 93       	push	r17
    3582:	cf 93       	push	r28
    3584:	df 93       	push	r29
    3586:	ec 01       	movw	r28, r24
    3588:	6a 01       	movw	r12, r20
    358a:	7b 01       	movw	r14, r22
    358c:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    358e:	e8 89       	ldd	r30, Y+16	; 0x10
    3590:	f9 89       	ldd	r31, Y+17	; 0x11
    3592:	82 e0       	ldi	r24, 0x02	; 2
    3594:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    3596:	41 15       	cp	r20, r1
    3598:	51 4e       	sbci	r21, 0xE1	; 225
    359a:	61 05       	cpc	r22, r1
    359c:	71 05       	cpc	r23, r1
    359e:	b1 f0       	breq	.+44     	; 0x35cc <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    35a0:	60 e0       	ldi	r22, 0x00	; 0
    35a2:	79 e0       	ldi	r23, 0x09	; 9
    35a4:	8d e3       	ldi	r24, 0x3D	; 61
    35a6:	90 e0       	ldi	r25, 0x00	; 0
    35a8:	a7 01       	movw	r20, r14
    35aa:	96 01       	movw	r18, r12
    35ac:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <__udivmodsi4>
    35b0:	da 01       	movw	r26, r20
    35b2:	c9 01       	movw	r24, r18
    35b4:	01 97       	sbiw	r24, 0x01	; 1
    35b6:	a1 09       	sbc	r26, r1
    35b8:	b1 09       	sbc	r27, r1
    35ba:	b6 95       	lsr	r27
    35bc:	a7 95       	ror	r26
    35be:	97 95       	ror	r25
    35c0:	87 95       	ror	r24
    35c2:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    35c4:	21 15       	cp	r18, r1
    35c6:	80 e1       	ldi	r24, 0x10	; 16
    35c8:	38 07       	cpc	r19, r24
    35ca:	a8 f0       	brcs	.+42     	; 0x35f6 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
    35cc:	e8 89       	ldd	r30, Y+16	; 0x10
    35ce:	f9 89       	ldd	r31, Y+17	; 0x11
    35d0:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    35d2:	60 e8       	ldi	r22, 0x80	; 128
    35d4:	74 e8       	ldi	r23, 0x84	; 132
    35d6:	8e e1       	ldi	r24, 0x1E	; 30
    35d8:	90 e0       	ldi	r25, 0x00	; 0
    35da:	a7 01       	movw	r20, r14
    35dc:	96 01       	movw	r18, r12
    35de:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <__udivmodsi4>
    35e2:	da 01       	movw	r26, r20
    35e4:	c9 01       	movw	r24, r18
    35e6:	01 97       	sbiw	r24, 0x01	; 1
    35e8:	a1 09       	sbc	r26, r1
    35ea:	b1 09       	sbc	r27, r1
    35ec:	b6 95       	lsr	r27
    35ee:	a7 95       	ror	r26
    35f0:	97 95       	ror	r25
    35f2:	87 95       	ror	r24
    35f4:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    35f6:	ec 85       	ldd	r30, Y+12	; 0x0c
    35f8:	fd 85       	ldd	r31, Y+13	; 0x0d
    35fa:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    35fc:	ee 85       	ldd	r30, Y+14	; 0x0e
    35fe:	ff 85       	ldd	r31, Y+15	; 0x0f
    3600:	20 83       	st	Z, r18

  _written = false;
    3602:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    3604:	ec 89       	ldd	r30, Y+20	; 0x14
    3606:	fd 89       	ldd	r31, Y+21	; 0x15
    3608:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    360a:	ea 89       	ldd	r30, Y+18	; 0x12
    360c:	fb 89       	ldd	r31, Y+19	; 0x13
    360e:	80 81       	ld	r24, Z
    3610:	80 61       	ori	r24, 0x10	; 16
    3612:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    3614:	ea 89       	ldd	r30, Y+18	; 0x12
    3616:	fb 89       	ldd	r31, Y+19	; 0x13
    3618:	80 81       	ld	r24, Z
    361a:	88 60       	ori	r24, 0x08	; 8
    361c:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    361e:	ea 89       	ldd	r30, Y+18	; 0x12
    3620:	fb 89       	ldd	r31, Y+19	; 0x13
    3622:	80 81       	ld	r24, Z
    3624:	80 68       	ori	r24, 0x80	; 128
    3626:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    3628:	ea 89       	ldd	r30, Y+18	; 0x12
    362a:	fb 89       	ldd	r31, Y+19	; 0x13
    362c:	80 81       	ld	r24, Z
    362e:	8f 7d       	andi	r24, 0xDF	; 223
    3630:	80 83       	st	Z, r24
}
    3632:	df 91       	pop	r29
    3634:	cf 91       	pop	r28
    3636:	1f 91       	pop	r17
    3638:	ff 90       	pop	r15
    363a:	ef 90       	pop	r14
    363c:	df 90       	pop	r13
    363e:	cf 90       	pop	r12
    3640:	08 95       	ret

00003642 <__vector_18>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    3642:	1f 92       	push	r1
    3644:	0f 92       	push	r0
    3646:	0f b6       	in	r0, 0x3f	; 63
    3648:	0f 92       	push	r0
    364a:	11 24       	eor	r1, r1
    364c:	2f 93       	push	r18
    364e:	8f 93       	push	r24
    3650:	9f 93       	push	r25
    3652:	ef 93       	push	r30
    3654:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    3656:	e0 91 28 04 	lds	r30, 0x0428	; 0x800428 <Serial+0x10>
    365a:	f0 91 29 04 	lds	r31, 0x0429	; 0x800429 <Serial+0x11>
    365e:	80 81       	ld	r24, Z
    3660:	e0 91 2e 04 	lds	r30, 0x042E	; 0x80042e <Serial+0x16>
    3664:	f0 91 2f 04 	lds	r31, 0x042F	; 0x80042f <Serial+0x17>
    3668:	82 fd       	sbrc	r24, 2
    366a:	12 c0       	rjmp	.+36     	; 0x3690 <__vector_18+0x4e>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    366c:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    366e:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <Serial+0x19>
    3672:	8f 5f       	subi	r24, 0xFF	; 255
    3674:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    3676:	20 91 32 04 	lds	r18, 0x0432	; 0x800432 <Serial+0x1a>
    367a:	82 17       	cp	r24, r18
    367c:	51 f0       	breq	.+20     	; 0x3692 <__vector_18+0x50>
      _rx_buffer[_rx_buffer_head] = c;
    367e:	e0 91 31 04 	lds	r30, 0x0431	; 0x800431 <Serial+0x19>
    3682:	f0 e0       	ldi	r31, 0x00	; 0
    3684:	e8 5e       	subi	r30, 0xE8	; 232
    3686:	fb 4f       	sbci	r31, 0xFB	; 251
    3688:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    368a:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <Serial+0x19>
    368e:	01 c0       	rjmp	.+2      	; 0x3692 <__vector_18+0x50>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    3690:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    3692:	ff 91       	pop	r31
    3694:	ef 91       	pop	r30
    3696:	9f 91       	pop	r25
    3698:	8f 91       	pop	r24
    369a:	2f 91       	pop	r18
    369c:	0f 90       	pop	r0
    369e:	0f be       	out	0x3f, r0	; 63
    36a0:	0f 90       	pop	r0
    36a2:	1f 90       	pop	r1
    36a4:	18 95       	reti

000036a6 <__vector_19>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    36a6:	1f 92       	push	r1
    36a8:	0f 92       	push	r0
    36aa:	0f b6       	in	r0, 0x3f	; 63
    36ac:	0f 92       	push	r0
    36ae:	11 24       	eor	r1, r1
    36b0:	2f 93       	push	r18
    36b2:	3f 93       	push	r19
    36b4:	4f 93       	push	r20
    36b6:	5f 93       	push	r21
    36b8:	6f 93       	push	r22
    36ba:	7f 93       	push	r23
    36bc:	8f 93       	push	r24
    36be:	9f 93       	push	r25
    36c0:	af 93       	push	r26
    36c2:	bf 93       	push	r27
    36c4:	ef 93       	push	r30
    36c6:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    36c8:	88 e1       	ldi	r24, 0x18	; 24
    36ca:	94 e0       	ldi	r25, 0x04	; 4
    36cc:	0e 94 2b 1a 	call	0x3456	; 0x3456 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    36d0:	ff 91       	pop	r31
    36d2:	ef 91       	pop	r30
    36d4:	bf 91       	pop	r27
    36d6:	af 91       	pop	r26
    36d8:	9f 91       	pop	r25
    36da:	8f 91       	pop	r24
    36dc:	7f 91       	pop	r23
    36de:	6f 91       	pop	r22
    36e0:	5f 91       	pop	r21
    36e2:	4f 91       	pop	r20
    36e4:	3f 91       	pop	r19
    36e6:	2f 91       	pop	r18
    36e8:	0f 90       	pop	r0
    36ea:	0f be       	out	0x3f, r0	; 63
    36ec:	0f 90       	pop	r0
    36ee:	1f 90       	pop	r1
    36f0:	18 95       	reti

000036f2 <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    36f2:	88 e1       	ldi	r24, 0x18	; 24
    36f4:	94 e0       	ldi	r25, 0x04	; 4
    36f6:	0e 94 e0 19 	call	0x33c0	; 0x33c0 <_ZN14HardwareSerial9availableEv>
    36fa:	21 e0       	ldi	r18, 0x01	; 1
    36fc:	89 2b       	or	r24, r25
    36fe:	09 f4       	brne	.+2      	; 0x3702 <_Z17Serial0_availablev+0x10>
    3700:	20 e0       	ldi	r18, 0x00	; 0
}
    3702:	82 2f       	mov	r24, r18
    3704:	08 95       	ret

00003706 <_GLOBAL__sub_I___vector_18>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    3706:	e8 e1       	ldi	r30, 0x18	; 24
    3708:	f4 e0       	ldi	r31, 0x04	; 4
    370a:	13 82       	std	Z+3, r1	; 0x03
    370c:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    370e:	88 ee       	ldi	r24, 0xE8	; 232
    3710:	93 e0       	ldi	r25, 0x03	; 3
    3712:	a0 e0       	ldi	r26, 0x00	; 0
    3714:	b0 e0       	ldi	r27, 0x00	; 0
    3716:	84 83       	std	Z+4, r24	; 0x04
    3718:	95 83       	std	Z+5, r25	; 0x05
    371a:	a6 83       	std	Z+6, r26	; 0x06
    371c:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    371e:	87 e8       	ldi	r24, 0x87	; 135
    3720:	93 e0       	ldi	r25, 0x03	; 3
    3722:	91 83       	std	Z+1, r25	; 0x01
    3724:	80 83       	st	Z, r24
    3726:	85 ec       	ldi	r24, 0xC5	; 197
    3728:	90 e0       	ldi	r25, 0x00	; 0
    372a:	95 87       	std	Z+13, r25	; 0x0d
    372c:	84 87       	std	Z+12, r24	; 0x0c
    372e:	84 ec       	ldi	r24, 0xC4	; 196
    3730:	90 e0       	ldi	r25, 0x00	; 0
    3732:	97 87       	std	Z+15, r25	; 0x0f
    3734:	86 87       	std	Z+14, r24	; 0x0e
    3736:	80 ec       	ldi	r24, 0xC0	; 192
    3738:	90 e0       	ldi	r25, 0x00	; 0
    373a:	91 8b       	std	Z+17, r25	; 0x11
    373c:	80 8b       	std	Z+16, r24	; 0x10
    373e:	81 ec       	ldi	r24, 0xC1	; 193
    3740:	90 e0       	ldi	r25, 0x00	; 0
    3742:	93 8b       	std	Z+19, r25	; 0x13
    3744:	82 8b       	std	Z+18, r24	; 0x12
    3746:	82 ec       	ldi	r24, 0xC2	; 194
    3748:	90 e0       	ldi	r25, 0x00	; 0
    374a:	95 8b       	std	Z+21, r25	; 0x15
    374c:	84 8b       	std	Z+20, r24	; 0x14
    374e:	86 ec       	ldi	r24, 0xC6	; 198
    3750:	90 e0       	ldi	r25, 0x00	; 0
    3752:	97 8b       	std	Z+23, r25	; 0x17
    3754:	86 8b       	std	Z+22, r24	; 0x16
    3756:	11 8e       	std	Z+25, r1	; 0x19
    3758:	12 8e       	std	Z+26, r1	; 0x1a
    375a:	13 8e       	std	Z+27, r1	; 0x1b
    375c:	14 8e       	std	Z+28, r1	; 0x1c
    375e:	08 95       	ret

00003760 <initVariant>:
    3760:	08 95       	ret

00003762 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    3762:	0e 94 81 1d 	call	0x3b02	; 0x3b02 <init>

	initVariant();
    3766:	0e 94 b0 1b 	call	0x3760	; 0x3760 <initVariant>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    376a:	0e 94 c0 10 	call	0x2180	; 0x2180 <setup>
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    376e:	cd e1       	ldi	r28, 0x1D	; 29
    3770:	da e1       	ldi	r29, 0x1A	; 26
#endif
	
	setup();
    
	for (;;) {
		loop();
    3772:	0e 94 0d 11 	call	0x221a	; 0x221a <loop>
		if (serialEventRun) serialEventRun();
    3776:	20 97       	sbiw	r28, 0x00	; 0
    3778:	e1 f3       	breq	.-8      	; 0x3772 <main+0x10>
    377a:	0e 94 1d 1a 	call	0x343a	; 0x343a <_Z14serialEventRunv>
    377e:	f9 cf       	rjmp	.-14     	; 0x3772 <main+0x10>

00003780 <_ZN5Print5writeEPKhj>:
size_t Print::println(int num, int base)
{
  size_t n = print(num, base);
  n += println();
  return n;
}
    3780:	cf 92       	push	r12
    3782:	df 92       	push	r13
    3784:	ef 92       	push	r14
    3786:	ff 92       	push	r15
    3788:	0f 93       	push	r16
    378a:	1f 93       	push	r17
    378c:	cf 93       	push	r28
    378e:	df 93       	push	r29
    3790:	6c 01       	movw	r12, r24
    3792:	7a 01       	movw	r14, r20
    3794:	8b 01       	movw	r16, r22
    3796:	c0 e0       	ldi	r28, 0x00	; 0
    3798:	d0 e0       	ldi	r29, 0x00	; 0
    379a:	ce 15       	cp	r28, r14
    379c:	df 05       	cpc	r29, r15
    379e:	81 f0       	breq	.+32     	; 0x37c0 <_ZN5Print5writeEPKhj+0x40>
    37a0:	d8 01       	movw	r26, r16
    37a2:	6d 91       	ld	r22, X+
    37a4:	8d 01       	movw	r16, r26
    37a6:	d6 01       	movw	r26, r12
    37a8:	ed 91       	ld	r30, X+
    37aa:	fc 91       	ld	r31, X
    37ac:	01 90       	ld	r0, Z+
    37ae:	f0 81       	ld	r31, Z
    37b0:	e0 2d       	mov	r30, r0
    37b2:	c6 01       	movw	r24, r12
    37b4:	09 95       	icall
    37b6:	89 2b       	or	r24, r25
    37b8:	11 f0       	breq	.+4      	; 0x37be <_ZN5Print5writeEPKhj+0x3e>
    37ba:	21 96       	adiw	r28, 0x01	; 1
    37bc:	ee cf       	rjmp	.-36     	; 0x379a <_ZN5Print5writeEPKhj+0x1a>
    37be:	7e 01       	movw	r14, r28
    37c0:	c7 01       	movw	r24, r14
    37c2:	df 91       	pop	r29
    37c4:	cf 91       	pop	r28
    37c6:	1f 91       	pop	r17
    37c8:	0f 91       	pop	r16
    37ca:	ff 90       	pop	r15
    37cc:	ef 90       	pop	r14
    37ce:	df 90       	pop	r13
    37d0:	cf 90       	pop	r12
    37d2:	08 95       	ret

000037d4 <_ZN5Print5writeEPKc>:
    37d4:	61 15       	cp	r22, r1
    37d6:	71 05       	cpc	r23, r1
    37d8:	79 f0       	breq	.+30     	; 0x37f8 <_ZN5Print5writeEPKc+0x24>
    37da:	fb 01       	movw	r30, r22
    37dc:	01 90       	ld	r0, Z+
    37de:	00 20       	and	r0, r0
    37e0:	e9 f7       	brne	.-6      	; 0x37dc <_ZN5Print5writeEPKc+0x8>
    37e2:	31 97       	sbiw	r30, 0x01	; 1
    37e4:	af 01       	movw	r20, r30
    37e6:	46 1b       	sub	r20, r22
    37e8:	57 0b       	sbc	r21, r23
    37ea:	dc 01       	movw	r26, r24
    37ec:	ed 91       	ld	r30, X+
    37ee:	fc 91       	ld	r31, X
    37f0:	02 80       	ldd	r0, Z+2	; 0x02
    37f2:	f3 81       	ldd	r31, Z+3	; 0x03
    37f4:	e0 2d       	mov	r30, r0
    37f6:	09 94       	ijmp
    37f8:	80 e0       	ldi	r24, 0x00	; 0
    37fa:	90 e0       	ldi	r25, 0x00	; 0
    37fc:	08 95       	ret

000037fe <_ZN5Print5printEPKc>:
    37fe:	0c 94 ea 1b 	jmp	0x37d4	; 0x37d4 <_ZN5Print5writeEPKc>

00003802 <_ZN5Print5printEc>:
    3802:	dc 01       	movw	r26, r24
    3804:	ed 91       	ld	r30, X+
    3806:	fc 91       	ld	r31, X
    3808:	01 90       	ld	r0, Z+
    380a:	f0 81       	ld	r31, Z
    380c:	e0 2d       	mov	r30, r0
    380e:	09 94       	ijmp

00003810 <_ZN5Print7printlnEv>:
    3810:	65 e9       	ldi	r22, 0x95	; 149
    3812:	73 e0       	ldi	r23, 0x03	; 3
    3814:	0c 94 ea 1b 	jmp	0x37d4	; 0x37d4 <_ZN5Print5writeEPKc>

00003818 <_ZN5Print7printlnEPKc>:
    3818:	0f 93       	push	r16
    381a:	1f 93       	push	r17
    381c:	cf 93       	push	r28
    381e:	df 93       	push	r29
    3820:	ec 01       	movw	r28, r24
    3822:	0e 94 ea 1b 	call	0x37d4	; 0x37d4 <_ZN5Print5writeEPKc>
    3826:	8c 01       	movw	r16, r24
    3828:	ce 01       	movw	r24, r28
    382a:	0e 94 08 1c 	call	0x3810	; 0x3810 <_ZN5Print7printlnEv>
    382e:	80 0f       	add	r24, r16
    3830:	91 1f       	adc	r25, r17
    3832:	df 91       	pop	r29
    3834:	cf 91       	pop	r28
    3836:	1f 91       	pop	r17
    3838:	0f 91       	pop	r16
    383a:	08 95       	ret

0000383c <_ZN5Print11printNumberEmh>:
    383c:	8f 92       	push	r8
    383e:	9f 92       	push	r9
    3840:	af 92       	push	r10
    3842:	bf 92       	push	r11
    3844:	ef 92       	push	r14
    3846:	ff 92       	push	r15
    3848:	0f 93       	push	r16
    384a:	1f 93       	push	r17
    384c:	cf 93       	push	r28
    384e:	df 93       	push	r29
    3850:	cd b7       	in	r28, 0x3d	; 61
    3852:	de b7       	in	r29, 0x3e	; 62
    3854:	a1 97       	sbiw	r28, 0x21	; 33
    3856:	0f b6       	in	r0, 0x3f	; 63
    3858:	f8 94       	cli
    385a:	de bf       	out	0x3e, r29	; 62
    385c:	0f be       	out	0x3f, r0	; 63
    385e:	cd bf       	out	0x3d, r28	; 61
    3860:	7c 01       	movw	r14, r24
    3862:	fa 01       	movw	r30, r20
    3864:	cb 01       	movw	r24, r22
    3866:	19 a2       	std	Y+33, r1	; 0x21
    3868:	22 30       	cpi	r18, 0x02	; 2
    386a:	08 f4       	brcc	.+2      	; 0x386e <_ZN5Print11printNumberEmh+0x32>
    386c:	2a e0       	ldi	r18, 0x0A	; 10
    386e:	8e 01       	movw	r16, r28
    3870:	0f 5d       	subi	r16, 0xDF	; 223
    3872:	1f 4f       	sbci	r17, 0xFF	; 255
    3874:	82 2e       	mov	r8, r18
    3876:	91 2c       	mov	r9, r1
    3878:	a1 2c       	mov	r10, r1
    387a:	b1 2c       	mov	r11, r1
    387c:	bf 01       	movw	r22, r30
    387e:	a5 01       	movw	r20, r10
    3880:	94 01       	movw	r18, r8
    3882:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <__udivmodsi4>
    3886:	f9 01       	movw	r30, r18
    3888:	ca 01       	movw	r24, r20
    388a:	01 50       	subi	r16, 0x01	; 1
    388c:	11 09       	sbc	r17, r1
    388e:	6a 30       	cpi	r22, 0x0A	; 10
    3890:	10 f4       	brcc	.+4      	; 0x3896 <_ZN5Print11printNumberEmh+0x5a>
    3892:	60 5d       	subi	r22, 0xD0	; 208
    3894:	01 c0       	rjmp	.+2      	; 0x3898 <_ZN5Print11printNumberEmh+0x5c>
    3896:	69 5c       	subi	r22, 0xC9	; 201
    3898:	d8 01       	movw	r26, r16
    389a:	6c 93       	st	X, r22
    389c:	23 2b       	or	r18, r19
    389e:	24 2b       	or	r18, r20
    38a0:	25 2b       	or	r18, r21
    38a2:	61 f7       	brne	.-40     	; 0x387c <_ZN5Print11printNumberEmh+0x40>
    38a4:	b8 01       	movw	r22, r16
    38a6:	c7 01       	movw	r24, r14
    38a8:	0e 94 ea 1b 	call	0x37d4	; 0x37d4 <_ZN5Print5writeEPKc>
    38ac:	a1 96       	adiw	r28, 0x21	; 33
    38ae:	0f b6       	in	r0, 0x3f	; 63
    38b0:	f8 94       	cli
    38b2:	de bf       	out	0x3e, r29	; 62
    38b4:	0f be       	out	0x3f, r0	; 63
    38b6:	cd bf       	out	0x3d, r28	; 61
    38b8:	df 91       	pop	r29
    38ba:	cf 91       	pop	r28
    38bc:	1f 91       	pop	r17
    38be:	0f 91       	pop	r16
    38c0:	ff 90       	pop	r15
    38c2:	ef 90       	pop	r14
    38c4:	bf 90       	pop	r11
    38c6:	af 90       	pop	r10
    38c8:	9f 90       	pop	r9
    38ca:	8f 90       	pop	r8
    38cc:	08 95       	ret

000038ce <_ZN5Print5printEli>:
    38ce:	cf 92       	push	r12
    38d0:	df 92       	push	r13
    38d2:	ef 92       	push	r14
    38d4:	ff 92       	push	r15
    38d6:	0f 93       	push	r16
    38d8:	1f 93       	push	r17
    38da:	cf 93       	push	r28
    38dc:	df 93       	push	r29
    38de:	21 15       	cp	r18, r1
    38e0:	31 05       	cpc	r19, r1
    38e2:	81 f4       	brne	.+32     	; 0x3904 <_ZN5Print5printEli+0x36>
    38e4:	dc 01       	movw	r26, r24
    38e6:	ed 91       	ld	r30, X+
    38e8:	fc 91       	ld	r31, X
    38ea:	01 90       	ld	r0, Z+
    38ec:	f0 81       	ld	r31, Z
    38ee:	e0 2d       	mov	r30, r0
    38f0:	64 2f       	mov	r22, r20
    38f2:	df 91       	pop	r29
    38f4:	cf 91       	pop	r28
    38f6:	1f 91       	pop	r17
    38f8:	0f 91       	pop	r16
    38fa:	ff 90       	pop	r15
    38fc:	ef 90       	pop	r14
    38fe:	df 90       	pop	r13
    3900:	cf 90       	pop	r12
    3902:	09 94       	ijmp
    3904:	2a 30       	cpi	r18, 0x0A	; 10
    3906:	31 05       	cpc	r19, r1
    3908:	01 f5       	brne	.+64     	; 0x394a <_ZN5Print5printEli+0x7c>
    390a:	77 ff       	sbrs	r23, 7
    390c:	1d c0       	rjmp	.+58     	; 0x3948 <_ZN5Print5printEli+0x7a>
    390e:	6a 01       	movw	r12, r20
    3910:	7b 01       	movw	r14, r22
    3912:	ec 01       	movw	r28, r24
    3914:	6d e2       	ldi	r22, 0x2D	; 45
    3916:	0e 94 01 1c 	call	0x3802	; 0x3802 <_ZN5Print5printEc>
    391a:	8c 01       	movw	r16, r24
    391c:	44 27       	eor	r20, r20
    391e:	55 27       	eor	r21, r21
    3920:	ba 01       	movw	r22, r20
    3922:	4c 19       	sub	r20, r12
    3924:	5d 09       	sbc	r21, r13
    3926:	6e 09       	sbc	r22, r14
    3928:	7f 09       	sbc	r23, r15
    392a:	2a e0       	ldi	r18, 0x0A	; 10
    392c:	ce 01       	movw	r24, r28
    392e:	0e 94 1e 1c 	call	0x383c	; 0x383c <_ZN5Print11printNumberEmh>
    3932:	80 0f       	add	r24, r16
    3934:	91 1f       	adc	r25, r17
    3936:	df 91       	pop	r29
    3938:	cf 91       	pop	r28
    393a:	1f 91       	pop	r17
    393c:	0f 91       	pop	r16
    393e:	ff 90       	pop	r15
    3940:	ef 90       	pop	r14
    3942:	df 90       	pop	r13
    3944:	cf 90       	pop	r12
    3946:	08 95       	ret
    3948:	2a e0       	ldi	r18, 0x0A	; 10
    394a:	df 91       	pop	r29
    394c:	cf 91       	pop	r28
    394e:	1f 91       	pop	r17
    3950:	0f 91       	pop	r16
    3952:	ff 90       	pop	r15
    3954:	ef 90       	pop	r14
    3956:	df 90       	pop	r13
    3958:	cf 90       	pop	r12
    395a:	0c 94 1e 1c 	jmp	0x383c	; 0x383c <_ZN5Print11printNumberEmh>

0000395e <_ZN5Print7printlnEli>:
  n += println();
  return n;
}

size_t Print::println(long num, int base)
{
    395e:	0f 93       	push	r16
    3960:	1f 93       	push	r17
    3962:	cf 93       	push	r28
    3964:	df 93       	push	r29
    3966:	ec 01       	movw	r28, r24
  size_t n = print(num, base);
    3968:	0e 94 67 1c 	call	0x38ce	; 0x38ce <_ZN5Print5printEli>
    396c:	8c 01       	movw	r16, r24
  n += println();
    396e:	ce 01       	movw	r24, r28
    3970:	0e 94 08 1c 	call	0x3810	; 0x3810 <_ZN5Print7printlnEv>
  return n;
}
    3974:	80 0f       	add	r24, r16
    3976:	91 1f       	adc	r25, r17
    3978:	df 91       	pop	r29
    397a:	cf 91       	pop	r28
    397c:	1f 91       	pop	r17
    397e:	0f 91       	pop	r16
    3980:	08 95       	ret

00003982 <_ZN6Stream9timedReadEv>:
    if (c < 0) break;
    *buffer++ = (char)c;
    count++;
  }
  return count;
}
    3982:	0f 93       	push	r16
    3984:	1f 93       	push	r17
    3986:	cf 93       	push	r28
    3988:	df 93       	push	r29
    398a:	ec 01       	movw	r28, r24
    398c:	0e 94 75 1d 	call	0x3aea	; 0x3aea <millis>
    3990:	68 87       	std	Y+8, r22	; 0x08
    3992:	79 87       	std	Y+9, r23	; 0x09
    3994:	8a 87       	std	Y+10, r24	; 0x0a
    3996:	9b 87       	std	Y+11, r25	; 0x0b
    3998:	e8 81       	ld	r30, Y
    399a:	f9 81       	ldd	r31, Y+1	; 0x01
    399c:	02 84       	ldd	r0, Z+10	; 0x0a
    399e:	f3 85       	ldd	r31, Z+11	; 0x0b
    39a0:	e0 2d       	mov	r30, r0
    39a2:	ce 01       	movw	r24, r28
    39a4:	09 95       	icall
    39a6:	97 ff       	sbrs	r25, 7
    39a8:	17 c0       	rjmp	.+46     	; 0x39d8 <_ZN6Stream9timedReadEv+0x56>
    39aa:	0e 94 75 1d 	call	0x3aea	; 0x3aea <millis>
    39ae:	08 85       	ldd	r16, Y+8	; 0x08
    39b0:	19 85       	ldd	r17, Y+9	; 0x09
    39b2:	2a 85       	ldd	r18, Y+10	; 0x0a
    39b4:	3b 85       	ldd	r19, Y+11	; 0x0b
    39b6:	dc 01       	movw	r26, r24
    39b8:	cb 01       	movw	r24, r22
    39ba:	80 1b       	sub	r24, r16
    39bc:	91 0b       	sbc	r25, r17
    39be:	a2 0b       	sbc	r26, r18
    39c0:	b3 0b       	sbc	r27, r19
    39c2:	0c 81       	ldd	r16, Y+4	; 0x04
    39c4:	1d 81       	ldd	r17, Y+5	; 0x05
    39c6:	2e 81       	ldd	r18, Y+6	; 0x06
    39c8:	3f 81       	ldd	r19, Y+7	; 0x07
    39ca:	80 17       	cp	r24, r16
    39cc:	91 07       	cpc	r25, r17
    39ce:	a2 07       	cpc	r26, r18
    39d0:	b3 07       	cpc	r27, r19
    39d2:	10 f3       	brcs	.-60     	; 0x3998 <_ZN6Stream9timedReadEv+0x16>
    39d4:	8f ef       	ldi	r24, 0xFF	; 255
    39d6:	9f ef       	ldi	r25, 0xFF	; 255
    39d8:	df 91       	pop	r29
    39da:	cf 91       	pop	r28
    39dc:	1f 91       	pop	r17
    39de:	0f 91       	pop	r16
    39e0:	08 95       	ret

000039e2 <_ZN6Stream10setTimeoutEm>:
    39e2:	fc 01       	movw	r30, r24
    39e4:	44 83       	std	Z+4, r20	; 0x04
    39e6:	55 83       	std	Z+5, r21	; 0x05
    39e8:	66 83       	std	Z+6, r22	; 0x06
    39ea:	77 83       	std	Z+7, r23	; 0x07
    39ec:	08 95       	ret

000039ee <_ZN6Stream14readBytesUntilEcPcj>:
// as readBytes with terminator character
// terminates if length characters have been read, timeout, or if the terminator character  detected
// returns the number of characters placed in the buffer (0 means no valid data found)

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
    39ee:	af 92       	push	r10
    39f0:	bf 92       	push	r11
    39f2:	cf 92       	push	r12
    39f4:	df 92       	push	r13
    39f6:	ef 92       	push	r14
    39f8:	ff 92       	push	r15
    39fa:	0f 93       	push	r16
    39fc:	1f 93       	push	r17
    39fe:	cf 93       	push	r28
    3a00:	df 93       	push	r29
  if (length < 1) return 0;
    3a02:	21 15       	cp	r18, r1
    3a04:	31 05       	cpc	r19, r1
    3a06:	c1 f0       	breq	.+48     	; 0x3a38 <_ZN6Stream14readBytesUntilEcPcj+0x4a>
    3a08:	89 01       	movw	r16, r18
    3a0a:	5c 01       	movw	r10, r24
    3a0c:	6a 01       	movw	r12, r20
    3a0e:	c0 e0       	ldi	r28, 0x00	; 0
    3a10:	d0 e0       	ldi	r29, 0x00	; 0
  size_t index = 0;
  while (index < length) {
    int c = timedRead();
    if (c < 0 || c == terminator) break;
    3a12:	e6 2e       	mov	r14, r22
    3a14:	f1 2c       	mov	r15, r1
size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
  if (length < 1) return 0;
  size_t index = 0;
  while (index < length) {
    int c = timedRead();
    3a16:	c5 01       	movw	r24, r10
    3a18:	0e 94 c1 1c 	call	0x3982	; 0x3982 <_ZN6Stream9timedReadEv>
    if (c < 0 || c == terminator) break;
    3a1c:	97 fd       	sbrc	r25, 7
    3a1e:	0f c0       	rjmp	.+30     	; 0x3a3e <_ZN6Stream14readBytesUntilEcPcj+0x50>
    3a20:	8e 15       	cp	r24, r14
    3a22:	9f 05       	cpc	r25, r15
    3a24:	61 f0       	breq	.+24     	; 0x3a3e <_ZN6Stream14readBytesUntilEcPcj+0x50>
    *buffer++ = (char)c;
    3a26:	f6 01       	movw	r30, r12
    3a28:	81 93       	st	Z+, r24
    3a2a:	6f 01       	movw	r12, r30
    index++;
    3a2c:	21 96       	adiw	r28, 0x01	; 1

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
  if (length < 1) return 0;
  size_t index = 0;
  while (index < length) {
    3a2e:	0c 17       	cp	r16, r28
    3a30:	1d 07       	cpc	r17, r29
    3a32:	89 f7       	brne	.-30     	; 0x3a16 <_ZN6Stream14readBytesUntilEcPcj+0x28>
    3a34:	c8 01       	movw	r24, r16
    3a36:	04 c0       	rjmp	.+8      	; 0x3a40 <_ZN6Stream14readBytesUntilEcPcj+0x52>
// terminates if length characters have been read, timeout, or if the terminator character  detected
// returns the number of characters placed in the buffer (0 means no valid data found)

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
  if (length < 1) return 0;
    3a38:	80 e0       	ldi	r24, 0x00	; 0
    3a3a:	90 e0       	ldi	r25, 0x00	; 0
    3a3c:	01 c0       	rjmp	.+2      	; 0x3a40 <_ZN6Stream14readBytesUntilEcPcj+0x52>
    3a3e:	ce 01       	movw	r24, r28
    if (c < 0 || c == terminator) break;
    *buffer++ = (char)c;
    index++;
  }
  return index; // return number of characters, not including null terminator
}
    3a40:	df 91       	pop	r29
    3a42:	cf 91       	pop	r28
    3a44:	1f 91       	pop	r17
    3a46:	0f 91       	pop	r16
    3a48:	ff 90       	pop	r15
    3a4a:	ef 90       	pop	r14
    3a4c:	df 90       	pop	r13
    3a4e:	cf 90       	pop	r12
    3a50:	bf 90       	pop	r11
    3a52:	af 90       	pop	r10
    3a54:	08 95       	ret

00003a56 <__vector_16>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    3a56:	1f 92       	push	r1
    3a58:	0f 92       	push	r0
    3a5a:	0f b6       	in	r0, 0x3f	; 63
    3a5c:	0f 92       	push	r0
    3a5e:	11 24       	eor	r1, r1
    3a60:	2f 93       	push	r18
    3a62:	3f 93       	push	r19
    3a64:	8f 93       	push	r24
    3a66:	9f 93       	push	r25
    3a68:	af 93       	push	r26
    3a6a:	bf 93       	push	r27
    3a6c:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <timer0_millis>
    3a70:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <timer0_millis+0x1>
    3a74:	a0 91 b8 04 	lds	r26, 0x04B8	; 0x8004b8 <timer0_millis+0x2>
    3a78:	b0 91 b9 04 	lds	r27, 0x04B9	; 0x8004b9 <timer0_millis+0x3>
    3a7c:	30 91 b5 04 	lds	r19, 0x04B5	; 0x8004b5 <timer0_fract>
    3a80:	23 e0       	ldi	r18, 0x03	; 3
    3a82:	23 0f       	add	r18, r19
    3a84:	2d 37       	cpi	r18, 0x7D	; 125
    3a86:	20 f4       	brcc	.+8      	; 0x3a90 <__vector_16+0x3a>
    3a88:	01 96       	adiw	r24, 0x01	; 1
    3a8a:	a1 1d       	adc	r26, r1
    3a8c:	b1 1d       	adc	r27, r1
    3a8e:	05 c0       	rjmp	.+10     	; 0x3a9a <__vector_16+0x44>
    3a90:	26 e8       	ldi	r18, 0x86	; 134
    3a92:	23 0f       	add	r18, r19
    3a94:	02 96       	adiw	r24, 0x02	; 2
    3a96:	a1 1d       	adc	r26, r1
    3a98:	b1 1d       	adc	r27, r1
    3a9a:	20 93 b5 04 	sts	0x04B5, r18	; 0x8004b5 <timer0_fract>
    3a9e:	80 93 b6 04 	sts	0x04B6, r24	; 0x8004b6 <timer0_millis>
    3aa2:	90 93 b7 04 	sts	0x04B7, r25	; 0x8004b7 <timer0_millis+0x1>
    3aa6:	a0 93 b8 04 	sts	0x04B8, r26	; 0x8004b8 <timer0_millis+0x2>
    3aaa:	b0 93 b9 04 	sts	0x04B9, r27	; 0x8004b9 <timer0_millis+0x3>
    3aae:	80 91 ba 04 	lds	r24, 0x04BA	; 0x8004ba <timer0_overflow_count>
    3ab2:	90 91 bb 04 	lds	r25, 0x04BB	; 0x8004bb <timer0_overflow_count+0x1>
    3ab6:	a0 91 bc 04 	lds	r26, 0x04BC	; 0x8004bc <timer0_overflow_count+0x2>
    3aba:	b0 91 bd 04 	lds	r27, 0x04BD	; 0x8004bd <timer0_overflow_count+0x3>
    3abe:	01 96       	adiw	r24, 0x01	; 1
    3ac0:	a1 1d       	adc	r26, r1
    3ac2:	b1 1d       	adc	r27, r1
    3ac4:	80 93 ba 04 	sts	0x04BA, r24	; 0x8004ba <timer0_overflow_count>
    3ac8:	90 93 bb 04 	sts	0x04BB, r25	; 0x8004bb <timer0_overflow_count+0x1>
    3acc:	a0 93 bc 04 	sts	0x04BC, r26	; 0x8004bc <timer0_overflow_count+0x2>
    3ad0:	b0 93 bd 04 	sts	0x04BD, r27	; 0x8004bd <timer0_overflow_count+0x3>
    3ad4:	bf 91       	pop	r27
    3ad6:	af 91       	pop	r26
    3ad8:	9f 91       	pop	r25
    3ada:	8f 91       	pop	r24
    3adc:	3f 91       	pop	r19
    3ade:	2f 91       	pop	r18
    3ae0:	0f 90       	pop	r0
    3ae2:	0f be       	out	0x3f, r0	; 63
    3ae4:	0f 90       	pop	r0
    3ae6:	1f 90       	pop	r1
    3ae8:	18 95       	reti

00003aea <millis>:
    3aea:	2f b7       	in	r18, 0x3f	; 63
    3aec:	f8 94       	cli
    3aee:	60 91 b6 04 	lds	r22, 0x04B6	; 0x8004b6 <timer0_millis>
    3af2:	70 91 b7 04 	lds	r23, 0x04B7	; 0x8004b7 <timer0_millis+0x1>
    3af6:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <timer0_millis+0x2>
    3afa:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <timer0_millis+0x3>
    3afe:	2f bf       	out	0x3f, r18	; 63
    3b00:	08 95       	ret

00003b02 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    3b02:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    3b04:	84 b5       	in	r24, 0x24	; 36
    3b06:	82 60       	ori	r24, 0x02	; 2
    3b08:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    3b0a:	84 b5       	in	r24, 0x24	; 36
    3b0c:	81 60       	ori	r24, 0x01	; 1
    3b0e:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    3b10:	85 b5       	in	r24, 0x25	; 37
    3b12:	82 60       	ori	r24, 0x02	; 2
    3b14:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    3b16:	85 b5       	in	r24, 0x25	; 37
    3b18:	81 60       	ori	r24, 0x01	; 1
    3b1a:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    3b1c:	ee e6       	ldi	r30, 0x6E	; 110
    3b1e:	f0 e0       	ldi	r31, 0x00	; 0
    3b20:	80 81       	ld	r24, Z
    3b22:	81 60       	ori	r24, 0x01	; 1
    3b24:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    3b26:	e1 e8       	ldi	r30, 0x81	; 129
    3b28:	f0 e0       	ldi	r31, 0x00	; 0
    3b2a:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    3b2c:	80 81       	ld	r24, Z
    3b2e:	82 60       	ori	r24, 0x02	; 2
    3b30:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    3b32:	80 81       	ld	r24, Z
    3b34:	81 60       	ori	r24, 0x01	; 1
    3b36:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    3b38:	e0 e8       	ldi	r30, 0x80	; 128
    3b3a:	f0 e0       	ldi	r31, 0x00	; 0
    3b3c:	80 81       	ld	r24, Z
    3b3e:	81 60       	ori	r24, 0x01	; 1
    3b40:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    3b42:	e1 eb       	ldi	r30, 0xB1	; 177
    3b44:	f0 e0       	ldi	r31, 0x00	; 0
    3b46:	80 81       	ld	r24, Z
    3b48:	84 60       	ori	r24, 0x04	; 4
    3b4a:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    3b4c:	e0 eb       	ldi	r30, 0xB0	; 176
    3b4e:	f0 e0       	ldi	r31, 0x00	; 0
    3b50:	80 81       	ld	r24, Z
    3b52:	81 60       	ori	r24, 0x01	; 1
    3b54:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    3b56:	ea e7       	ldi	r30, 0x7A	; 122
    3b58:	f0 e0       	ldi	r31, 0x00	; 0
    3b5a:	80 81       	ld	r24, Z
    3b5c:	84 60       	ori	r24, 0x04	; 4
    3b5e:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    3b60:	80 81       	ld	r24, Z
    3b62:	82 60       	ori	r24, 0x02	; 2
    3b64:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    3b66:	80 81       	ld	r24, Z
    3b68:	81 60       	ori	r24, 0x01	; 1
    3b6a:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    3b6c:	80 81       	ld	r24, Z
    3b6e:	80 68       	ori	r24, 0x80	; 128
    3b70:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    3b72:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    3b76:	08 95       	ret

00003b78 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    3b78:	cf 93       	push	r28
    3b7a:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    3b7c:	90 e0       	ldi	r25, 0x00	; 0
    3b7e:	fc 01       	movw	r30, r24
    3b80:	e4 58       	subi	r30, 0x84	; 132
    3b82:	ff 4f       	sbci	r31, 0xFF	; 255
    3b84:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    3b86:	fc 01       	movw	r30, r24
    3b88:	e0 57       	subi	r30, 0x70	; 112
    3b8a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b8c:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    3b8e:	88 23       	and	r24, r24
    3b90:	61 f1       	breq	.+88     	; 0x3bea <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    3b92:	90 e0       	ldi	r25, 0x00	; 0
    3b94:	88 0f       	add	r24, r24
    3b96:	99 1f       	adc	r25, r25
    3b98:	fc 01       	movw	r30, r24
    3b9a:	e8 54       	subi	r30, 0x48	; 72
    3b9c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b9e:	c5 91       	lpm	r28, Z+
    3ba0:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    3ba2:	fc 01       	movw	r30, r24
    3ba4:	e2 55       	subi	r30, 0x52	; 82
    3ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ba8:	a5 91       	lpm	r26, Z+
    3baa:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    3bac:	61 11       	cpse	r22, r1
    3bae:	09 c0       	rjmp	.+18     	; 0x3bc2 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    3bb0:	9f b7       	in	r25, 0x3f	; 63
                cli();
    3bb2:	f8 94       	cli
		*reg &= ~bit;
    3bb4:	88 81       	ld	r24, Y
    3bb6:	20 95       	com	r18
    3bb8:	82 23       	and	r24, r18
    3bba:	88 83       	st	Y, r24
		*out &= ~bit;
    3bbc:	ec 91       	ld	r30, X
    3bbe:	2e 23       	and	r18, r30
    3bc0:	0b c0       	rjmp	.+22     	; 0x3bd8 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    3bc2:	62 30       	cpi	r22, 0x02	; 2
    3bc4:	61 f4       	brne	.+24     	; 0x3bde <pinMode+0x66>
		uint8_t oldSREG = SREG;
    3bc6:	9f b7       	in	r25, 0x3f	; 63
                cli();
    3bc8:	f8 94       	cli
		*reg &= ~bit;
    3bca:	88 81       	ld	r24, Y
    3bcc:	32 2f       	mov	r19, r18
    3bce:	30 95       	com	r19
    3bd0:	83 23       	and	r24, r19
    3bd2:	88 83       	st	Y, r24
		*out |= bit;
    3bd4:	ec 91       	ld	r30, X
    3bd6:	2e 2b       	or	r18, r30
    3bd8:	2c 93       	st	X, r18
		SREG = oldSREG;
    3bda:	9f bf       	out	0x3f, r25	; 63
    3bdc:	06 c0       	rjmp	.+12     	; 0x3bea <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    3bde:	8f b7       	in	r24, 0x3f	; 63
                cli();
    3be0:	f8 94       	cli
		*reg |= bit;
    3be2:	e8 81       	ld	r30, Y
    3be4:	2e 2b       	or	r18, r30
    3be6:	28 83       	st	Y, r18
		SREG = oldSREG;
    3be8:	8f bf       	out	0x3f, r24	; 63
	}
}
    3bea:	df 91       	pop	r29
    3bec:	cf 91       	pop	r28
    3bee:	08 95       	ret

00003bf0 <__mulsi3>:
    3bf0:	db 01       	movw	r26, r22
    3bf2:	8f 93       	push	r24
    3bf4:	9f 93       	push	r25
    3bf6:	0e 94 49 1e 	call	0x3c92	; 0x3c92 <__muluhisi3>
    3bfa:	bf 91       	pop	r27
    3bfc:	af 91       	pop	r26
    3bfe:	a2 9f       	mul	r26, r18
    3c00:	80 0d       	add	r24, r0
    3c02:	91 1d       	adc	r25, r1
    3c04:	a3 9f       	mul	r26, r19
    3c06:	90 0d       	add	r25, r0
    3c08:	b2 9f       	mul	r27, r18
    3c0a:	90 0d       	add	r25, r0
    3c0c:	11 24       	eor	r1, r1
    3c0e:	08 95       	ret

00003c10 <__udivmodsi4>:
    3c10:	a1 e2       	ldi	r26, 0x21	; 33
    3c12:	1a 2e       	mov	r1, r26
    3c14:	aa 1b       	sub	r26, r26
    3c16:	bb 1b       	sub	r27, r27
    3c18:	fd 01       	movw	r30, r26
    3c1a:	0d c0       	rjmp	.+26     	; 0x3c36 <__udivmodsi4_ep>

00003c1c <__udivmodsi4_loop>:
    3c1c:	aa 1f       	adc	r26, r26
    3c1e:	bb 1f       	adc	r27, r27
    3c20:	ee 1f       	adc	r30, r30
    3c22:	ff 1f       	adc	r31, r31
    3c24:	a2 17       	cp	r26, r18
    3c26:	b3 07       	cpc	r27, r19
    3c28:	e4 07       	cpc	r30, r20
    3c2a:	f5 07       	cpc	r31, r21
    3c2c:	20 f0       	brcs	.+8      	; 0x3c36 <__udivmodsi4_ep>
    3c2e:	a2 1b       	sub	r26, r18
    3c30:	b3 0b       	sbc	r27, r19
    3c32:	e4 0b       	sbc	r30, r20
    3c34:	f5 0b       	sbc	r31, r21

00003c36 <__udivmodsi4_ep>:
    3c36:	66 1f       	adc	r22, r22
    3c38:	77 1f       	adc	r23, r23
    3c3a:	88 1f       	adc	r24, r24
    3c3c:	99 1f       	adc	r25, r25
    3c3e:	1a 94       	dec	r1
    3c40:	69 f7       	brne	.-38     	; 0x3c1c <__udivmodsi4_loop>
    3c42:	60 95       	com	r22
    3c44:	70 95       	com	r23
    3c46:	80 95       	com	r24
    3c48:	90 95       	com	r25
    3c4a:	9b 01       	movw	r18, r22
    3c4c:	ac 01       	movw	r20, r24
    3c4e:	bd 01       	movw	r22, r26
    3c50:	cf 01       	movw	r24, r30
    3c52:	08 95       	ret

00003c54 <__divmodsi4>:
    3c54:	05 2e       	mov	r0, r21
    3c56:	97 fb       	bst	r25, 7
    3c58:	1e f4       	brtc	.+6      	; 0x3c60 <__divmodsi4+0xc>
    3c5a:	00 94       	com	r0
    3c5c:	0e 94 41 1e 	call	0x3c82	; 0x3c82 <__negsi2>
    3c60:	57 fd       	sbrc	r21, 7
    3c62:	07 d0       	rcall	.+14     	; 0x3c72 <__divmodsi4_neg2>
    3c64:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <__udivmodsi4>
    3c68:	07 fc       	sbrc	r0, 7
    3c6a:	03 d0       	rcall	.+6      	; 0x3c72 <__divmodsi4_neg2>
    3c6c:	4e f4       	brtc	.+18     	; 0x3c80 <__divmodsi4_exit>
    3c6e:	0c 94 41 1e 	jmp	0x3c82	; 0x3c82 <__negsi2>

00003c72 <__divmodsi4_neg2>:
    3c72:	50 95       	com	r21
    3c74:	40 95       	com	r20
    3c76:	30 95       	com	r19
    3c78:	21 95       	neg	r18
    3c7a:	3f 4f       	sbci	r19, 0xFF	; 255
    3c7c:	4f 4f       	sbci	r20, 0xFF	; 255
    3c7e:	5f 4f       	sbci	r21, 0xFF	; 255

00003c80 <__divmodsi4_exit>:
    3c80:	08 95       	ret

00003c82 <__negsi2>:
    3c82:	90 95       	com	r25
    3c84:	80 95       	com	r24
    3c86:	70 95       	com	r23
    3c88:	61 95       	neg	r22
    3c8a:	7f 4f       	sbci	r23, 0xFF	; 255
    3c8c:	8f 4f       	sbci	r24, 0xFF	; 255
    3c8e:	9f 4f       	sbci	r25, 0xFF	; 255
    3c90:	08 95       	ret

00003c92 <__muluhisi3>:
    3c92:	0e 94 5a 1e 	call	0x3cb4	; 0x3cb4 <__umulhisi3>
    3c96:	a5 9f       	mul	r26, r21
    3c98:	90 0d       	add	r25, r0
    3c9a:	b4 9f       	mul	r27, r20
    3c9c:	90 0d       	add	r25, r0
    3c9e:	a4 9f       	mul	r26, r20
    3ca0:	80 0d       	add	r24, r0
    3ca2:	91 1d       	adc	r25, r1
    3ca4:	11 24       	eor	r1, r1
    3ca6:	08 95       	ret

00003ca8 <__tablejump2__>:
    3ca8:	ee 0f       	add	r30, r30
    3caa:	ff 1f       	adc	r31, r31
    3cac:	05 90       	lpm	r0, Z+
    3cae:	f4 91       	lpm	r31, Z
    3cb0:	e0 2d       	mov	r30, r0
    3cb2:	09 94       	ijmp

00003cb4 <__umulhisi3>:
    3cb4:	a2 9f       	mul	r26, r18
    3cb6:	b0 01       	movw	r22, r0
    3cb8:	b3 9f       	mul	r27, r19
    3cba:	c0 01       	movw	r24, r0
    3cbc:	a3 9f       	mul	r26, r19
    3cbe:	70 0d       	add	r23, r0
    3cc0:	81 1d       	adc	r24, r1
    3cc2:	11 24       	eor	r1, r1
    3cc4:	91 1d       	adc	r25, r1
    3cc6:	b2 9f       	mul	r27, r18
    3cc8:	70 0d       	add	r23, r0
    3cca:	81 1d       	adc	r24, r1
    3ccc:	11 24       	eor	r1, r1
    3cce:	91 1d       	adc	r25, r1
    3cd0:	08 95       	ret

00003cd2 <strtol>:
    3cd2:	a0 e0       	ldi	r26, 0x00	; 0
    3cd4:	b0 e0       	ldi	r27, 0x00	; 0
    3cd6:	ef e6       	ldi	r30, 0x6F	; 111
    3cd8:	fe e1       	ldi	r31, 0x1E	; 30
    3cda:	0c 94 99 22 	jmp	0x4532	; 0x4532 <__prologue_saves__+0x2>
    3cde:	5c 01       	movw	r10, r24
    3ce0:	6b 01       	movw	r12, r22
    3ce2:	7a 01       	movw	r14, r20
    3ce4:	61 15       	cp	r22, r1
    3ce6:	71 05       	cpc	r23, r1
    3ce8:	19 f0       	breq	.+6      	; 0x3cf0 <strtol+0x1e>
    3cea:	fb 01       	movw	r30, r22
    3cec:	91 83       	std	Z+1, r25	; 0x01
    3cee:	80 83       	st	Z, r24
    3cf0:	e1 14       	cp	r14, r1
    3cf2:	f1 04       	cpc	r15, r1
    3cf4:	29 f0       	breq	.+10     	; 0x3d00 <strtol+0x2e>
    3cf6:	c7 01       	movw	r24, r14
    3cf8:	02 97       	sbiw	r24, 0x02	; 2
    3cfa:	83 97       	sbiw	r24, 0x23	; 35
    3cfc:	08 f0       	brcs	.+2      	; 0x3d00 <strtol+0x2e>
    3cfe:	e5 c0       	rjmp	.+458    	; 0x3eca <strtol+0x1f8>
    3d00:	e5 01       	movw	r28, r10
    3d02:	21 96       	adiw	r28, 0x01	; 1
    3d04:	f5 01       	movw	r30, r10
    3d06:	10 81       	ld	r17, Z
    3d08:	81 2f       	mov	r24, r17
    3d0a:	90 e0       	ldi	r25, 0x00	; 0
    3d0c:	0e 94 9d 1f 	call	0x3f3a	; 0x3f3a <isspace>
    3d10:	89 2b       	or	r24, r25
    3d12:	11 f0       	breq	.+4      	; 0x3d18 <strtol+0x46>
    3d14:	5e 01       	movw	r10, r28
    3d16:	f4 cf       	rjmp	.-24     	; 0x3d00 <strtol+0x2e>
    3d18:	1d 32       	cpi	r17, 0x2D	; 45
    3d1a:	29 f4       	brne	.+10     	; 0x3d26 <strtol+0x54>
    3d1c:	21 96       	adiw	r28, 0x01	; 1
    3d1e:	f5 01       	movw	r30, r10
    3d20:	11 81       	ldd	r17, Z+1	; 0x01
    3d22:	01 e0       	ldi	r16, 0x01	; 1
    3d24:	07 c0       	rjmp	.+14     	; 0x3d34 <strtol+0x62>
    3d26:	1b 32       	cpi	r17, 0x2B	; 43
    3d28:	21 f4       	brne	.+8      	; 0x3d32 <strtol+0x60>
    3d2a:	e5 01       	movw	r28, r10
    3d2c:	22 96       	adiw	r28, 0x02	; 2
    3d2e:	f5 01       	movw	r30, r10
    3d30:	11 81       	ldd	r17, Z+1	; 0x01
    3d32:	00 e0       	ldi	r16, 0x00	; 0
    3d34:	e1 14       	cp	r14, r1
    3d36:	f1 04       	cpc	r15, r1
    3d38:	09 f1       	breq	.+66     	; 0x3d7c <strtol+0xaa>
    3d3a:	f0 e1       	ldi	r31, 0x10	; 16
    3d3c:	ef 16       	cp	r14, r31
    3d3e:	f1 04       	cpc	r15, r1
    3d40:	29 f4       	brne	.+10     	; 0x3d4c <strtol+0x7a>
    3d42:	3f c0       	rjmp	.+126    	; 0x3dc2 <strtol+0xf0>
    3d44:	10 e3       	ldi	r17, 0x30	; 48
    3d46:	e1 14       	cp	r14, r1
    3d48:	f1 04       	cpc	r15, r1
    3d4a:	21 f1       	breq	.+72     	; 0x3d94 <strtol+0xc2>
    3d4c:	28 e0       	ldi	r18, 0x08	; 8
    3d4e:	e2 16       	cp	r14, r18
    3d50:	f1 04       	cpc	r15, r1
    3d52:	01 f1       	breq	.+64     	; 0x3d94 <strtol+0xc2>
    3d54:	54 f4       	brge	.+20     	; 0x3d6a <strtol+0x98>
    3d56:	e2 e0       	ldi	r30, 0x02	; 2
    3d58:	ee 16       	cp	r14, r30
    3d5a:	f1 04       	cpc	r15, r1
    3d5c:	21 f5       	brne	.+72     	; 0x3da6 <strtol+0xd4>
    3d5e:	81 2c       	mov	r8, r1
    3d60:	91 2c       	mov	r9, r1
    3d62:	a1 2c       	mov	r10, r1
    3d64:	b0 e4       	ldi	r27, 0x40	; 64
    3d66:	bb 2e       	mov	r11, r27
    3d68:	3e c0       	rjmp	.+124    	; 0x3de6 <strtol+0x114>
    3d6a:	fa e0       	ldi	r31, 0x0A	; 10
    3d6c:	ef 16       	cp	r14, r31
    3d6e:	f1 04       	cpc	r15, r1
    3d70:	39 f0       	breq	.+14     	; 0x3d80 <strtol+0xae>
    3d72:	20 e1       	ldi	r18, 0x10	; 16
    3d74:	e2 16       	cp	r14, r18
    3d76:	f1 04       	cpc	r15, r1
    3d78:	b1 f4       	brne	.+44     	; 0x3da6 <strtol+0xd4>
    3d7a:	30 c0       	rjmp	.+96     	; 0x3ddc <strtol+0x10a>
    3d7c:	10 33       	cpi	r17, 0x30	; 48
    3d7e:	19 f1       	breq	.+70     	; 0x3dc6 <strtol+0xf4>
    3d80:	fa e0       	ldi	r31, 0x0A	; 10
    3d82:	ef 2e       	mov	r14, r31
    3d84:	f1 2c       	mov	r15, r1
    3d86:	ac ec       	ldi	r26, 0xCC	; 204
    3d88:	8a 2e       	mov	r8, r26
    3d8a:	98 2c       	mov	r9, r8
    3d8c:	a8 2c       	mov	r10, r8
    3d8e:	ac e0       	ldi	r26, 0x0C	; 12
    3d90:	ba 2e       	mov	r11, r26
    3d92:	29 c0       	rjmp	.+82     	; 0x3de6 <strtol+0x114>
    3d94:	78 e0       	ldi	r23, 0x08	; 8
    3d96:	e7 2e       	mov	r14, r23
    3d98:	f1 2c       	mov	r15, r1
    3d9a:	81 2c       	mov	r8, r1
    3d9c:	91 2c       	mov	r9, r1
    3d9e:	a1 2c       	mov	r10, r1
    3da0:	e0 e1       	ldi	r30, 0x10	; 16
    3da2:	be 2e       	mov	r11, r30
    3da4:	20 c0       	rjmp	.+64     	; 0x3de6 <strtol+0x114>
    3da6:	60 e0       	ldi	r22, 0x00	; 0
    3da8:	70 e0       	ldi	r23, 0x00	; 0
    3daa:	80 e0       	ldi	r24, 0x00	; 0
    3dac:	90 e8       	ldi	r25, 0x80	; 128
    3dae:	97 01       	movw	r18, r14
    3db0:	0f 2c       	mov	r0, r15
    3db2:	00 0c       	add	r0, r0
    3db4:	44 0b       	sbc	r20, r20
    3db6:	55 0b       	sbc	r21, r21
    3db8:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <__udivmodsi4>
    3dbc:	49 01       	movw	r8, r18
    3dbe:	5a 01       	movw	r10, r20
    3dc0:	12 c0       	rjmp	.+36     	; 0x3de6 <strtol+0x114>
    3dc2:	10 33       	cpi	r17, 0x30	; 48
    3dc4:	59 f4       	brne	.+22     	; 0x3ddc <strtol+0x10a>
    3dc6:	88 81       	ld	r24, Y
    3dc8:	8f 7d       	andi	r24, 0xDF	; 223
    3dca:	88 35       	cpi	r24, 0x58	; 88
    3dcc:	09 f0       	breq	.+2      	; 0x3dd0 <strtol+0xfe>
    3dce:	ba cf       	rjmp	.-140    	; 0x3d44 <strtol+0x72>
    3dd0:	19 81       	ldd	r17, Y+1	; 0x01
    3dd2:	22 96       	adiw	r28, 0x02	; 2
    3dd4:	02 60       	ori	r16, 0x02	; 2
    3dd6:	80 e1       	ldi	r24, 0x10	; 16
    3dd8:	e8 2e       	mov	r14, r24
    3dda:	f1 2c       	mov	r15, r1
    3ddc:	81 2c       	mov	r8, r1
    3dde:	91 2c       	mov	r9, r1
    3de0:	a1 2c       	mov	r10, r1
    3de2:	68 e0       	ldi	r22, 0x08	; 8
    3de4:	b6 2e       	mov	r11, r22
    3de6:	40 e0       	ldi	r20, 0x00	; 0
    3de8:	60 e0       	ldi	r22, 0x00	; 0
    3dea:	70 e0       	ldi	r23, 0x00	; 0
    3dec:	cb 01       	movw	r24, r22
    3dee:	27 01       	movw	r4, r14
    3df0:	0f 2c       	mov	r0, r15
    3df2:	00 0c       	add	r0, r0
    3df4:	66 08       	sbc	r6, r6
    3df6:	77 08       	sbc	r7, r7
    3df8:	fe 01       	movw	r30, r28
    3dfa:	50 ed       	ldi	r21, 0xD0	; 208
    3dfc:	35 2e       	mov	r3, r21
    3dfe:	31 0e       	add	r3, r17
    3e00:	29 e0       	ldi	r18, 0x09	; 9
    3e02:	23 15       	cp	r18, r3
    3e04:	70 f4       	brcc	.+28     	; 0x3e22 <strtol+0x150>
    3e06:	2f eb       	ldi	r18, 0xBF	; 191
    3e08:	21 0f       	add	r18, r17
    3e0a:	2a 31       	cpi	r18, 0x1A	; 26
    3e0c:	18 f4       	brcc	.+6      	; 0x3e14 <strtol+0x142>
    3e0e:	39 ec       	ldi	r19, 0xC9	; 201
    3e10:	33 2e       	mov	r3, r19
    3e12:	06 c0       	rjmp	.+12     	; 0x3e20 <strtol+0x14e>
    3e14:	2f e9       	ldi	r18, 0x9F	; 159
    3e16:	21 0f       	add	r18, r17
    3e18:	2a 31       	cpi	r18, 0x1A	; 26
    3e1a:	18 f5       	brcc	.+70     	; 0x3e62 <strtol+0x190>
    3e1c:	29 ea       	ldi	r18, 0xA9	; 169
    3e1e:	32 2e       	mov	r3, r18
    3e20:	31 0e       	add	r3, r17
    3e22:	23 2d       	mov	r18, r3
    3e24:	30 e0       	ldi	r19, 0x00	; 0
    3e26:	2e 15       	cp	r18, r14
    3e28:	3f 05       	cpc	r19, r15
    3e2a:	dc f4       	brge	.+54     	; 0x3e62 <strtol+0x190>
    3e2c:	47 fd       	sbrc	r20, 7
    3e2e:	16 c0       	rjmp	.+44     	; 0x3e5c <strtol+0x18a>
    3e30:	86 16       	cp	r8, r22
    3e32:	97 06       	cpc	r9, r23
    3e34:	a8 06       	cpc	r10, r24
    3e36:	b9 06       	cpc	r11, r25
    3e38:	70 f0       	brcs	.+28     	; 0x3e56 <strtol+0x184>
    3e3a:	a3 01       	movw	r20, r6
    3e3c:	92 01       	movw	r18, r4
    3e3e:	0e 94 f8 1d 	call	0x3bf0	; 0x3bf0 <__mulsi3>
    3e42:	63 0d       	add	r22, r3
    3e44:	71 1d       	adc	r23, r1
    3e46:	81 1d       	adc	r24, r1
    3e48:	91 1d       	adc	r25, r1
    3e4a:	61 30       	cpi	r22, 0x01	; 1
    3e4c:	71 05       	cpc	r23, r1
    3e4e:	81 05       	cpc	r24, r1
    3e50:	20 e8       	ldi	r18, 0x80	; 128
    3e52:	92 07       	cpc	r25, r18
    3e54:	10 f0       	brcs	.+4      	; 0x3e5a <strtol+0x188>
    3e56:	4f ef       	ldi	r20, 0xFF	; 255
    3e58:	01 c0       	rjmp	.+2      	; 0x3e5c <strtol+0x18a>
    3e5a:	41 e0       	ldi	r20, 0x01	; 1
    3e5c:	21 96       	adiw	r28, 0x01	; 1
    3e5e:	10 81       	ld	r17, Z
    3e60:	cb cf       	rjmp	.-106    	; 0x3df8 <strtol+0x126>
    3e62:	20 2f       	mov	r18, r16
    3e64:	21 70       	andi	r18, 0x01	; 1
    3e66:	c1 14       	cp	r12, r1
    3e68:	d1 04       	cpc	r13, r1
    3e6a:	71 f0       	breq	.+28     	; 0x3e88 <strtol+0x1b6>
    3e6c:	44 23       	and	r20, r20
    3e6e:	29 f0       	breq	.+10     	; 0x3e7a <strtol+0x1a8>
    3e70:	21 97       	sbiw	r28, 0x01	; 1
    3e72:	f6 01       	movw	r30, r12
    3e74:	d1 83       	std	Z+1, r29	; 0x01
    3e76:	c0 83       	st	Z, r28
    3e78:	07 c0       	rjmp	.+14     	; 0x3e88 <strtol+0x1b6>
    3e7a:	01 ff       	sbrs	r16, 1
    3e7c:	19 c0       	rjmp	.+50     	; 0x3eb0 <strtol+0x1de>
    3e7e:	22 97       	sbiw	r28, 0x02	; 2
    3e80:	f6 01       	movw	r30, r12
    3e82:	d1 83       	std	Z+1, r29	; 0x01
    3e84:	c0 83       	st	Z, r28
    3e86:	14 c0       	rjmp	.+40     	; 0x3eb0 <strtol+0x1de>
    3e88:	47 ff       	sbrs	r20, 7
    3e8a:	12 c0       	rjmp	.+36     	; 0x3eb0 <strtol+0x1de>
    3e8c:	22 23       	and	r18, r18
    3e8e:	29 f0       	breq	.+10     	; 0x3e9a <strtol+0x1c8>
    3e90:	60 e0       	ldi	r22, 0x00	; 0
    3e92:	70 e0       	ldi	r23, 0x00	; 0
    3e94:	80 e0       	ldi	r24, 0x00	; 0
    3e96:	90 e8       	ldi	r25, 0x80	; 128
    3e98:	04 c0       	rjmp	.+8      	; 0x3ea2 <strtol+0x1d0>
    3e9a:	6f ef       	ldi	r22, 0xFF	; 255
    3e9c:	7f ef       	ldi	r23, 0xFF	; 255
    3e9e:	8f ef       	ldi	r24, 0xFF	; 255
    3ea0:	9f e7       	ldi	r25, 0x7F	; 127
    3ea2:	22 e2       	ldi	r18, 0x22	; 34
    3ea4:	30 e0       	ldi	r19, 0x00	; 0
    3ea6:	30 93 bf 04 	sts	0x04BF, r19	; 0x8004bf <errno+0x1>
    3eaa:	20 93 be 04 	sts	0x04BE, r18	; 0x8004be <errno>
    3eae:	09 c0       	rjmp	.+18     	; 0x3ec2 <strtol+0x1f0>
    3eb0:	22 23       	and	r18, r18
    3eb2:	81 f0       	breq	.+32     	; 0x3ed4 <strtol+0x202>
    3eb4:	90 95       	com	r25
    3eb6:	80 95       	com	r24
    3eb8:	70 95       	com	r23
    3eba:	61 95       	neg	r22
    3ebc:	7f 4f       	sbci	r23, 0xFF	; 255
    3ebe:	8f 4f       	sbci	r24, 0xFF	; 255
    3ec0:	9f 4f       	sbci	r25, 0xFF	; 255
    3ec2:	46 2f       	mov	r20, r22
    3ec4:	37 2f       	mov	r19, r23
    3ec6:	28 2f       	mov	r18, r24
    3ec8:	12 c0       	rjmp	.+36     	; 0x3eee <strtol+0x21c>
    3eca:	40 e0       	ldi	r20, 0x00	; 0
    3ecc:	30 e0       	ldi	r19, 0x00	; 0
    3ece:	20 e0       	ldi	r18, 0x00	; 0
    3ed0:	90 e0       	ldi	r25, 0x00	; 0
    3ed2:	0d c0       	rjmp	.+26     	; 0x3eee <strtol+0x21c>
    3ed4:	97 ff       	sbrs	r25, 7
    3ed6:	f5 cf       	rjmp	.-22     	; 0x3ec2 <strtol+0x1f0>
    3ed8:	82 e2       	ldi	r24, 0x22	; 34
    3eda:	90 e0       	ldi	r25, 0x00	; 0
    3edc:	90 93 bf 04 	sts	0x04BF, r25	; 0x8004bf <errno+0x1>
    3ee0:	80 93 be 04 	sts	0x04BE, r24	; 0x8004be <errno>
    3ee4:	6f ef       	ldi	r22, 0xFF	; 255
    3ee6:	7f ef       	ldi	r23, 0xFF	; 255
    3ee8:	8f ef       	ldi	r24, 0xFF	; 255
    3eea:	9f e7       	ldi	r25, 0x7F	; 127
    3eec:	ea cf       	rjmp	.-44     	; 0x3ec2 <strtol+0x1f0>
    3eee:	64 2f       	mov	r22, r20
    3ef0:	73 2f       	mov	r23, r19
    3ef2:	82 2f       	mov	r24, r18
    3ef4:	cd b7       	in	r28, 0x3d	; 61
    3ef6:	de b7       	in	r29, 0x3e	; 62
    3ef8:	e1 e1       	ldi	r30, 0x11	; 17
    3efa:	0c 94 b5 22 	jmp	0x456a	; 0x456a <__epilogue_restores__+0x2>

00003efe <atoi>:
    3efe:	fc 01       	movw	r30, r24
    3f00:	88 27       	eor	r24, r24
    3f02:	99 27       	eor	r25, r25
    3f04:	e8 94       	clt
    3f06:	21 91       	ld	r18, Z+
    3f08:	20 32       	cpi	r18, 0x20	; 32
    3f0a:	e9 f3       	breq	.-6      	; 0x3f06 <atoi+0x8>
    3f0c:	29 30       	cpi	r18, 0x09	; 9
    3f0e:	10 f0       	brcs	.+4      	; 0x3f14 <atoi+0x16>
    3f10:	2e 30       	cpi	r18, 0x0E	; 14
    3f12:	c8 f3       	brcs	.-14     	; 0x3f06 <atoi+0x8>
    3f14:	2b 32       	cpi	r18, 0x2B	; 43
    3f16:	41 f0       	breq	.+16     	; 0x3f28 <atoi+0x2a>
    3f18:	2d 32       	cpi	r18, 0x2D	; 45
    3f1a:	39 f4       	brne	.+14     	; 0x3f2a <atoi+0x2c>
    3f1c:	68 94       	set
    3f1e:	04 c0       	rjmp	.+8      	; 0x3f28 <atoi+0x2a>
    3f20:	0e 94 da 1f 	call	0x3fb4	; 0x3fb4 <__mulhi_const_10>
    3f24:	82 0f       	add	r24, r18
    3f26:	91 1d       	adc	r25, r1
    3f28:	21 91       	ld	r18, Z+
    3f2a:	20 53       	subi	r18, 0x30	; 48
    3f2c:	2a 30       	cpi	r18, 0x0A	; 10
    3f2e:	c0 f3       	brcs	.-16     	; 0x3f20 <atoi+0x22>
    3f30:	1e f4       	brtc	.+6      	; 0x3f38 <atoi+0x3a>
    3f32:	90 95       	com	r25
    3f34:	81 95       	neg	r24
    3f36:	9f 4f       	sbci	r25, 0xFF	; 255
    3f38:	08 95       	ret

00003f3a <isspace>:
    3f3a:	91 11       	cpse	r25, r1
    3f3c:	0c 94 e5 21 	jmp	0x43ca	; 0x43ca <__ctype_isfalse>
    3f40:	80 32       	cpi	r24, 0x20	; 32
    3f42:	19 f0       	breq	.+6      	; 0x3f4a <isspace+0x10>
    3f44:	89 50       	subi	r24, 0x09	; 9
    3f46:	85 50       	subi	r24, 0x05	; 5
    3f48:	c8 f7       	brcc	.-14     	; 0x3f3c <isspace+0x2>
    3f4a:	08 95       	ret

00003f4c <tolower>:
    3f4c:	91 11       	cpse	r25, r1
    3f4e:	08 95       	ret
    3f50:	81 54       	subi	r24, 0x41	; 65
    3f52:	8a 51       	subi	r24, 0x1A	; 26
    3f54:	08 f4       	brcc	.+2      	; 0x3f58 <tolower+0xc>
    3f56:	80 5e       	subi	r24, 0xE0	; 224
    3f58:	85 5a       	subi	r24, 0xA5	; 165
    3f5a:	08 95       	ret

00003f5c <strtok>:
    3f5c:	44 ea       	ldi	r20, 0xA4	; 164
    3f5e:	53 e0       	ldi	r21, 0x03	; 3
    3f60:	0e 94 b3 1f 	call	0x3f66	; 0x3f66 <strtok_r>
    3f64:	08 95       	ret

00003f66 <strtok_r>:
    3f66:	fa 01       	movw	r30, r20
    3f68:	a1 91       	ld	r26, Z+
    3f6a:	b0 81       	ld	r27, Z
    3f6c:	00 97       	sbiw	r24, 0x00	; 0
    3f6e:	19 f4       	brne	.+6      	; 0x3f76 <strtok_r+0x10>
    3f70:	10 97       	sbiw	r26, 0x00	; 0
    3f72:	e1 f0       	breq	.+56     	; 0x3fac <strtok_r+0x46>
    3f74:	cd 01       	movw	r24, r26
    3f76:	dc 01       	movw	r26, r24
    3f78:	cd 01       	movw	r24, r26
    3f7a:	0d 90       	ld	r0, X+
    3f7c:	00 20       	and	r0, r0
    3f7e:	11 f4       	brne	.+4      	; 0x3f84 <strtok_r+0x1e>
    3f80:	c0 01       	movw	r24, r0
    3f82:	13 c0       	rjmp	.+38     	; 0x3faa <strtok_r+0x44>
    3f84:	fb 01       	movw	r30, r22
    3f86:	21 91       	ld	r18, Z+
    3f88:	22 23       	and	r18, r18
    3f8a:	19 f0       	breq	.+6      	; 0x3f92 <strtok_r+0x2c>
    3f8c:	20 15       	cp	r18, r0
    3f8e:	d9 f7       	brne	.-10     	; 0x3f86 <strtok_r+0x20>
    3f90:	f3 cf       	rjmp	.-26     	; 0x3f78 <strtok_r+0x12>
    3f92:	fb 01       	movw	r30, r22
    3f94:	21 91       	ld	r18, Z+
    3f96:	20 15       	cp	r18, r0
    3f98:	19 f4       	brne	.+6      	; 0x3fa0 <strtok_r+0x3a>
    3f9a:	1e 92       	st	-X, r1
    3f9c:	11 96       	adiw	r26, 0x01	; 1
    3f9e:	06 c0       	rjmp	.+12     	; 0x3fac <strtok_r+0x46>
    3fa0:	22 23       	and	r18, r18
    3fa2:	c1 f7       	brne	.-16     	; 0x3f94 <strtok_r+0x2e>
    3fa4:	0d 90       	ld	r0, X+
    3fa6:	00 20       	and	r0, r0
    3fa8:	a1 f7       	brne	.-24     	; 0x3f92 <strtok_r+0x2c>
    3faa:	d0 01       	movw	r26, r0
    3fac:	fa 01       	movw	r30, r20
    3fae:	a1 93       	st	Z+, r26
    3fb0:	b0 83       	st	Z, r27
    3fb2:	08 95       	ret

00003fb4 <__mulhi_const_10>:
    3fb4:	7a e0       	ldi	r23, 0x0A	; 10
    3fb6:	97 9f       	mul	r25, r23
    3fb8:	90 2d       	mov	r25, r0
    3fba:	87 9f       	mul	r24, r23
    3fbc:	80 2d       	mov	r24, r0
    3fbe:	91 0d       	add	r25, r1
    3fc0:	11 24       	eor	r1, r1
    3fc2:	08 95       	ret

00003fc4 <sprintf>:
    3fc4:	ae e0       	ldi	r26, 0x0E	; 14
    3fc6:	b0 e0       	ldi	r27, 0x00	; 0
    3fc8:	e8 ee       	ldi	r30, 0xE8	; 232
    3fca:	ff e1       	ldi	r31, 0x1F	; 31
    3fcc:	0c 94 a6 22 	jmp	0x454c	; 0x454c <__prologue_saves__+0x1c>
    3fd0:	0d 89       	ldd	r16, Y+21	; 0x15
    3fd2:	1e 89       	ldd	r17, Y+22	; 0x16
    3fd4:	86 e0       	ldi	r24, 0x06	; 6
    3fd6:	8c 83       	std	Y+4, r24	; 0x04
    3fd8:	1a 83       	std	Y+2, r17	; 0x02
    3fda:	09 83       	std	Y+1, r16	; 0x01
    3fdc:	8f ef       	ldi	r24, 0xFF	; 255
    3fde:	9f e7       	ldi	r25, 0x7F	; 127
    3fe0:	9e 83       	std	Y+6, r25	; 0x06
    3fe2:	8d 83       	std	Y+5, r24	; 0x05
    3fe4:	ae 01       	movw	r20, r28
    3fe6:	47 5e       	subi	r20, 0xE7	; 231
    3fe8:	5f 4f       	sbci	r21, 0xFF	; 255
    3fea:	6f 89       	ldd	r22, Y+23	; 0x17
    3fec:	78 8d       	ldd	r23, Y+24	; 0x18
    3fee:	ce 01       	movw	r24, r28
    3ff0:	01 96       	adiw	r24, 0x01	; 1
    3ff2:	0e 94 04 20 	call	0x4008	; 0x4008 <vfprintf>
    3ff6:	ef 81       	ldd	r30, Y+7	; 0x07
    3ff8:	f8 85       	ldd	r31, Y+8	; 0x08
    3ffa:	e0 0f       	add	r30, r16
    3ffc:	f1 1f       	adc	r31, r17
    3ffe:	10 82       	st	Z, r1
    4000:	2e 96       	adiw	r28, 0x0e	; 14
    4002:	e4 e0       	ldi	r30, 0x04	; 4
    4004:	0c 94 c2 22 	jmp	0x4584	; 0x4584 <__epilogue_restores__+0x1c>

00004008 <vfprintf>:
    4008:	ab e0       	ldi	r26, 0x0B	; 11
    400a:	b0 e0       	ldi	r27, 0x00	; 0
    400c:	ea e0       	ldi	r30, 0x0A	; 10
    400e:	f0 e2       	ldi	r31, 0x20	; 32
    4010:	0c 94 98 22 	jmp	0x4530	; 0x4530 <__prologue_saves__>
    4014:	6c 01       	movw	r12, r24
    4016:	7b 01       	movw	r14, r22
    4018:	8a 01       	movw	r16, r20
    401a:	fc 01       	movw	r30, r24
    401c:	17 82       	std	Z+7, r1	; 0x07
    401e:	16 82       	std	Z+6, r1	; 0x06
    4020:	83 81       	ldd	r24, Z+3	; 0x03
    4022:	81 ff       	sbrs	r24, 1
    4024:	cc c1       	rjmp	.+920    	; 0x43be <vfprintf+0x3b6>
    4026:	ce 01       	movw	r24, r28
    4028:	01 96       	adiw	r24, 0x01	; 1
    402a:	3c 01       	movw	r6, r24
    402c:	f6 01       	movw	r30, r12
    402e:	93 81       	ldd	r25, Z+3	; 0x03
    4030:	f7 01       	movw	r30, r14
    4032:	93 fd       	sbrc	r25, 3
    4034:	85 91       	lpm	r24, Z+
    4036:	93 ff       	sbrs	r25, 3
    4038:	81 91       	ld	r24, Z+
    403a:	7f 01       	movw	r14, r30
    403c:	88 23       	and	r24, r24
    403e:	09 f4       	brne	.+2      	; 0x4042 <vfprintf+0x3a>
    4040:	ba c1       	rjmp	.+884    	; 0x43b6 <vfprintf+0x3ae>
    4042:	85 32       	cpi	r24, 0x25	; 37
    4044:	39 f4       	brne	.+14     	; 0x4054 <vfprintf+0x4c>
    4046:	93 fd       	sbrc	r25, 3
    4048:	85 91       	lpm	r24, Z+
    404a:	93 ff       	sbrs	r25, 3
    404c:	81 91       	ld	r24, Z+
    404e:	7f 01       	movw	r14, r30
    4050:	85 32       	cpi	r24, 0x25	; 37
    4052:	29 f4       	brne	.+10     	; 0x405e <vfprintf+0x56>
    4054:	b6 01       	movw	r22, r12
    4056:	90 e0       	ldi	r25, 0x00	; 0
    4058:	0e 94 fe 21 	call	0x43fc	; 0x43fc <fputc>
    405c:	e7 cf       	rjmp	.-50     	; 0x402c <vfprintf+0x24>
    405e:	91 2c       	mov	r9, r1
    4060:	21 2c       	mov	r2, r1
    4062:	31 2c       	mov	r3, r1
    4064:	ff e1       	ldi	r31, 0x1F	; 31
    4066:	f3 15       	cp	r31, r3
    4068:	d8 f0       	brcs	.+54     	; 0x40a0 <vfprintf+0x98>
    406a:	8b 32       	cpi	r24, 0x2B	; 43
    406c:	79 f0       	breq	.+30     	; 0x408c <vfprintf+0x84>
    406e:	38 f4       	brcc	.+14     	; 0x407e <vfprintf+0x76>
    4070:	80 32       	cpi	r24, 0x20	; 32
    4072:	79 f0       	breq	.+30     	; 0x4092 <vfprintf+0x8a>
    4074:	83 32       	cpi	r24, 0x23	; 35
    4076:	a1 f4       	brne	.+40     	; 0x40a0 <vfprintf+0x98>
    4078:	23 2d       	mov	r18, r3
    407a:	20 61       	ori	r18, 0x10	; 16
    407c:	1d c0       	rjmp	.+58     	; 0x40b8 <vfprintf+0xb0>
    407e:	8d 32       	cpi	r24, 0x2D	; 45
    4080:	61 f0       	breq	.+24     	; 0x409a <vfprintf+0x92>
    4082:	80 33       	cpi	r24, 0x30	; 48
    4084:	69 f4       	brne	.+26     	; 0x40a0 <vfprintf+0x98>
    4086:	23 2d       	mov	r18, r3
    4088:	21 60       	ori	r18, 0x01	; 1
    408a:	16 c0       	rjmp	.+44     	; 0x40b8 <vfprintf+0xb0>
    408c:	83 2d       	mov	r24, r3
    408e:	82 60       	ori	r24, 0x02	; 2
    4090:	38 2e       	mov	r3, r24
    4092:	e3 2d       	mov	r30, r3
    4094:	e4 60       	ori	r30, 0x04	; 4
    4096:	3e 2e       	mov	r3, r30
    4098:	2a c0       	rjmp	.+84     	; 0x40ee <vfprintf+0xe6>
    409a:	f3 2d       	mov	r31, r3
    409c:	f8 60       	ori	r31, 0x08	; 8
    409e:	1d c0       	rjmp	.+58     	; 0x40da <vfprintf+0xd2>
    40a0:	37 fc       	sbrc	r3, 7
    40a2:	2d c0       	rjmp	.+90     	; 0x40fe <vfprintf+0xf6>
    40a4:	20 ed       	ldi	r18, 0xD0	; 208
    40a6:	28 0f       	add	r18, r24
    40a8:	2a 30       	cpi	r18, 0x0A	; 10
    40aa:	40 f0       	brcs	.+16     	; 0x40bc <vfprintf+0xb4>
    40ac:	8e 32       	cpi	r24, 0x2E	; 46
    40ae:	b9 f4       	brne	.+46     	; 0x40de <vfprintf+0xd6>
    40b0:	36 fc       	sbrc	r3, 6
    40b2:	81 c1       	rjmp	.+770    	; 0x43b6 <vfprintf+0x3ae>
    40b4:	23 2d       	mov	r18, r3
    40b6:	20 64       	ori	r18, 0x40	; 64
    40b8:	32 2e       	mov	r3, r18
    40ba:	19 c0       	rjmp	.+50     	; 0x40ee <vfprintf+0xe6>
    40bc:	36 fe       	sbrs	r3, 6
    40be:	06 c0       	rjmp	.+12     	; 0x40cc <vfprintf+0xc4>
    40c0:	8a e0       	ldi	r24, 0x0A	; 10
    40c2:	98 9e       	mul	r9, r24
    40c4:	20 0d       	add	r18, r0
    40c6:	11 24       	eor	r1, r1
    40c8:	92 2e       	mov	r9, r18
    40ca:	11 c0       	rjmp	.+34     	; 0x40ee <vfprintf+0xe6>
    40cc:	ea e0       	ldi	r30, 0x0A	; 10
    40ce:	2e 9e       	mul	r2, r30
    40d0:	20 0d       	add	r18, r0
    40d2:	11 24       	eor	r1, r1
    40d4:	22 2e       	mov	r2, r18
    40d6:	f3 2d       	mov	r31, r3
    40d8:	f0 62       	ori	r31, 0x20	; 32
    40da:	3f 2e       	mov	r3, r31
    40dc:	08 c0       	rjmp	.+16     	; 0x40ee <vfprintf+0xe6>
    40de:	8c 36       	cpi	r24, 0x6C	; 108
    40e0:	21 f4       	brne	.+8      	; 0x40ea <vfprintf+0xe2>
    40e2:	83 2d       	mov	r24, r3
    40e4:	80 68       	ori	r24, 0x80	; 128
    40e6:	38 2e       	mov	r3, r24
    40e8:	02 c0       	rjmp	.+4      	; 0x40ee <vfprintf+0xe6>
    40ea:	88 36       	cpi	r24, 0x68	; 104
    40ec:	41 f4       	brne	.+16     	; 0x40fe <vfprintf+0xf6>
    40ee:	f7 01       	movw	r30, r14
    40f0:	93 fd       	sbrc	r25, 3
    40f2:	85 91       	lpm	r24, Z+
    40f4:	93 ff       	sbrs	r25, 3
    40f6:	81 91       	ld	r24, Z+
    40f8:	7f 01       	movw	r14, r30
    40fa:	81 11       	cpse	r24, r1
    40fc:	b3 cf       	rjmp	.-154    	; 0x4064 <vfprintf+0x5c>
    40fe:	98 2f       	mov	r25, r24
    4100:	9f 7d       	andi	r25, 0xDF	; 223
    4102:	95 54       	subi	r25, 0x45	; 69
    4104:	93 30       	cpi	r25, 0x03	; 3
    4106:	28 f4       	brcc	.+10     	; 0x4112 <vfprintf+0x10a>
    4108:	0c 5f       	subi	r16, 0xFC	; 252
    410a:	1f 4f       	sbci	r17, 0xFF	; 255
    410c:	9f e3       	ldi	r25, 0x3F	; 63
    410e:	99 83       	std	Y+1, r25	; 0x01
    4110:	0d c0       	rjmp	.+26     	; 0x412c <vfprintf+0x124>
    4112:	83 36       	cpi	r24, 0x63	; 99
    4114:	31 f0       	breq	.+12     	; 0x4122 <vfprintf+0x11a>
    4116:	83 37       	cpi	r24, 0x73	; 115
    4118:	71 f0       	breq	.+28     	; 0x4136 <vfprintf+0x12e>
    411a:	83 35       	cpi	r24, 0x53	; 83
    411c:	09 f0       	breq	.+2      	; 0x4120 <vfprintf+0x118>
    411e:	59 c0       	rjmp	.+178    	; 0x41d2 <vfprintf+0x1ca>
    4120:	21 c0       	rjmp	.+66     	; 0x4164 <vfprintf+0x15c>
    4122:	f8 01       	movw	r30, r16
    4124:	80 81       	ld	r24, Z
    4126:	89 83       	std	Y+1, r24	; 0x01
    4128:	0e 5f       	subi	r16, 0xFE	; 254
    412a:	1f 4f       	sbci	r17, 0xFF	; 255
    412c:	88 24       	eor	r8, r8
    412e:	83 94       	inc	r8
    4130:	91 2c       	mov	r9, r1
    4132:	53 01       	movw	r10, r6
    4134:	13 c0       	rjmp	.+38     	; 0x415c <vfprintf+0x154>
    4136:	28 01       	movw	r4, r16
    4138:	f2 e0       	ldi	r31, 0x02	; 2
    413a:	4f 0e       	add	r4, r31
    413c:	51 1c       	adc	r5, r1
    413e:	f8 01       	movw	r30, r16
    4140:	a0 80       	ld	r10, Z
    4142:	b1 80       	ldd	r11, Z+1	; 0x01
    4144:	36 fe       	sbrs	r3, 6
    4146:	03 c0       	rjmp	.+6      	; 0x414e <vfprintf+0x146>
    4148:	69 2d       	mov	r22, r9
    414a:	70 e0       	ldi	r23, 0x00	; 0
    414c:	02 c0       	rjmp	.+4      	; 0x4152 <vfprintf+0x14a>
    414e:	6f ef       	ldi	r22, 0xFF	; 255
    4150:	7f ef       	ldi	r23, 0xFF	; 255
    4152:	c5 01       	movw	r24, r10
    4154:	0e 94 f3 21 	call	0x43e6	; 0x43e6 <strnlen>
    4158:	4c 01       	movw	r8, r24
    415a:	82 01       	movw	r16, r4
    415c:	f3 2d       	mov	r31, r3
    415e:	ff 77       	andi	r31, 0x7F	; 127
    4160:	3f 2e       	mov	r3, r31
    4162:	16 c0       	rjmp	.+44     	; 0x4190 <vfprintf+0x188>
    4164:	28 01       	movw	r4, r16
    4166:	22 e0       	ldi	r18, 0x02	; 2
    4168:	42 0e       	add	r4, r18
    416a:	51 1c       	adc	r5, r1
    416c:	f8 01       	movw	r30, r16
    416e:	a0 80       	ld	r10, Z
    4170:	b1 80       	ldd	r11, Z+1	; 0x01
    4172:	36 fe       	sbrs	r3, 6
    4174:	03 c0       	rjmp	.+6      	; 0x417c <vfprintf+0x174>
    4176:	69 2d       	mov	r22, r9
    4178:	70 e0       	ldi	r23, 0x00	; 0
    417a:	02 c0       	rjmp	.+4      	; 0x4180 <vfprintf+0x178>
    417c:	6f ef       	ldi	r22, 0xFF	; 255
    417e:	7f ef       	ldi	r23, 0xFF	; 255
    4180:	c5 01       	movw	r24, r10
    4182:	0e 94 e8 21 	call	0x43d0	; 0x43d0 <strnlen_P>
    4186:	4c 01       	movw	r8, r24
    4188:	f3 2d       	mov	r31, r3
    418a:	f0 68       	ori	r31, 0x80	; 128
    418c:	3f 2e       	mov	r3, r31
    418e:	82 01       	movw	r16, r4
    4190:	33 fc       	sbrc	r3, 3
    4192:	1b c0       	rjmp	.+54     	; 0x41ca <vfprintf+0x1c2>
    4194:	82 2d       	mov	r24, r2
    4196:	90 e0       	ldi	r25, 0x00	; 0
    4198:	88 16       	cp	r8, r24
    419a:	99 06       	cpc	r9, r25
    419c:	b0 f4       	brcc	.+44     	; 0x41ca <vfprintf+0x1c2>
    419e:	b6 01       	movw	r22, r12
    41a0:	80 e2       	ldi	r24, 0x20	; 32
    41a2:	90 e0       	ldi	r25, 0x00	; 0
    41a4:	0e 94 fe 21 	call	0x43fc	; 0x43fc <fputc>
    41a8:	2a 94       	dec	r2
    41aa:	f4 cf       	rjmp	.-24     	; 0x4194 <vfprintf+0x18c>
    41ac:	f5 01       	movw	r30, r10
    41ae:	37 fc       	sbrc	r3, 7
    41b0:	85 91       	lpm	r24, Z+
    41b2:	37 fe       	sbrs	r3, 7
    41b4:	81 91       	ld	r24, Z+
    41b6:	5f 01       	movw	r10, r30
    41b8:	b6 01       	movw	r22, r12
    41ba:	90 e0       	ldi	r25, 0x00	; 0
    41bc:	0e 94 fe 21 	call	0x43fc	; 0x43fc <fputc>
    41c0:	21 10       	cpse	r2, r1
    41c2:	2a 94       	dec	r2
    41c4:	21 e0       	ldi	r18, 0x01	; 1
    41c6:	82 1a       	sub	r8, r18
    41c8:	91 08       	sbc	r9, r1
    41ca:	81 14       	cp	r8, r1
    41cc:	91 04       	cpc	r9, r1
    41ce:	71 f7       	brne	.-36     	; 0x41ac <vfprintf+0x1a4>
    41d0:	e8 c0       	rjmp	.+464    	; 0x43a2 <vfprintf+0x39a>
    41d2:	84 36       	cpi	r24, 0x64	; 100
    41d4:	11 f0       	breq	.+4      	; 0x41da <vfprintf+0x1d2>
    41d6:	89 36       	cpi	r24, 0x69	; 105
    41d8:	41 f5       	brne	.+80     	; 0x422a <vfprintf+0x222>
    41da:	f8 01       	movw	r30, r16
    41dc:	37 fe       	sbrs	r3, 7
    41de:	07 c0       	rjmp	.+14     	; 0x41ee <vfprintf+0x1e6>
    41e0:	60 81       	ld	r22, Z
    41e2:	71 81       	ldd	r23, Z+1	; 0x01
    41e4:	82 81       	ldd	r24, Z+2	; 0x02
    41e6:	93 81       	ldd	r25, Z+3	; 0x03
    41e8:	0c 5f       	subi	r16, 0xFC	; 252
    41ea:	1f 4f       	sbci	r17, 0xFF	; 255
    41ec:	08 c0       	rjmp	.+16     	; 0x41fe <vfprintf+0x1f6>
    41ee:	60 81       	ld	r22, Z
    41f0:	71 81       	ldd	r23, Z+1	; 0x01
    41f2:	07 2e       	mov	r0, r23
    41f4:	00 0c       	add	r0, r0
    41f6:	88 0b       	sbc	r24, r24
    41f8:	99 0b       	sbc	r25, r25
    41fa:	0e 5f       	subi	r16, 0xFE	; 254
    41fc:	1f 4f       	sbci	r17, 0xFF	; 255
    41fe:	f3 2d       	mov	r31, r3
    4200:	ff 76       	andi	r31, 0x6F	; 111
    4202:	3f 2e       	mov	r3, r31
    4204:	97 ff       	sbrs	r25, 7
    4206:	09 c0       	rjmp	.+18     	; 0x421a <vfprintf+0x212>
    4208:	90 95       	com	r25
    420a:	80 95       	com	r24
    420c:	70 95       	com	r23
    420e:	61 95       	neg	r22
    4210:	7f 4f       	sbci	r23, 0xFF	; 255
    4212:	8f 4f       	sbci	r24, 0xFF	; 255
    4214:	9f 4f       	sbci	r25, 0xFF	; 255
    4216:	f0 68       	ori	r31, 0x80	; 128
    4218:	3f 2e       	mov	r3, r31
    421a:	2a e0       	ldi	r18, 0x0A	; 10
    421c:	30 e0       	ldi	r19, 0x00	; 0
    421e:	a3 01       	movw	r20, r6
    4220:	0e 94 3a 22 	call	0x4474	; 0x4474 <__ultoa_invert>
    4224:	88 2e       	mov	r8, r24
    4226:	86 18       	sub	r8, r6
    4228:	45 c0       	rjmp	.+138    	; 0x42b4 <vfprintf+0x2ac>
    422a:	85 37       	cpi	r24, 0x75	; 117
    422c:	31 f4       	brne	.+12     	; 0x423a <vfprintf+0x232>
    422e:	23 2d       	mov	r18, r3
    4230:	2f 7e       	andi	r18, 0xEF	; 239
    4232:	b2 2e       	mov	r11, r18
    4234:	2a e0       	ldi	r18, 0x0A	; 10
    4236:	30 e0       	ldi	r19, 0x00	; 0
    4238:	25 c0       	rjmp	.+74     	; 0x4284 <vfprintf+0x27c>
    423a:	93 2d       	mov	r25, r3
    423c:	99 7f       	andi	r25, 0xF9	; 249
    423e:	b9 2e       	mov	r11, r25
    4240:	8f 36       	cpi	r24, 0x6F	; 111
    4242:	c1 f0       	breq	.+48     	; 0x4274 <vfprintf+0x26c>
    4244:	18 f4       	brcc	.+6      	; 0x424c <vfprintf+0x244>
    4246:	88 35       	cpi	r24, 0x58	; 88
    4248:	79 f0       	breq	.+30     	; 0x4268 <vfprintf+0x260>
    424a:	b5 c0       	rjmp	.+362    	; 0x43b6 <vfprintf+0x3ae>
    424c:	80 37       	cpi	r24, 0x70	; 112
    424e:	19 f0       	breq	.+6      	; 0x4256 <vfprintf+0x24e>
    4250:	88 37       	cpi	r24, 0x78	; 120
    4252:	21 f0       	breq	.+8      	; 0x425c <vfprintf+0x254>
    4254:	b0 c0       	rjmp	.+352    	; 0x43b6 <vfprintf+0x3ae>
    4256:	e9 2f       	mov	r30, r25
    4258:	e0 61       	ori	r30, 0x10	; 16
    425a:	be 2e       	mov	r11, r30
    425c:	b4 fe       	sbrs	r11, 4
    425e:	0d c0       	rjmp	.+26     	; 0x427a <vfprintf+0x272>
    4260:	fb 2d       	mov	r31, r11
    4262:	f4 60       	ori	r31, 0x04	; 4
    4264:	bf 2e       	mov	r11, r31
    4266:	09 c0       	rjmp	.+18     	; 0x427a <vfprintf+0x272>
    4268:	34 fe       	sbrs	r3, 4
    426a:	0a c0       	rjmp	.+20     	; 0x4280 <vfprintf+0x278>
    426c:	29 2f       	mov	r18, r25
    426e:	26 60       	ori	r18, 0x06	; 6
    4270:	b2 2e       	mov	r11, r18
    4272:	06 c0       	rjmp	.+12     	; 0x4280 <vfprintf+0x278>
    4274:	28 e0       	ldi	r18, 0x08	; 8
    4276:	30 e0       	ldi	r19, 0x00	; 0
    4278:	05 c0       	rjmp	.+10     	; 0x4284 <vfprintf+0x27c>
    427a:	20 e1       	ldi	r18, 0x10	; 16
    427c:	30 e0       	ldi	r19, 0x00	; 0
    427e:	02 c0       	rjmp	.+4      	; 0x4284 <vfprintf+0x27c>
    4280:	20 e1       	ldi	r18, 0x10	; 16
    4282:	32 e0       	ldi	r19, 0x02	; 2
    4284:	f8 01       	movw	r30, r16
    4286:	b7 fe       	sbrs	r11, 7
    4288:	07 c0       	rjmp	.+14     	; 0x4298 <vfprintf+0x290>
    428a:	60 81       	ld	r22, Z
    428c:	71 81       	ldd	r23, Z+1	; 0x01
    428e:	82 81       	ldd	r24, Z+2	; 0x02
    4290:	93 81       	ldd	r25, Z+3	; 0x03
    4292:	0c 5f       	subi	r16, 0xFC	; 252
    4294:	1f 4f       	sbci	r17, 0xFF	; 255
    4296:	06 c0       	rjmp	.+12     	; 0x42a4 <vfprintf+0x29c>
    4298:	60 81       	ld	r22, Z
    429a:	71 81       	ldd	r23, Z+1	; 0x01
    429c:	80 e0       	ldi	r24, 0x00	; 0
    429e:	90 e0       	ldi	r25, 0x00	; 0
    42a0:	0e 5f       	subi	r16, 0xFE	; 254
    42a2:	1f 4f       	sbci	r17, 0xFF	; 255
    42a4:	a3 01       	movw	r20, r6
    42a6:	0e 94 3a 22 	call	0x4474	; 0x4474 <__ultoa_invert>
    42aa:	88 2e       	mov	r8, r24
    42ac:	86 18       	sub	r8, r6
    42ae:	fb 2d       	mov	r31, r11
    42b0:	ff 77       	andi	r31, 0x7F	; 127
    42b2:	3f 2e       	mov	r3, r31
    42b4:	36 fe       	sbrs	r3, 6
    42b6:	0d c0       	rjmp	.+26     	; 0x42d2 <vfprintf+0x2ca>
    42b8:	23 2d       	mov	r18, r3
    42ba:	2e 7f       	andi	r18, 0xFE	; 254
    42bc:	a2 2e       	mov	r10, r18
    42be:	89 14       	cp	r8, r9
    42c0:	58 f4       	brcc	.+22     	; 0x42d8 <vfprintf+0x2d0>
    42c2:	34 fe       	sbrs	r3, 4
    42c4:	0b c0       	rjmp	.+22     	; 0x42dc <vfprintf+0x2d4>
    42c6:	32 fc       	sbrc	r3, 2
    42c8:	09 c0       	rjmp	.+18     	; 0x42dc <vfprintf+0x2d4>
    42ca:	83 2d       	mov	r24, r3
    42cc:	8e 7e       	andi	r24, 0xEE	; 238
    42ce:	a8 2e       	mov	r10, r24
    42d0:	05 c0       	rjmp	.+10     	; 0x42dc <vfprintf+0x2d4>
    42d2:	b8 2c       	mov	r11, r8
    42d4:	a3 2c       	mov	r10, r3
    42d6:	03 c0       	rjmp	.+6      	; 0x42de <vfprintf+0x2d6>
    42d8:	b8 2c       	mov	r11, r8
    42da:	01 c0       	rjmp	.+2      	; 0x42de <vfprintf+0x2d6>
    42dc:	b9 2c       	mov	r11, r9
    42de:	a4 fe       	sbrs	r10, 4
    42e0:	0f c0       	rjmp	.+30     	; 0x4300 <vfprintf+0x2f8>
    42e2:	fe 01       	movw	r30, r28
    42e4:	e8 0d       	add	r30, r8
    42e6:	f1 1d       	adc	r31, r1
    42e8:	80 81       	ld	r24, Z
    42ea:	80 33       	cpi	r24, 0x30	; 48
    42ec:	21 f4       	brne	.+8      	; 0x42f6 <vfprintf+0x2ee>
    42ee:	9a 2d       	mov	r25, r10
    42f0:	99 7e       	andi	r25, 0xE9	; 233
    42f2:	a9 2e       	mov	r10, r25
    42f4:	09 c0       	rjmp	.+18     	; 0x4308 <vfprintf+0x300>
    42f6:	a2 fe       	sbrs	r10, 2
    42f8:	06 c0       	rjmp	.+12     	; 0x4306 <vfprintf+0x2fe>
    42fa:	b3 94       	inc	r11
    42fc:	b3 94       	inc	r11
    42fe:	04 c0       	rjmp	.+8      	; 0x4308 <vfprintf+0x300>
    4300:	8a 2d       	mov	r24, r10
    4302:	86 78       	andi	r24, 0x86	; 134
    4304:	09 f0       	breq	.+2      	; 0x4308 <vfprintf+0x300>
    4306:	b3 94       	inc	r11
    4308:	a3 fc       	sbrc	r10, 3
    430a:	11 c0       	rjmp	.+34     	; 0x432e <vfprintf+0x326>
    430c:	a0 fe       	sbrs	r10, 0
    430e:	06 c0       	rjmp	.+12     	; 0x431c <vfprintf+0x314>
    4310:	b2 14       	cp	r11, r2
    4312:	88 f4       	brcc	.+34     	; 0x4336 <vfprintf+0x32e>
    4314:	28 0c       	add	r2, r8
    4316:	92 2c       	mov	r9, r2
    4318:	9b 18       	sub	r9, r11
    431a:	0e c0       	rjmp	.+28     	; 0x4338 <vfprintf+0x330>
    431c:	b2 14       	cp	r11, r2
    431e:	60 f4       	brcc	.+24     	; 0x4338 <vfprintf+0x330>
    4320:	b6 01       	movw	r22, r12
    4322:	80 e2       	ldi	r24, 0x20	; 32
    4324:	90 e0       	ldi	r25, 0x00	; 0
    4326:	0e 94 fe 21 	call	0x43fc	; 0x43fc <fputc>
    432a:	b3 94       	inc	r11
    432c:	f7 cf       	rjmp	.-18     	; 0x431c <vfprintf+0x314>
    432e:	b2 14       	cp	r11, r2
    4330:	18 f4       	brcc	.+6      	; 0x4338 <vfprintf+0x330>
    4332:	2b 18       	sub	r2, r11
    4334:	02 c0       	rjmp	.+4      	; 0x433a <vfprintf+0x332>
    4336:	98 2c       	mov	r9, r8
    4338:	21 2c       	mov	r2, r1
    433a:	a4 fe       	sbrs	r10, 4
    433c:	10 c0       	rjmp	.+32     	; 0x435e <vfprintf+0x356>
    433e:	b6 01       	movw	r22, r12
    4340:	80 e3       	ldi	r24, 0x30	; 48
    4342:	90 e0       	ldi	r25, 0x00	; 0
    4344:	0e 94 fe 21 	call	0x43fc	; 0x43fc <fputc>
    4348:	a2 fe       	sbrs	r10, 2
    434a:	17 c0       	rjmp	.+46     	; 0x437a <vfprintf+0x372>
    434c:	a1 fc       	sbrc	r10, 1
    434e:	03 c0       	rjmp	.+6      	; 0x4356 <vfprintf+0x34e>
    4350:	88 e7       	ldi	r24, 0x78	; 120
    4352:	90 e0       	ldi	r25, 0x00	; 0
    4354:	02 c0       	rjmp	.+4      	; 0x435a <vfprintf+0x352>
    4356:	88 e5       	ldi	r24, 0x58	; 88
    4358:	90 e0       	ldi	r25, 0x00	; 0
    435a:	b6 01       	movw	r22, r12
    435c:	0c c0       	rjmp	.+24     	; 0x4376 <vfprintf+0x36e>
    435e:	8a 2d       	mov	r24, r10
    4360:	86 78       	andi	r24, 0x86	; 134
    4362:	59 f0       	breq	.+22     	; 0x437a <vfprintf+0x372>
    4364:	a1 fe       	sbrs	r10, 1
    4366:	02 c0       	rjmp	.+4      	; 0x436c <vfprintf+0x364>
    4368:	8b e2       	ldi	r24, 0x2B	; 43
    436a:	01 c0       	rjmp	.+2      	; 0x436e <vfprintf+0x366>
    436c:	80 e2       	ldi	r24, 0x20	; 32
    436e:	a7 fc       	sbrc	r10, 7
    4370:	8d e2       	ldi	r24, 0x2D	; 45
    4372:	b6 01       	movw	r22, r12
    4374:	90 e0       	ldi	r25, 0x00	; 0
    4376:	0e 94 fe 21 	call	0x43fc	; 0x43fc <fputc>
    437a:	89 14       	cp	r8, r9
    437c:	38 f4       	brcc	.+14     	; 0x438c <vfprintf+0x384>
    437e:	b6 01       	movw	r22, r12
    4380:	80 e3       	ldi	r24, 0x30	; 48
    4382:	90 e0       	ldi	r25, 0x00	; 0
    4384:	0e 94 fe 21 	call	0x43fc	; 0x43fc <fputc>
    4388:	9a 94       	dec	r9
    438a:	f7 cf       	rjmp	.-18     	; 0x437a <vfprintf+0x372>
    438c:	8a 94       	dec	r8
    438e:	f3 01       	movw	r30, r6
    4390:	e8 0d       	add	r30, r8
    4392:	f1 1d       	adc	r31, r1
    4394:	80 81       	ld	r24, Z
    4396:	b6 01       	movw	r22, r12
    4398:	90 e0       	ldi	r25, 0x00	; 0
    439a:	0e 94 fe 21 	call	0x43fc	; 0x43fc <fputc>
    439e:	81 10       	cpse	r8, r1
    43a0:	f5 cf       	rjmp	.-22     	; 0x438c <vfprintf+0x384>
    43a2:	22 20       	and	r2, r2
    43a4:	09 f4       	brne	.+2      	; 0x43a8 <vfprintf+0x3a0>
    43a6:	42 ce       	rjmp	.-892    	; 0x402c <vfprintf+0x24>
    43a8:	b6 01       	movw	r22, r12
    43aa:	80 e2       	ldi	r24, 0x20	; 32
    43ac:	90 e0       	ldi	r25, 0x00	; 0
    43ae:	0e 94 fe 21 	call	0x43fc	; 0x43fc <fputc>
    43b2:	2a 94       	dec	r2
    43b4:	f6 cf       	rjmp	.-20     	; 0x43a2 <vfprintf+0x39a>
    43b6:	f6 01       	movw	r30, r12
    43b8:	86 81       	ldd	r24, Z+6	; 0x06
    43ba:	97 81       	ldd	r25, Z+7	; 0x07
    43bc:	02 c0       	rjmp	.+4      	; 0x43c2 <vfprintf+0x3ba>
    43be:	8f ef       	ldi	r24, 0xFF	; 255
    43c0:	9f ef       	ldi	r25, 0xFF	; 255
    43c2:	2b 96       	adiw	r28, 0x0b	; 11
    43c4:	e2 e1       	ldi	r30, 0x12	; 18
    43c6:	0c 94 b4 22 	jmp	0x4568	; 0x4568 <__epilogue_restores__>

000043ca <__ctype_isfalse>:
    43ca:	99 27       	eor	r25, r25
    43cc:	88 27       	eor	r24, r24

000043ce <__ctype_istrue>:
    43ce:	08 95       	ret

000043d0 <strnlen_P>:
    43d0:	fc 01       	movw	r30, r24
    43d2:	05 90       	lpm	r0, Z+
    43d4:	61 50       	subi	r22, 0x01	; 1
    43d6:	70 40       	sbci	r23, 0x00	; 0
    43d8:	01 10       	cpse	r0, r1
    43da:	d8 f7       	brcc	.-10     	; 0x43d2 <strnlen_P+0x2>
    43dc:	80 95       	com	r24
    43de:	90 95       	com	r25
    43e0:	8e 0f       	add	r24, r30
    43e2:	9f 1f       	adc	r25, r31
    43e4:	08 95       	ret

000043e6 <strnlen>:
    43e6:	fc 01       	movw	r30, r24
    43e8:	61 50       	subi	r22, 0x01	; 1
    43ea:	70 40       	sbci	r23, 0x00	; 0
    43ec:	01 90       	ld	r0, Z+
    43ee:	01 10       	cpse	r0, r1
    43f0:	d8 f7       	brcc	.-10     	; 0x43e8 <strnlen+0x2>
    43f2:	80 95       	com	r24
    43f4:	90 95       	com	r25
    43f6:	8e 0f       	add	r24, r30
    43f8:	9f 1f       	adc	r25, r31
    43fa:	08 95       	ret

000043fc <fputc>:
    43fc:	0f 93       	push	r16
    43fe:	1f 93       	push	r17
    4400:	cf 93       	push	r28
    4402:	df 93       	push	r29
    4404:	fb 01       	movw	r30, r22
    4406:	23 81       	ldd	r18, Z+3	; 0x03
    4408:	21 fd       	sbrc	r18, 1
    440a:	03 c0       	rjmp	.+6      	; 0x4412 <fputc+0x16>
    440c:	8f ef       	ldi	r24, 0xFF	; 255
    440e:	9f ef       	ldi	r25, 0xFF	; 255
    4410:	2c c0       	rjmp	.+88     	; 0x446a <fputc+0x6e>
    4412:	22 ff       	sbrs	r18, 2
    4414:	16 c0       	rjmp	.+44     	; 0x4442 <fputc+0x46>
    4416:	46 81       	ldd	r20, Z+6	; 0x06
    4418:	57 81       	ldd	r21, Z+7	; 0x07
    441a:	24 81       	ldd	r18, Z+4	; 0x04
    441c:	35 81       	ldd	r19, Z+5	; 0x05
    441e:	42 17       	cp	r20, r18
    4420:	53 07       	cpc	r21, r19
    4422:	44 f4       	brge	.+16     	; 0x4434 <fputc+0x38>
    4424:	a0 81       	ld	r26, Z
    4426:	b1 81       	ldd	r27, Z+1	; 0x01
    4428:	9d 01       	movw	r18, r26
    442a:	2f 5f       	subi	r18, 0xFF	; 255
    442c:	3f 4f       	sbci	r19, 0xFF	; 255
    442e:	31 83       	std	Z+1, r19	; 0x01
    4430:	20 83       	st	Z, r18
    4432:	8c 93       	st	X, r24
    4434:	26 81       	ldd	r18, Z+6	; 0x06
    4436:	37 81       	ldd	r19, Z+7	; 0x07
    4438:	2f 5f       	subi	r18, 0xFF	; 255
    443a:	3f 4f       	sbci	r19, 0xFF	; 255
    443c:	37 83       	std	Z+7, r19	; 0x07
    443e:	26 83       	std	Z+6, r18	; 0x06
    4440:	14 c0       	rjmp	.+40     	; 0x446a <fputc+0x6e>
    4442:	8b 01       	movw	r16, r22
    4444:	ec 01       	movw	r28, r24
    4446:	fb 01       	movw	r30, r22
    4448:	00 84       	ldd	r0, Z+8	; 0x08
    444a:	f1 85       	ldd	r31, Z+9	; 0x09
    444c:	e0 2d       	mov	r30, r0
    444e:	09 95       	icall
    4450:	89 2b       	or	r24, r25
    4452:	e1 f6       	brne	.-72     	; 0x440c <fputc+0x10>
    4454:	d8 01       	movw	r26, r16
    4456:	16 96       	adiw	r26, 0x06	; 6
    4458:	8d 91       	ld	r24, X+
    445a:	9c 91       	ld	r25, X
    445c:	17 97       	sbiw	r26, 0x07	; 7
    445e:	01 96       	adiw	r24, 0x01	; 1
    4460:	17 96       	adiw	r26, 0x07	; 7
    4462:	9c 93       	st	X, r25
    4464:	8e 93       	st	-X, r24
    4466:	16 97       	sbiw	r26, 0x06	; 6
    4468:	ce 01       	movw	r24, r28
    446a:	df 91       	pop	r29
    446c:	cf 91       	pop	r28
    446e:	1f 91       	pop	r17
    4470:	0f 91       	pop	r16
    4472:	08 95       	ret

00004474 <__ultoa_invert>:
    4474:	fa 01       	movw	r30, r20
    4476:	aa 27       	eor	r26, r26
    4478:	28 30       	cpi	r18, 0x08	; 8
    447a:	51 f1       	breq	.+84     	; 0x44d0 <__ultoa_invert+0x5c>
    447c:	20 31       	cpi	r18, 0x10	; 16
    447e:	81 f1       	breq	.+96     	; 0x44e0 <__ultoa_invert+0x6c>
    4480:	e8 94       	clt
    4482:	6f 93       	push	r22
    4484:	6e 7f       	andi	r22, 0xFE	; 254
    4486:	6e 5f       	subi	r22, 0xFE	; 254
    4488:	7f 4f       	sbci	r23, 0xFF	; 255
    448a:	8f 4f       	sbci	r24, 0xFF	; 255
    448c:	9f 4f       	sbci	r25, 0xFF	; 255
    448e:	af 4f       	sbci	r26, 0xFF	; 255
    4490:	b1 e0       	ldi	r27, 0x01	; 1
    4492:	3e d0       	rcall	.+124    	; 0x4510 <__ultoa_invert+0x9c>
    4494:	b4 e0       	ldi	r27, 0x04	; 4
    4496:	3c d0       	rcall	.+120    	; 0x4510 <__ultoa_invert+0x9c>
    4498:	67 0f       	add	r22, r23
    449a:	78 1f       	adc	r23, r24
    449c:	89 1f       	adc	r24, r25
    449e:	9a 1f       	adc	r25, r26
    44a0:	a1 1d       	adc	r26, r1
    44a2:	68 0f       	add	r22, r24
    44a4:	79 1f       	adc	r23, r25
    44a6:	8a 1f       	adc	r24, r26
    44a8:	91 1d       	adc	r25, r1
    44aa:	a1 1d       	adc	r26, r1
    44ac:	6a 0f       	add	r22, r26
    44ae:	71 1d       	adc	r23, r1
    44b0:	81 1d       	adc	r24, r1
    44b2:	91 1d       	adc	r25, r1
    44b4:	a1 1d       	adc	r26, r1
    44b6:	20 d0       	rcall	.+64     	; 0x44f8 <__ultoa_invert+0x84>
    44b8:	09 f4       	brne	.+2      	; 0x44bc <__ultoa_invert+0x48>
    44ba:	68 94       	set
    44bc:	3f 91       	pop	r19
    44be:	2a e0       	ldi	r18, 0x0A	; 10
    44c0:	26 9f       	mul	r18, r22
    44c2:	11 24       	eor	r1, r1
    44c4:	30 19       	sub	r19, r0
    44c6:	30 5d       	subi	r19, 0xD0	; 208
    44c8:	31 93       	st	Z+, r19
    44ca:	de f6       	brtc	.-74     	; 0x4482 <__ultoa_invert+0xe>
    44cc:	cf 01       	movw	r24, r30
    44ce:	08 95       	ret
    44d0:	46 2f       	mov	r20, r22
    44d2:	47 70       	andi	r20, 0x07	; 7
    44d4:	40 5d       	subi	r20, 0xD0	; 208
    44d6:	41 93       	st	Z+, r20
    44d8:	b3 e0       	ldi	r27, 0x03	; 3
    44da:	0f d0       	rcall	.+30     	; 0x44fa <__ultoa_invert+0x86>
    44dc:	c9 f7       	brne	.-14     	; 0x44d0 <__ultoa_invert+0x5c>
    44de:	f6 cf       	rjmp	.-20     	; 0x44cc <__ultoa_invert+0x58>
    44e0:	46 2f       	mov	r20, r22
    44e2:	4f 70       	andi	r20, 0x0F	; 15
    44e4:	40 5d       	subi	r20, 0xD0	; 208
    44e6:	4a 33       	cpi	r20, 0x3A	; 58
    44e8:	18 f0       	brcs	.+6      	; 0x44f0 <__ultoa_invert+0x7c>
    44ea:	49 5d       	subi	r20, 0xD9	; 217
    44ec:	31 fd       	sbrc	r19, 1
    44ee:	40 52       	subi	r20, 0x20	; 32
    44f0:	41 93       	st	Z+, r20
    44f2:	02 d0       	rcall	.+4      	; 0x44f8 <__ultoa_invert+0x84>
    44f4:	a9 f7       	brne	.-22     	; 0x44e0 <__ultoa_invert+0x6c>
    44f6:	ea cf       	rjmp	.-44     	; 0x44cc <__ultoa_invert+0x58>
    44f8:	b4 e0       	ldi	r27, 0x04	; 4
    44fa:	a6 95       	lsr	r26
    44fc:	97 95       	ror	r25
    44fe:	87 95       	ror	r24
    4500:	77 95       	ror	r23
    4502:	67 95       	ror	r22
    4504:	ba 95       	dec	r27
    4506:	c9 f7       	brne	.-14     	; 0x44fa <__ultoa_invert+0x86>
    4508:	00 97       	sbiw	r24, 0x00	; 0
    450a:	61 05       	cpc	r22, r1
    450c:	71 05       	cpc	r23, r1
    450e:	08 95       	ret
    4510:	9b 01       	movw	r18, r22
    4512:	ac 01       	movw	r20, r24
    4514:	0a 2e       	mov	r0, r26
    4516:	06 94       	lsr	r0
    4518:	57 95       	ror	r21
    451a:	47 95       	ror	r20
    451c:	37 95       	ror	r19
    451e:	27 95       	ror	r18
    4520:	ba 95       	dec	r27
    4522:	c9 f7       	brne	.-14     	; 0x4516 <__ultoa_invert+0xa2>
    4524:	62 0f       	add	r22, r18
    4526:	73 1f       	adc	r23, r19
    4528:	84 1f       	adc	r24, r20
    452a:	95 1f       	adc	r25, r21
    452c:	a0 1d       	adc	r26, r0
    452e:	08 95       	ret

00004530 <__prologue_saves__>:
    4530:	2f 92       	push	r2
    4532:	3f 92       	push	r3
    4534:	4f 92       	push	r4
    4536:	5f 92       	push	r5
    4538:	6f 92       	push	r6
    453a:	7f 92       	push	r7
    453c:	8f 92       	push	r8
    453e:	9f 92       	push	r9
    4540:	af 92       	push	r10
    4542:	bf 92       	push	r11
    4544:	cf 92       	push	r12
    4546:	df 92       	push	r13
    4548:	ef 92       	push	r14
    454a:	ff 92       	push	r15
    454c:	0f 93       	push	r16
    454e:	1f 93       	push	r17
    4550:	cf 93       	push	r28
    4552:	df 93       	push	r29
    4554:	cd b7       	in	r28, 0x3d	; 61
    4556:	de b7       	in	r29, 0x3e	; 62
    4558:	ca 1b       	sub	r28, r26
    455a:	db 0b       	sbc	r29, r27
    455c:	0f b6       	in	r0, 0x3f	; 63
    455e:	f8 94       	cli
    4560:	de bf       	out	0x3e, r29	; 62
    4562:	0f be       	out	0x3f, r0	; 63
    4564:	cd bf       	out	0x3d, r28	; 61
    4566:	09 94       	ijmp

00004568 <__epilogue_restores__>:
    4568:	2a 88       	ldd	r2, Y+18	; 0x12
    456a:	39 88       	ldd	r3, Y+17	; 0x11
    456c:	48 88       	ldd	r4, Y+16	; 0x10
    456e:	5f 84       	ldd	r5, Y+15	; 0x0f
    4570:	6e 84       	ldd	r6, Y+14	; 0x0e
    4572:	7d 84       	ldd	r7, Y+13	; 0x0d
    4574:	8c 84       	ldd	r8, Y+12	; 0x0c
    4576:	9b 84       	ldd	r9, Y+11	; 0x0b
    4578:	aa 84       	ldd	r10, Y+10	; 0x0a
    457a:	b9 84       	ldd	r11, Y+9	; 0x09
    457c:	c8 84       	ldd	r12, Y+8	; 0x08
    457e:	df 80       	ldd	r13, Y+7	; 0x07
    4580:	ee 80       	ldd	r14, Y+6	; 0x06
    4582:	fd 80       	ldd	r15, Y+5	; 0x05
    4584:	0c 81       	ldd	r16, Y+4	; 0x04
    4586:	1b 81       	ldd	r17, Y+3	; 0x03
    4588:	aa 81       	ldd	r26, Y+2	; 0x02
    458a:	b9 81       	ldd	r27, Y+1	; 0x01
    458c:	ce 0f       	add	r28, r30
    458e:	d1 1d       	adc	r29, r1
    4590:	0f b6       	in	r0, 0x3f	; 63
    4592:	f8 94       	cli
    4594:	de bf       	out	0x3e, r29	; 62
    4596:	0f be       	out	0x3f, r0	; 63
    4598:	cd bf       	out	0x3d, r28	; 61
    459a:	ed 01       	movw	r28, r26
    459c:	08 95       	ret

0000459e <__do_global_dtors>:
    459e:	10 e0       	ldi	r17, 0x00	; 0
    45a0:	c3 e6       	ldi	r28, 0x63	; 99
    45a2:	d0 e0       	ldi	r29, 0x00	; 0
    45a4:	04 c0       	rjmp	.+8      	; 0x45ae <__do_global_dtors+0x10>
    45a6:	fe 01       	movw	r30, r28
    45a8:	0e 94 54 1e 	call	0x3ca8	; 0x3ca8 <__tablejump2__>
    45ac:	21 96       	adiw	r28, 0x01	; 1
    45ae:	c4 36       	cpi	r28, 0x64	; 100
    45b0:	d1 07       	cpc	r29, r17
    45b2:	c9 f7       	brne	.-14     	; 0x45a6 <__do_global_dtors+0x8>
    45b4:	f8 94       	cli

000045b6 <__stop_program>:
    45b6:	ff cf       	rjmp	.-2      	; 0x45b6 <__stop_program>
