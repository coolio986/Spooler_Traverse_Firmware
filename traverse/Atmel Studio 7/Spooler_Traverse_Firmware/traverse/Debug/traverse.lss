
traverse.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000270  00800100  00003d32  00003dc6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003d32  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000117  00800370  00800370  00004036  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00004036  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004094  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000558  00000000  00000000  000040d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000cb0c  00000000  00000000  0000462c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000288d  00000000  00000000  00011138  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003967  00000000  00000000  000139c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001420  00000000  00000000  0001732c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000320b  00000000  00000000  0001874c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000055f8  00000000  00000000  0001b957  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004e8  00000000  00000000  00020f4f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__dtors_end>
       4:	0c 94 2c 0a 	jmp	0x1458	; 0x1458 <__vector_1>
       8:	0c 94 5d 0a 	jmp	0x14ba	; 0x14ba <__vector_2>
       c:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <__vector_3>
      10:	0c 94 3b 0b 	jmp	0x1676	; 0x1676 <__vector_4>
      14:	0c 94 e8 0b 	jmp	0x17d0	; 0x17d0 <__vector_5>
      18:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      1c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      20:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      24:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      28:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      2c:	0c 94 9f 0d 	jmp	0x1b3e	; 0x1b3e <__vector_11>
      30:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      34:	0c 94 ab 0c 	jmp	0x1956	; 0x1956 <__vector_13>
      38:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      3c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      40:	0c 94 e8 18 	jmp	0x31d0	; 0x31d0 <__vector_16>
      44:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      48:	0c 94 de 16 	jmp	0x2dbc	; 0x2dbc <__vector_18>
      4c:	0c 94 10 17 	jmp	0x2e20	; 0x2e20 <__vector_19>
      50:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      54:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      58:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      5c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      60:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      64:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 01       	movw	r0, r0
      6a:	02 03       	mulsu	r16, r18
      6c:	04 05       	cpc	r16, r4
      6e:	06 07       	cpc	r16, r22
      70:	00 01       	movw	r0, r0
      72:	02 03       	mulsu	r16, r18
      74:	04 05       	cpc	r16, r4
      76:	00 01       	movw	r0, r0
      78:	02 03       	mulsu	r16, r18
      7a:	04 05       	cpc	r16, r4

0000007c <digital_pin_to_bit_mask_PGM>:
      7c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      8c:	04 08 10 20                                         ... 

00000090 <digital_pin_to_port_PGM>:
      90:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      a0:	03 03 03 03                                         ....

000000a4 <port_to_input_PGM>:
      a4:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

000000ae <port_to_output_PGM>:
      ae:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000b8 <port_to_mode_PGM>:
      b8:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000c2 <__ctors_start>:
      c2:	4a 15       	cp	r20, r10
      c4:	40 17       	cp	r20, r16

000000c6 <__ctors_end>:
      c6:	57 15       	cp	r21, r7

000000c8 <__dtors_end>:
      c8:	11 24       	eor	r1, r1
      ca:	1f be       	out	0x3f, r1	; 63
      cc:	cf ef       	ldi	r28, 0xFF	; 255
      ce:	d8 e0       	ldi	r29, 0x08	; 8
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_copy_data>:
      d4:	13 e0       	ldi	r17, 0x03	; 3
      d6:	a0 e0       	ldi	r26, 0x00	; 0
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	e2 e3       	ldi	r30, 0x32	; 50
      dc:	fd e3       	ldi	r31, 0x3D	; 61
      de:	02 c0       	rjmp	.+4      	; 0xe4 <__do_copy_data+0x10>
      e0:	05 90       	lpm	r0, Z+
      e2:	0d 92       	st	X+, r0
      e4:	a0 37       	cpi	r26, 0x70	; 112
      e6:	b1 07       	cpc	r27, r17
      e8:	d9 f7       	brne	.-10     	; 0xe0 <__do_copy_data+0xc>

000000ea <__do_clear_bss>:
      ea:	24 e0       	ldi	r18, 0x04	; 4
      ec:	a0 e7       	ldi	r26, 0x70	; 112
      ee:	b3 e0       	ldi	r27, 0x03	; 3
      f0:	01 c0       	rjmp	.+2      	; 0xf4 <.do_clear_bss_start>

000000f2 <.do_clear_bss_loop>:
      f2:	1d 92       	st	X+, r1

000000f4 <.do_clear_bss_start>:
      f4:	a7 38       	cpi	r26, 0x87	; 135
      f6:	b2 07       	cpc	r27, r18
      f8:	e1 f7       	brne	.-8      	; 0xf2 <.do_clear_bss_loop>

000000fa <__do_global_ctors>:
      fa:	10 e0       	ldi	r17, 0x00	; 0
      fc:	c3 e6       	ldi	r28, 0x63	; 99
      fe:	d0 e0       	ldi	r29, 0x00	; 0
     100:	04 c0       	rjmp	.+8      	; 0x10a <__do_global_ctors+0x10>
     102:	21 97       	sbiw	r28, 0x01	; 1
     104:	fe 01       	movw	r30, r28
     106:	0e 94 11 1a 	call	0x3422	; 0x3422 <__tablejump2__>
     10a:	c1 36       	cpi	r28, 0x61	; 97
     10c:	d1 07       	cpc	r29, r17
     10e:	c9 f7       	brne	.-14     	; 0x102 <__do_global_ctors+0x8>
     110:	0e 94 6e 17 	call	0x2edc	; 0x2edc <main>
     114:	0c 94 8c 1e 	jmp	0x3d18	; 0x3d18 <__do_global_dtors>

00000118 <__bad_interrupt>:
     118:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011c <_ZN17ADC_ConfigurationC1Ev>:

#include <Arduino.h>
#include "ADC_Configuration.h"

// default constructor
ADC_Configuration::ADC_Configuration()
     11c:	cf 93       	push	r28
     11e:	df 93       	push	r29
     120:	00 d0       	rcall	.+0      	; 0x122 <_ZN17ADC_ConfigurationC1Ev+0x6>
     122:	cd b7       	in	r28, 0x3d	; 61
     124:	de b7       	in	r29, 0x3e	; 62
     126:	9a 83       	std	Y+2, r25	; 0x02
     128:	89 83       	std	Y+1, r24	; 0x01
{
  
} //ADC_Configuration
     12a:	00 00       	nop
     12c:	0f 90       	pop	r0
     12e:	0f 90       	pop	r0
     130:	df 91       	pop	r29
     132:	cf 91       	pop	r28
     134:	08 95       	ret

00000136 <_ZN17ADC_Configuration8SetupADCEv>:

void ADC_Configuration::SetupADC(void)
  {
     136:	cf 93       	push	r28
     138:	df 93       	push	r29
     13a:	cd b7       	in	r28, 0x3d	; 61
     13c:	de b7       	in	r29, 0x3e	; 62
    #if FASTADC
    // set prescale to 16
    sbi(ADCSRA,ADPS2) ;
     13e:	8a e7       	ldi	r24, 0x7A	; 122
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	2a e7       	ldi	r18, 0x7A	; 122
     144:	30 e0       	ldi	r19, 0x00	; 0
     146:	f9 01       	movw	r30, r18
     148:	20 81       	ld	r18, Z
     14a:	24 60       	ori	r18, 0x04	; 4
     14c:	fc 01       	movw	r30, r24
     14e:	20 83       	st	Z, r18
    cbi(ADCSRA,ADPS1) ;
     150:	8a e7       	ldi	r24, 0x7A	; 122
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	2a e7       	ldi	r18, 0x7A	; 122
     156:	30 e0       	ldi	r19, 0x00	; 0
     158:	f9 01       	movw	r30, r18
     15a:	20 81       	ld	r18, Z
     15c:	2d 7f       	andi	r18, 0xFD	; 253
     15e:	fc 01       	movw	r30, r24
     160:	20 83       	st	Z, r18
    cbi(ADCSRA,ADPS0) ;
     162:	8a e7       	ldi	r24, 0x7A	; 122
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	2a e7       	ldi	r18, 0x7A	; 122
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	f9 01       	movw	r30, r18
     16c:	20 81       	ld	r18, Z
     16e:	2e 7f       	andi	r18, 0xFE	; 254
     170:	fc 01       	movw	r30, r24
     172:	20 83       	st	Z, r18
    #endif
  }
     174:	00 00       	nop
     176:	df 91       	pop	r29
     178:	cf 91       	pop	r28
     17a:	08 95       	ret

0000017c <_ZN17ADC_ConfigurationD1Ev>:


// default destructor
ADC_Configuration::~ADC_Configuration()
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	00 d0       	rcall	.+0      	; 0x182 <_ZN17ADC_ConfigurationD1Ev+0x6>
     182:	cd b7       	in	r28, 0x3d	; 61
     184:	de b7       	in	r29, 0x3e	; 62
     186:	9a 83       	std	Y+2, r25	; 0x02
     188:	89 83       	std	Y+1, r24	; 0x01
{
} //~ADC_Configuration
     18a:	00 00       	nop
     18c:	0f 90       	pop	r0
     18e:	0f 90       	pop	r0
     190:	df 91       	pop	r29
     192:	cf 91       	pop	r28
     194:	08 95       	ret

00000196 <_ZN12Math_HelpersC1Ev>:
  {
    rangedValue =  newBegin - (pow(normalizedCurVal, curve) * NewRange);
  }

  return rangedValue;
}
     196:	cf 93       	push	r28
     198:	df 93       	push	r29
     19a:	00 d0       	rcall	.+0      	; 0x19c <_ZN12Math_HelpersC1Ev+0x6>
     19c:	cd b7       	in	r28, 0x3d	; 61
     19e:	de b7       	in	r29, 0x3e	; 62
     1a0:	9a 83       	std	Y+2, r25	; 0x02
     1a2:	89 83       	std	Y+1, r24	; 0x01
     1a4:	00 00       	nop
     1a6:	0f 90       	pop	r0
     1a8:	0f 90       	pop	r0
     1aa:	df 91       	pop	r29
     1ac:	cf 91       	pop	r28
     1ae:	08 95       	ret

000001b0 <_ZN12Math_HelpersD1Ev>:

// default destructor
Math_Helpers::~Math_Helpers()
     1b0:	cf 93       	push	r28
     1b2:	df 93       	push	r29
     1b4:	00 d0       	rcall	.+0      	; 0x1b6 <_ZN12Math_HelpersD1Ev+0x6>
     1b6:	cd b7       	in	r28, 0x3d	; 61
     1b8:	de b7       	in	r29, 0x3e	; 62
     1ba:	9a 83       	std	Y+2, r25	; 0x02
     1bc:	89 83       	std	Y+1, r24	; 0x01
{
} //~Math_Helpers
     1be:	00 00       	nop
     1c0:	0f 90       	pop	r0
     1c2:	0f 90       	pop	r0
     1c4:	df 91       	pop	r29
     1c6:	cf 91       	pop	r28
     1c8:	08 95       	ret

000001ca <_ZL8home_cmdiPcS_>:

	sprintf(output + strlen(output),"%s", s2);

	return output;

}
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	00 d0       	rcall	.+0      	; 0x1d0 <_ZL8home_cmdiPcS_+0x6>
     1d0:	00 d0       	rcall	.+0      	; 0x1d2 <_ZL8home_cmdiPcS_+0x8>
     1d2:	00 d0       	rcall	.+0      	; 0x1d4 <_ZL8home_cmdiPcS_+0xa>
     1d4:	cd b7       	in	r28, 0x3d	; 61
     1d6:	de b7       	in	r29, 0x3e	; 62
     1d8:	9a 83       	std	Y+2, r25	; 0x02
     1da:	89 83       	std	Y+1, r24	; 0x01
     1dc:	7c 83       	std	Y+4, r23	; 0x04
     1de:	6b 83       	std	Y+3, r22	; 0x03
     1e0:	5e 83       	std	Y+6, r21	; 0x06
     1e2:	4d 83       	std	Y+5, r20	; 0x05
     1e4:	67 eb       	ldi	r22, 0xB7	; 183
     1e6:	71 e0       	ldi	r23, 0x01	; 1
     1e8:	8f ed       	ldi	r24, 0xDF	; 223
     1ea:	93 e0       	ldi	r25, 0x03	; 3
     1ec:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     1f0:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <RUN_MODE>
     1f4:	00 00       	nop
     1f6:	26 96       	adiw	r28, 0x06	; 6
     1f8:	0f b6       	in	r0, 0x3f	; 63
     1fa:	f8 94       	cli
     1fc:	de bf       	out	0x3e, r29	; 62
     1fe:	0f be       	out	0x3f, r0	; 63
     200:	cd bf       	out	0x3d, r28	; 61
     202:	df 91       	pop	r29
     204:	cf 91       	pop	r28
     206:	08 95       	ret

00000208 <_ZL12getSteps_cmdiPcS_>:
     208:	cf 93       	push	r28
     20a:	df 93       	push	r29
     20c:	00 d0       	rcall	.+0      	; 0x20e <_ZL12getSteps_cmdiPcS_+0x6>
     20e:	00 d0       	rcall	.+0      	; 0x210 <_ZL12getSteps_cmdiPcS_+0x8>
     210:	00 d0       	rcall	.+0      	; 0x212 <_ZL12getSteps_cmdiPcS_+0xa>
     212:	cd b7       	in	r28, 0x3d	; 61
     214:	de b7       	in	r29, 0x3e	; 62
     216:	9a 83       	std	Y+2, r25	; 0x02
     218:	89 83       	std	Y+1, r24	; 0x01
     21a:	7c 83       	std	Y+4, r23	; 0x04
     21c:	6b 83       	std	Y+3, r22	; 0x03
     21e:	5e 83       	std	Y+6, r21	; 0x06
     220:	4d 83       	std	Y+5, r20	; 0x05
     222:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <STEPS>
     226:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <STEPS+0x1>
     22a:	a0 91 d0 03 	lds	r26, 0x03D0	; 0x8003d0 <STEPS+0x2>
     22e:	b0 91 d1 03 	lds	r27, 0x03D1	; 0x8003d1 <STEPS+0x3>
     232:	2a e0       	ldi	r18, 0x0A	; 10
     234:	30 e0       	ldi	r19, 0x00	; 0
     236:	ac 01       	movw	r20, r24
     238:	bd 01       	movw	r22, r26
     23a:	8f ed       	ldi	r24, 0xDF	; 223
     23c:	93 e0       	ldi	r25, 0x03	; 3
     23e:	0e 94 6c 18 	call	0x30d8	; 0x30d8 <_ZN5Print7printlnEli>
     242:	00 00       	nop
     244:	26 96       	adiw	r28, 0x06	; 6
     246:	0f b6       	in	r0, 0x3f	; 63
     248:	f8 94       	cli
     24a:	de bf       	out	0x3e, r29	; 62
     24c:	0f be       	out	0x3f, r0	; 63
     24e:	cd bf       	out	0x3d, r28	; 61
     250:	df 91       	pop	r29
     252:	cf 91       	pop	r28
     254:	08 95       	ret

00000256 <_ZL15traverseRPM_cmdiPcS_>:
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	cd b7       	in	r28, 0x3d	; 61
     25c:	de b7       	in	r29, 0x3e	; 62
     25e:	c8 54       	subi	r28, 0x48	; 72
     260:	d1 09       	sbc	r29, r1
     262:	0f b6       	in	r0, 0x3f	; 63
     264:	f8 94       	cli
     266:	de bf       	out	0x3e, r29	; 62
     268:	0f be       	out	0x3f, r0	; 63
     26a:	cd bf       	out	0x3d, r28	; 61
     26c:	9e 01       	movw	r18, r28
     26e:	2d 5b       	subi	r18, 0xBD	; 189
     270:	3f 4f       	sbci	r19, 0xFF	; 255
     272:	f9 01       	movw	r30, r18
     274:	91 83       	std	Z+1, r25	; 0x01
     276:	80 83       	st	Z, r24
     278:	ce 01       	movw	r24, r28
     27a:	8b 5b       	subi	r24, 0xBB	; 187
     27c:	9f 4f       	sbci	r25, 0xFF	; 255
     27e:	fc 01       	movw	r30, r24
     280:	71 83       	std	Z+1, r23	; 0x01
     282:	60 83       	st	Z, r22
     284:	ce 01       	movw	r24, r28
     286:	89 5b       	subi	r24, 0xB9	; 185
     288:	9f 4f       	sbci	r25, 0xFF	; 255
     28a:	fc 01       	movw	r30, r24
     28c:	51 83       	std	Z+1, r21	; 0x01
     28e:	40 83       	st	Z, r20
     290:	ce 01       	movw	r24, r28
     292:	89 5b       	subi	r24, 0xB9	; 185
     294:	9f 4f       	sbci	r25, 0xFF	; 255
     296:	fc 01       	movw	r30, r24
     298:	80 81       	ld	r24, Z
     29a:	91 81       	ldd	r25, Z+1	; 0x01
     29c:	89 2b       	or	r24, r25
     29e:	09 f4       	brne	.+2      	; 0x2a2 <_ZL15traverseRPM_cmdiPcS_+0x4c>
     2a0:	6a c0       	rjmp	.+212    	; 0x376 <_ZL15traverseRPM_cmdiPcS_+0x120>
     2a2:	1a 82       	std	Y+2, r1	; 0x02
     2a4:	19 82       	std	Y+1, r1	; 0x01
     2a6:	89 81       	ldd	r24, Y+1	; 0x01
     2a8:	9a 81       	ldd	r25, Y+2	; 0x02
     2aa:	9e 01       	movw	r18, r28
     2ac:	29 5b       	subi	r18, 0xB9	; 185
     2ae:	3f 4f       	sbci	r19, 0xFF	; 255
     2b0:	f9 01       	movw	r30, r18
     2b2:	20 81       	ld	r18, Z
     2b4:	31 81       	ldd	r19, Z+1	; 0x01
     2b6:	82 0f       	add	r24, r18
     2b8:	93 1f       	adc	r25, r19
     2ba:	fc 01       	movw	r30, r24
     2bc:	80 81       	ld	r24, Z
     2be:	88 23       	and	r24, r24
     2c0:	29 f1       	breq	.+74     	; 0x30c <_ZL15traverseRPM_cmdiPcS_+0xb6>
     2c2:	89 81       	ldd	r24, Y+1	; 0x01
     2c4:	9a 81       	ldd	r25, Y+2	; 0x02
     2c6:	9e 01       	movw	r18, r28
     2c8:	29 5b       	subi	r18, 0xB9	; 185
     2ca:	3f 4f       	sbci	r19, 0xFF	; 255
     2cc:	f9 01       	movw	r30, r18
     2ce:	20 81       	ld	r18, Z
     2d0:	31 81       	ldd	r19, Z+1	; 0x01
     2d2:	82 0f       	add	r24, r18
     2d4:	93 1f       	adc	r25, r19
     2d6:	fc 01       	movw	r30, r24
     2d8:	80 81       	ld	r24, Z
     2da:	88 2f       	mov	r24, r24
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	c0 97       	sbiw	r24, 0x30	; 48
     2e0:	0a 97       	sbiw	r24, 0x0a	; 10
     2e2:	10 f0       	brcs	.+4      	; 0x2e8 <_ZL15traverseRPM_cmdiPcS_+0x92>
     2e4:	81 e0       	ldi	r24, 0x01	; 1
     2e6:	01 c0       	rjmp	.+2      	; 0x2ea <_ZL15traverseRPM_cmdiPcS_+0x94>
     2e8:	80 e0       	ldi	r24, 0x00	; 0
     2ea:	88 23       	and	r24, r24
     2ec:	49 f0       	breq	.+18     	; 0x300 <_ZL15traverseRPM_cmdiPcS_+0xaa>
     2ee:	6d ec       	ldi	r22, 0xCD	; 205
     2f0:	71 e0       	ldi	r23, 0x01	; 1
     2f2:	8f ed       	ldi	r24, 0xDF	; 223
     2f4:	93 e0       	ldi	r25, 0x03	; 3
     2f6:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     2fa:	80 e0       	ldi	r24, 0x00	; 0
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	5f c0       	rjmp	.+190    	; 0x3be <_ZL15traverseRPM_cmdiPcS_+0x168>
     300:	89 81       	ldd	r24, Y+1	; 0x01
     302:	9a 81       	ldd	r25, Y+2	; 0x02
     304:	01 96       	adiw	r24, 0x01	; 1
     306:	9a 83       	std	Y+2, r25	; 0x02
     308:	89 83       	std	Y+1, r24	; 0x01
     30a:	cd cf       	rjmp	.-102    	; 0x2a6 <_ZL15traverseRPM_cmdiPcS_+0x50>
     30c:	ce 01       	movw	r24, r28
     30e:	89 5b       	subi	r24, 0xB9	; 185
     310:	9f 4f       	sbci	r25, 0xFF	; 255
     312:	fc 01       	movw	r30, r24
     314:	80 81       	ld	r24, Z
     316:	91 81       	ldd	r25, Z+1	; 0x01
     318:	4a e0       	ldi	r20, 0x0A	; 10
     31a:	50 e0       	ldi	r21, 0x00	; 0
     31c:	60 e0       	ldi	r22, 0x00	; 0
     31e:	70 e0       	ldi	r23, 0x00	; 0
     320:	0e 94 26 1a 	call	0x344c	; 0x344c <strtol>
     324:	dc 01       	movw	r26, r24
     326:	cb 01       	movw	r24, r22
     328:	8b 83       	std	Y+3, r24	; 0x03
     32a:	9c 83       	std	Y+4, r25	; 0x04
     32c:	ad 83       	std	Y+5, r26	; 0x05
     32e:	be 83       	std	Y+6, r27	; 0x06
     330:	8b 81       	ldd	r24, Y+3	; 0x03
     332:	9c 81       	ldd	r25, Y+4	; 0x04
     334:	ad 81       	ldd	r26, Y+5	; 0x05
     336:	be 81       	ldd	r27, Y+6	; 0x06
     338:	89 35       	cpi	r24, 0x59	; 89
     33a:	92 40       	sbci	r25, 0x02	; 2
     33c:	a1 05       	cpc	r26, r1
     33e:	b1 05       	cpc	r27, r1
     340:	68 f4       	brcc	.+26     	; 0x35c <_ZL15traverseRPM_cmdiPcS_+0x106>
     342:	8b 81       	ldd	r24, Y+3	; 0x03
     344:	9c 81       	ldd	r25, Y+4	; 0x04
     346:	ad 81       	ldd	r26, Y+5	; 0x05
     348:	be 81       	ldd	r27, Y+6	; 0x06
     34a:	80 93 d6 03 	sts	0x03D6, r24	; 0x8003d6 <TRAVERSE_RPM>
     34e:	90 93 d7 03 	sts	0x03D7, r25	; 0x8003d7 <TRAVERSE_RPM+0x1>
     352:	a0 93 d8 03 	sts	0x03D8, r26	; 0x8003d8 <TRAVERSE_RPM+0x2>
     356:	b0 93 d9 03 	sts	0x03D9, r27	; 0x8003d9 <TRAVERSE_RPM+0x3>
     35a:	31 c0       	rjmp	.+98     	; 0x3be <_ZL15traverseRPM_cmdiPcS_+0x168>
     35c:	88 e5       	ldi	r24, 0x58	; 88
     35e:	92 e0       	ldi	r25, 0x02	; 2
     360:	a0 e0       	ldi	r26, 0x00	; 0
     362:	b0 e0       	ldi	r27, 0x00	; 0
     364:	80 93 d6 03 	sts	0x03D6, r24	; 0x8003d6 <TRAVERSE_RPM>
     368:	90 93 d7 03 	sts	0x03D7, r25	; 0x8003d7 <TRAVERSE_RPM+0x1>
     36c:	a0 93 d8 03 	sts	0x03D8, r26	; 0x8003d8 <TRAVERSE_RPM+0x2>
     370:	b0 93 d9 03 	sts	0x03D9, r27	; 0x8003d9 <TRAVERSE_RPM+0x3>
     374:	24 c0       	rjmp	.+72     	; 0x3be <_ZL15traverseRPM_cmdiPcS_+0x168>
     376:	2c e3       	ldi	r18, 0x3C	; 60
     378:	ce 01       	movw	r24, r28
     37a:	07 96       	adiw	r24, 0x07	; 7
     37c:	fc 01       	movw	r30, r24
     37e:	32 2f       	mov	r19, r18
     380:	11 92       	st	Z+, r1
     382:	3a 95       	dec	r19
     384:	e9 f7       	brne	.-6      	; 0x380 <_ZL15traverseRPM_cmdiPcS_+0x12a>
     386:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <TRAVERSE_RPM>
     38a:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <TRAVERSE_RPM+0x1>
     38e:	a0 91 d8 03 	lds	r26, 0x03D8	; 0x8003d8 <TRAVERSE_RPM+0x2>
     392:	b0 91 d9 03 	lds	r27, 0x03D9	; 0x8003d9 <TRAVERSE_RPM+0x3>
     396:	9c 01       	movw	r18, r24
     398:	ce 01       	movw	r24, r28
     39a:	8b 5b       	subi	r24, 0xBB	; 187
     39c:	9f 4f       	sbci	r25, 0xFF	; 255
     39e:	fc 01       	movw	r30, r24
     3a0:	40 81       	ld	r20, Z
     3a2:	51 81       	ldd	r21, Z+1	; 0x01
     3a4:	ce 01       	movw	r24, r28
     3a6:	07 96       	adiw	r24, 0x07	; 7
     3a8:	63 e0       	ldi	r22, 0x03	; 3
     3aa:	70 e0       	ldi	r23, 0x00	; 0
     3ac:	0e 94 10 06 	call	0xc20	; 0xc20 <_Z17BuildSerialOutputPciS_j>
     3b0:	ce 01       	movw	r24, r28
     3b2:	07 96       	adiw	r24, 0x07	; 7
     3b4:	bc 01       	movw	r22, r24
     3b6:	8f ed       	ldi	r24, 0xDF	; 223
     3b8:	93 e0       	ldi	r25, 0x03	; 3
     3ba:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     3be:	c8 5b       	subi	r28, 0xB8	; 184
     3c0:	df 4f       	sbci	r29, 0xFF	; 255
     3c2:	0f b6       	in	r0, 0x3f	; 63
     3c4:	f8 94       	cli
     3c6:	de bf       	out	0x3e, r29	; 62
     3c8:	0f be       	out	0x3f, r0	; 63
     3ca:	cd bf       	out	0x3d, r28	; 61
     3cc:	df 91       	pop	r29
     3ce:	cf 91       	pop	r28
     3d0:	08 95       	ret

000003d2 <_ZL10status_cmdiPcS_>:
     3d2:	cf 93       	push	r28
     3d4:	df 93       	push	r29
     3d6:	00 d0       	rcall	.+0      	; 0x3d8 <_ZL10status_cmdiPcS_+0x6>
     3d8:	00 d0       	rcall	.+0      	; 0x3da <_ZL10status_cmdiPcS_+0x8>
     3da:	00 d0       	rcall	.+0      	; 0x3dc <_ZL10status_cmdiPcS_+0xa>
     3dc:	cd b7       	in	r28, 0x3d	; 61
     3de:	de b7       	in	r29, 0x3e	; 62
     3e0:	9a 83       	std	Y+2, r25	; 0x02
     3e2:	89 83       	std	Y+1, r24	; 0x01
     3e4:	7c 83       	std	Y+4, r23	; 0x04
     3e6:	6b 83       	std	Y+3, r22	; 0x03
     3e8:	5e 83       	std	Y+6, r21	; 0x06
     3ea:	4d 83       	std	Y+5, r20	; 0x05
     3ec:	60 ef       	ldi	r22, 0xF0	; 240
     3ee:	71 e0       	ldi	r23, 0x01	; 1
     3f0:	8f ed       	ldi	r24, 0xDF	; 223
     3f2:	93 e0       	ldi	r25, 0x03	; 3
     3f4:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <_ZN5Print5printEPKc>
     3f8:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <RUN_MODE>
     3fc:	81 e0       	ldi	r24, 0x01	; 1
     3fe:	93 30       	cpi	r25, 0x03	; 3
     400:	09 f0       	breq	.+2      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     402:	80 e0       	ldi	r24, 0x00	; 0
     404:	88 23       	and	r24, r24
     406:	31 f0       	breq	.+12     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     408:	64 e0       	ldi	r22, 0x04	; 4
     40a:	72 e0       	ldi	r23, 0x02	; 2
     40c:	8f ed       	ldi	r24, 0xDF	; 223
     40e:	93 e0       	ldi	r25, 0x03	; 3
     410:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     414:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <RUN_MODE>
     418:	81 e0       	ldi	r24, 0x01	; 1
     41a:	94 30       	cpi	r25, 0x04	; 4
     41c:	09 f0       	breq	.+2      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     41e:	80 e0       	ldi	r24, 0x00	; 0
     420:	88 23       	and	r24, r24
     422:	31 f0       	breq	.+12     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     424:	69 e1       	ldi	r22, 0x19	; 25
     426:	72 e0       	ldi	r23, 0x02	; 2
     428:	8f ed       	ldi	r24, 0xDF	; 223
     42a:	93 e0       	ldi	r25, 0x03	; 3
     42c:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     430:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <RUN_MODE>
     434:	81 e0       	ldi	r24, 0x01	; 1
     436:	92 30       	cpi	r25, 0x02	; 2
     438:	09 f0       	breq	.+2      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     43a:	80 e0       	ldi	r24, 0x00	; 0
     43c:	88 23       	and	r24, r24
     43e:	31 f0       	breq	.+12     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     440:	6e e2       	ldi	r22, 0x2E	; 46
     442:	72 e0       	ldi	r23, 0x02	; 2
     444:	8f ed       	ldi	r24, 0xDF	; 223
     446:	93 e0       	ldi	r25, 0x03	; 3
     448:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     44c:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <RUN_MODE>
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	99 23       	and	r25, r25
     454:	09 f0       	breq	.+2      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	88 23       	and	r24, r24
     45a:	31 f0       	breq	.+12     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     45c:	60 e4       	ldi	r22, 0x40	; 64
     45e:	72 e0       	ldi	r23, 0x02	; 2
     460:	8f ed       	ldi	r24, 0xDF	; 223
     462:	93 e0       	ldi	r25, 0x03	; 3
     464:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     468:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <RUN_MODE>
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	91 30       	cpi	r25, 0x01	; 1
     470:	09 f0       	breq	.+2      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
     472:	80 e0       	ldi	r24, 0x00	; 0
     474:	88 23       	and	r24, r24
     476:	31 f0       	breq	.+12     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
     478:	6a e4       	ldi	r22, 0x4A	; 74
     47a:	72 e0       	ldi	r23, 0x02	; 2
     47c:	8f ed       	ldi	r24, 0xDF	; 223
     47e:	93 e0       	ldi	r25, 0x03	; 3
     480:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     484:	00 00       	nop
     486:	26 96       	adiw	r28, 0x06	; 6
     488:	0f b6       	in	r0, 0x3f	; 63
     48a:	f8 94       	cli
     48c:	de bf       	out	0x3e, r29	; 62
     48e:	0f be       	out	0x3f, r0	; 63
     490:	cd bf       	out	0x3d, r28	; 61
     492:	df 91       	pop	r29
     494:	cf 91       	pop	r28
     496:	08 95       	ret

00000498 <_ZL8stop_cmdiPcS_>:
     498:	cf 93       	push	r28
     49a:	df 93       	push	r29
     49c:	00 d0       	rcall	.+0      	; 0x49e <_ZL8stop_cmdiPcS_+0x6>
     49e:	00 d0       	rcall	.+0      	; 0x4a0 <_ZL8stop_cmdiPcS_+0x8>
     4a0:	00 d0       	rcall	.+0      	; 0x4a2 <_ZL8stop_cmdiPcS_+0xa>
     4a2:	cd b7       	in	r28, 0x3d	; 61
     4a4:	de b7       	in	r29, 0x3e	; 62
     4a6:	9a 83       	std	Y+2, r25	; 0x02
     4a8:	89 83       	std	Y+1, r24	; 0x01
     4aa:	7c 83       	std	Y+4, r23	; 0x04
     4ac:	6b 83       	std	Y+3, r22	; 0x03
     4ae:	5e 83       	std	Y+6, r21	; 0x06
     4b0:	4d 83       	std	Y+5, r20	; 0x05
     4b2:	81 e0       	ldi	r24, 0x01	; 1
     4b4:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <RUN_MODE>
     4b8:	00 00       	nop
     4ba:	26 96       	adiw	r28, 0x06	; 6
     4bc:	0f b6       	in	r0, 0x3f	; 63
     4be:	f8 94       	cli
     4c0:	de bf       	out	0x3e, r29	; 62
     4c2:	0f be       	out	0x3f, r0	; 63
     4c4:	cd bf       	out	0x3d, r28	; 61
     4c6:	df 91       	pop	r29
     4c8:	cf 91       	pop	r28
     4ca:	08 95       	ret

000004cc <_ZL11runMode_cmdiPcS_>:
     4cc:	cf 93       	push	r28
     4ce:	df 93       	push	r29
     4d0:	cd b7       	in	r28, 0x3d	; 61
     4d2:	de b7       	in	r29, 0x3e	; 62
     4d4:	c6 54       	subi	r28, 0x46	; 70
     4d6:	d1 09       	sbc	r29, r1
     4d8:	0f b6       	in	r0, 0x3f	; 63
     4da:	f8 94       	cli
     4dc:	de bf       	out	0x3e, r29	; 62
     4de:	0f be       	out	0x3f, r0	; 63
     4e0:	cd bf       	out	0x3d, r28	; 61
     4e2:	9e 01       	movw	r18, r28
     4e4:	2f 5b       	subi	r18, 0xBF	; 191
     4e6:	3f 4f       	sbci	r19, 0xFF	; 255
     4e8:	f9 01       	movw	r30, r18
     4ea:	91 83       	std	Z+1, r25	; 0x01
     4ec:	80 83       	st	Z, r24
     4ee:	ce 01       	movw	r24, r28
     4f0:	8d 5b       	subi	r24, 0xBD	; 189
     4f2:	9f 4f       	sbci	r25, 0xFF	; 255
     4f4:	fc 01       	movw	r30, r24
     4f6:	71 83       	std	Z+1, r23	; 0x01
     4f8:	60 83       	st	Z, r22
     4fa:	ce 01       	movw	r24, r28
     4fc:	8b 5b       	subi	r24, 0xBB	; 187
     4fe:	9f 4f       	sbci	r25, 0xFF	; 255
     500:	fc 01       	movw	r30, r24
     502:	51 83       	std	Z+1, r21	; 0x01
     504:	40 83       	st	Z, r20
     506:	ce 01       	movw	r24, r28
     508:	8b 5b       	subi	r24, 0xBB	; 187
     50a:	9f 4f       	sbci	r25, 0xFF	; 255
     50c:	fc 01       	movw	r30, r24
     50e:	80 81       	ld	r24, Z
     510:	91 81       	ldd	r25, Z+1	; 0x01
     512:	89 2b       	or	r24, r25
     514:	09 f4       	brne	.+2      	; 0x518 <_ZL11runMode_cmdiPcS_+0x4c>
     516:	4d c0       	rjmp	.+154    	; 0x5b2 <_ZL11runMode_cmdiPcS_+0xe6>
     518:	1a 82       	std	Y+2, r1	; 0x02
     51a:	19 82       	std	Y+1, r1	; 0x01
     51c:	89 81       	ldd	r24, Y+1	; 0x01
     51e:	9a 81       	ldd	r25, Y+2	; 0x02
     520:	9e 01       	movw	r18, r28
     522:	2b 5b       	subi	r18, 0xBB	; 187
     524:	3f 4f       	sbci	r19, 0xFF	; 255
     526:	f9 01       	movw	r30, r18
     528:	20 81       	ld	r18, Z
     52a:	31 81       	ldd	r19, Z+1	; 0x01
     52c:	82 0f       	add	r24, r18
     52e:	93 1f       	adc	r25, r19
     530:	fc 01       	movw	r30, r24
     532:	80 81       	ld	r24, Z
     534:	88 23       	and	r24, r24
     536:	29 f1       	breq	.+74     	; 0x582 <_ZL11runMode_cmdiPcS_+0xb6>
     538:	89 81       	ldd	r24, Y+1	; 0x01
     53a:	9a 81       	ldd	r25, Y+2	; 0x02
     53c:	9e 01       	movw	r18, r28
     53e:	2b 5b       	subi	r18, 0xBB	; 187
     540:	3f 4f       	sbci	r19, 0xFF	; 255
     542:	f9 01       	movw	r30, r18
     544:	20 81       	ld	r18, Z
     546:	31 81       	ldd	r19, Z+1	; 0x01
     548:	82 0f       	add	r24, r18
     54a:	93 1f       	adc	r25, r19
     54c:	fc 01       	movw	r30, r24
     54e:	80 81       	ld	r24, Z
     550:	88 2f       	mov	r24, r24
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	c0 97       	sbiw	r24, 0x30	; 48
     556:	0a 97       	sbiw	r24, 0x0a	; 10
     558:	10 f0       	brcs	.+4      	; 0x55e <_ZL11runMode_cmdiPcS_+0x92>
     55a:	81 e0       	ldi	r24, 0x01	; 1
     55c:	01 c0       	rjmp	.+2      	; 0x560 <_ZL11runMode_cmdiPcS_+0x94>
     55e:	80 e0       	ldi	r24, 0x00	; 0
     560:	88 23       	and	r24, r24
     562:	49 f0       	breq	.+18     	; 0x576 <_ZL11runMode_cmdiPcS_+0xaa>
     564:	6d e5       	ldi	r22, 0x5D	; 93
     566:	72 e0       	ldi	r23, 0x02	; 2
     568:	8f ed       	ldi	r24, 0xDF	; 223
     56a:	93 e0       	ldi	r25, 0x03	; 3
     56c:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     570:	80 e0       	ldi	r24, 0x00	; 0
     572:	90 e0       	ldi	r25, 0x00	; 0
     574:	3d c0       	rjmp	.+122    	; 0x5f0 <_ZL11runMode_cmdiPcS_+0x124>
     576:	89 81       	ldd	r24, Y+1	; 0x01
     578:	9a 81       	ldd	r25, Y+2	; 0x02
     57a:	01 96       	adiw	r24, 0x01	; 1
     57c:	9a 83       	std	Y+2, r25	; 0x02
     57e:	89 83       	std	Y+1, r24	; 0x01
     580:	cd cf       	rjmp	.-102    	; 0x51c <_ZL11runMode_cmdiPcS_+0x50>
     582:	ce 01       	movw	r24, r28
     584:	8b 5b       	subi	r24, 0xBB	; 187
     586:	9f 4f       	sbci	r25, 0xFF	; 255
     588:	fc 01       	movw	r30, r24
     58a:	80 81       	ld	r24, Z
     58c:	91 81       	ldd	r25, Z+1	; 0x01
     58e:	4a e0       	ldi	r20, 0x0A	; 10
     590:	50 e0       	ldi	r21, 0x00	; 0
     592:	60 e0       	ldi	r22, 0x00	; 0
     594:	70 e0       	ldi	r23, 0x00	; 0
     596:	0e 94 26 1a 	call	0x344c	; 0x344c <strtol>
     59a:	dc 01       	movw	r26, r24
     59c:	cb 01       	movw	r24, r22
     59e:	9c 83       	std	Y+4, r25	; 0x04
     5a0:	8b 83       	std	Y+3, r24	; 0x03
     5a2:	8b 81       	ldd	r24, Y+3	; 0x03
     5a4:	9c 81       	ldd	r25, Y+4	; 0x04
     5a6:	05 97       	sbiw	r24, 0x05	; 5
     5a8:	18 f5       	brcc	.+70     	; 0x5f0 <_ZL11runMode_cmdiPcS_+0x124>
     5aa:	8b 81       	ldd	r24, Y+3	; 0x03
     5ac:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <RUN_MODE>
     5b0:	1f c0       	rjmp	.+62     	; 0x5f0 <_ZL11runMode_cmdiPcS_+0x124>
     5b2:	2c e3       	ldi	r18, 0x3C	; 60
     5b4:	ce 01       	movw	r24, r28
     5b6:	05 96       	adiw	r24, 0x05	; 5
     5b8:	fc 01       	movw	r30, r24
     5ba:	32 2f       	mov	r19, r18
     5bc:	11 92       	st	Z+, r1
     5be:	3a 95       	dec	r19
     5c0:	e9 f7       	brne	.-6      	; 0x5bc <_ZL11runMode_cmdiPcS_+0xf0>
     5c2:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <RUN_MODE>
     5c6:	28 2f       	mov	r18, r24
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	ce 01       	movw	r24, r28
     5cc:	8d 5b       	subi	r24, 0xBD	; 189
     5ce:	9f 4f       	sbci	r25, 0xFF	; 255
     5d0:	fc 01       	movw	r30, r24
     5d2:	40 81       	ld	r20, Z
     5d4:	51 81       	ldd	r21, Z+1	; 0x01
     5d6:	ce 01       	movw	r24, r28
     5d8:	05 96       	adiw	r24, 0x05	; 5
     5da:	63 e0       	ldi	r22, 0x03	; 3
     5dc:	70 e0       	ldi	r23, 0x00	; 0
     5de:	0e 94 10 06 	call	0xc20	; 0xc20 <_Z17BuildSerialOutputPciS_j>
     5e2:	ce 01       	movw	r24, r28
     5e4:	05 96       	adiw	r24, 0x05	; 5
     5e6:	bc 01       	movw	r22, r24
     5e8:	8f ed       	ldi	r24, 0xDF	; 223
     5ea:	93 e0       	ldi	r25, 0x03	; 3
     5ec:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     5f0:	ca 5b       	subi	r28, 0xBA	; 186
     5f2:	df 4f       	sbci	r29, 0xFF	; 255
     5f4:	0f b6       	in	r0, 0x3f	; 63
     5f6:	f8 94       	cli
     5f8:	de bf       	out	0x3e, r29	; 62
     5fa:	0f be       	out	0x3f, r0	; 63
     5fc:	cd bf       	out	0x3d, r28	; 61
     5fe:	df 91       	pop	r29
     600:	cf 91       	pop	r28
     602:	08 95       	ret

00000604 <_ZL16moveAbsolute_cmdiPcS_>:
     604:	cf 93       	push	r28
     606:	df 93       	push	r29
     608:	cd b7       	in	r28, 0x3d	; 61
     60a:	de b7       	in	r29, 0x3e	; 62
     60c:	2c 97       	sbiw	r28, 0x0c	; 12
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
     618:	98 87       	std	Y+8, r25	; 0x08
     61a:	8f 83       	std	Y+7, r24	; 0x07
     61c:	7a 87       	std	Y+10, r23	; 0x0a
     61e:	69 87       	std	Y+9, r22	; 0x09
     620:	5c 87       	std	Y+12, r21	; 0x0c
     622:	4b 87       	std	Y+11, r20	; 0x0b
     624:	8b 85       	ldd	r24, Y+11	; 0x0b
     626:	9c 85       	ldd	r25, Y+12	; 0x0c
     628:	89 2b       	or	r24, r25
     62a:	09 f4       	brne	.+2      	; 0x62e <_ZL16moveAbsolute_cmdiPcS_+0x2a>
     62c:	a4 c0       	rjmp	.+328    	; 0x776 <_ZL16moveAbsolute_cmdiPcS_+0x172>
     62e:	1a 82       	std	Y+2, r1	; 0x02
     630:	19 82       	std	Y+1, r1	; 0x01
     632:	89 81       	ldd	r24, Y+1	; 0x01
     634:	9a 81       	ldd	r25, Y+2	; 0x02
     636:	2b 85       	ldd	r18, Y+11	; 0x0b
     638:	3c 85       	ldd	r19, Y+12	; 0x0c
     63a:	82 0f       	add	r24, r18
     63c:	93 1f       	adc	r25, r19
     63e:	fc 01       	movw	r30, r24
     640:	80 81       	ld	r24, Z
     642:	88 23       	and	r24, r24
     644:	09 f1       	breq	.+66     	; 0x688 <_ZL16moveAbsolute_cmdiPcS_+0x84>
     646:	89 81       	ldd	r24, Y+1	; 0x01
     648:	9a 81       	ldd	r25, Y+2	; 0x02
     64a:	2b 85       	ldd	r18, Y+11	; 0x0b
     64c:	3c 85       	ldd	r19, Y+12	; 0x0c
     64e:	82 0f       	add	r24, r18
     650:	93 1f       	adc	r25, r19
     652:	fc 01       	movw	r30, r24
     654:	80 81       	ld	r24, Z
     656:	88 2f       	mov	r24, r24
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	c0 97       	sbiw	r24, 0x30	; 48
     65c:	0a 97       	sbiw	r24, 0x0a	; 10
     65e:	10 f0       	brcs	.+4      	; 0x664 <_ZL16moveAbsolute_cmdiPcS_+0x60>
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	01 c0       	rjmp	.+2      	; 0x666 <_ZL16moveAbsolute_cmdiPcS_+0x62>
     664:	80 e0       	ldi	r24, 0x00	; 0
     666:	88 23       	and	r24, r24
     668:	49 f0       	breq	.+18     	; 0x67c <_ZL16moveAbsolute_cmdiPcS_+0x78>
     66a:	65 e8       	ldi	r22, 0x85	; 133
     66c:	72 e0       	ldi	r23, 0x02	; 2
     66e:	8f ed       	ldi	r24, 0xDF	; 223
     670:	93 e0       	ldi	r25, 0x03	; 3
     672:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     676:	80 e0       	ldi	r24, 0x00	; 0
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	7d c0       	rjmp	.+250    	; 0x776 <_ZL16moveAbsolute_cmdiPcS_+0x172>
     67c:	89 81       	ldd	r24, Y+1	; 0x01
     67e:	9a 81       	ldd	r25, Y+2	; 0x02
     680:	01 96       	adiw	r24, 0x01	; 1
     682:	9a 83       	std	Y+2, r25	; 0x02
     684:	89 83       	std	Y+1, r24	; 0x01
     686:	d5 cf       	rjmp	.-86     	; 0x632 <_ZL16moveAbsolute_cmdiPcS_+0x2e>
     688:	8b 85       	ldd	r24, Y+11	; 0x0b
     68a:	9c 85       	ldd	r25, Y+12	; 0x0c
     68c:	4a e0       	ldi	r20, 0x0A	; 10
     68e:	50 e0       	ldi	r21, 0x00	; 0
     690:	60 e0       	ldi	r22, 0x00	; 0
     692:	70 e0       	ldi	r23, 0x00	; 0
     694:	0e 94 26 1a 	call	0x344c	; 0x344c <strtol>
     698:	dc 01       	movw	r26, r24
     69a:	cb 01       	movw	r24, r22
     69c:	8b 83       	std	Y+3, r24	; 0x03
     69e:	9c 83       	std	Y+4, r25	; 0x04
     6a0:	ad 83       	std	Y+5, r26	; 0x05
     6a2:	be 83       	std	Y+6, r27	; 0x06
     6a4:	2b 81       	ldd	r18, Y+3	; 0x03
     6a6:	3c 81       	ldd	r19, Y+4	; 0x04
     6a8:	4d 81       	ldd	r20, Y+5	; 0x05
     6aa:	5e 81       	ldd	r21, Y+6	; 0x06
     6ac:	88 ee       	ldi	r24, 0xE8	; 232
     6ae:	93 e0       	ldi	r25, 0x03	; 3
     6b0:	dc 01       	movw	r26, r24
     6b2:	0e 94 06 1a 	call	0x340c	; 0x340c <__muluhisi3>
     6b6:	dc 01       	movw	r26, r24
     6b8:	cb 01       	movw	r24, r22
     6ba:	24 e3       	ldi	r18, 0x34	; 52
     6bc:	36 e0       	ldi	r19, 0x06	; 6
     6be:	40 e0       	ldi	r20, 0x00	; 0
     6c0:	50 e0       	ldi	r21, 0x00	; 0
     6c2:	bc 01       	movw	r22, r24
     6c4:	cd 01       	movw	r24, r26
     6c6:	0e 94 e7 19 	call	0x33ce	; 0x33ce <__divmodsi4>
     6ca:	da 01       	movw	r26, r20
     6cc:	c9 01       	movw	r24, r18
     6ce:	8b 83       	std	Y+3, r24	; 0x03
     6d0:	9c 83       	std	Y+4, r25	; 0x04
     6d2:	ad 83       	std	Y+5, r26	; 0x05
     6d4:	be 83       	std	Y+6, r27	; 0x06
     6d6:	8b 81       	ldd	r24, Y+3	; 0x03
     6d8:	9c 81       	ldd	r25, Y+4	; 0x04
     6da:	ad 81       	ldd	r26, Y+5	; 0x05
     6dc:	be 81       	ldd	r27, Y+6	; 0x06
     6de:	bb 23       	and	r27, r27
     6e0:	ac f0       	brlt	.+42     	; 0x70c <_ZL16moveAbsolute_cmdiPcS_+0x108>
     6e2:	8b 81       	ldd	r24, Y+3	; 0x03
     6e4:	9c 81       	ldd	r25, Y+4	; 0x04
     6e6:	ad 81       	ldd	r26, Y+5	; 0x05
     6e8:	be 81       	ldd	r27, Y+6	; 0x06
     6ea:	86 3c       	cpi	r24, 0xC6	; 198
     6ec:	92 42       	sbci	r25, 0x22	; 34
     6ee:	a1 40       	sbci	r26, 0x01	; 1
     6f0:	b1 05       	cpc	r27, r1
     6f2:	64 f4       	brge	.+24     	; 0x70c <_ZL16moveAbsolute_cmdiPcS_+0x108>
     6f4:	8b 81       	ldd	r24, Y+3	; 0x03
     6f6:	9c 81       	ldd	r25, Y+4	; 0x04
     6f8:	ad 81       	ldd	r26, Y+5	; 0x05
     6fa:	be 81       	ldd	r27, Y+6	; 0x06
     6fc:	80 93 d2 03 	sts	0x03D2, r24	; 0x8003d2 <DESIRED_POSITION>
     700:	90 93 d3 03 	sts	0x03D3, r25	; 0x8003d3 <DESIRED_POSITION+0x1>
     704:	a0 93 d4 03 	sts	0x03D4, r26	; 0x8003d4 <DESIRED_POSITION+0x2>
     708:	b0 93 d5 03 	sts	0x03D5, r27	; 0x8003d5 <DESIRED_POSITION+0x3>
     70c:	20 91 d2 03 	lds	r18, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
     710:	30 91 d3 03 	lds	r19, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
     714:	40 91 d4 03 	lds	r20, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
     718:	50 91 d5 03 	lds	r21, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
     71c:	80 e8       	ldi	r24, 0x80	; 128
     71e:	9c e0       	ldi	r25, 0x0C	; 12
     720:	dc 01       	movw	r26, r24
     722:	0e 94 06 1a 	call	0x340c	; 0x340c <__muluhisi3>
     726:	dc 01       	movw	r26, r24
     728:	cb 01       	movw	r24, r22
     72a:	28 ee       	ldi	r18, 0xE8	; 232
     72c:	33 e0       	ldi	r19, 0x03	; 3
     72e:	40 e0       	ldi	r20, 0x00	; 0
     730:	50 e0       	ldi	r21, 0x00	; 0
     732:	bc 01       	movw	r22, r24
     734:	cd 01       	movw	r24, r26
     736:	0e 94 e7 19 	call	0x33ce	; 0x33ce <__divmodsi4>
     73a:	da 01       	movw	r26, r20
     73c:	c9 01       	movw	r24, r18
     73e:	80 93 d2 03 	sts	0x03D2, r24	; 0x8003d2 <DESIRED_POSITION>
     742:	90 93 d3 03 	sts	0x03D3, r25	; 0x8003d3 <DESIRED_POSITION+0x1>
     746:	a0 93 d4 03 	sts	0x03D4, r26	; 0x8003d4 <DESIRED_POSITION+0x2>
     74a:	b0 93 d5 03 	sts	0x03D5, r27	; 0x8003d5 <DESIRED_POSITION+0x3>
     74e:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
     752:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
     756:	a0 91 d4 03 	lds	r26, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
     75a:	b0 91 d5 03 	lds	r27, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
     75e:	88 0f       	add	r24, r24
     760:	99 1f       	adc	r25, r25
     762:	aa 1f       	adc	r26, r26
     764:	bb 1f       	adc	r27, r27
     766:	80 93 d2 03 	sts	0x03D2, r24	; 0x8003d2 <DESIRED_POSITION>
     76a:	90 93 d3 03 	sts	0x03D3, r25	; 0x8003d3 <DESIRED_POSITION+0x1>
     76e:	a0 93 d4 03 	sts	0x03D4, r26	; 0x8003d4 <DESIRED_POSITION+0x2>
     772:	b0 93 d5 03 	sts	0x03D5, r27	; 0x8003d5 <DESIRED_POSITION+0x3>
     776:	2c 96       	adiw	r28, 0x0c	; 12
     778:	0f b6       	in	r0, 0x3f	; 63
     77a:	f8 94       	cli
     77c:	de bf       	out	0x3e, r29	; 62
     77e:	0f be       	out	0x3f, r0	; 63
     780:	cd bf       	out	0x3d, r28	; 61
     782:	df 91       	pop	r29
     784:	cf 91       	pop	r28
     786:	08 95       	ret

00000788 <_ZL12spoolRPM_cmdiPcS_>:
     788:	cf 93       	push	r28
     78a:	df 93       	push	r29
     78c:	cd b7       	in	r28, 0x3d	; 61
     78e:	de b7       	in	r29, 0x3e	; 62
     790:	c2 54       	subi	r28, 0x42	; 66
     792:	d1 09       	sbc	r29, r1
     794:	0f b6       	in	r0, 0x3f	; 63
     796:	f8 94       	cli
     798:	de bf       	out	0x3e, r29	; 62
     79a:	0f be       	out	0x3f, r0	; 63
     79c:	cd bf       	out	0x3d, r28	; 61
     79e:	9e af       	std	Y+62, r25	; 0x3e
     7a0:	8d af       	std	Y+61, r24	; 0x3d
     7a2:	ce 01       	movw	r24, r28
     7a4:	cf 96       	adiw	r24, 0x3f	; 63
     7a6:	fc 01       	movw	r30, r24
     7a8:	71 83       	std	Z+1, r23	; 0x01
     7aa:	60 83       	st	Z, r22
     7ac:	ce 01       	movw	r24, r28
     7ae:	8f 5b       	subi	r24, 0xBF	; 191
     7b0:	9f 4f       	sbci	r25, 0xFF	; 255
     7b2:	fc 01       	movw	r30, r24
     7b4:	51 83       	std	Z+1, r21	; 0x01
     7b6:	40 83       	st	Z, r20
     7b8:	2c e3       	ldi	r18, 0x3C	; 60
     7ba:	ce 01       	movw	r24, r28
     7bc:	01 96       	adiw	r24, 0x01	; 1
     7be:	fc 01       	movw	r30, r24
     7c0:	32 2f       	mov	r19, r18
     7c2:	11 92       	st	Z+, r1
     7c4:	3a 95       	dec	r19
     7c6:	e9 f7       	brne	.-6      	; 0x7c2 <_ZL12spoolRPM_cmdiPcS_+0x3a>
     7c8:	20 91 da 03 	lds	r18, 0x03DA	; 0x8003da <SPOOLRPM>
     7cc:	30 91 db 03 	lds	r19, 0x03DB	; 0x8003db <SPOOLRPM+0x1>
     7d0:	ce 01       	movw	r24, r28
     7d2:	cf 96       	adiw	r24, 0x3f	; 63
     7d4:	fc 01       	movw	r30, r24
     7d6:	80 81       	ld	r24, Z
     7d8:	91 81       	ldd	r25, Z+1	; 0x01
     7da:	ac 01       	movw	r20, r24
     7dc:	63 e0       	ldi	r22, 0x03	; 3
     7de:	70 e0       	ldi	r23, 0x00	; 0
     7e0:	ce 01       	movw	r24, r28
     7e2:	01 96       	adiw	r24, 0x01	; 1
     7e4:	0e 94 10 06 	call	0xc20	; 0xc20 <_Z17BuildSerialOutputPciS_j>
     7e8:	ce 01       	movw	r24, r28
     7ea:	01 96       	adiw	r24, 0x01	; 1
     7ec:	bc 01       	movw	r22, r24
     7ee:	8f ed       	ldi	r24, 0xDF	; 223
     7f0:	93 e0       	ldi	r25, 0x03	; 3
     7f2:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     7f6:	00 00       	nop
     7f8:	ce 5b       	subi	r28, 0xBE	; 190
     7fa:	df 4f       	sbci	r29, 0xFF	; 255
     7fc:	0f b6       	in	r0, 0x3f	; 63
     7fe:	f8 94       	cli
     800:	de bf       	out	0x3e, r29	; 62
     802:	0f be       	out	0x3f, r0	; 63
     804:	cd bf       	out	0x3d, r28	; 61
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	08 95       	ret

0000080c <_ZL15innerOffset_cmdiPcS_>:
     80c:	cf 93       	push	r28
     80e:	df 93       	push	r29
     810:	cd b7       	in	r28, 0x3d	; 61
     812:	de b7       	in	r29, 0x3e	; 62
     814:	c4 54       	subi	r28, 0x44	; 68
     816:	d1 09       	sbc	r29, r1
     818:	0f b6       	in	r0, 0x3f	; 63
     81a:	f8 94       	cli
     81c:	de bf       	out	0x3e, r29	; 62
     81e:	0f be       	out	0x3f, r0	; 63
     820:	cd bf       	out	0x3d, r28	; 61
     822:	9e 01       	movw	r18, r28
     824:	21 5c       	subi	r18, 0xC1	; 193
     826:	3f 4f       	sbci	r19, 0xFF	; 255
     828:	f9 01       	movw	r30, r18
     82a:	91 83       	std	Z+1, r25	; 0x01
     82c:	80 83       	st	Z, r24
     82e:	ce 01       	movw	r24, r28
     830:	8f 5b       	subi	r24, 0xBF	; 191
     832:	9f 4f       	sbci	r25, 0xFF	; 255
     834:	fc 01       	movw	r30, r24
     836:	71 83       	std	Z+1, r23	; 0x01
     838:	60 83       	st	Z, r22
     83a:	ce 01       	movw	r24, r28
     83c:	8d 5b       	subi	r24, 0xBD	; 189
     83e:	9f 4f       	sbci	r25, 0xFF	; 255
     840:	fc 01       	movw	r30, r24
     842:	51 83       	std	Z+1, r21	; 0x01
     844:	40 83       	st	Z, r20
     846:	ce 01       	movw	r24, r28
     848:	8d 5b       	subi	r24, 0xBD	; 189
     84a:	9f 4f       	sbci	r25, 0xFF	; 255
     84c:	fc 01       	movw	r30, r24
     84e:	80 81       	ld	r24, Z
     850:	91 81       	ldd	r25, Z+1	; 0x01
     852:	89 2b       	or	r24, r25
     854:	09 f4       	brne	.+2      	; 0x858 <_ZL15innerOffset_cmdiPcS_+0x4c>
     856:	4c c0       	rjmp	.+152    	; 0x8f0 <_ZL15innerOffset_cmdiPcS_+0xe4>
     858:	1a 82       	std	Y+2, r1	; 0x02
     85a:	19 82       	std	Y+1, r1	; 0x01
     85c:	89 81       	ldd	r24, Y+1	; 0x01
     85e:	9a 81       	ldd	r25, Y+2	; 0x02
     860:	9e 01       	movw	r18, r28
     862:	2d 5b       	subi	r18, 0xBD	; 189
     864:	3f 4f       	sbci	r19, 0xFF	; 255
     866:	f9 01       	movw	r30, r18
     868:	20 81       	ld	r18, Z
     86a:	31 81       	ldd	r19, Z+1	; 0x01
     86c:	82 0f       	add	r24, r18
     86e:	93 1f       	adc	r25, r19
     870:	fc 01       	movw	r30, r24
     872:	80 81       	ld	r24, Z
     874:	88 23       	and	r24, r24
     876:	29 f1       	breq	.+74     	; 0x8c2 <_ZL15innerOffset_cmdiPcS_+0xb6>
     878:	89 81       	ldd	r24, Y+1	; 0x01
     87a:	9a 81       	ldd	r25, Y+2	; 0x02
     87c:	9e 01       	movw	r18, r28
     87e:	2d 5b       	subi	r18, 0xBD	; 189
     880:	3f 4f       	sbci	r19, 0xFF	; 255
     882:	f9 01       	movw	r30, r18
     884:	20 81       	ld	r18, Z
     886:	31 81       	ldd	r19, Z+1	; 0x01
     888:	82 0f       	add	r24, r18
     88a:	93 1f       	adc	r25, r19
     88c:	fc 01       	movw	r30, r24
     88e:	80 81       	ld	r24, Z
     890:	88 2f       	mov	r24, r24
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	c0 97       	sbiw	r24, 0x30	; 48
     896:	0a 97       	sbiw	r24, 0x0a	; 10
     898:	10 f0       	brcs	.+4      	; 0x89e <_ZL15innerOffset_cmdiPcS_+0x92>
     89a:	81 e0       	ldi	r24, 0x01	; 1
     89c:	01 c0       	rjmp	.+2      	; 0x8a0 <_ZL15innerOffset_cmdiPcS_+0x94>
     89e:	80 e0       	ldi	r24, 0x00	; 0
     8a0:	88 23       	and	r24, r24
     8a2:	49 f0       	breq	.+18     	; 0x8b6 <_ZL15innerOffset_cmdiPcS_+0xaa>
     8a4:	6d ea       	ldi	r22, 0xAD	; 173
     8a6:	72 e0       	ldi	r23, 0x02	; 2
     8a8:	8f ed       	ldi	r24, 0xDF	; 223
     8aa:	93 e0       	ldi	r25, 0x03	; 3
     8ac:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	41 c0       	rjmp	.+130    	; 0x938 <__stack+0x39>
     8b6:	89 81       	ldd	r24, Y+1	; 0x01
     8b8:	9a 81       	ldd	r25, Y+2	; 0x02
     8ba:	01 96       	adiw	r24, 0x01	; 1
     8bc:	9a 83       	std	Y+2, r25	; 0x02
     8be:	89 83       	std	Y+1, r24	; 0x01
     8c0:	cd cf       	rjmp	.-102    	; 0x85c <_ZL15innerOffset_cmdiPcS_+0x50>
     8c2:	ce 01       	movw	r24, r28
     8c4:	8d 5b       	subi	r24, 0xBD	; 189
     8c6:	9f 4f       	sbci	r25, 0xFF	; 255
     8c8:	fc 01       	movw	r30, r24
     8ca:	80 81       	ld	r24, Z
     8cc:	91 81       	ldd	r25, Z+1	; 0x01
     8ce:	4a e0       	ldi	r20, 0x0A	; 10
     8d0:	50 e0       	ldi	r21, 0x00	; 0
     8d2:	60 e0       	ldi	r22, 0x00	; 0
     8d4:	70 e0       	ldi	r23, 0x00	; 0
     8d6:	0e 94 26 1a 	call	0x344c	; 0x344c <strtol>
     8da:	dc 01       	movw	r26, r24
     8dc:	cb 01       	movw	r24, r22
     8de:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <INNER_TRAVERSE_OFFSET>
     8e2:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <INNER_TRAVERSE_OFFSET+0x1>
     8e6:	a0 93 aa 01 	sts	0x01AA, r26	; 0x8001aa <INNER_TRAVERSE_OFFSET+0x2>
     8ea:	b0 93 ab 01 	sts	0x01AB, r27	; 0x8001ab <INNER_TRAVERSE_OFFSET+0x3>
     8ee:	24 c0       	rjmp	.+72     	; 0x938 <__stack+0x39>
     8f0:	2c e3       	ldi	r18, 0x3C	; 60
     8f2:	ce 01       	movw	r24, r28
     8f4:	03 96       	adiw	r24, 0x03	; 3
     8f6:	fc 01       	movw	r30, r24
     8f8:	32 2f       	mov	r19, r18
     8fa:	11 92       	st	Z+, r1
     8fc:	3a 95       	dec	r19
     8fe:	e9 f7       	brne	.-6      	; 0x8fa <_ZL15innerOffset_cmdiPcS_+0xee>
     900:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <INNER_TRAVERSE_OFFSET>
     904:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <INNER_TRAVERSE_OFFSET+0x1>
     908:	a0 91 aa 01 	lds	r26, 0x01AA	; 0x8001aa <INNER_TRAVERSE_OFFSET+0x2>
     90c:	b0 91 ab 01 	lds	r27, 0x01AB	; 0x8001ab <INNER_TRAVERSE_OFFSET+0x3>
     910:	9c 01       	movw	r18, r24
     912:	ce 01       	movw	r24, r28
     914:	8f 5b       	subi	r24, 0xBF	; 191
     916:	9f 4f       	sbci	r25, 0xFF	; 255
     918:	fc 01       	movw	r30, r24
     91a:	40 81       	ld	r20, Z
     91c:	51 81       	ldd	r21, Z+1	; 0x01
     91e:	ce 01       	movw	r24, r28
     920:	03 96       	adiw	r24, 0x03	; 3
     922:	63 e0       	ldi	r22, 0x03	; 3
     924:	70 e0       	ldi	r23, 0x00	; 0
     926:	0e 94 10 06 	call	0xc20	; 0xc20 <_Z17BuildSerialOutputPciS_j>
     92a:	ce 01       	movw	r24, r28
     92c:	03 96       	adiw	r24, 0x03	; 3
     92e:	bc 01       	movw	r22, r24
     930:	8f ed       	ldi	r24, 0xDF	; 223
     932:	93 e0       	ldi	r25, 0x03	; 3
     934:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     938:	cc 5b       	subi	r28, 0xBC	; 188
     93a:	df 4f       	sbci	r29, 0xFF	; 255
     93c:	0f b6       	in	r0, 0x3f	; 63
     93e:	f8 94       	cli
     940:	de bf       	out	0x3e, r29	; 62
     942:	0f be       	out	0x3f, r0	; 63
     944:	cd bf       	out	0x3d, r28	; 61
     946:	df 91       	pop	r29
     948:	cf 91       	pop	r28
     94a:	08 95       	ret

0000094c <_ZL14spoolWidth_cmdiPcS_>:
     94c:	cf 93       	push	r28
     94e:	df 93       	push	r29
     950:	cd b7       	in	r28, 0x3d	; 61
     952:	de b7       	in	r29, 0x3e	; 62
     954:	c4 54       	subi	r28, 0x44	; 68
     956:	d1 09       	sbc	r29, r1
     958:	0f b6       	in	r0, 0x3f	; 63
     95a:	f8 94       	cli
     95c:	de bf       	out	0x3e, r29	; 62
     95e:	0f be       	out	0x3f, r0	; 63
     960:	cd bf       	out	0x3d, r28	; 61
     962:	9e 01       	movw	r18, r28
     964:	21 5c       	subi	r18, 0xC1	; 193
     966:	3f 4f       	sbci	r19, 0xFF	; 255
     968:	f9 01       	movw	r30, r18
     96a:	91 83       	std	Z+1, r25	; 0x01
     96c:	80 83       	st	Z, r24
     96e:	ce 01       	movw	r24, r28
     970:	8f 5b       	subi	r24, 0xBF	; 191
     972:	9f 4f       	sbci	r25, 0xFF	; 255
     974:	fc 01       	movw	r30, r24
     976:	71 83       	std	Z+1, r23	; 0x01
     978:	60 83       	st	Z, r22
     97a:	ce 01       	movw	r24, r28
     97c:	8d 5b       	subi	r24, 0xBD	; 189
     97e:	9f 4f       	sbci	r25, 0xFF	; 255
     980:	fc 01       	movw	r30, r24
     982:	51 83       	std	Z+1, r21	; 0x01
     984:	40 83       	st	Z, r20
     986:	ce 01       	movw	r24, r28
     988:	8d 5b       	subi	r24, 0xBD	; 189
     98a:	9f 4f       	sbci	r25, 0xFF	; 255
     98c:	fc 01       	movw	r30, r24
     98e:	80 81       	ld	r24, Z
     990:	91 81       	ldd	r25, Z+1	; 0x01
     992:	89 2b       	or	r24, r25
     994:	09 f4       	brne	.+2      	; 0x998 <_ZL14spoolWidth_cmdiPcS_+0x4c>
     996:	4c c0       	rjmp	.+152    	; 0xa30 <_ZL14spoolWidth_cmdiPcS_+0xe4>
     998:	1a 82       	std	Y+2, r1	; 0x02
     99a:	19 82       	std	Y+1, r1	; 0x01
     99c:	89 81       	ldd	r24, Y+1	; 0x01
     99e:	9a 81       	ldd	r25, Y+2	; 0x02
     9a0:	9e 01       	movw	r18, r28
     9a2:	2d 5b       	subi	r18, 0xBD	; 189
     9a4:	3f 4f       	sbci	r19, 0xFF	; 255
     9a6:	f9 01       	movw	r30, r18
     9a8:	20 81       	ld	r18, Z
     9aa:	31 81       	ldd	r19, Z+1	; 0x01
     9ac:	82 0f       	add	r24, r18
     9ae:	93 1f       	adc	r25, r19
     9b0:	fc 01       	movw	r30, r24
     9b2:	80 81       	ld	r24, Z
     9b4:	88 23       	and	r24, r24
     9b6:	29 f1       	breq	.+74     	; 0xa02 <_ZL14spoolWidth_cmdiPcS_+0xb6>
     9b8:	89 81       	ldd	r24, Y+1	; 0x01
     9ba:	9a 81       	ldd	r25, Y+2	; 0x02
     9bc:	9e 01       	movw	r18, r28
     9be:	2d 5b       	subi	r18, 0xBD	; 189
     9c0:	3f 4f       	sbci	r19, 0xFF	; 255
     9c2:	f9 01       	movw	r30, r18
     9c4:	20 81       	ld	r18, Z
     9c6:	31 81       	ldd	r19, Z+1	; 0x01
     9c8:	82 0f       	add	r24, r18
     9ca:	93 1f       	adc	r25, r19
     9cc:	fc 01       	movw	r30, r24
     9ce:	80 81       	ld	r24, Z
     9d0:	88 2f       	mov	r24, r24
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	c0 97       	sbiw	r24, 0x30	; 48
     9d6:	0a 97       	sbiw	r24, 0x0a	; 10
     9d8:	10 f0       	brcs	.+4      	; 0x9de <_ZL14spoolWidth_cmdiPcS_+0x92>
     9da:	81 e0       	ldi	r24, 0x01	; 1
     9dc:	01 c0       	rjmp	.+2      	; 0x9e0 <_ZL14spoolWidth_cmdiPcS_+0x94>
     9de:	80 e0       	ldi	r24, 0x00	; 0
     9e0:	88 23       	and	r24, r24
     9e2:	49 f0       	breq	.+18     	; 0x9f6 <_ZL14spoolWidth_cmdiPcS_+0xaa>
     9e4:	63 ed       	ldi	r22, 0xD3	; 211
     9e6:	72 e0       	ldi	r23, 0x02	; 2
     9e8:	8f ed       	ldi	r24, 0xDF	; 223
     9ea:	93 e0       	ldi	r25, 0x03	; 3
     9ec:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     9f0:	80 e0       	ldi	r24, 0x00	; 0
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	41 c0       	rjmp	.+130    	; 0xa78 <_ZL14spoolWidth_cmdiPcS_+0x12c>
     9f6:	89 81       	ldd	r24, Y+1	; 0x01
     9f8:	9a 81       	ldd	r25, Y+2	; 0x02
     9fa:	01 96       	adiw	r24, 0x01	; 1
     9fc:	9a 83       	std	Y+2, r25	; 0x02
     9fe:	89 83       	std	Y+1, r24	; 0x01
     a00:	cd cf       	rjmp	.-102    	; 0x99c <_ZL14spoolWidth_cmdiPcS_+0x50>
     a02:	ce 01       	movw	r24, r28
     a04:	8d 5b       	subi	r24, 0xBD	; 189
     a06:	9f 4f       	sbci	r25, 0xFF	; 255
     a08:	fc 01       	movw	r30, r24
     a0a:	80 81       	ld	r24, Z
     a0c:	91 81       	ldd	r25, Z+1	; 0x01
     a0e:	4a e0       	ldi	r20, 0x0A	; 10
     a10:	50 e0       	ldi	r21, 0x00	; 0
     a12:	60 e0       	ldi	r22, 0x00	; 0
     a14:	70 e0       	ldi	r23, 0x00	; 0
     a16:	0e 94 26 1a 	call	0x344c	; 0x344c <strtol>
     a1a:	dc 01       	movw	r26, r24
     a1c:	cb 01       	movw	r24, r22
     a1e:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <SPOOL_WIDTH>
     a22:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <SPOOL_WIDTH+0x1>
     a26:	a0 93 ae 01 	sts	0x01AE, r26	; 0x8001ae <SPOOL_WIDTH+0x2>
     a2a:	b0 93 af 01 	sts	0x01AF, r27	; 0x8001af <SPOOL_WIDTH+0x3>
     a2e:	24 c0       	rjmp	.+72     	; 0xa78 <_ZL14spoolWidth_cmdiPcS_+0x12c>
     a30:	2c e3       	ldi	r18, 0x3C	; 60
     a32:	ce 01       	movw	r24, r28
     a34:	03 96       	adiw	r24, 0x03	; 3
     a36:	fc 01       	movw	r30, r24
     a38:	32 2f       	mov	r19, r18
     a3a:	11 92       	st	Z+, r1
     a3c:	3a 95       	dec	r19
     a3e:	e9 f7       	brne	.-6      	; 0xa3a <_ZL14spoolWidth_cmdiPcS_+0xee>
     a40:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <SPOOL_WIDTH>
     a44:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <SPOOL_WIDTH+0x1>
     a48:	a0 91 ae 01 	lds	r26, 0x01AE	; 0x8001ae <SPOOL_WIDTH+0x2>
     a4c:	b0 91 af 01 	lds	r27, 0x01AF	; 0x8001af <SPOOL_WIDTH+0x3>
     a50:	9c 01       	movw	r18, r24
     a52:	ce 01       	movw	r24, r28
     a54:	8f 5b       	subi	r24, 0xBF	; 191
     a56:	9f 4f       	sbci	r25, 0xFF	; 255
     a58:	fc 01       	movw	r30, r24
     a5a:	40 81       	ld	r20, Z
     a5c:	51 81       	ldd	r21, Z+1	; 0x01
     a5e:	ce 01       	movw	r24, r28
     a60:	03 96       	adiw	r24, 0x03	; 3
     a62:	63 e0       	ldi	r22, 0x03	; 3
     a64:	70 e0       	ldi	r23, 0x00	; 0
     a66:	0e 94 10 06 	call	0xc20	; 0xc20 <_Z17BuildSerialOutputPciS_j>
     a6a:	ce 01       	movw	r24, r28
     a6c:	03 96       	adiw	r24, 0x03	; 3
     a6e:	bc 01       	movw	r22, r24
     a70:	8f ed       	ldi	r24, 0xDF	; 223
     a72:	93 e0       	ldi	r25, 0x03	; 3
     a74:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     a78:	cc 5b       	subi	r28, 0xBC	; 188
     a7a:	df 4f       	sbci	r29, 0xFF	; 255
     a7c:	0f b6       	in	r0, 0x3f	; 63
     a7e:	f8 94       	cli
     a80:	de bf       	out	0x3e, r29	; 62
     a82:	0f be       	out	0x3f, r0	; 63
     a84:	cd bf       	out	0x3d, r28	; 61
     a86:	df 91       	pop	r29
     a88:	cf 91       	pop	r28
     a8a:	08 95       	ret

00000a8c <_ZL20filamentDiameter_cmdiPcS_>:
     a8c:	cf 93       	push	r28
     a8e:	df 93       	push	r29
     a90:	cd b7       	in	r28, 0x3d	; 61
     a92:	de b7       	in	r29, 0x3e	; 62
     a94:	c4 54       	subi	r28, 0x44	; 68
     a96:	d1 09       	sbc	r29, r1
     a98:	0f b6       	in	r0, 0x3f	; 63
     a9a:	f8 94       	cli
     a9c:	de bf       	out	0x3e, r29	; 62
     a9e:	0f be       	out	0x3f, r0	; 63
     aa0:	cd bf       	out	0x3d, r28	; 61
     aa2:	9e 01       	movw	r18, r28
     aa4:	21 5c       	subi	r18, 0xC1	; 193
     aa6:	3f 4f       	sbci	r19, 0xFF	; 255
     aa8:	f9 01       	movw	r30, r18
     aaa:	91 83       	std	Z+1, r25	; 0x01
     aac:	80 83       	st	Z, r24
     aae:	ce 01       	movw	r24, r28
     ab0:	8f 5b       	subi	r24, 0xBF	; 191
     ab2:	9f 4f       	sbci	r25, 0xFF	; 255
     ab4:	fc 01       	movw	r30, r24
     ab6:	71 83       	std	Z+1, r23	; 0x01
     ab8:	60 83       	st	Z, r22
     aba:	ce 01       	movw	r24, r28
     abc:	8d 5b       	subi	r24, 0xBD	; 189
     abe:	9f 4f       	sbci	r25, 0xFF	; 255
     ac0:	fc 01       	movw	r30, r24
     ac2:	51 83       	std	Z+1, r21	; 0x01
     ac4:	40 83       	st	Z, r20
     ac6:	ce 01       	movw	r24, r28
     ac8:	8d 5b       	subi	r24, 0xBD	; 189
     aca:	9f 4f       	sbci	r25, 0xFF	; 255
     acc:	fc 01       	movw	r30, r24
     ace:	80 81       	ld	r24, Z
     ad0:	91 81       	ldd	r25, Z+1	; 0x01
     ad2:	89 2b       	or	r24, r25
     ad4:	09 f4       	brne	.+2      	; 0xad8 <_ZL20filamentDiameter_cmdiPcS_+0x4c>
     ad6:	4c c0       	rjmp	.+152    	; 0xb70 <_ZL20filamentDiameter_cmdiPcS_+0xe4>
     ad8:	1a 82       	std	Y+2, r1	; 0x02
     ada:	19 82       	std	Y+1, r1	; 0x01
     adc:	89 81       	ldd	r24, Y+1	; 0x01
     ade:	9a 81       	ldd	r25, Y+2	; 0x02
     ae0:	9e 01       	movw	r18, r28
     ae2:	2d 5b       	subi	r18, 0xBD	; 189
     ae4:	3f 4f       	sbci	r19, 0xFF	; 255
     ae6:	f9 01       	movw	r30, r18
     ae8:	20 81       	ld	r18, Z
     aea:	31 81       	ldd	r19, Z+1	; 0x01
     aec:	82 0f       	add	r24, r18
     aee:	93 1f       	adc	r25, r19
     af0:	fc 01       	movw	r30, r24
     af2:	80 81       	ld	r24, Z
     af4:	88 23       	and	r24, r24
     af6:	29 f1       	breq	.+74     	; 0xb42 <_ZL20filamentDiameter_cmdiPcS_+0xb6>
     af8:	89 81       	ldd	r24, Y+1	; 0x01
     afa:	9a 81       	ldd	r25, Y+2	; 0x02
     afc:	9e 01       	movw	r18, r28
     afe:	2d 5b       	subi	r18, 0xBD	; 189
     b00:	3f 4f       	sbci	r19, 0xFF	; 255
     b02:	f9 01       	movw	r30, r18
     b04:	20 81       	ld	r18, Z
     b06:	31 81       	ldd	r19, Z+1	; 0x01
     b08:	82 0f       	add	r24, r18
     b0a:	93 1f       	adc	r25, r19
     b0c:	fc 01       	movw	r30, r24
     b0e:	80 81       	ld	r24, Z
     b10:	88 2f       	mov	r24, r24
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	c0 97       	sbiw	r24, 0x30	; 48
     b16:	0a 97       	sbiw	r24, 0x0a	; 10
     b18:	10 f0       	brcs	.+4      	; 0xb1e <_ZL20filamentDiameter_cmdiPcS_+0x92>
     b1a:	81 e0       	ldi	r24, 0x01	; 1
     b1c:	01 c0       	rjmp	.+2      	; 0xb20 <_ZL20filamentDiameter_cmdiPcS_+0x94>
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	88 23       	and	r24, r24
     b22:	49 f0       	breq	.+18     	; 0xb36 <_ZL20filamentDiameter_cmdiPcS_+0xaa>
     b24:	63 ed       	ldi	r22, 0xD3	; 211
     b26:	72 e0       	ldi	r23, 0x02	; 2
     b28:	8f ed       	ldi	r24, 0xDF	; 223
     b2a:	93 e0       	ldi	r25, 0x03	; 3
     b2c:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     b30:	80 e0       	ldi	r24, 0x00	; 0
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	41 c0       	rjmp	.+130    	; 0xbb8 <_ZL20filamentDiameter_cmdiPcS_+0x12c>
     b36:	89 81       	ldd	r24, Y+1	; 0x01
     b38:	9a 81       	ldd	r25, Y+2	; 0x02
     b3a:	01 96       	adiw	r24, 0x01	; 1
     b3c:	9a 83       	std	Y+2, r25	; 0x02
     b3e:	89 83       	std	Y+1, r24	; 0x01
     b40:	cd cf       	rjmp	.-102    	; 0xadc <_ZL20filamentDiameter_cmdiPcS_+0x50>
     b42:	ce 01       	movw	r24, r28
     b44:	8d 5b       	subi	r24, 0xBD	; 189
     b46:	9f 4f       	sbci	r25, 0xFF	; 255
     b48:	fc 01       	movw	r30, r24
     b4a:	80 81       	ld	r24, Z
     b4c:	91 81       	ldd	r25, Z+1	; 0x01
     b4e:	4a e0       	ldi	r20, 0x0A	; 10
     b50:	50 e0       	ldi	r21, 0x00	; 0
     b52:	60 e0       	ldi	r22, 0x00	; 0
     b54:	70 e0       	ldi	r23, 0x00	; 0
     b56:	0e 94 26 1a 	call	0x344c	; 0x344c <strtol>
     b5a:	dc 01       	movw	r26, r24
     b5c:	cb 01       	movw	r24, r22
     b5e:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <FILAMENT_DIAMETER>
     b62:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <FILAMENT_DIAMETER+0x1>
     b66:	a0 93 b2 01 	sts	0x01B2, r26	; 0x8001b2 <FILAMENT_DIAMETER+0x2>
     b6a:	b0 93 b3 01 	sts	0x01B3, r27	; 0x8001b3 <FILAMENT_DIAMETER+0x3>
     b6e:	24 c0       	rjmp	.+72     	; 0xbb8 <_ZL20filamentDiameter_cmdiPcS_+0x12c>
     b70:	2c e3       	ldi	r18, 0x3C	; 60
     b72:	ce 01       	movw	r24, r28
     b74:	03 96       	adiw	r24, 0x03	; 3
     b76:	fc 01       	movw	r30, r24
     b78:	32 2f       	mov	r19, r18
     b7a:	11 92       	st	Z+, r1
     b7c:	3a 95       	dec	r19
     b7e:	e9 f7       	brne	.-6      	; 0xb7a <_ZL20filamentDiameter_cmdiPcS_+0xee>
     b80:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <FILAMENT_DIAMETER>
     b84:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <FILAMENT_DIAMETER+0x1>
     b88:	a0 91 b2 01 	lds	r26, 0x01B2	; 0x8001b2 <FILAMENT_DIAMETER+0x2>
     b8c:	b0 91 b3 01 	lds	r27, 0x01B3	; 0x8001b3 <FILAMENT_DIAMETER+0x3>
     b90:	9c 01       	movw	r18, r24
     b92:	ce 01       	movw	r24, r28
     b94:	8f 5b       	subi	r24, 0xBF	; 191
     b96:	9f 4f       	sbci	r25, 0xFF	; 255
     b98:	fc 01       	movw	r30, r24
     b9a:	40 81       	ld	r20, Z
     b9c:	51 81       	ldd	r21, Z+1	; 0x01
     b9e:	ce 01       	movw	r24, r28
     ba0:	03 96       	adiw	r24, 0x03	; 3
     ba2:	63 e0       	ldi	r22, 0x03	; 3
     ba4:	70 e0       	ldi	r23, 0x00	; 0
     ba6:	0e 94 10 06 	call	0xc20	; 0xc20 <_Z17BuildSerialOutputPciS_j>
     baa:	ce 01       	movw	r24, r28
     bac:	03 96       	adiw	r24, 0x03	; 3
     bae:	bc 01       	movw	r22, r24
     bb0:	8f ed       	ldi	r24, 0xDF	; 223
     bb2:	93 e0       	ldi	r25, 0x03	; 3
     bb4:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
     bb8:	cc 5b       	subi	r28, 0xBC	; 188
     bba:	df 4f       	sbci	r29, 0xFF	; 255
     bbc:	0f b6       	in	r0, 0x3f	; 63
     bbe:	f8 94       	cli
     bc0:	de bf       	out	0x3e, r29	; 62
     bc2:	0f be       	out	0x3f, r0	; 63
     bc4:	cd bf       	out	0x3d, r28	; 61
     bc6:	df 91       	pop	r29
     bc8:	cf 91       	pop	r28
     bca:	08 95       	ret

00000bcc <_ZN15Serial_Commands15commandsProcessEv>:
     bcc:	cf 93       	push	r28
     bce:	df 93       	push	r29
     bd0:	cd b7       	in	r28, 0x3d	; 61
     bd2:	de b7       	in	r29, 0x3e	; 62
     bd4:	c2 58       	subi	r28, 0x82	; 130
     bd6:	d1 09       	sbc	r29, r1
     bd8:	0f b6       	in	r0, 0x3f	; 63
     bda:	f8 94       	cli
     bdc:	de bf       	out	0x3e, r29	; 62
     bde:	0f be       	out	0x3f, r0	; 63
     be0:	cd bf       	out	0x3d, r28	; 61
     be2:	9e 01       	movw	r18, r28
     be4:	2f 57       	subi	r18, 0x7F	; 127
     be6:	3f 4f       	sbci	r19, 0xFF	; 255
     be8:	f9 01       	movw	r30, r18
     bea:	91 83       	std	Z+1, r25	; 0x01
     bec:	80 83       	st	Z, r24
     bee:	ce 01       	movw	r24, r28
     bf0:	01 96       	adiw	r24, 0x01	; 1
     bf2:	0e 94 67 06 	call	0xcce	; 0xcce <_ZN17Serial_ProcessingC1Ev>
     bf6:	6c e6       	ldi	r22, 0x6C	; 108
     bf8:	71 e0       	ldi	r23, 0x01	; 1
     bfa:	ce 01       	movw	r24, r28
     bfc:	01 96       	adiw	r24, 0x01	; 1
     bfe:	0e 94 8e 06 	call	0xd1c	; 0xd1c <_ZN17Serial_Processing15CommandsProcessEP8sCommand>
     c02:	ce 01       	movw	r24, r28
     c04:	01 96       	adiw	r24, 0x01	; 1
     c06:	0e 94 28 08 	call	0x1050	; 0x1050 <_ZN17Serial_ProcessingD1Ev>
     c0a:	00 00       	nop
     c0c:	ce 57       	subi	r28, 0x7E	; 126
     c0e:	df 4f       	sbci	r29, 0xFF	; 255
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	de bf       	out	0x3e, r29	; 62
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	cd bf       	out	0x3d, r28	; 61
     c1a:	df 91       	pop	r29
     c1c:	cf 91       	pop	r28
     c1e:	08 95       	ret

00000c20 <_Z17BuildSerialOutputPciS_j>:
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	cd b7       	in	r28, 0x3d	; 61
     c26:	de b7       	in	r29, 0x3e	; 62
     c28:	28 97       	sbiw	r28, 0x08	; 8
     c2a:	0f b6       	in	r0, 0x3f	; 63
     c2c:	f8 94       	cli
     c2e:	de bf       	out	0x3e, r29	; 62
     c30:	0f be       	out	0x3f, r0	; 63
     c32:	cd bf       	out	0x3d, r28	; 61
     c34:	9a 83       	std	Y+2, r25	; 0x02
     c36:	89 83       	std	Y+1, r24	; 0x01
     c38:	7c 83       	std	Y+4, r23	; 0x04
     c3a:	6b 83       	std	Y+3, r22	; 0x03
     c3c:	5e 83       	std	Y+6, r21	; 0x06
     c3e:	4d 83       	std	Y+5, r20	; 0x05
     c40:	38 87       	std	Y+8, r19	; 0x08
     c42:	2f 83       	std	Y+7, r18	; 0x07
     c44:	88 85       	ldd	r24, Y+8	; 0x08
     c46:	8f 93       	push	r24
     c48:	8f 81       	ldd	r24, Y+7	; 0x07
     c4a:	8f 93       	push	r24
     c4c:	8e 81       	ldd	r24, Y+6	; 0x06
     c4e:	8f 93       	push	r24
     c50:	8d 81       	ldd	r24, Y+5	; 0x05
     c52:	8f 93       	push	r24
     c54:	8c 81       	ldd	r24, Y+4	; 0x04
     c56:	8f 93       	push	r24
     c58:	8b 81       	ldd	r24, Y+3	; 0x03
     c5a:	8f 93       	push	r24
     c5c:	84 e0       	ldi	r24, 0x04	; 4
     c5e:	93 e0       	ldi	r25, 0x03	; 3
     c60:	89 2f       	mov	r24, r25
     c62:	8f 93       	push	r24
     c64:	84 e0       	ldi	r24, 0x04	; 4
     c66:	93 e0       	ldi	r25, 0x03	; 3
     c68:	8f 93       	push	r24
     c6a:	8a 81       	ldd	r24, Y+2	; 0x02
     c6c:	8f 93       	push	r24
     c6e:	89 81       	ldd	r24, Y+1	; 0x01
     c70:	8f 93       	push	r24
     c72:	0e 94 9f 1b 	call	0x373e	; 0x373e <sprintf>
     c76:	8d b7       	in	r24, 0x3d	; 61
     c78:	9e b7       	in	r25, 0x3e	; 62
     c7a:	0a 96       	adiw	r24, 0x0a	; 10
     c7c:	0f b6       	in	r0, 0x3f	; 63
     c7e:	f8 94       	cli
     c80:	de bf       	out	0x3e, r29	; 62
     c82:	0f be       	out	0x3f, r0	; 63
     c84:	cd bf       	out	0x3d, r28	; 61
     c86:	00 00       	nop
     c88:	28 96       	adiw	r28, 0x08	; 8
     c8a:	0f b6       	in	r0, 0x3f	; 63
     c8c:	f8 94       	cli
     c8e:	de bf       	out	0x3e, r29	; 62
     c90:	0f be       	out	0x3f, r0	; 63
     c92:	cd bf       	out	0x3d, r28	; 61
     c94:	df 91       	pop	r29
     c96:	cf 91       	pop	r28
     c98:	08 95       	ret

00000c9a <_ZN15Serial_CommandsC1Ev>:



// default constructor
Serial_Commands::Serial_Commands()
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
     c9e:	00 d0       	rcall	.+0      	; 0xca0 <_ZN15Serial_CommandsC1Ev+0x6>
     ca0:	cd b7       	in	r28, 0x3d	; 61
     ca2:	de b7       	in	r29, 0x3e	; 62
     ca4:	9a 83       	std	Y+2, r25	; 0x02
     ca6:	89 83       	std	Y+1, r24	; 0x01
{
} //Serial_Commands
     ca8:	00 00       	nop
     caa:	0f 90       	pop	r0
     cac:	0f 90       	pop	r0
     cae:	df 91       	pop	r29
     cb0:	cf 91       	pop	r28
     cb2:	08 95       	ret

00000cb4 <_ZN15Serial_CommandsD1Ev>:

// default destructor
Serial_Commands::~Serial_Commands()
     cb4:	cf 93       	push	r28
     cb6:	df 93       	push	r29
     cb8:	00 d0       	rcall	.+0      	; 0xcba <_ZN15Serial_CommandsD1Ev+0x6>
     cba:	cd b7       	in	r28, 0x3d	; 61
     cbc:	de b7       	in	r29, 0x3e	; 62
     cbe:	9a 83       	std	Y+2, r25	; 0x02
     cc0:	89 83       	std	Y+1, r24	; 0x01
{
} //~Serial_Commands
     cc2:	00 00       	nop
     cc4:	0f 90       	pop	r0
     cc6:	0f 90       	pop	r0
     cc8:	df 91       	pop	r29
     cca:	cf 91       	pop	r28
     ccc:	08 95       	ret

00000cce <_ZN17Serial_ProcessingC1Ev>:

void Serial_Processing::Setup(void)
{
  //Serial.begin(SERIAL_BAUD);               //Set the hardware serial port speed
  //Serial.setTimeout(50);
}
     cce:	cf 93       	push	r28
     cd0:	df 93       	push	r29
     cd2:	00 d0       	rcall	.+0      	; 0xcd4 <_ZN17Serial_ProcessingC1Ev+0x6>
     cd4:	cd b7       	in	r28, 0x3d	; 61
     cd6:	de b7       	in	r29, 0x3e	; 62
     cd8:	9a 83       	std	Y+2, r25	; 0x02
     cda:	89 83       	std	Y+1, r24	; 0x01
     cdc:	89 81       	ldd	r24, Y+1	; 0x01
     cde:	9a 81       	ldd	r25, Y+2	; 0x02
     ce0:	fc 01       	movw	r30, r24
     ce2:	10 82       	st	Z, r1
     ce4:	89 81       	ldd	r24, Y+1	; 0x01
     ce6:	9a 81       	ldd	r25, Y+2	; 0x02
     ce8:	fc 01       	movw	r30, r24
     cea:	11 82       	std	Z+1, r1	; 0x01
     cec:	89 81       	ldd	r24, Y+1	; 0x01
     cee:	9a 81       	ldd	r25, Y+2	; 0x02
     cf0:	2c e3       	ldi	r18, 0x3C	; 60
     cf2:	02 96       	adiw	r24, 0x02	; 2
     cf4:	fc 01       	movw	r30, r24
     cf6:	32 2f       	mov	r19, r18
     cf8:	11 92       	st	Z+, r1
     cfa:	3a 95       	dec	r19
     cfc:	e9 f7       	brne	.-6      	; 0xcf8 <_ZN17Serial_ProcessingC1Ev+0x2a>
     cfe:	89 81       	ldd	r24, Y+1	; 0x01
     d00:	9a 81       	ldd	r25, Y+2	; 0x02
     d02:	2c e3       	ldi	r18, 0x3C	; 60
     d04:	ce 96       	adiw	r24, 0x3e	; 62
     d06:	fc 01       	movw	r30, r24
     d08:	32 2f       	mov	r19, r18
     d0a:	11 92       	st	Z+, r1
     d0c:	3a 95       	dec	r19
     d0e:	e9 f7       	brne	.-6      	; 0xd0a <_ZN17Serial_ProcessingC1Ev+0x3c>
     d10:	00 00       	nop
     d12:	0f 90       	pop	r0
     d14:	0f 90       	pop	r0
     d16:	df 91       	pop	r29
     d18:	cf 91       	pop	r28
     d1a:	08 95       	ret

00000d1c <_ZN17Serial_Processing15CommandsProcessEP8sCommand>:


int Serial_Processing::CommandsProcess(sCommand *ptrCmds)
{
     d1c:	cf 93       	push	r28
     d1e:	df 93       	push	r29
     d20:	00 d0       	rcall	.+0      	; 0xd22 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x6>
     d22:	00 d0       	rcall	.+0      	; 0xd24 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x8>
     d24:	cd b7       	in	r28, 0x3d	; 61
     d26:	de b7       	in	r29, 0x3e	; 62
     d28:	9a 83       	std	Y+2, r25	; 0x02
     d2a:	89 83       	std	Y+1, r24	; 0x01
     d2c:	7c 83       	std	Y+4, r23	; 0x04
     d2e:	6b 83       	std	Y+3, r22	; 0x03


  if (Serial.available() > 0)
     d30:	8f ed       	ldi	r24, 0xDF	; 223
     d32:	93 e0       	ldi	r25, 0x03	; 3
     d34:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <_ZN14HardwareSerial9availableEv>
     d38:	21 e0       	ldi	r18, 0x01	; 1
     d3a:	18 16       	cp	r1, r24
     d3c:	19 06       	cpc	r1, r25
     d3e:	0c f0       	brlt	.+2      	; 0xd42 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x26>
     d40:	20 e0       	ldi	r18, 0x00	; 0
     d42:	22 23       	and	r18, r18
     d44:	19 f1       	breq	.+70     	; 0xd8c <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x70>
  {
    computer_bytes_received = Serial.readBytesUntil(10, computerdata, MAX_CMD_LENGTH); //We read the data sent from the serial monitor(pc/mac/other) until we see a <CR>. We also count how many characters have been received
     d46:	89 81       	ldd	r24, Y+1	; 0x01
     d48:	9a 81       	ldd	r25, Y+2	; 0x02
     d4a:	02 96       	adiw	r24, 0x02	; 2
     d4c:	2c e3       	ldi	r18, 0x3C	; 60
     d4e:	30 e0       	ldi	r19, 0x00	; 0
     d50:	ac 01       	movw	r20, r24
     d52:	6a e0       	ldi	r22, 0x0A	; 10
     d54:	8f ed       	ldi	r24, 0xDF	; 223
     d56:	93 e0       	ldi	r25, 0x03	; 3
     d58:	0e 94 b4 18 	call	0x3168	; 0x3168 <_ZN6Stream14readBytesUntilEcPcj>
     d5c:	28 2f       	mov	r18, r24
     d5e:	89 81       	ldd	r24, Y+1	; 0x01
     d60:	9a 81       	ldd	r25, Y+2	; 0x02
     d62:	fc 01       	movw	r30, r24
     d64:	20 83       	st	Z, r18
    computerdata[computer_bytes_received] = 0; //We add a 0 to the spot in the array just after the last character we received.. This will stop us from transmitting incorrect data that may have been left in the buffer
     d66:	89 81       	ldd	r24, Y+1	; 0x01
     d68:	9a 81       	ldd	r25, Y+2	; 0x02
     d6a:	fc 01       	movw	r30, r24
     d6c:	80 81       	ld	r24, Z
     d6e:	88 2f       	mov	r24, r24
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	29 81       	ldd	r18, Y+1	; 0x01
     d74:	3a 81       	ldd	r19, Y+2	; 0x02
     d76:	82 0f       	add	r24, r18
     d78:	93 1f       	adc	r25, r19
     d7a:	02 96       	adiw	r24, 0x02	; 2
     d7c:	fc 01       	movw	r30, r24
     d7e:	10 82       	st	Z, r1
  else
  {
	  return 0;
  }

  if (computerdata != 0) {             //If computer_bytes_received does not equal zero
     d80:	89 81       	ldd	r24, Y+1	; 0x01
     d82:	9a 81       	ldd	r25, Y+2	; 0x02
     d84:	02 96       	adiw	r24, 0x02	; 2
     d86:	89 2b       	or	r24, r25
     d88:	09 f1       	breq	.+66     	; 0xdcc <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0xb0>
     d8a:	03 c0       	rjmp	.+6      	; 0xd92 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x76>
    computerdata[computer_bytes_received] = 0; //We add a 0 to the spot in the array just after the last character we received.. This will stop us from transmitting incorrect data that may have been left in the buffer
	
  }
  else
  {
	  return 0;
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	1f c0       	rjmp	.+62     	; 0xdd0 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0xb4>
  }

  if (computerdata != 0) {             //If computer_bytes_received does not equal zero
    
    CommandParse(ptrCmds, computerdata);
     d92:	89 81       	ldd	r24, Y+1	; 0x01
     d94:	9a 81       	ldd	r25, Y+2	; 0x02
     d96:	ac 01       	movw	r20, r24
     d98:	4e 5f       	subi	r20, 0xFE	; 254
     d9a:	5f 4f       	sbci	r21, 0xFF	; 255
     d9c:	2b 81       	ldd	r18, Y+3	; 0x03
     d9e:	3c 81       	ldd	r19, Y+4	; 0x04
     da0:	89 81       	ldd	r24, Y+1	; 0x01
     da2:	9a 81       	ldd	r25, Y+2	; 0x02
     da4:	b9 01       	movw	r22, r18
     da6:	0e 94 ef 06 	call	0xdde	; 0xdde <_ZN17Serial_Processing12CommandParseEP8sCommandPc>
    
    computer_bytes_received = 0;                  //Reset the var computer_bytes_received to equal 0
     daa:	89 81       	ldd	r24, Y+1	; 0x01
     dac:	9a 81       	ldd	r25, Y+2	; 0x02
     dae:	fc 01       	movw	r30, r24
     db0:	10 82       	st	Z, r1
	computerdata[computer_bytes_received] = {0};
     db2:	89 81       	ldd	r24, Y+1	; 0x01
     db4:	9a 81       	ldd	r25, Y+2	; 0x02
     db6:	fc 01       	movw	r30, r24
     db8:	80 81       	ld	r24, Z
     dba:	88 2f       	mov	r24, r24
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	29 81       	ldd	r18, Y+1	; 0x01
     dc0:	3a 81       	ldd	r19, Y+2	; 0x02
     dc2:	82 0f       	add	r24, r18
     dc4:	93 1f       	adc	r25, r19
     dc6:	02 96       	adiw	r24, 0x02	; 2
     dc8:	fc 01       	movw	r30, r24
     dca:	10 82       	st	Z, r1
  }

  return 0;
     dcc:	80 e0       	ldi	r24, 0x00	; 0
     dce:	90 e0       	ldi	r25, 0x00	; 0
}
     dd0:	0f 90       	pop	r0
     dd2:	0f 90       	pop	r0
     dd4:	0f 90       	pop	r0
     dd6:	0f 90       	pop	r0
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	08 95       	ret

00000dde <_ZN17Serial_Processing12CommandParseEP8sCommandPc>:


unsigned int Serial_Processing::CommandParse(sCommand *ptrCmds, char str[MAX_CMD_LENGTH])
{
     dde:	cf 93       	push	r28
     de0:	df 93       	push	r29
     de2:	cd b7       	in	r28, 0x3d	; 61
     de4:	de b7       	in	r29, 0x3e	; 62
     de6:	2e 97       	sbiw	r28, 0x0e	; 14
     de8:	0f b6       	in	r0, 0x3f	; 63
     dea:	f8 94       	cli
     dec:	de bf       	out	0x3e, r29	; 62
     dee:	0f be       	out	0x3f, r0	; 63
     df0:	cd bf       	out	0x3d, r28	; 61
     df2:	9a 87       	std	Y+10, r25	; 0x0a
     df4:	89 87       	std	Y+9, r24	; 0x09
     df6:	7c 87       	std	Y+12, r23	; 0x0c
     df8:	6b 87       	std	Y+11, r22	; 0x0b
     dfa:	5e 87       	std	Y+14, r21	; 0x0e
     dfc:	4d 87       	std	Y+13, r20	; 0x0d
  hardwareType = strtok(str, DELIMITER); //hardware ID
     dfe:	8d 85       	ldd	r24, Y+13	; 0x0d
     e00:	9e 85       	ldd	r25, Y+14	; 0x0e
     e02:	6d e0       	ldi	r22, 0x0D	; 13
     e04:	73 e0       	ldi	r23, 0x03	; 3
     e06:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <strtok>
     e0a:	9c 01       	movw	r18, r24
     e0c:	89 85       	ldd	r24, Y+9	; 0x09
     e0e:	9a 85       	ldd	r25, Y+10	; 0x0a
     e10:	86 58       	subi	r24, 0x86	; 134
     e12:	9f 4f       	sbci	r25, 0xFF	; 255
     e14:	fc 01       	movw	r30, r24
     e16:	31 83       	std	Z+1, r19	; 0x01
     e18:	20 83       	st	Z, r18
  cmd = strtok(NULL, DELIMITER);
     e1a:	6d e0       	ldi	r22, 0x0D	; 13
     e1c:	73 e0       	ldi	r23, 0x03	; 3
     e1e:	80 e0       	ldi	r24, 0x00	; 0
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <strtok>
     e26:	9c 01       	movw	r18, r24
     e28:	89 85       	ldd	r24, Y+9	; 0x09
     e2a:	9a 85       	ldd	r25, Y+10	; 0x0a
     e2c:	84 58       	subi	r24, 0x84	; 132
     e2e:	9f 4f       	sbci	r25, 0xFF	; 255
     e30:	fc 01       	movw	r30, r24
     e32:	31 83       	std	Z+1, r19	; 0x01
     e34:	20 83       	st	Z, r18
  arguments = strtok(NULL, DELIMITER);
     e36:	6d e0       	ldi	r22, 0x0D	; 13
     e38:	73 e0       	ldi	r23, 0x03	; 3
     e3a:	80 e0       	ldi	r24, 0x00	; 0
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <strtok>
     e42:	9c 01       	movw	r18, r24
     e44:	89 85       	ldd	r24, Y+9	; 0x09
     e46:	9a 85       	ldd	r25, Y+10	; 0x0a
     e48:	82 58       	subi	r24, 0x82	; 130
     e4a:	9f 4f       	sbci	r25, 0xFF	; 255
     e4c:	fc 01       	movw	r30, r24
     e4e:	31 83       	std	Z+1, r19	; 0x01
     e50:	20 83       	st	Z, r18

  for (int i=0; hardwareType[i]!= '\0'; i++)
     e52:	1a 82       	std	Y+2, r1	; 0x02
     e54:	19 82       	std	Y+1, r1	; 0x01
     e56:	89 85       	ldd	r24, Y+9	; 0x09
     e58:	9a 85       	ldd	r25, Y+10	; 0x0a
     e5a:	86 58       	subi	r24, 0x86	; 134
     e5c:	9f 4f       	sbci	r25, 0xFF	; 255
     e5e:	fc 01       	movw	r30, r24
     e60:	20 81       	ld	r18, Z
     e62:	31 81       	ldd	r19, Z+1	; 0x01
     e64:	89 81       	ldd	r24, Y+1	; 0x01
     e66:	9a 81       	ldd	r25, Y+2	; 0x02
     e68:	82 0f       	add	r24, r18
     e6a:	93 1f       	adc	r25, r19
     e6c:	fc 01       	movw	r30, r24
     e6e:	80 81       	ld	r24, Z
     e70:	88 23       	and	r24, r24
     e72:	31 f1       	breq	.+76     	; 0xec0 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xe2>
  {
    //Serial.println(hardwareType[i]);
    if (!isdigit(hardwareType[i]) != 0)
     e74:	89 85       	ldd	r24, Y+9	; 0x09
     e76:	9a 85       	ldd	r25, Y+10	; 0x0a
     e78:	86 58       	subi	r24, 0x86	; 134
     e7a:	9f 4f       	sbci	r25, 0xFF	; 255
     e7c:	fc 01       	movw	r30, r24
     e7e:	20 81       	ld	r18, Z
     e80:	31 81       	ldd	r19, Z+1	; 0x01
     e82:	89 81       	ldd	r24, Y+1	; 0x01
     e84:	9a 81       	ldd	r25, Y+2	; 0x02
     e86:	82 0f       	add	r24, r18
     e88:	93 1f       	adc	r25, r19
     e8a:	fc 01       	movw	r30, r24
     e8c:	80 81       	ld	r24, Z
     e8e:	88 2f       	mov	r24, r24
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	c0 97       	sbiw	r24, 0x30	; 48
     e94:	0a 97       	sbiw	r24, 0x0a	; 10
     e96:	10 f0       	brcs	.+4      	; 0xe9c <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xbe>
     e98:	81 e0       	ldi	r24, 0x01	; 1
     e9a:	01 c0       	rjmp	.+2      	; 0xe9e <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xc0>
     e9c:	80 e0       	ldi	r24, 0x00	; 0
     e9e:	88 23       	and	r24, r24
     ea0:	49 f0       	breq	.+18     	; 0xeb4 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xd6>
    {
      Serial.println("Invalid Hardware ID, number is not a digit");
     ea2:	6f e0       	ldi	r22, 0x0F	; 15
     ea4:	73 e0       	ldi	r23, 0x03	; 3
     ea6:	8f ed       	ldi	r24, 0xDF	; 223
     ea8:	93 e0       	ldi	r25, 0x03	; 3
     eaa:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
      return 0;
     eae:	80 e0       	ldi	r24, 0x00	; 0
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	79 c0       	rjmp	.+242    	; 0xfa6 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c8>
{
  hardwareType = strtok(str, DELIMITER); //hardware ID
  cmd = strtok(NULL, DELIMITER);
  arguments = strtok(NULL, DELIMITER);

  for (int i=0; hardwareType[i]!= '\0'; i++)
     eb4:	89 81       	ldd	r24, Y+1	; 0x01
     eb6:	9a 81       	ldd	r25, Y+2	; 0x02
     eb8:	01 96       	adiw	r24, 0x01	; 1
     eba:	9a 83       	std	Y+2, r25	; 0x02
     ebc:	89 83       	std	Y+1, r24	; 0x01
     ebe:	cb cf       	rjmp	.-106    	; 0xe56 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x78>
      Serial.println("Invalid Hardware ID, number is not a digit");
      return 0;
    }
  }

  if (MYHARDWARETYPE != atoi(hardwareType))
     ec0:	89 85       	ldd	r24, Y+9	; 0x09
     ec2:	9a 85       	ldd	r25, Y+10	; 0x0a
     ec4:	86 58       	subi	r24, 0x86	; 134
     ec6:	9f 4f       	sbci	r25, 0xFF	; 255
     ec8:	fc 01       	movw	r30, r24
     eca:	80 81       	ld	r24, Z
     ecc:	91 81       	ldd	r25, Z+1	; 0x01
     ece:	0e 94 3c 1b 	call	0x3678	; 0x3678 <atoi>
     ed2:	03 97       	sbiw	r24, 0x03	; 3
     ed4:	49 f0       	breq	.+18     	; 0xee8 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x10a>
  {
    Serial.println("Invalid Hardware ID");
     ed6:	6a e3       	ldi	r22, 0x3A	; 58
     ed8:	73 e0       	ldi	r23, 0x03	; 3
     eda:	8f ed       	ldi	r24, 0xDF	; 223
     edc:	93 e0       	ldi	r25, 0x03	; 3
     ede:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN5Print7printlnEPKc>
    return 0;
     ee2:	80 e0       	ldi	r24, 0x00	; 0
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	5f c0       	rjmp	.+190    	; 0xfa6 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c8>
  }

  unsigned int i;
  sCommand cmd_list;
  i=0;
     ee8:	1c 82       	std	Y+4, r1	; 0x04
     eea:	1b 82       	std	Y+3, r1	; 0x03

  memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
     eec:	8b 81       	ldd	r24, Y+3	; 0x03
     eee:	9c 81       	ldd	r25, Y+4	; 0x04
     ef0:	88 0f       	add	r24, r24
     ef2:	99 1f       	adc	r25, r25
     ef4:	88 0f       	add	r24, r24
     ef6:	99 1f       	adc	r25, r25
     ef8:	2b 85       	ldd	r18, Y+11	; 0x0b
     efa:	3c 85       	ldd	r19, Y+12	; 0x0c
     efc:	82 0f       	add	r24, r18
     efe:	93 1f       	adc	r25, r19
     f00:	fc 01       	movw	r30, r24
     f02:	80 81       	ld	r24, Z
     f04:	91 81       	ldd	r25, Z+1	; 0x01
     f06:	a2 81       	ldd	r26, Z+2	; 0x02
     f08:	b3 81       	ldd	r27, Z+3	; 0x03
     f0a:	8d 83       	std	Y+5, r24	; 0x05
     f0c:	9e 83       	std	Y+6, r25	; 0x06
     f0e:	af 83       	std	Y+7, r26	; 0x07
     f10:	b8 87       	std	Y+8, r27	; 0x08
  
  
  while(cmd_list.function!=0)
     f12:	8f 81       	ldd	r24, Y+7	; 0x07
     f14:	98 85       	ldd	r25, Y+8	; 0x08
     f16:	89 2b       	or	r24, r25
     f18:	09 f4       	brne	.+2      	; 0xf1c <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x13e>
     f1a:	43 c0       	rjmp	.+134    	; 0xfa2 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c4>
  {
    if (strcicmp(cmd,cmd_list.name)==0){
     f1c:	4d 81       	ldd	r20, Y+5	; 0x05
     f1e:	5e 81       	ldd	r21, Y+6	; 0x06
     f20:	89 85       	ldd	r24, Y+9	; 0x09
     f22:	9a 85       	ldd	r25, Y+10	; 0x0a
     f24:	84 58       	subi	r24, 0x84	; 132
     f26:	9f 4f       	sbci	r25, 0xFF	; 255
     f28:	fc 01       	movw	r30, r24
     f2a:	20 81       	ld	r18, Z
     f2c:	31 81       	ldd	r19, Z+1	; 0x01
     f2e:	89 85       	ldd	r24, Y+9	; 0x09
     f30:	9a 85       	ldd	r25, Y+10	; 0x0a
     f32:	b9 01       	movw	r22, r18
     f34:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <_ZN17Serial_Processing8strcicmpEPKcS1_>
     f38:	21 e0       	ldi	r18, 0x01	; 1
     f3a:	89 2b       	or	r24, r25
     f3c:	09 f0       	breq	.+2      	; 0xf40 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x162>
     f3e:	20 e0       	ldi	r18, 0x00	; 0
     f40:	22 23       	and	r18, r18
     f42:	b1 f0       	breq	.+44     	; 0xf70 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x192>
      return (*cmd_list.function)(0,cmd,arguments);
     f44:	2f 81       	ldd	r18, Y+7	; 0x07
     f46:	38 85       	ldd	r19, Y+8	; 0x08
     f48:	89 85       	ldd	r24, Y+9	; 0x09
     f4a:	9a 85       	ldd	r25, Y+10	; 0x0a
     f4c:	82 58       	subi	r24, 0x82	; 130
     f4e:	9f 4f       	sbci	r25, 0xFF	; 255
     f50:	fc 01       	movw	r30, r24
     f52:	40 81       	ld	r20, Z
     f54:	51 81       	ldd	r21, Z+1	; 0x01
     f56:	89 85       	ldd	r24, Y+9	; 0x09
     f58:	9a 85       	ldd	r25, Y+10	; 0x0a
     f5a:	84 58       	subi	r24, 0x84	; 132
     f5c:	9f 4f       	sbci	r25, 0xFF	; 255
     f5e:	fc 01       	movw	r30, r24
     f60:	80 81       	ld	r24, Z
     f62:	91 81       	ldd	r25, Z+1	; 0x01
     f64:	bc 01       	movw	r22, r24
     f66:	80 e0       	ldi	r24, 0x00	; 0
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	f9 01       	movw	r30, r18
     f6c:	09 95       	icall
     f6e:	1b c0       	rjmp	.+54     	; 0xfa6 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c8>
    }

    i=i+1;
     f70:	8b 81       	ldd	r24, Y+3	; 0x03
     f72:	9c 81       	ldd	r25, Y+4	; 0x04
     f74:	01 96       	adiw	r24, 0x01	; 1
     f76:	9c 83       	std	Y+4, r25	; 0x04
     f78:	8b 83       	std	Y+3, r24	; 0x03
    memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
     f7a:	8b 81       	ldd	r24, Y+3	; 0x03
     f7c:	9c 81       	ldd	r25, Y+4	; 0x04
     f7e:	88 0f       	add	r24, r24
     f80:	99 1f       	adc	r25, r25
     f82:	88 0f       	add	r24, r24
     f84:	99 1f       	adc	r25, r25
     f86:	2b 85       	ldd	r18, Y+11	; 0x0b
     f88:	3c 85       	ldd	r19, Y+12	; 0x0c
     f8a:	82 0f       	add	r24, r18
     f8c:	93 1f       	adc	r25, r19
     f8e:	fc 01       	movw	r30, r24
     f90:	80 81       	ld	r24, Z
     f92:	91 81       	ldd	r25, Z+1	; 0x01
     f94:	a2 81       	ldd	r26, Z+2	; 0x02
     f96:	b3 81       	ldd	r27, Z+3	; 0x03
     f98:	8d 83       	std	Y+5, r24	; 0x05
     f9a:	9e 83       	std	Y+6, r25	; 0x06
     f9c:	af 83       	std	Y+7, r26	; 0x07
     f9e:	b8 87       	std	Y+8, r27	; 0x08
  i=0;

  memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
  
  
  while(cmd_list.function!=0)
     fa0:	b8 cf       	rjmp	.-144    	; 0xf12 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x134>
    i=i+1;
    memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
  }
  

  return 1;
     fa2:	81 e0       	ldi	r24, 0x01	; 1
     fa4:	90 e0       	ldi	r25, 0x00	; 0
}
     fa6:	2e 96       	adiw	r28, 0x0e	; 14
     fa8:	0f b6       	in	r0, 0x3f	; 63
     faa:	f8 94       	cli
     fac:	de bf       	out	0x3e, r29	; 62
     fae:	0f be       	out	0x3f, r0	; 63
     fb0:	cd bf       	out	0x3d, r28	; 61
     fb2:	df 91       	pop	r29
     fb4:	cf 91       	pop	r28
     fb6:	08 95       	ret

00000fb8 <_ZN17Serial_Processing8strcicmpEPKcS1_>:

int Serial_Processing::strcicmp(char const *a, char const *b)
{
     fb8:	0f 93       	push	r16
     fba:	1f 93       	push	r17
     fbc:	cf 93       	push	r28
     fbe:	df 93       	push	r29
     fc0:	cd b7       	in	r28, 0x3d	; 61
     fc2:	de b7       	in	r29, 0x3e	; 62
     fc4:	28 97       	sbiw	r28, 0x08	; 8
     fc6:	0f b6       	in	r0, 0x3f	; 63
     fc8:	f8 94       	cli
     fca:	de bf       	out	0x3e, r29	; 62
     fcc:	0f be       	out	0x3f, r0	; 63
     fce:	cd bf       	out	0x3d, r28	; 61
     fd0:	9c 83       	std	Y+4, r25	; 0x04
     fd2:	8b 83       	std	Y+3, r24	; 0x03
     fd4:	7e 83       	std	Y+6, r23	; 0x06
     fd6:	6d 83       	std	Y+5, r22	; 0x05
     fd8:	58 87       	std	Y+8, r21	; 0x08
     fda:	4f 83       	std	Y+7, r20	; 0x07
  for (;; a++, b++) {
    int d = tolower(*a) - tolower(*b);
     fdc:	8d 81       	ldd	r24, Y+5	; 0x05
     fde:	9e 81       	ldd	r25, Y+6	; 0x06
     fe0:	fc 01       	movw	r30, r24
     fe2:	80 81       	ld	r24, Z
     fe4:	88 2f       	mov	r24, r24
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	0e 94 63 1b 	call	0x36c6	; 0x36c6 <tolower>
     fec:	8c 01       	movw	r16, r24
     fee:	8f 81       	ldd	r24, Y+7	; 0x07
     ff0:	98 85       	ldd	r25, Y+8	; 0x08
     ff2:	fc 01       	movw	r30, r24
     ff4:	80 81       	ld	r24, Z
     ff6:	88 2f       	mov	r24, r24
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	0e 94 63 1b 	call	0x36c6	; 0x36c6 <tolower>
     ffe:	98 01       	movw	r18, r16
    1000:	28 1b       	sub	r18, r24
    1002:	39 0b       	sbc	r19, r25
    1004:	c9 01       	movw	r24, r18
    1006:	9a 83       	std	Y+2, r25	; 0x02
    1008:	89 83       	std	Y+1, r24	; 0x01
    if (d != 0 || !*a)
    100a:	89 81       	ldd	r24, Y+1	; 0x01
    100c:	9a 81       	ldd	r25, Y+2	; 0x02
    100e:	89 2b       	or	r24, r25
    1010:	31 f4       	brne	.+12     	; 0x101e <_ZN17Serial_Processing8strcicmpEPKcS1_+0x66>
    1012:	8d 81       	ldd	r24, Y+5	; 0x05
    1014:	9e 81       	ldd	r25, Y+6	; 0x06
    1016:	fc 01       	movw	r30, r24
    1018:	80 81       	ld	r24, Z
    101a:	88 23       	and	r24, r24
    101c:	19 f4       	brne	.+6      	; 0x1024 <_ZN17Serial_Processing8strcicmpEPKcS1_+0x6c>
    return d;
    101e:	89 81       	ldd	r24, Y+1	; 0x01
    1020:	9a 81       	ldd	r25, Y+2	; 0x02
    1022:	0b c0       	rjmp	.+22     	; 0x103a <_ZN17Serial_Processing8strcicmpEPKcS1_+0x82>
  return 1;
}

int Serial_Processing::strcicmp(char const *a, char const *b)
{
  for (;; a++, b++) {
    1024:	8d 81       	ldd	r24, Y+5	; 0x05
    1026:	9e 81       	ldd	r25, Y+6	; 0x06
    1028:	01 96       	adiw	r24, 0x01	; 1
    102a:	9e 83       	std	Y+6, r25	; 0x06
    102c:	8d 83       	std	Y+5, r24	; 0x05
    102e:	8f 81       	ldd	r24, Y+7	; 0x07
    1030:	98 85       	ldd	r25, Y+8	; 0x08
    1032:	01 96       	adiw	r24, 0x01	; 1
    1034:	98 87       	std	Y+8, r25	; 0x08
    1036:	8f 83       	std	Y+7, r24	; 0x07
    1038:	d1 cf       	rjmp	.-94     	; 0xfdc <_ZN17Serial_Processing8strcicmpEPKcS1_+0x24>
    int d = tolower(*a) - tolower(*b);
    if (d != 0 || !*a)
    return d;
  }
}
    103a:	28 96       	adiw	r28, 0x08	; 8
    103c:	0f b6       	in	r0, 0x3f	; 63
    103e:	f8 94       	cli
    1040:	de bf       	out	0x3e, r29	; 62
    1042:	0f be       	out	0x3f, r0	; 63
    1044:	cd bf       	out	0x3d, r28	; 61
    1046:	df 91       	pop	r29
    1048:	cf 91       	pop	r28
    104a:	1f 91       	pop	r17
    104c:	0f 91       	pop	r16
    104e:	08 95       	ret

00001050 <_ZN17Serial_ProcessingD1Ev>:


// default destructor
Serial_Processing::~Serial_Processing()
    1050:	cf 93       	push	r28
    1052:	df 93       	push	r29
    1054:	00 d0       	rcall	.+0      	; 0x1056 <_ZN17Serial_ProcessingD1Ev+0x6>
    1056:	cd b7       	in	r28, 0x3d	; 61
    1058:	de b7       	in	r29, 0x3e	; 62
    105a:	9a 83       	std	Y+2, r25	; 0x02
    105c:	89 83       	std	Y+1, r24	; 0x01
{
} //~Serial_Processing
    105e:	00 00       	nop
    1060:	0f 90       	pop	r0
    1062:	0f 90       	pop	r0
    1064:	df 91       	pop	r29
    1066:	cf 91       	pop	r28
    1068:	08 95       	ret

0000106a <_ZN14HardwareSerial5beginEm>:
	position = position / MOTOR_STEPS_PER_REV;
	position = position * SCREW_PITCH_MM;
	position = (float)(position / 1000) + 1;

	return position;
}
    106a:	cf 93       	push	r28
    106c:	df 93       	push	r29
    106e:	00 d0       	rcall	.+0      	; 0x1070 <_ZN14HardwareSerial5beginEm+0x6>
    1070:	00 d0       	rcall	.+0      	; 0x1072 <_ZN14HardwareSerial5beginEm+0x8>
    1072:	00 d0       	rcall	.+0      	; 0x1074 <_ZN14HardwareSerial5beginEm+0xa>
    1074:	cd b7       	in	r28, 0x3d	; 61
    1076:	de b7       	in	r29, 0x3e	; 62
    1078:	9a 83       	std	Y+2, r25	; 0x02
    107a:	89 83       	std	Y+1, r24	; 0x01
    107c:	4b 83       	std	Y+3, r20	; 0x03
    107e:	5c 83       	std	Y+4, r21	; 0x04
    1080:	6d 83       	std	Y+5, r22	; 0x05
    1082:	7e 83       	std	Y+6, r23	; 0x06
    1084:	8b 81       	ldd	r24, Y+3	; 0x03
    1086:	9c 81       	ldd	r25, Y+4	; 0x04
    1088:	ad 81       	ldd	r26, Y+5	; 0x05
    108a:	be 81       	ldd	r27, Y+6	; 0x06
    108c:	e9 81       	ldd	r30, Y+1	; 0x01
    108e:	fa 81       	ldd	r31, Y+2	; 0x02
    1090:	26 e0       	ldi	r18, 0x06	; 6
    1092:	ac 01       	movw	r20, r24
    1094:	bd 01       	movw	r22, r26
    1096:	cf 01       	movw	r24, r30
    1098:	0e 94 79 16 	call	0x2cf2	; 0x2cf2 <_ZN14HardwareSerial5beginEmh>
    109c:	00 00       	nop
    109e:	26 96       	adiw	r28, 0x06	; 6
    10a0:	0f b6       	in	r0, 0x3f	; 63
    10a2:	f8 94       	cli
    10a4:	de bf       	out	0x3e, r29	; 62
    10a6:	0f be       	out	0x3f, r0	; 63
    10a8:	cd bf       	out	0x3d, r28	; 61
    10aa:	df 91       	pop	r29
    10ac:	cf 91       	pop	r28
    10ae:	08 95       	ret

000010b0 <_Z15enableInterrupthPFvvEh>:
    10b0:	cf 93       	push	r28
    10b2:	df 93       	push	r29
    10b4:	cd b7       	in	r28, 0x3d	; 61
    10b6:	de b7       	in	r29, 0x3e	; 62
    10b8:	a0 97       	sbiw	r28, 0x20	; 32
    10ba:	0f b6       	in	r0, 0x3f	; 63
    10bc:	f8 94       	cli
    10be:	de bf       	out	0x3e, r29	; 62
    10c0:	0f be       	out	0x3f, r0	; 63
    10c2:	cd bf       	out	0x3d, r28	; 61
    10c4:	8d 8f       	std	Y+29, r24	; 0x1d
    10c6:	7f 8f       	std	Y+31, r23	; 0x1f
    10c8:	6e 8f       	std	Y+30, r22	; 0x1e
    10ca:	48 a3       	std	Y+32, r20	; 0x20
    10cc:	19 82       	std	Y+1, r1	; 0x01
    10ce:	1a 82       	std	Y+2, r1	; 0x02
    10d0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    10d2:	8f 77       	andi	r24, 0x7F	; 127
    10d4:	8b 83       	std	Y+3, r24	; 0x03
    10d6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    10d8:	88 23       	and	r24, r24
    10da:	44 f0       	brlt	.+16     	; 0x10ec <_Z15enableInterrupthPFvvEh+0x3c>
    10dc:	8b 81       	ldd	r24, Y+3	; 0x03
    10de:	82 30       	cpi	r24, 0x02	; 2
    10e0:	09 f4       	brne	.+2      	; 0x10e4 <_Z15enableInterrupthPFvvEh+0x34>
    10e2:	30 c1       	rjmp	.+608    	; 0x1344 <_Z15enableInterrupthPFvvEh+0x294>
    10e4:	8b 81       	ldd	r24, Y+3	; 0x03
    10e6:	83 30       	cpi	r24, 0x03	; 3
    10e8:	09 f4       	brne	.+2      	; 0x10ec <_Z15enableInterrupthPFvvEh+0x3c>
    10ea:	2c c1       	rjmp	.+600    	; 0x1344 <_Z15enableInterrupthPFvvEh+0x294>
    10ec:	8b 81       	ldd	r24, Y+3	; 0x03
    10ee:	88 2f       	mov	r24, r24
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	84 58       	subi	r24, 0x84	; 132
    10f4:	9f 4f       	sbci	r25, 0xFF	; 255
    10f6:	9e 83       	std	Y+6, r25	; 0x06
    10f8:	8d 83       	std	Y+5, r24	; 0x05
    10fa:	8d 81       	ldd	r24, Y+5	; 0x05
    10fc:	9e 81       	ldd	r25, Y+6	; 0x06
    10fe:	fc 01       	movw	r30, r24
    1100:	84 91       	lpm	r24, Z
    1102:	8f 83       	std	Y+7, r24	; 0x07
    1104:	8f 81       	ldd	r24, Y+7	; 0x07
    1106:	8a 83       	std	Y+2, r24	; 0x02
    1108:	8b 81       	ldd	r24, Y+3	; 0x03
    110a:	88 2f       	mov	r24, r24
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	80 57       	subi	r24, 0x70	; 112
    1110:	9f 4f       	sbci	r25, 0xFF	; 255
    1112:	99 87       	std	Y+9, r25	; 0x09
    1114:	88 87       	std	Y+8, r24	; 0x08
    1116:	88 85       	ldd	r24, Y+8	; 0x08
    1118:	99 85       	ldd	r25, Y+9	; 0x09
    111a:	fc 01       	movw	r30, r24
    111c:	84 91       	lpm	r24, Z
    111e:	8a 87       	std	Y+10, r24	; 0x0a
    1120:	8a 85       	ldd	r24, Y+10	; 0x0a
    1122:	89 83       	std	Y+1, r24	; 0x01
    1124:	88 a1       	ldd	r24, Y+32	; 0x20
    1126:	83 30       	cpi	r24, 0x03	; 3
    1128:	19 f0       	breq	.+6      	; 0x1130 <_Z15enableInterrupthPFvvEh+0x80>
    112a:	88 a1       	ldd	r24, Y+32	; 0x20
    112c:	81 30       	cpi	r24, 0x01	; 1
    112e:	d9 f4       	brne	.+54     	; 0x1166 <_Z15enableInterrupthPFvvEh+0xb6>
    1130:	89 81       	ldd	r24, Y+1	; 0x01
    1132:	82 30       	cpi	r24, 0x02	; 2
    1134:	31 f4       	brne	.+12     	; 0x1142 <_Z15enableInterrupthPFvvEh+0x92>
    1136:	90 91 a0 03 	lds	r25, 0x03A0	; 0x8003a0 <risingPinsPORTB>
    113a:	8a 81       	ldd	r24, Y+2	; 0x02
    113c:	89 2b       	or	r24, r25
    113e:	80 93 a0 03 	sts	0x03A0, r24	; 0x8003a0 <risingPinsPORTB>
    1142:	89 81       	ldd	r24, Y+1	; 0x01
    1144:	83 30       	cpi	r24, 0x03	; 3
    1146:	31 f4       	brne	.+12     	; 0x1154 <_Z15enableInterrupthPFvvEh+0xa4>
    1148:	90 91 a3 03 	lds	r25, 0x03A3	; 0x8003a3 <risingPinsPORTC>
    114c:	8a 81       	ldd	r24, Y+2	; 0x02
    114e:	89 2b       	or	r24, r25
    1150:	80 93 a3 03 	sts	0x03A3, r24	; 0x8003a3 <risingPinsPORTC>
    1154:	89 81       	ldd	r24, Y+1	; 0x01
    1156:	84 30       	cpi	r24, 0x04	; 4
    1158:	31 f4       	brne	.+12     	; 0x1166 <_Z15enableInterrupthPFvvEh+0xb6>
    115a:	90 91 a6 03 	lds	r25, 0x03A6	; 0x8003a6 <risingPinsPORTD>
    115e:	8a 81       	ldd	r24, Y+2	; 0x02
    1160:	89 2b       	or	r24, r25
    1162:	80 93 a6 03 	sts	0x03A6, r24	; 0x8003a6 <risingPinsPORTD>
    1166:	88 a1       	ldd	r24, Y+32	; 0x20
    1168:	82 30       	cpi	r24, 0x02	; 2
    116a:	19 f0       	breq	.+6      	; 0x1172 <_Z15enableInterrupthPFvvEh+0xc2>
    116c:	88 a1       	ldd	r24, Y+32	; 0x20
    116e:	81 30       	cpi	r24, 0x01	; 1
    1170:	d9 f4       	brne	.+54     	; 0x11a8 <_Z15enableInterrupthPFvvEh+0xf8>
    1172:	89 81       	ldd	r24, Y+1	; 0x01
    1174:	82 30       	cpi	r24, 0x02	; 2
    1176:	31 f4       	brne	.+12     	; 0x1184 <_Z15enableInterrupthPFvvEh+0xd4>
    1178:	90 91 a1 03 	lds	r25, 0x03A1	; 0x8003a1 <fallingPinsPORTB>
    117c:	8a 81       	ldd	r24, Y+2	; 0x02
    117e:	89 2b       	or	r24, r25
    1180:	80 93 a1 03 	sts	0x03A1, r24	; 0x8003a1 <fallingPinsPORTB>
    1184:	89 81       	ldd	r24, Y+1	; 0x01
    1186:	83 30       	cpi	r24, 0x03	; 3
    1188:	31 f4       	brne	.+12     	; 0x1196 <_Z15enableInterrupthPFvvEh+0xe6>
    118a:	90 91 a4 03 	lds	r25, 0x03A4	; 0x8003a4 <fallingPinsPORTC>
    118e:	8a 81       	ldd	r24, Y+2	; 0x02
    1190:	89 2b       	or	r24, r25
    1192:	80 93 a4 03 	sts	0x03A4, r24	; 0x8003a4 <fallingPinsPORTC>
    1196:	89 81       	ldd	r24, Y+1	; 0x01
    1198:	84 30       	cpi	r24, 0x04	; 4
    119a:	31 f4       	brne	.+12     	; 0x11a8 <_Z15enableInterrupthPFvvEh+0xf8>
    119c:	90 91 a7 03 	lds	r25, 0x03A7	; 0x8003a7 <fallingPinsPORTD>
    11a0:	8a 81       	ldd	r24, Y+2	; 0x02
    11a2:	89 2b       	or	r24, r25
    11a4:	80 93 a7 03 	sts	0x03A7, r24	; 0x8003a7 <fallingPinsPORTD>
    11a8:	8b 81       	ldd	r24, Y+3	; 0x03
    11aa:	88 2f       	mov	r24, r24
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	88 59       	subi	r24, 0x98	; 152
    11b0:	9f 4f       	sbci	r25, 0xFF	; 255
    11b2:	9c 87       	std	Y+12, r25	; 0x0c
    11b4:	8b 87       	std	Y+11, r24	; 0x0b
    11b6:	8b 85       	ldd	r24, Y+11	; 0x0b
    11b8:	9c 85       	ldd	r25, Y+12	; 0x0c
    11ba:	fc 01       	movw	r30, r24
    11bc:	84 91       	lpm	r24, Z
    11be:	8d 87       	std	Y+13, r24	; 0x0d
    11c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    11c2:	8e 87       	std	Y+14, r24	; 0x0e
    11c4:	89 81       	ldd	r24, Y+1	; 0x01
    11c6:	82 30       	cpi	r24, 0x02	; 2
    11c8:	c1 f5       	brne	.+112    	; 0x123a <_Z15enableInterrupthPFvvEh+0x18a>
    11ca:	8e 85       	ldd	r24, Y+14	; 0x0e
    11cc:	88 2f       	mov	r24, r24
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	88 0f       	add	r24, r24
    11d2:	99 1f       	adc	r25, r25
    11d4:	88 58       	subi	r24, 0x88	; 136
    11d6:	9c 4f       	sbci	r25, 0xFC	; 252
    11d8:	98 8b       	std	Y+16, r25	; 0x10
    11da:	8f 87       	std	Y+15, r24	; 0x0f
    11dc:	8f 85       	ldd	r24, Y+15	; 0x0f
    11de:	98 89       	ldd	r25, Y+16	; 0x10
    11e0:	2e 8d       	ldd	r18, Y+30	; 0x1e
    11e2:	3f 8d       	ldd	r19, Y+31	; 0x1f
    11e4:	fc 01       	movw	r30, r24
    11e6:	31 83       	std	Z+1, r19	; 0x01
    11e8:	20 83       	st	Z, r18
    11ea:	89 81       	ldd	r24, Y+1	; 0x01
    11ec:	88 2f       	mov	r24, r24
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	88 0f       	add	r24, r24
    11f2:	99 1f       	adc	r25, r25
    11f4:	8c 55       	subi	r24, 0x5C	; 92
    11f6:	9f 4f       	sbci	r25, 0xFF	; 255
    11f8:	9a 8b       	std	Y+18, r25	; 0x12
    11fa:	89 8b       	std	Y+17, r24	; 0x11
    11fc:	89 89       	ldd	r24, Y+17	; 0x11
    11fe:	9a 89       	ldd	r25, Y+18	; 0x12
    1200:	fc 01       	movw	r30, r24
    1202:	25 91       	lpm	r18, Z+
    1204:	34 91       	lpm	r19, Z
    1206:	cf 01       	movw	r24, r30
    1208:	3c 8b       	std	Y+20, r19	; 0x14
    120a:	2b 8b       	std	Y+19, r18	; 0x13
    120c:	9a 8b       	std	Y+18, r25	; 0x12
    120e:	89 8b       	std	Y+17, r24	; 0x11
    1210:	8b 89       	ldd	r24, Y+19	; 0x13
    1212:	9c 89       	ldd	r25, Y+20	; 0x14
    1214:	fc 01       	movw	r30, r24
    1216:	80 81       	ld	r24, Z
    1218:	80 93 a2 03 	sts	0x03A2, r24	; 0x8003a2 <_ZL13portSnapshotB>
    121c:	8b e6       	ldi	r24, 0x6B	; 107
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	90 93 73 03 	sts	0x0373, r25	; 0x800373 <pcmsk+0x1>
    1224:	80 93 72 03 	sts	0x0372, r24	; 0x800372 <pcmsk>
    1228:	88 e6       	ldi	r24, 0x68	; 104
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	28 e6       	ldi	r18, 0x68	; 104
    122e:	30 e0       	ldi	r19, 0x00	; 0
    1230:	f9 01       	movw	r30, r18
    1232:	20 81       	ld	r18, Z
    1234:	21 60       	ori	r18, 0x01	; 1
    1236:	fc 01       	movw	r30, r24
    1238:	20 83       	st	Z, r18
    123a:	89 81       	ldd	r24, Y+1	; 0x01
    123c:	83 30       	cpi	r24, 0x03	; 3
    123e:	c1 f5       	brne	.+112    	; 0x12b0 <_Z15enableInterrupthPFvvEh+0x200>
    1240:	8e 85       	ldd	r24, Y+14	; 0x0e
    1242:	88 2f       	mov	r24, r24
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	88 0f       	add	r24, r24
    1248:	99 1f       	adc	r25, r25
    124a:	8c 57       	subi	r24, 0x7C	; 124
    124c:	9c 4f       	sbci	r25, 0xFC	; 252
    124e:	98 8b       	std	Y+16, r25	; 0x10
    1250:	8f 87       	std	Y+15, r24	; 0x0f
    1252:	8f 85       	ldd	r24, Y+15	; 0x0f
    1254:	98 89       	ldd	r25, Y+16	; 0x10
    1256:	2e 8d       	ldd	r18, Y+30	; 0x1e
    1258:	3f 8d       	ldd	r19, Y+31	; 0x1f
    125a:	fc 01       	movw	r30, r24
    125c:	31 83       	std	Z+1, r19	; 0x01
    125e:	20 83       	st	Z, r18
    1260:	89 81       	ldd	r24, Y+1	; 0x01
    1262:	88 2f       	mov	r24, r24
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	88 0f       	add	r24, r24
    1268:	99 1f       	adc	r25, r25
    126a:	8c 55       	subi	r24, 0x5C	; 92
    126c:	9f 4f       	sbci	r25, 0xFF	; 255
    126e:	9e 8b       	std	Y+22, r25	; 0x16
    1270:	8d 8b       	std	Y+21, r24	; 0x15
    1272:	8d 89       	ldd	r24, Y+21	; 0x15
    1274:	9e 89       	ldd	r25, Y+22	; 0x16
    1276:	fc 01       	movw	r30, r24
    1278:	25 91       	lpm	r18, Z+
    127a:	34 91       	lpm	r19, Z
    127c:	cf 01       	movw	r24, r30
    127e:	38 8f       	std	Y+24, r19	; 0x18
    1280:	2f 8b       	std	Y+23, r18	; 0x17
    1282:	9e 8b       	std	Y+22, r25	; 0x16
    1284:	8d 8b       	std	Y+21, r24	; 0x15
    1286:	8f 89       	ldd	r24, Y+23	; 0x17
    1288:	98 8d       	ldd	r25, Y+24	; 0x18
    128a:	fc 01       	movw	r30, r24
    128c:	80 81       	ld	r24, Z
    128e:	80 93 a5 03 	sts	0x03A5, r24	; 0x8003a5 <_ZL13portSnapshotC>
    1292:	8c e6       	ldi	r24, 0x6C	; 108
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	90 93 73 03 	sts	0x0373, r25	; 0x800373 <pcmsk+0x1>
    129a:	80 93 72 03 	sts	0x0372, r24	; 0x800372 <pcmsk>
    129e:	88 e6       	ldi	r24, 0x68	; 104
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	28 e6       	ldi	r18, 0x68	; 104
    12a4:	30 e0       	ldi	r19, 0x00	; 0
    12a6:	f9 01       	movw	r30, r18
    12a8:	20 81       	ld	r18, Z
    12aa:	22 60       	ori	r18, 0x02	; 2
    12ac:	fc 01       	movw	r30, r24
    12ae:	20 83       	st	Z, r18
    12b0:	89 81       	ldd	r24, Y+1	; 0x01
    12b2:	84 30       	cpi	r24, 0x04	; 4
    12b4:	c1 f5       	brne	.+112    	; 0x1326 <_Z15enableInterrupthPFvvEh+0x276>
    12b6:	8e 85       	ldd	r24, Y+14	; 0x0e
    12b8:	88 2f       	mov	r24, r24
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	88 0f       	add	r24, r24
    12be:	99 1f       	adc	r25, r25
    12c0:	80 57       	subi	r24, 0x70	; 112
    12c2:	9c 4f       	sbci	r25, 0xFC	; 252
    12c4:	98 8b       	std	Y+16, r25	; 0x10
    12c6:	8f 87       	std	Y+15, r24	; 0x0f
    12c8:	8f 85       	ldd	r24, Y+15	; 0x0f
    12ca:	98 89       	ldd	r25, Y+16	; 0x10
    12cc:	2e 8d       	ldd	r18, Y+30	; 0x1e
    12ce:	3f 8d       	ldd	r19, Y+31	; 0x1f
    12d0:	fc 01       	movw	r30, r24
    12d2:	31 83       	std	Z+1, r19	; 0x01
    12d4:	20 83       	st	Z, r18
    12d6:	89 81       	ldd	r24, Y+1	; 0x01
    12d8:	88 2f       	mov	r24, r24
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	88 0f       	add	r24, r24
    12de:	99 1f       	adc	r25, r25
    12e0:	8c 55       	subi	r24, 0x5C	; 92
    12e2:	9f 4f       	sbci	r25, 0xFF	; 255
    12e4:	9a 8f       	std	Y+26, r25	; 0x1a
    12e6:	89 8f       	std	Y+25, r24	; 0x19
    12e8:	89 8d       	ldd	r24, Y+25	; 0x19
    12ea:	9a 8d       	ldd	r25, Y+26	; 0x1a
    12ec:	fc 01       	movw	r30, r24
    12ee:	25 91       	lpm	r18, Z+
    12f0:	34 91       	lpm	r19, Z
    12f2:	cf 01       	movw	r24, r30
    12f4:	3c 8f       	std	Y+28, r19	; 0x1c
    12f6:	2b 8f       	std	Y+27, r18	; 0x1b
    12f8:	9a 8f       	std	Y+26, r25	; 0x1a
    12fa:	89 8f       	std	Y+25, r24	; 0x19
    12fc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    12fe:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1300:	fc 01       	movw	r30, r24
    1302:	80 81       	ld	r24, Z
    1304:	80 93 a8 03 	sts	0x03A8, r24	; 0x8003a8 <_ZL13portSnapshotD>
    1308:	8d e6       	ldi	r24, 0x6D	; 109
    130a:	90 e0       	ldi	r25, 0x00	; 0
    130c:	90 93 73 03 	sts	0x0373, r25	; 0x800373 <pcmsk+0x1>
    1310:	80 93 72 03 	sts	0x0372, r24	; 0x800372 <pcmsk>
    1314:	88 e6       	ldi	r24, 0x68	; 104
    1316:	90 e0       	ldi	r25, 0x00	; 0
    1318:	28 e6       	ldi	r18, 0x68	; 104
    131a:	30 e0       	ldi	r19, 0x00	; 0
    131c:	f9 01       	movw	r30, r18
    131e:	20 81       	ld	r18, Z
    1320:	24 60       	ori	r18, 0x04	; 4
    1322:	fc 01       	movw	r30, r24
    1324:	20 83       	st	Z, r18
    1326:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <pcmsk>
    132a:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <pcmsk+0x1>
    132e:	20 91 72 03 	lds	r18, 0x0372	; 0x800372 <pcmsk>
    1332:	30 91 73 03 	lds	r19, 0x0373	; 0x800373 <pcmsk+0x1>
    1336:	f9 01       	movw	r30, r18
    1338:	30 81       	ld	r19, Z
    133a:	2a 81       	ldd	r18, Y+2	; 0x02
    133c:	23 2b       	or	r18, r19
    133e:	fc 01       	movw	r30, r24
    1340:	20 83       	st	Z, r18
    1342:	80 c0       	rjmp	.+256    	; 0x1444 <_Z15enableInterrupthPFvvEh+0x394>
    1344:	8f e5       	ldi	r24, 0x5F	; 95
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	fc 01       	movw	r30, r24
    134a:	80 81       	ld	r24, Z
    134c:	8c 83       	std	Y+4, r24	; 0x04
    134e:	f8 94       	cli
    1350:	8b 81       	ldd	r24, Y+3	; 0x03
    1352:	82 30       	cpi	r24, 0x02	; 2
    1354:	a1 f5       	brne	.+104    	; 0x13be <_Z15enableInterrupthPFvvEh+0x30e>
    1356:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1358:	9f 8d       	ldd	r25, Y+31	; 0x1f
    135a:	90 93 75 03 	sts	0x0375, r25	; 0x800375 <functionPointerArrayEXTERNAL+0x1>
    135e:	80 93 74 03 	sts	0x0374, r24	; 0x800374 <functionPointerArrayEXTERNAL>
    1362:	8d e3       	ldi	r24, 0x3D	; 61
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	2d e3       	ldi	r18, 0x3D	; 61
    1368:	30 e0       	ldi	r19, 0x00	; 0
    136a:	f9 01       	movw	r30, r18
    136c:	20 81       	ld	r18, Z
    136e:	2e 7f       	andi	r18, 0xFE	; 254
    1370:	fc 01       	movw	r30, r24
    1372:	20 83       	st	Z, r18
    1374:	89 e6       	ldi	r24, 0x69	; 105
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	29 e6       	ldi	r18, 0x69	; 105
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	f9 01       	movw	r30, r18
    137e:	20 81       	ld	r18, Z
    1380:	2c 7f       	andi	r18, 0xFC	; 252
    1382:	fc 01       	movw	r30, r24
    1384:	20 83       	st	Z, r18
    1386:	89 e6       	ldi	r24, 0x69	; 105
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	29 e6       	ldi	r18, 0x69	; 105
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	f9 01       	movw	r30, r18
    1390:	30 81       	ld	r19, Z
    1392:	28 a1       	ldd	r18, Y+32	; 0x20
    1394:	23 2b       	or	r18, r19
    1396:	fc 01       	movw	r30, r24
    1398:	20 83       	st	Z, r18
    139a:	8c e3       	ldi	r24, 0x3C	; 60
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	2c e3       	ldi	r18, 0x3C	; 60
    13a0:	30 e0       	ldi	r19, 0x00	; 0
    13a2:	f9 01       	movw	r30, r18
    13a4:	20 81       	ld	r18, Z
    13a6:	21 60       	ori	r18, 0x01	; 1
    13a8:	fc 01       	movw	r30, r24
    13aa:	20 83       	st	Z, r18
    13ac:	8d e3       	ldi	r24, 0x3D	; 61
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	2d e3       	ldi	r18, 0x3D	; 61
    13b2:	30 e0       	ldi	r19, 0x00	; 0
    13b4:	f9 01       	movw	r30, r18
    13b6:	20 81       	ld	r18, Z
    13b8:	21 60       	ori	r18, 0x01	; 1
    13ba:	fc 01       	movw	r30, r24
    13bc:	20 83       	st	Z, r18
    13be:	8b 81       	ldd	r24, Y+3	; 0x03
    13c0:	83 30       	cpi	r24, 0x03	; 3
    13c2:	d9 f5       	brne	.+118    	; 0x143a <_Z15enableInterrupthPFvvEh+0x38a>
    13c4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    13c6:	9f 8d       	ldd	r25, Y+31	; 0x1f
    13c8:	90 93 77 03 	sts	0x0377, r25	; 0x800377 <functionPointerArrayEXTERNAL+0x3>
    13cc:	80 93 76 03 	sts	0x0376, r24	; 0x800376 <functionPointerArrayEXTERNAL+0x2>
    13d0:	8d e3       	ldi	r24, 0x3D	; 61
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	2d e3       	ldi	r18, 0x3D	; 61
    13d6:	30 e0       	ldi	r19, 0x00	; 0
    13d8:	f9 01       	movw	r30, r18
    13da:	20 81       	ld	r18, Z
    13dc:	2d 7f       	andi	r18, 0xFD	; 253
    13de:	fc 01       	movw	r30, r24
    13e0:	20 83       	st	Z, r18
    13e2:	89 e6       	ldi	r24, 0x69	; 105
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	29 e6       	ldi	r18, 0x69	; 105
    13e8:	30 e0       	ldi	r19, 0x00	; 0
    13ea:	f9 01       	movw	r30, r18
    13ec:	20 81       	ld	r18, Z
    13ee:	23 7f       	andi	r18, 0xF3	; 243
    13f0:	fc 01       	movw	r30, r24
    13f2:	20 83       	st	Z, r18
    13f4:	89 e6       	ldi	r24, 0x69	; 105
    13f6:	90 e0       	ldi	r25, 0x00	; 0
    13f8:	29 e6       	ldi	r18, 0x69	; 105
    13fa:	30 e0       	ldi	r19, 0x00	; 0
    13fc:	f9 01       	movw	r30, r18
    13fe:	20 81       	ld	r18, Z
    1400:	42 2f       	mov	r20, r18
    1402:	28 a1       	ldd	r18, Y+32	; 0x20
    1404:	22 2f       	mov	r18, r18
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	22 0f       	add	r18, r18
    140a:	33 1f       	adc	r19, r19
    140c:	22 0f       	add	r18, r18
    140e:	33 1f       	adc	r19, r19
    1410:	24 2b       	or	r18, r20
    1412:	fc 01       	movw	r30, r24
    1414:	20 83       	st	Z, r18
    1416:	8c e3       	ldi	r24, 0x3C	; 60
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	2c e3       	ldi	r18, 0x3C	; 60
    141c:	30 e0       	ldi	r19, 0x00	; 0
    141e:	f9 01       	movw	r30, r18
    1420:	20 81       	ld	r18, Z
    1422:	22 60       	ori	r18, 0x02	; 2
    1424:	fc 01       	movw	r30, r24
    1426:	20 83       	st	Z, r18
    1428:	8d e3       	ldi	r24, 0x3D	; 61
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	2d e3       	ldi	r18, 0x3D	; 61
    142e:	30 e0       	ldi	r19, 0x00	; 0
    1430:	f9 01       	movw	r30, r18
    1432:	20 81       	ld	r18, Z
    1434:	22 60       	ori	r18, 0x02	; 2
    1436:	fc 01       	movw	r30, r24
    1438:	20 83       	st	Z, r18
    143a:	8f e5       	ldi	r24, 0x5F	; 95
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	2c 81       	ldd	r18, Y+4	; 0x04
    1440:	fc 01       	movw	r30, r24
    1442:	20 83       	st	Z, r18
    1444:	00 00       	nop
    1446:	a0 96       	adiw	r28, 0x20	; 32
    1448:	0f b6       	in	r0, 0x3f	; 63
    144a:	f8 94       	cli
    144c:	de bf       	out	0x3e, r29	; 62
    144e:	0f be       	out	0x3f, r0	; 63
    1450:	cd bf       	out	0x3d, r28	; 61
    1452:	df 91       	pop	r29
    1454:	cf 91       	pop	r28
    1456:	08 95       	ret

00001458 <__vector_1>:
    1458:	1f 92       	push	r1
    145a:	0f 92       	push	r0
    145c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1460:	0f 92       	push	r0
    1462:	11 24       	eor	r1, r1
    1464:	2f 93       	push	r18
    1466:	3f 93       	push	r19
    1468:	4f 93       	push	r20
    146a:	5f 93       	push	r21
    146c:	6f 93       	push	r22
    146e:	7f 93       	push	r23
    1470:	8f 93       	push	r24
    1472:	9f 93       	push	r25
    1474:	af 93       	push	r26
    1476:	bf 93       	push	r27
    1478:	ef 93       	push	r30
    147a:	ff 93       	push	r31
    147c:	cf 93       	push	r28
    147e:	df 93       	push	r29
    1480:	cd b7       	in	r28, 0x3d	; 61
    1482:	de b7       	in	r29, 0x3e	; 62
    1484:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <functionPointerArrayEXTERNAL>
    1488:	90 91 75 03 	lds	r25, 0x0375	; 0x800375 <functionPointerArrayEXTERNAL+0x1>
    148c:	fc 01       	movw	r30, r24
    148e:	09 95       	icall
    1490:	00 00       	nop
    1492:	df 91       	pop	r29
    1494:	cf 91       	pop	r28
    1496:	ff 91       	pop	r31
    1498:	ef 91       	pop	r30
    149a:	bf 91       	pop	r27
    149c:	af 91       	pop	r26
    149e:	9f 91       	pop	r25
    14a0:	8f 91       	pop	r24
    14a2:	7f 91       	pop	r23
    14a4:	6f 91       	pop	r22
    14a6:	5f 91       	pop	r21
    14a8:	4f 91       	pop	r20
    14aa:	3f 91       	pop	r19
    14ac:	2f 91       	pop	r18
    14ae:	0f 90       	pop	r0
    14b0:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    14b4:	0f 90       	pop	r0
    14b6:	1f 90       	pop	r1
    14b8:	18 95       	reti

000014ba <__vector_2>:
    14ba:	1f 92       	push	r1
    14bc:	0f 92       	push	r0
    14be:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    14c2:	0f 92       	push	r0
    14c4:	11 24       	eor	r1, r1
    14c6:	2f 93       	push	r18
    14c8:	3f 93       	push	r19
    14ca:	4f 93       	push	r20
    14cc:	5f 93       	push	r21
    14ce:	6f 93       	push	r22
    14d0:	7f 93       	push	r23
    14d2:	8f 93       	push	r24
    14d4:	9f 93       	push	r25
    14d6:	af 93       	push	r26
    14d8:	bf 93       	push	r27
    14da:	ef 93       	push	r30
    14dc:	ff 93       	push	r31
    14de:	cf 93       	push	r28
    14e0:	df 93       	push	r29
    14e2:	cd b7       	in	r28, 0x3d	; 61
    14e4:	de b7       	in	r29, 0x3e	; 62
    14e6:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <functionPointerArrayEXTERNAL+0x2>
    14ea:	90 91 77 03 	lds	r25, 0x0377	; 0x800377 <functionPointerArrayEXTERNAL+0x3>
    14ee:	fc 01       	movw	r30, r24
    14f0:	09 95       	icall
    14f2:	00 00       	nop
    14f4:	df 91       	pop	r29
    14f6:	cf 91       	pop	r28
    14f8:	ff 91       	pop	r31
    14fa:	ef 91       	pop	r30
    14fc:	bf 91       	pop	r27
    14fe:	af 91       	pop	r26
    1500:	9f 91       	pop	r25
    1502:	8f 91       	pop	r24
    1504:	7f 91       	pop	r23
    1506:	6f 91       	pop	r22
    1508:	5f 91       	pop	r21
    150a:	4f 91       	pop	r20
    150c:	3f 91       	pop	r19
    150e:	2f 91       	pop	r18
    1510:	0f 90       	pop	r0
    1512:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1516:	0f 90       	pop	r0
    1518:	1f 90       	pop	r1
    151a:	18 95       	reti

0000151c <__vector_3>:
    151c:	1f 92       	push	r1
    151e:	0f 92       	push	r0
    1520:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1524:	0f 92       	push	r0
    1526:	11 24       	eor	r1, r1
    1528:	2f 93       	push	r18
    152a:	3f 93       	push	r19
    152c:	4f 93       	push	r20
    152e:	5f 93       	push	r21
    1530:	6f 93       	push	r22
    1532:	7f 93       	push	r23
    1534:	8f 93       	push	r24
    1536:	9f 93       	push	r25
    1538:	af 93       	push	r26
    153a:	bf 93       	push	r27
    153c:	ef 93       	push	r30
    153e:	ff 93       	push	r31
    1540:	cf 93       	push	r28
    1542:	df 93       	push	r29
    1544:	00 d0       	rcall	.+0      	; 0x1546 <__vector_3+0x2a>
    1546:	00 d0       	rcall	.+0      	; 0x1548 <__vector_3+0x2c>
    1548:	cd b7       	in	r28, 0x3d	; 61
    154a:	de b7       	in	r29, 0x3e	; 62
    154c:	83 e2       	ldi	r24, 0x23	; 35
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	fc 01       	movw	r30, r24
    1552:	80 81       	ld	r24, Z
    1554:	89 83       	std	Y+1, r24	; 0x01
    1556:	90 91 a2 03 	lds	r25, 0x03A2	; 0x8003a2 <_ZL13portSnapshotB>
    155a:	89 81       	ldd	r24, Y+1	; 0x01
    155c:	89 27       	eor	r24, r25
    155e:	8a 83       	std	Y+2, r24	; 0x02
    1560:	90 91 a0 03 	lds	r25, 0x03A0	; 0x8003a0 <risingPinsPORTB>
    1564:	89 81       	ldd	r24, Y+1	; 0x01
    1566:	89 23       	and	r24, r25
    1568:	8b 83       	std	Y+3, r24	; 0x03
    156a:	89 81       	ldd	r24, Y+1	; 0x01
    156c:	80 95       	com	r24
    156e:	90 91 a1 03 	lds	r25, 0x03A1	; 0x8003a1 <fallingPinsPORTB>
    1572:	89 23       	and	r24, r25
    1574:	8c 83       	std	Y+4, r24	; 0x04
    1576:	9c 81       	ldd	r25, Y+4	; 0x04
    1578:	8b 81       	ldd	r24, Y+3	; 0x03
    157a:	89 2b       	or	r24, r25
    157c:	8c 83       	std	Y+4, r24	; 0x04
    157e:	9c 81       	ldd	r25, Y+4	; 0x04
    1580:	8a 81       	ldd	r24, Y+2	; 0x02
    1582:	89 23       	and	r24, r25
    1584:	8c 83       	std	Y+4, r24	; 0x04
    1586:	8b e6       	ldi	r24, 0x6B	; 107
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	fc 01       	movw	r30, r24
    158c:	80 81       	ld	r24, Z
    158e:	9c 81       	ldd	r25, Y+4	; 0x04
    1590:	89 23       	and	r24, r25
    1592:	8c 83       	std	Y+4, r24	; 0x04
    1594:	89 81       	ldd	r24, Y+1	; 0x01
    1596:	80 93 a2 03 	sts	0x03A2, r24	; 0x8003a2 <_ZL13portSnapshotB>
    159a:	8c 81       	ldd	r24, Y+4	; 0x04
    159c:	88 23       	and	r24, r24
    159e:	09 f4       	brne	.+2      	; 0x15a2 <__vector_3+0x86>
    15a0:	4f c0       	rjmp	.+158    	; 0x1640 <__vector_3+0x124>
    15a2:	8c 81       	ldd	r24, Y+4	; 0x04
    15a4:	88 2f       	mov	r24, r24
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	81 70       	andi	r24, 0x01	; 1
    15aa:	99 27       	eor	r25, r25
    15ac:	89 2b       	or	r24, r25
    15ae:	31 f0       	breq	.+12     	; 0x15bc <__vector_3+0xa0>
    15b0:	80 91 78 03 	lds	r24, 0x0378	; 0x800378 <portBFunctions>
    15b4:	90 91 79 03 	lds	r25, 0x0379	; 0x800379 <portBFunctions+0x1>
    15b8:	fc 01       	movw	r30, r24
    15ba:	09 95       	icall
    15bc:	8c 81       	ldd	r24, Y+4	; 0x04
    15be:	88 2f       	mov	r24, r24
    15c0:	90 e0       	ldi	r25, 0x00	; 0
    15c2:	82 70       	andi	r24, 0x02	; 2
    15c4:	99 27       	eor	r25, r25
    15c6:	89 2b       	or	r24, r25
    15c8:	31 f0       	breq	.+12     	; 0x15d6 <__vector_3+0xba>
    15ca:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <portBFunctions+0x2>
    15ce:	90 91 7b 03 	lds	r25, 0x037B	; 0x80037b <portBFunctions+0x3>
    15d2:	fc 01       	movw	r30, r24
    15d4:	09 95       	icall
    15d6:	8c 81       	ldd	r24, Y+4	; 0x04
    15d8:	88 2f       	mov	r24, r24
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	84 70       	andi	r24, 0x04	; 4
    15de:	99 27       	eor	r25, r25
    15e0:	89 2b       	or	r24, r25
    15e2:	31 f0       	breq	.+12     	; 0x15f0 <__vector_3+0xd4>
    15e4:	80 91 7c 03 	lds	r24, 0x037C	; 0x80037c <portBFunctions+0x4>
    15e8:	90 91 7d 03 	lds	r25, 0x037D	; 0x80037d <portBFunctions+0x5>
    15ec:	fc 01       	movw	r30, r24
    15ee:	09 95       	icall
    15f0:	8c 81       	ldd	r24, Y+4	; 0x04
    15f2:	88 2f       	mov	r24, r24
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	88 70       	andi	r24, 0x08	; 8
    15f8:	99 27       	eor	r25, r25
    15fa:	89 2b       	or	r24, r25
    15fc:	31 f0       	breq	.+12     	; 0x160a <__vector_3+0xee>
    15fe:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <portBFunctions+0x6>
    1602:	90 91 7f 03 	lds	r25, 0x037F	; 0x80037f <portBFunctions+0x7>
    1606:	fc 01       	movw	r30, r24
    1608:	09 95       	icall
    160a:	8c 81       	ldd	r24, Y+4	; 0x04
    160c:	88 2f       	mov	r24, r24
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	80 71       	andi	r24, 0x10	; 16
    1612:	99 27       	eor	r25, r25
    1614:	89 2b       	or	r24, r25
    1616:	31 f0       	breq	.+12     	; 0x1624 <__vector_3+0x108>
    1618:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <portBFunctions+0x8>
    161c:	90 91 81 03 	lds	r25, 0x0381	; 0x800381 <portBFunctions+0x9>
    1620:	fc 01       	movw	r30, r24
    1622:	09 95       	icall
    1624:	8c 81       	ldd	r24, Y+4	; 0x04
    1626:	88 2f       	mov	r24, r24
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	80 72       	andi	r24, 0x20	; 32
    162c:	99 27       	eor	r25, r25
    162e:	89 2b       	or	r24, r25
    1630:	49 f0       	breq	.+18     	; 0x1644 <__vector_3+0x128>
    1632:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <portBFunctions+0xa>
    1636:	90 91 83 03 	lds	r25, 0x0383	; 0x800383 <portBFunctions+0xb>
    163a:	fc 01       	movw	r30, r24
    163c:	09 95       	icall
    163e:	01 c0       	rjmp	.+2      	; 0x1642 <__vector_3+0x126>
    1640:	00 00       	nop
    1642:	00 00       	nop
    1644:	00 00       	nop
    1646:	0f 90       	pop	r0
    1648:	0f 90       	pop	r0
    164a:	0f 90       	pop	r0
    164c:	0f 90       	pop	r0
    164e:	df 91       	pop	r29
    1650:	cf 91       	pop	r28
    1652:	ff 91       	pop	r31
    1654:	ef 91       	pop	r30
    1656:	bf 91       	pop	r27
    1658:	af 91       	pop	r26
    165a:	9f 91       	pop	r25
    165c:	8f 91       	pop	r24
    165e:	7f 91       	pop	r23
    1660:	6f 91       	pop	r22
    1662:	5f 91       	pop	r21
    1664:	4f 91       	pop	r20
    1666:	3f 91       	pop	r19
    1668:	2f 91       	pop	r18
    166a:	0f 90       	pop	r0
    166c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1670:	0f 90       	pop	r0
    1672:	1f 90       	pop	r1
    1674:	18 95       	reti

00001676 <__vector_4>:
    1676:	1f 92       	push	r1
    1678:	0f 92       	push	r0
    167a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    167e:	0f 92       	push	r0
    1680:	11 24       	eor	r1, r1
    1682:	2f 93       	push	r18
    1684:	3f 93       	push	r19
    1686:	4f 93       	push	r20
    1688:	5f 93       	push	r21
    168a:	6f 93       	push	r22
    168c:	7f 93       	push	r23
    168e:	8f 93       	push	r24
    1690:	9f 93       	push	r25
    1692:	af 93       	push	r26
    1694:	bf 93       	push	r27
    1696:	ef 93       	push	r30
    1698:	ff 93       	push	r31
    169a:	cf 93       	push	r28
    169c:	df 93       	push	r29
    169e:	00 d0       	rcall	.+0      	; 0x16a0 <__vector_4+0x2a>
    16a0:	00 d0       	rcall	.+0      	; 0x16a2 <__vector_4+0x2c>
    16a2:	cd b7       	in	r28, 0x3d	; 61
    16a4:	de b7       	in	r29, 0x3e	; 62
    16a6:	86 e2       	ldi	r24, 0x26	; 38
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	fc 01       	movw	r30, r24
    16ac:	80 81       	ld	r24, Z
    16ae:	89 83       	std	Y+1, r24	; 0x01
    16b0:	90 91 a5 03 	lds	r25, 0x03A5	; 0x8003a5 <_ZL13portSnapshotC>
    16b4:	89 81       	ldd	r24, Y+1	; 0x01
    16b6:	89 27       	eor	r24, r25
    16b8:	8a 83       	std	Y+2, r24	; 0x02
    16ba:	90 91 a3 03 	lds	r25, 0x03A3	; 0x8003a3 <risingPinsPORTC>
    16be:	89 81       	ldd	r24, Y+1	; 0x01
    16c0:	89 23       	and	r24, r25
    16c2:	8b 83       	std	Y+3, r24	; 0x03
    16c4:	89 81       	ldd	r24, Y+1	; 0x01
    16c6:	80 95       	com	r24
    16c8:	90 91 a4 03 	lds	r25, 0x03A4	; 0x8003a4 <fallingPinsPORTC>
    16cc:	89 23       	and	r24, r25
    16ce:	8c 83       	std	Y+4, r24	; 0x04
    16d0:	9c 81       	ldd	r25, Y+4	; 0x04
    16d2:	8b 81       	ldd	r24, Y+3	; 0x03
    16d4:	89 2b       	or	r24, r25
    16d6:	8c 83       	std	Y+4, r24	; 0x04
    16d8:	9c 81       	ldd	r25, Y+4	; 0x04
    16da:	8a 81       	ldd	r24, Y+2	; 0x02
    16dc:	89 23       	and	r24, r25
    16de:	8c 83       	std	Y+4, r24	; 0x04
    16e0:	8c e6       	ldi	r24, 0x6C	; 108
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	fc 01       	movw	r30, r24
    16e6:	80 81       	ld	r24, Z
    16e8:	9c 81       	ldd	r25, Y+4	; 0x04
    16ea:	89 23       	and	r24, r25
    16ec:	8c 83       	std	Y+4, r24	; 0x04
    16ee:	89 81       	ldd	r24, Y+1	; 0x01
    16f0:	80 93 a5 03 	sts	0x03A5, r24	; 0x8003a5 <_ZL13portSnapshotC>
    16f4:	8c 81       	ldd	r24, Y+4	; 0x04
    16f6:	88 23       	and	r24, r24
    16f8:	09 f4       	brne	.+2      	; 0x16fc <__vector_4+0x86>
    16fa:	4f c0       	rjmp	.+158    	; 0x179a <__vector_4+0x124>
    16fc:	8c 81       	ldd	r24, Y+4	; 0x04
    16fe:	88 2f       	mov	r24, r24
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	81 70       	andi	r24, 0x01	; 1
    1704:	99 27       	eor	r25, r25
    1706:	89 2b       	or	r24, r25
    1708:	31 f0       	breq	.+12     	; 0x1716 <__vector_4+0xa0>
    170a:	80 91 84 03 	lds	r24, 0x0384	; 0x800384 <portCFunctions>
    170e:	90 91 85 03 	lds	r25, 0x0385	; 0x800385 <portCFunctions+0x1>
    1712:	fc 01       	movw	r30, r24
    1714:	09 95       	icall
    1716:	8c 81       	ldd	r24, Y+4	; 0x04
    1718:	88 2f       	mov	r24, r24
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	82 70       	andi	r24, 0x02	; 2
    171e:	99 27       	eor	r25, r25
    1720:	89 2b       	or	r24, r25
    1722:	31 f0       	breq	.+12     	; 0x1730 <__vector_4+0xba>
    1724:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <portCFunctions+0x2>
    1728:	90 91 87 03 	lds	r25, 0x0387	; 0x800387 <portCFunctions+0x3>
    172c:	fc 01       	movw	r30, r24
    172e:	09 95       	icall
    1730:	8c 81       	ldd	r24, Y+4	; 0x04
    1732:	88 2f       	mov	r24, r24
    1734:	90 e0       	ldi	r25, 0x00	; 0
    1736:	84 70       	andi	r24, 0x04	; 4
    1738:	99 27       	eor	r25, r25
    173a:	89 2b       	or	r24, r25
    173c:	31 f0       	breq	.+12     	; 0x174a <__vector_4+0xd4>
    173e:	80 91 88 03 	lds	r24, 0x0388	; 0x800388 <portCFunctions+0x4>
    1742:	90 91 89 03 	lds	r25, 0x0389	; 0x800389 <portCFunctions+0x5>
    1746:	fc 01       	movw	r30, r24
    1748:	09 95       	icall
    174a:	8c 81       	ldd	r24, Y+4	; 0x04
    174c:	88 2f       	mov	r24, r24
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	88 70       	andi	r24, 0x08	; 8
    1752:	99 27       	eor	r25, r25
    1754:	89 2b       	or	r24, r25
    1756:	31 f0       	breq	.+12     	; 0x1764 <__vector_4+0xee>
    1758:	80 91 8a 03 	lds	r24, 0x038A	; 0x80038a <portCFunctions+0x6>
    175c:	90 91 8b 03 	lds	r25, 0x038B	; 0x80038b <portCFunctions+0x7>
    1760:	fc 01       	movw	r30, r24
    1762:	09 95       	icall
    1764:	8c 81       	ldd	r24, Y+4	; 0x04
    1766:	88 2f       	mov	r24, r24
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	80 71       	andi	r24, 0x10	; 16
    176c:	99 27       	eor	r25, r25
    176e:	89 2b       	or	r24, r25
    1770:	31 f0       	breq	.+12     	; 0x177e <__vector_4+0x108>
    1772:	80 91 8c 03 	lds	r24, 0x038C	; 0x80038c <portCFunctions+0x8>
    1776:	90 91 8d 03 	lds	r25, 0x038D	; 0x80038d <portCFunctions+0x9>
    177a:	fc 01       	movw	r30, r24
    177c:	09 95       	icall
    177e:	8c 81       	ldd	r24, Y+4	; 0x04
    1780:	88 2f       	mov	r24, r24
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	80 72       	andi	r24, 0x20	; 32
    1786:	99 27       	eor	r25, r25
    1788:	89 2b       	or	r24, r25
    178a:	49 f0       	breq	.+18     	; 0x179e <__vector_4+0x128>
    178c:	80 91 8e 03 	lds	r24, 0x038E	; 0x80038e <portCFunctions+0xa>
    1790:	90 91 8f 03 	lds	r25, 0x038F	; 0x80038f <portCFunctions+0xb>
    1794:	fc 01       	movw	r30, r24
    1796:	09 95       	icall
    1798:	01 c0       	rjmp	.+2      	; 0x179c <__vector_4+0x126>
    179a:	00 00       	nop
    179c:	00 00       	nop
    179e:	00 00       	nop
    17a0:	0f 90       	pop	r0
    17a2:	0f 90       	pop	r0
    17a4:	0f 90       	pop	r0
    17a6:	0f 90       	pop	r0
    17a8:	df 91       	pop	r29
    17aa:	cf 91       	pop	r28
    17ac:	ff 91       	pop	r31
    17ae:	ef 91       	pop	r30
    17b0:	bf 91       	pop	r27
    17b2:	af 91       	pop	r26
    17b4:	9f 91       	pop	r25
    17b6:	8f 91       	pop	r24
    17b8:	7f 91       	pop	r23
    17ba:	6f 91       	pop	r22
    17bc:	5f 91       	pop	r21
    17be:	4f 91       	pop	r20
    17c0:	3f 91       	pop	r19
    17c2:	2f 91       	pop	r18
    17c4:	0f 90       	pop	r0
    17c6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    17ca:	0f 90       	pop	r0
    17cc:	1f 90       	pop	r1
    17ce:	18 95       	reti

000017d0 <__vector_5>:
    17d0:	1f 92       	push	r1
    17d2:	0f 92       	push	r0
    17d4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    17d8:	0f 92       	push	r0
    17da:	11 24       	eor	r1, r1
    17dc:	2f 93       	push	r18
    17de:	3f 93       	push	r19
    17e0:	4f 93       	push	r20
    17e2:	5f 93       	push	r21
    17e4:	6f 93       	push	r22
    17e6:	7f 93       	push	r23
    17e8:	8f 93       	push	r24
    17ea:	9f 93       	push	r25
    17ec:	af 93       	push	r26
    17ee:	bf 93       	push	r27
    17f0:	ef 93       	push	r30
    17f2:	ff 93       	push	r31
    17f4:	cf 93       	push	r28
    17f6:	df 93       	push	r29
    17f8:	00 d0       	rcall	.+0      	; 0x17fa <__vector_5+0x2a>
    17fa:	00 d0       	rcall	.+0      	; 0x17fc <__vector_5+0x2c>
    17fc:	cd b7       	in	r28, 0x3d	; 61
    17fe:	de b7       	in	r29, 0x3e	; 62
    1800:	89 e2       	ldi	r24, 0x29	; 41
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	fc 01       	movw	r30, r24
    1806:	80 81       	ld	r24, Z
    1808:	89 83       	std	Y+1, r24	; 0x01
    180a:	90 91 a8 03 	lds	r25, 0x03A8	; 0x8003a8 <_ZL13portSnapshotD>
    180e:	89 81       	ldd	r24, Y+1	; 0x01
    1810:	89 27       	eor	r24, r25
    1812:	8a 83       	std	Y+2, r24	; 0x02
    1814:	90 91 a6 03 	lds	r25, 0x03A6	; 0x8003a6 <risingPinsPORTD>
    1818:	89 81       	ldd	r24, Y+1	; 0x01
    181a:	89 23       	and	r24, r25
    181c:	8b 83       	std	Y+3, r24	; 0x03
    181e:	89 81       	ldd	r24, Y+1	; 0x01
    1820:	80 95       	com	r24
    1822:	90 91 a7 03 	lds	r25, 0x03A7	; 0x8003a7 <fallingPinsPORTD>
    1826:	89 23       	and	r24, r25
    1828:	8c 83       	std	Y+4, r24	; 0x04
    182a:	9c 81       	ldd	r25, Y+4	; 0x04
    182c:	8b 81       	ldd	r24, Y+3	; 0x03
    182e:	89 2b       	or	r24, r25
    1830:	8c 83       	std	Y+4, r24	; 0x04
    1832:	9c 81       	ldd	r25, Y+4	; 0x04
    1834:	8a 81       	ldd	r24, Y+2	; 0x02
    1836:	89 23       	and	r24, r25
    1838:	8c 83       	std	Y+4, r24	; 0x04
    183a:	8d e6       	ldi	r24, 0x6D	; 109
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	fc 01       	movw	r30, r24
    1840:	80 81       	ld	r24, Z
    1842:	9c 81       	ldd	r25, Y+4	; 0x04
    1844:	89 23       	and	r24, r25
    1846:	8c 83       	std	Y+4, r24	; 0x04
    1848:	89 81       	ldd	r24, Y+1	; 0x01
    184a:	80 93 a8 03 	sts	0x03A8, r24	; 0x8003a8 <_ZL13portSnapshotD>
    184e:	8c 81       	ldd	r24, Y+4	; 0x04
    1850:	88 23       	and	r24, r24
    1852:	09 f4       	brne	.+2      	; 0x1856 <__vector_5+0x86>
    1854:	65 c0       	rjmp	.+202    	; 0x1920 <__vector_5+0x150>
    1856:	8c 81       	ldd	r24, Y+4	; 0x04
    1858:	88 2f       	mov	r24, r24
    185a:	90 e0       	ldi	r25, 0x00	; 0
    185c:	81 70       	andi	r24, 0x01	; 1
    185e:	99 27       	eor	r25, r25
    1860:	89 2b       	or	r24, r25
    1862:	31 f0       	breq	.+12     	; 0x1870 <__vector_5+0xa0>
    1864:	80 91 90 03 	lds	r24, 0x0390	; 0x800390 <portDFunctions>
    1868:	90 91 91 03 	lds	r25, 0x0391	; 0x800391 <portDFunctions+0x1>
    186c:	fc 01       	movw	r30, r24
    186e:	09 95       	icall
    1870:	8c 81       	ldd	r24, Y+4	; 0x04
    1872:	88 2f       	mov	r24, r24
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	82 70       	andi	r24, 0x02	; 2
    1878:	99 27       	eor	r25, r25
    187a:	89 2b       	or	r24, r25
    187c:	31 f0       	breq	.+12     	; 0x188a <__vector_5+0xba>
    187e:	80 91 92 03 	lds	r24, 0x0392	; 0x800392 <portDFunctions+0x2>
    1882:	90 91 93 03 	lds	r25, 0x0393	; 0x800393 <portDFunctions+0x3>
    1886:	fc 01       	movw	r30, r24
    1888:	09 95       	icall
    188a:	8c 81       	ldd	r24, Y+4	; 0x04
    188c:	88 2f       	mov	r24, r24
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	84 70       	andi	r24, 0x04	; 4
    1892:	99 27       	eor	r25, r25
    1894:	89 2b       	or	r24, r25
    1896:	31 f0       	breq	.+12     	; 0x18a4 <__vector_5+0xd4>
    1898:	80 91 94 03 	lds	r24, 0x0394	; 0x800394 <portDFunctions+0x4>
    189c:	90 91 95 03 	lds	r25, 0x0395	; 0x800395 <portDFunctions+0x5>
    18a0:	fc 01       	movw	r30, r24
    18a2:	09 95       	icall
    18a4:	8c 81       	ldd	r24, Y+4	; 0x04
    18a6:	88 2f       	mov	r24, r24
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	88 70       	andi	r24, 0x08	; 8
    18ac:	99 27       	eor	r25, r25
    18ae:	89 2b       	or	r24, r25
    18b0:	31 f0       	breq	.+12     	; 0x18be <__vector_5+0xee>
    18b2:	80 91 96 03 	lds	r24, 0x0396	; 0x800396 <portDFunctions+0x6>
    18b6:	90 91 97 03 	lds	r25, 0x0397	; 0x800397 <portDFunctions+0x7>
    18ba:	fc 01       	movw	r30, r24
    18bc:	09 95       	icall
    18be:	8c 81       	ldd	r24, Y+4	; 0x04
    18c0:	88 2f       	mov	r24, r24
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	80 71       	andi	r24, 0x10	; 16
    18c6:	99 27       	eor	r25, r25
    18c8:	89 2b       	or	r24, r25
    18ca:	31 f0       	breq	.+12     	; 0x18d8 <__vector_5+0x108>
    18cc:	80 91 98 03 	lds	r24, 0x0398	; 0x800398 <portDFunctions+0x8>
    18d0:	90 91 99 03 	lds	r25, 0x0399	; 0x800399 <portDFunctions+0x9>
    18d4:	fc 01       	movw	r30, r24
    18d6:	09 95       	icall
    18d8:	8c 81       	ldd	r24, Y+4	; 0x04
    18da:	88 2f       	mov	r24, r24
    18dc:	90 e0       	ldi	r25, 0x00	; 0
    18de:	80 72       	andi	r24, 0x20	; 32
    18e0:	99 27       	eor	r25, r25
    18e2:	89 2b       	or	r24, r25
    18e4:	31 f0       	breq	.+12     	; 0x18f2 <__vector_5+0x122>
    18e6:	80 91 9a 03 	lds	r24, 0x039A	; 0x80039a <portDFunctions+0xa>
    18ea:	90 91 9b 03 	lds	r25, 0x039B	; 0x80039b <portDFunctions+0xb>
    18ee:	fc 01       	movw	r30, r24
    18f0:	09 95       	icall
    18f2:	8c 81       	ldd	r24, Y+4	; 0x04
    18f4:	88 2f       	mov	r24, r24
    18f6:	90 e0       	ldi	r25, 0x00	; 0
    18f8:	80 74       	andi	r24, 0x40	; 64
    18fa:	99 27       	eor	r25, r25
    18fc:	89 2b       	or	r24, r25
    18fe:	31 f0       	breq	.+12     	; 0x190c <__vector_5+0x13c>
    1900:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <portDFunctions+0xc>
    1904:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <portDFunctions+0xd>
    1908:	fc 01       	movw	r30, r24
    190a:	09 95       	icall
    190c:	8c 81       	ldd	r24, Y+4	; 0x04
    190e:	88 23       	and	r24, r24
    1910:	4c f4       	brge	.+18     	; 0x1924 <__vector_5+0x154>
    1912:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <portDFunctions+0xe>
    1916:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <portDFunctions+0xf>
    191a:	fc 01       	movw	r30, r24
    191c:	09 95       	icall
    191e:	01 c0       	rjmp	.+2      	; 0x1922 <__vector_5+0x152>
    1920:	00 00       	nop
    1922:	00 00       	nop
    1924:	00 00       	nop
    1926:	0f 90       	pop	r0
    1928:	0f 90       	pop	r0
    192a:	0f 90       	pop	r0
    192c:	0f 90       	pop	r0
    192e:	df 91       	pop	r29
    1930:	cf 91       	pop	r28
    1932:	ff 91       	pop	r31
    1934:	ef 91       	pop	r30
    1936:	bf 91       	pop	r27
    1938:	af 91       	pop	r26
    193a:	9f 91       	pop	r25
    193c:	8f 91       	pop	r24
    193e:	7f 91       	pop	r23
    1940:	6f 91       	pop	r22
    1942:	5f 91       	pop	r21
    1944:	4f 91       	pop	r20
    1946:	3f 91       	pop	r19
    1948:	2f 91       	pop	r18
    194a:	0f 90       	pop	r0
    194c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1950:	0f 90       	pop	r0
    1952:	1f 90       	pop	r1
    1954:	18 95       	reti

00001956 <__vector_13>:
    1956:	1f 92       	push	r1
    1958:	0f 92       	push	r0
    195a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    195e:	0f 92       	push	r0
    1960:	11 24       	eor	r1, r1
    1962:	2f 93       	push	r18
    1964:	3f 93       	push	r19
    1966:	4f 93       	push	r20
    1968:	5f 93       	push	r21
    196a:	6f 93       	push	r22
    196c:	7f 93       	push	r23
    196e:	8f 93       	push	r24
    1970:	9f 93       	push	r25
    1972:	af 93       	push	r26
    1974:	bf 93       	push	r27
    1976:	ef 93       	push	r30
    1978:	ff 93       	push	r31
    197a:	cf 93       	push	r28
    197c:	df 93       	push	r29
    197e:	cd b7       	in	r28, 0x3d	; 61
    1980:	de b7       	in	r29, 0x3e	; 62
    1982:	26 97       	sbiw	r28, 0x06	; 6
    1984:	de bf       	out	0x3e, r29	; 62
    1986:	cd bf       	out	0x3d, r28	; 61
    1988:	24 e8       	ldi	r18, 0x84	; 132
    198a:	30 e0       	ldi	r19, 0x00	; 0
    198c:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <stepDelay>
    1990:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <stepDelay+0x1>
    1994:	a0 91 a2 01 	lds	r26, 0x01A2	; 0x8001a2 <stepDelay+0x2>
    1998:	b0 91 a3 01 	lds	r27, 0x01A3	; 0x8001a3 <stepDelay+0x3>
    199c:	80 95       	com	r24
    199e:	90 95       	com	r25
    19a0:	f9 01       	movw	r30, r18
    19a2:	91 83       	std	Z+1, r25	; 0x01
    19a4:	80 83       	st	Z, r24
    19a6:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <RUN_MODE>
    19aa:	81 e0       	ldi	r24, 0x01	; 1
    19ac:	91 30       	cpi	r25, 0x01	; 1
    19ae:	09 f4       	brne	.+2      	; 0x19b2 <__vector_13+0x5c>
    19b0:	80 e0       	ldi	r24, 0x00	; 0
    19b2:	88 23       	and	r24, r24
    19b4:	09 f4       	brne	.+2      	; 0x19b8 <__vector_13+0x62>
    19b6:	a8 c0       	rjmp	.+336    	; 0x1b08 <__vector_13+0x1b2>
    19b8:	20 91 d2 03 	lds	r18, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    19bc:	30 91 d3 03 	lds	r19, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    19c0:	40 91 d4 03 	lds	r20, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    19c4:	50 91 d5 03 	lds	r21, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    19c8:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <STEPS>
    19cc:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <STEPS+0x1>
    19d0:	a0 91 d0 03 	lds	r26, 0x03D0	; 0x8003d0 <STEPS+0x2>
    19d4:	b0 91 d1 03 	lds	r27, 0x03D1	; 0x8003d1 <STEPS+0x3>
    19d8:	61 e0       	ldi	r22, 0x01	; 1
    19da:	28 17       	cp	r18, r24
    19dc:	39 07       	cpc	r19, r25
    19de:	4a 07       	cpc	r20, r26
    19e0:	5b 07       	cpc	r21, r27
    19e2:	09 f4       	brne	.+2      	; 0x19e6 <__vector_13+0x90>
    19e4:	60 e0       	ldi	r22, 0x00	; 0
    19e6:	66 23       	and	r22, r22
    19e8:	11 f0       	breq	.+4      	; 0x19ee <__vector_13+0x98>
    19ea:	0e 94 20 12 	call	0x2440	; 0x2440 <_Z16ToggleStepOutputv>
    19ee:	20 91 d2 03 	lds	r18, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    19f2:	30 91 d3 03 	lds	r19, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    19f6:	40 91 d4 03 	lds	r20, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    19fa:	50 91 d5 03 	lds	r21, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    19fe:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <STEPS>
    1a02:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <STEPS+0x1>
    1a06:	a0 91 d0 03 	lds	r26, 0x03D0	; 0x8003d0 <STEPS+0x2>
    1a0a:	b0 91 d1 03 	lds	r27, 0x03D1	; 0x8003d1 <STEPS+0x3>
    1a0e:	61 e0       	ldi	r22, 0x01	; 1
    1a10:	82 17       	cp	r24, r18
    1a12:	93 07       	cpc	r25, r19
    1a14:	a4 07       	cpc	r26, r20
    1a16:	b5 07       	cpc	r27, r21
    1a18:	0c f0       	brlt	.+2      	; 0x1a1c <__vector_13+0xc6>
    1a1a:	60 e0       	ldi	r22, 0x00	; 0
    1a1c:	66 23       	and	r22, r22
    1a1e:	51 f1       	breq	.+84     	; 0x1a74 <__vector_13+0x11e>
    1a20:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <_ZL18directionOutputPin>
    1a24:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <_ZL18directionOutputPin+0x1>
    1a28:	84 58       	subi	r24, 0x84	; 132
    1a2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a2c:	9a 83       	std	Y+2, r25	; 0x02
    1a2e:	89 83       	std	Y+1, r24	; 0x01
    1a30:	89 81       	ldd	r24, Y+1	; 0x01
    1a32:	9a 81       	ldd	r25, Y+2	; 0x02
    1a34:	fc 01       	movw	r30, r24
    1a36:	84 91       	lpm	r24, Z
    1a38:	8b 83       	std	Y+3, r24	; 0x03
    1a3a:	4b 81       	ldd	r20, Y+3	; 0x03
    1a3c:	8b e2       	ldi	r24, 0x2B	; 43
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	2b e2       	ldi	r18, 0x2B	; 43
    1a42:	30 e0       	ldi	r19, 0x00	; 0
    1a44:	f9 01       	movw	r30, r18
    1a46:	20 81       	ld	r18, Z
    1a48:	24 2b       	or	r18, r20
    1a4a:	fc 01       	movw	r30, r24
    1a4c:	20 83       	st	Z, r18
    1a4e:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <STEPS>
    1a52:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <STEPS+0x1>
    1a56:	a0 91 d0 03 	lds	r26, 0x03D0	; 0x8003d0 <STEPS+0x2>
    1a5a:	b0 91 d1 03 	lds	r27, 0x03D1	; 0x8003d1 <STEPS+0x3>
    1a5e:	01 96       	adiw	r24, 0x01	; 1
    1a60:	a1 1d       	adc	r26, r1
    1a62:	b1 1d       	adc	r27, r1
    1a64:	80 93 ce 03 	sts	0x03CE, r24	; 0x8003ce <STEPS>
    1a68:	90 93 cf 03 	sts	0x03CF, r25	; 0x8003cf <STEPS+0x1>
    1a6c:	a0 93 d0 03 	sts	0x03D0, r26	; 0x8003d0 <STEPS+0x2>
    1a70:	b0 93 d1 03 	sts	0x03D1, r27	; 0x8003d1 <STEPS+0x3>
    1a74:	20 91 d2 03 	lds	r18, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    1a78:	30 91 d3 03 	lds	r19, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    1a7c:	40 91 d4 03 	lds	r20, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    1a80:	50 91 d5 03 	lds	r21, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    1a84:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <STEPS>
    1a88:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <STEPS+0x1>
    1a8c:	a0 91 d0 03 	lds	r26, 0x03D0	; 0x8003d0 <STEPS+0x2>
    1a90:	b0 91 d1 03 	lds	r27, 0x03D1	; 0x8003d1 <STEPS+0x3>
    1a94:	61 e0       	ldi	r22, 0x01	; 1
    1a96:	28 17       	cp	r18, r24
    1a98:	39 07       	cpc	r19, r25
    1a9a:	4a 07       	cpc	r20, r26
    1a9c:	5b 07       	cpc	r21, r27
    1a9e:	0c f0       	brlt	.+2      	; 0x1aa2 <__vector_13+0x14c>
    1aa0:	60 e0       	ldi	r22, 0x00	; 0
    1aa2:	66 23       	and	r22, r22
    1aa4:	89 f1       	breq	.+98     	; 0x1b08 <__vector_13+0x1b2>
    1aa6:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <_ZL18directionOutputPin>
    1aaa:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <_ZL18directionOutputPin+0x1>
    1aae:	84 58       	subi	r24, 0x84	; 132
    1ab0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ab2:	9d 83       	std	Y+5, r25	; 0x05
    1ab4:	8c 83       	std	Y+4, r24	; 0x04
    1ab6:	8c 81       	ldd	r24, Y+4	; 0x04
    1ab8:	9d 81       	ldd	r25, Y+5	; 0x05
    1aba:	fc 01       	movw	r30, r24
    1abc:	84 91       	lpm	r24, Z
    1abe:	8e 83       	std	Y+6, r24	; 0x06
    1ac0:	8e 81       	ldd	r24, Y+6	; 0x06
    1ac2:	88 2f       	mov	r24, r24
    1ac4:	90 e0       	ldi	r25, 0x00	; 0
    1ac6:	ac 01       	movw	r20, r24
    1ac8:	40 95       	com	r20
    1aca:	50 95       	com	r21
    1acc:	8b e2       	ldi	r24, 0x2B	; 43
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	2b e2       	ldi	r18, 0x2B	; 43
    1ad2:	30 e0       	ldi	r19, 0x00	; 0
    1ad4:	f9 01       	movw	r30, r18
    1ad6:	20 81       	ld	r18, Z
    1ad8:	32 2f       	mov	r19, r18
    1ada:	24 2f       	mov	r18, r20
    1adc:	23 23       	and	r18, r19
    1ade:	fc 01       	movw	r30, r24
    1ae0:	20 83       	st	Z, r18
    1ae2:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <STEPS>
    1ae6:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <STEPS+0x1>
    1aea:	a0 91 d0 03 	lds	r26, 0x03D0	; 0x8003d0 <STEPS+0x2>
    1aee:	b0 91 d1 03 	lds	r27, 0x03D1	; 0x8003d1 <STEPS+0x3>
    1af2:	01 97       	sbiw	r24, 0x01	; 1
    1af4:	a1 09       	sbc	r26, r1
    1af6:	b1 09       	sbc	r27, r1
    1af8:	80 93 ce 03 	sts	0x03CE, r24	; 0x8003ce <STEPS>
    1afc:	90 93 cf 03 	sts	0x03CF, r25	; 0x8003cf <STEPS+0x1>
    1b00:	a0 93 d0 03 	sts	0x03D0, r26	; 0x8003d0 <STEPS+0x2>
    1b04:	b0 93 d1 03 	sts	0x03D1, r27	; 0x8003d1 <STEPS+0x3>
    1b08:	00 00       	nop
    1b0a:	26 96       	adiw	r28, 0x06	; 6
    1b0c:	0f b6       	in	r0, 0x3f	; 63
    1b0e:	f8 94       	cli
    1b10:	de bf       	out	0x3e, r29	; 62
    1b12:	0f be       	out	0x3f, r0	; 63
    1b14:	cd bf       	out	0x3d, r28	; 61
    1b16:	df 91       	pop	r29
    1b18:	cf 91       	pop	r28
    1b1a:	ff 91       	pop	r31
    1b1c:	ef 91       	pop	r30
    1b1e:	bf 91       	pop	r27
    1b20:	af 91       	pop	r26
    1b22:	9f 91       	pop	r25
    1b24:	8f 91       	pop	r24
    1b26:	7f 91       	pop	r23
    1b28:	6f 91       	pop	r22
    1b2a:	5f 91       	pop	r21
    1b2c:	4f 91       	pop	r20
    1b2e:	3f 91       	pop	r19
    1b30:	2f 91       	pop	r18
    1b32:	0f 90       	pop	r0
    1b34:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1b38:	0f 90       	pop	r0
    1b3a:	1f 90       	pop	r1
    1b3c:	18 95       	reti

00001b3e <__vector_11>:
    1b3e:	1f 92       	push	r1
    1b40:	0f 92       	push	r0
    1b42:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1b46:	0f 92       	push	r0
    1b48:	11 24       	eor	r1, r1
    1b4a:	2f 93       	push	r18
    1b4c:	3f 93       	push	r19
    1b4e:	4f 93       	push	r20
    1b50:	5f 93       	push	r21
    1b52:	6f 93       	push	r22
    1b54:	7f 93       	push	r23
    1b56:	8f 93       	push	r24
    1b58:	9f 93       	push	r25
    1b5a:	af 93       	push	r26
    1b5c:	bf 93       	push	r27
    1b5e:	ef 93       	push	r30
    1b60:	ff 93       	push	r31
    1b62:	cf 93       	push	r28
    1b64:	df 93       	push	r29
    1b66:	cd b7       	in	r28, 0x3d	; 61
    1b68:	de b7       	in	r29, 0x3e	; 62
    1b6a:	26 97       	sbiw	r28, 0x06	; 6
    1b6c:	de bf       	out	0x3e, r29	; 62
    1b6e:	cd bf       	out	0x3d, r28	; 61
    1b70:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <RUN_MODE>
    1b74:	81 e0       	ldi	r24, 0x01	; 1
    1b76:	91 30       	cpi	r25, 0x01	; 1
    1b78:	09 f4       	brne	.+2      	; 0x1b7c <__vector_11+0x3e>
    1b7a:	80 e0       	ldi	r24, 0x00	; 0
    1b7c:	88 23       	and	r24, r24
    1b7e:	09 f4       	brne	.+2      	; 0x1b82 <__vector_11+0x44>
    1b80:	a8 c0       	rjmp	.+336    	; 0x1cd2 <__vector_11+0x194>
    1b82:	20 91 d2 03 	lds	r18, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    1b86:	30 91 d3 03 	lds	r19, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    1b8a:	40 91 d4 03 	lds	r20, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    1b8e:	50 91 d5 03 	lds	r21, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    1b92:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <STEPS>
    1b96:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <STEPS+0x1>
    1b9a:	a0 91 d0 03 	lds	r26, 0x03D0	; 0x8003d0 <STEPS+0x2>
    1b9e:	b0 91 d1 03 	lds	r27, 0x03D1	; 0x8003d1 <STEPS+0x3>
    1ba2:	61 e0       	ldi	r22, 0x01	; 1
    1ba4:	28 17       	cp	r18, r24
    1ba6:	39 07       	cpc	r19, r25
    1ba8:	4a 07       	cpc	r20, r26
    1baa:	5b 07       	cpc	r21, r27
    1bac:	09 f4       	brne	.+2      	; 0x1bb0 <__vector_11+0x72>
    1bae:	60 e0       	ldi	r22, 0x00	; 0
    1bb0:	66 23       	and	r22, r22
    1bb2:	11 f0       	breq	.+4      	; 0x1bb8 <__vector_11+0x7a>
    1bb4:	0e 94 20 12 	call	0x2440	; 0x2440 <_Z16ToggleStepOutputv>
    1bb8:	20 91 d2 03 	lds	r18, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    1bbc:	30 91 d3 03 	lds	r19, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    1bc0:	40 91 d4 03 	lds	r20, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    1bc4:	50 91 d5 03 	lds	r21, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    1bc8:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <STEPS>
    1bcc:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <STEPS+0x1>
    1bd0:	a0 91 d0 03 	lds	r26, 0x03D0	; 0x8003d0 <STEPS+0x2>
    1bd4:	b0 91 d1 03 	lds	r27, 0x03D1	; 0x8003d1 <STEPS+0x3>
    1bd8:	61 e0       	ldi	r22, 0x01	; 1
    1bda:	82 17       	cp	r24, r18
    1bdc:	93 07       	cpc	r25, r19
    1bde:	a4 07       	cpc	r26, r20
    1be0:	b5 07       	cpc	r27, r21
    1be2:	0c f0       	brlt	.+2      	; 0x1be6 <__vector_11+0xa8>
    1be4:	60 e0       	ldi	r22, 0x00	; 0
    1be6:	66 23       	and	r22, r22
    1be8:	51 f1       	breq	.+84     	; 0x1c3e <__vector_11+0x100>
    1bea:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <_ZL18directionOutputPin>
    1bee:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <_ZL18directionOutputPin+0x1>
    1bf2:	84 58       	subi	r24, 0x84	; 132
    1bf4:	9f 4f       	sbci	r25, 0xFF	; 255
    1bf6:	9a 83       	std	Y+2, r25	; 0x02
    1bf8:	89 83       	std	Y+1, r24	; 0x01
    1bfa:	89 81       	ldd	r24, Y+1	; 0x01
    1bfc:	9a 81       	ldd	r25, Y+2	; 0x02
    1bfe:	fc 01       	movw	r30, r24
    1c00:	84 91       	lpm	r24, Z
    1c02:	8b 83       	std	Y+3, r24	; 0x03
    1c04:	4b 81       	ldd	r20, Y+3	; 0x03
    1c06:	8b e2       	ldi	r24, 0x2B	; 43
    1c08:	90 e0       	ldi	r25, 0x00	; 0
    1c0a:	2b e2       	ldi	r18, 0x2B	; 43
    1c0c:	30 e0       	ldi	r19, 0x00	; 0
    1c0e:	f9 01       	movw	r30, r18
    1c10:	20 81       	ld	r18, Z
    1c12:	24 2b       	or	r18, r20
    1c14:	fc 01       	movw	r30, r24
    1c16:	20 83       	st	Z, r18
    1c18:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <STEPS>
    1c1c:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <STEPS+0x1>
    1c20:	a0 91 d0 03 	lds	r26, 0x03D0	; 0x8003d0 <STEPS+0x2>
    1c24:	b0 91 d1 03 	lds	r27, 0x03D1	; 0x8003d1 <STEPS+0x3>
    1c28:	01 96       	adiw	r24, 0x01	; 1
    1c2a:	a1 1d       	adc	r26, r1
    1c2c:	b1 1d       	adc	r27, r1
    1c2e:	80 93 ce 03 	sts	0x03CE, r24	; 0x8003ce <STEPS>
    1c32:	90 93 cf 03 	sts	0x03CF, r25	; 0x8003cf <STEPS+0x1>
    1c36:	a0 93 d0 03 	sts	0x03D0, r26	; 0x8003d0 <STEPS+0x2>
    1c3a:	b0 93 d1 03 	sts	0x03D1, r27	; 0x8003d1 <STEPS+0x3>
    1c3e:	20 91 d2 03 	lds	r18, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    1c42:	30 91 d3 03 	lds	r19, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    1c46:	40 91 d4 03 	lds	r20, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    1c4a:	50 91 d5 03 	lds	r21, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    1c4e:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <STEPS>
    1c52:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <STEPS+0x1>
    1c56:	a0 91 d0 03 	lds	r26, 0x03D0	; 0x8003d0 <STEPS+0x2>
    1c5a:	b0 91 d1 03 	lds	r27, 0x03D1	; 0x8003d1 <STEPS+0x3>
    1c5e:	61 e0       	ldi	r22, 0x01	; 1
    1c60:	28 17       	cp	r18, r24
    1c62:	39 07       	cpc	r19, r25
    1c64:	4a 07       	cpc	r20, r26
    1c66:	5b 07       	cpc	r21, r27
    1c68:	0c f0       	brlt	.+2      	; 0x1c6c <__vector_11+0x12e>
    1c6a:	60 e0       	ldi	r22, 0x00	; 0
    1c6c:	66 23       	and	r22, r22
    1c6e:	89 f1       	breq	.+98     	; 0x1cd2 <__vector_11+0x194>
    1c70:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <_ZL18directionOutputPin>
    1c74:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <_ZL18directionOutputPin+0x1>
    1c78:	84 58       	subi	r24, 0x84	; 132
    1c7a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c7c:	9d 83       	std	Y+5, r25	; 0x05
    1c7e:	8c 83       	std	Y+4, r24	; 0x04
    1c80:	8c 81       	ldd	r24, Y+4	; 0x04
    1c82:	9d 81       	ldd	r25, Y+5	; 0x05
    1c84:	fc 01       	movw	r30, r24
    1c86:	84 91       	lpm	r24, Z
    1c88:	8e 83       	std	Y+6, r24	; 0x06
    1c8a:	8e 81       	ldd	r24, Y+6	; 0x06
    1c8c:	88 2f       	mov	r24, r24
    1c8e:	90 e0       	ldi	r25, 0x00	; 0
    1c90:	ac 01       	movw	r20, r24
    1c92:	40 95       	com	r20
    1c94:	50 95       	com	r21
    1c96:	8b e2       	ldi	r24, 0x2B	; 43
    1c98:	90 e0       	ldi	r25, 0x00	; 0
    1c9a:	2b e2       	ldi	r18, 0x2B	; 43
    1c9c:	30 e0       	ldi	r19, 0x00	; 0
    1c9e:	f9 01       	movw	r30, r18
    1ca0:	20 81       	ld	r18, Z
    1ca2:	32 2f       	mov	r19, r18
    1ca4:	24 2f       	mov	r18, r20
    1ca6:	23 23       	and	r18, r19
    1ca8:	fc 01       	movw	r30, r24
    1caa:	20 83       	st	Z, r18
    1cac:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <STEPS>
    1cb0:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <STEPS+0x1>
    1cb4:	a0 91 d0 03 	lds	r26, 0x03D0	; 0x8003d0 <STEPS+0x2>
    1cb8:	b0 91 d1 03 	lds	r27, 0x03D1	; 0x8003d1 <STEPS+0x3>
    1cbc:	01 97       	sbiw	r24, 0x01	; 1
    1cbe:	a1 09       	sbc	r26, r1
    1cc0:	b1 09       	sbc	r27, r1
    1cc2:	80 93 ce 03 	sts	0x03CE, r24	; 0x8003ce <STEPS>
    1cc6:	90 93 cf 03 	sts	0x03CF, r25	; 0x8003cf <STEPS+0x1>
    1cca:	a0 93 d0 03 	sts	0x03D0, r26	; 0x8003d0 <STEPS+0x2>
    1cce:	b0 93 d1 03 	sts	0x03D1, r27	; 0x8003d1 <STEPS+0x3>
    1cd2:	00 00       	nop
    1cd4:	26 96       	adiw	r28, 0x06	; 6
    1cd6:	0f b6       	in	r0, 0x3f	; 63
    1cd8:	f8 94       	cli
    1cda:	de bf       	out	0x3e, r29	; 62
    1cdc:	0f be       	out	0x3f, r0	; 63
    1cde:	cd bf       	out	0x3d, r28	; 61
    1ce0:	df 91       	pop	r29
    1ce2:	cf 91       	pop	r28
    1ce4:	ff 91       	pop	r31
    1ce6:	ef 91       	pop	r30
    1ce8:	bf 91       	pop	r27
    1cea:	af 91       	pop	r26
    1cec:	9f 91       	pop	r25
    1cee:	8f 91       	pop	r24
    1cf0:	7f 91       	pop	r23
    1cf2:	6f 91       	pop	r22
    1cf4:	5f 91       	pop	r21
    1cf6:	4f 91       	pop	r20
    1cf8:	3f 91       	pop	r19
    1cfa:	2f 91       	pop	r18
    1cfc:	0f 90       	pop	r0
    1cfe:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1d02:	0f 90       	pop	r0
    1d04:	1f 90       	pop	r1
    1d06:	18 95       	reti

00001d08 <_Z17spoolPulse_Vectorv>:
    1d08:	cf 93       	push	r28
    1d0a:	df 93       	push	r29
    1d0c:	cd b7       	in	r28, 0x3d	; 61
    1d0e:	de b7       	in	r29, 0x3e	; 62
    1d10:	0e 94 32 19 	call	0x3264	; 0x3264 <millis>
    1d14:	dc 01       	movw	r26, r24
    1d16:	cb 01       	movw	r24, r22
    1d18:	80 93 ca 03 	sts	0x03CA, r24	; 0x8003ca <m>
    1d1c:	90 93 cb 03 	sts	0x03CB, r25	; 0x8003cb <m+0x1>
    1d20:	a0 93 cc 03 	sts	0x03CC, r26	; 0x8003cc <m+0x2>
    1d24:	b0 93 cd 03 	sts	0x03CD, r27	; 0x8003cd <m+0x3>
    1d28:	20 91 ca 03 	lds	r18, 0x03CA	; 0x8003ca <m>
    1d2c:	30 91 cb 03 	lds	r19, 0x03CB	; 0x8003cb <m+0x1>
    1d30:	40 91 cc 03 	lds	r20, 0x03CC	; 0x8003cc <m+0x2>
    1d34:	50 91 cd 03 	lds	r21, 0x03CD	; 0x8003cd <m+0x3>
    1d38:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <_ZL11last_millis>
    1d3c:	90 91 c7 03 	lds	r25, 0x03C7	; 0x8003c7 <_ZL11last_millis+0x1>
    1d40:	a0 91 c8 03 	lds	r26, 0x03C8	; 0x8003c8 <_ZL11last_millis+0x2>
    1d44:	b0 91 c9 03 	lds	r27, 0x03C9	; 0x8003c9 <_ZL11last_millis+0x3>
    1d48:	28 17       	cp	r18, r24
    1d4a:	39 07       	cpc	r19, r25
    1d4c:	4a 07       	cpc	r20, r26
    1d4e:	5b 07       	cpc	r21, r27
    1d50:	09 f4       	brne	.+2      	; 0x1d54 <_Z17spoolPulse_Vectorv+0x4c>
    1d52:	6c c0       	rjmp	.+216    	; 0x1e2c <_Z17spoolPulse_Vectorv+0x124>
    1d54:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <m>
    1d58:	90 91 cb 03 	lds	r25, 0x03CB	; 0x8003cb <m+0x1>
    1d5c:	a0 91 cc 03 	lds	r26, 0x03CC	; 0x8003cc <m+0x2>
    1d60:	b0 91 cd 03 	lds	r27, 0x03CD	; 0x8003cd <m+0x3>
    1d64:	80 93 c6 03 	sts	0x03C6, r24	; 0x8003c6 <_ZL11last_millis>
    1d68:	90 93 c7 03 	sts	0x03C7, r25	; 0x8003c7 <_ZL11last_millis+0x1>
    1d6c:	a0 93 c8 03 	sts	0x03C8, r26	; 0x8003c8 <_ZL11last_millis+0x2>
    1d70:	b0 93 c9 03 	sts	0x03C9, r27	; 0x8003c9 <_ZL11last_millis+0x3>
    1d74:	80 91 ae 03 	lds	r24, 0x03AE	; 0x8003ae <spoolPulses>
    1d78:	90 91 af 03 	lds	r25, 0x03AF	; 0x8003af <spoolPulses+0x1>
    1d7c:	a0 91 b0 03 	lds	r26, 0x03B0	; 0x8003b0 <spoolPulses+0x2>
    1d80:	b0 91 b1 03 	lds	r27, 0x03B1	; 0x8003b1 <spoolPulses+0x3>
    1d84:	21 e0       	ldi	r18, 0x01	; 1
    1d86:	89 2b       	or	r24, r25
    1d88:	8a 2b       	or	r24, r26
    1d8a:	8b 2b       	or	r24, r27
    1d8c:	09 f0       	breq	.+2      	; 0x1d90 <_Z17spoolPulse_Vectorv+0x88>
    1d8e:	20 e0       	ldi	r18, 0x00	; 0
    1d90:	22 23       	and	r18, r18
    1d92:	61 f0       	breq	.+24     	; 0x1dac <_Z17spoolPulse_Vectorv+0xa4>
    1d94:	0e 94 32 19 	call	0x3264	; 0x3264 <millis>
    1d98:	dc 01       	movw	r26, r24
    1d9a:	cb 01       	movw	r24, r22
    1d9c:	80 93 b2 03 	sts	0x03B2, r24	; 0x8003b2 <spoolTime>
    1da0:	90 93 b3 03 	sts	0x03B3, r25	; 0x8003b3 <spoolTime+0x1>
    1da4:	a0 93 b4 03 	sts	0x03B4, r26	; 0x8003b4 <spoolTime+0x2>
    1da8:	b0 93 b5 03 	sts	0x03B5, r27	; 0x8003b5 <spoolTime+0x3>
    1dac:	80 91 ae 03 	lds	r24, 0x03AE	; 0x8003ae <spoolPulses>
    1db0:	90 91 af 03 	lds	r25, 0x03AF	; 0x8003af <spoolPulses+0x1>
    1db4:	a0 91 b0 03 	lds	r26, 0x03B0	; 0x8003b0 <spoolPulses+0x2>
    1db8:	b0 91 b1 03 	lds	r27, 0x03B1	; 0x8003b1 <spoolPulses+0x3>
    1dbc:	01 96       	adiw	r24, 0x01	; 1
    1dbe:	a1 1d       	adc	r26, r1
    1dc0:	b1 1d       	adc	r27, r1
    1dc2:	80 93 ae 03 	sts	0x03AE, r24	; 0x8003ae <spoolPulses>
    1dc6:	90 93 af 03 	sts	0x03AF, r25	; 0x8003af <spoolPulses+0x1>
    1dca:	a0 93 b0 03 	sts	0x03B0, r26	; 0x8003b0 <spoolPulses+0x2>
    1dce:	b0 93 b1 03 	sts	0x03B1, r27	; 0x8003b1 <spoolPulses+0x3>
    1dd2:	90 91 dc 03 	lds	r25, 0x03DC	; 0x8003dc <tickFlag>
    1dd6:	81 e0       	ldi	r24, 0x01	; 1
    1dd8:	89 27       	eor	r24, r25
    1dda:	88 23       	and	r24, r24
    1ddc:	71 f0       	breq	.+28     	; 0x1dfa <_Z17spoolPulse_Vectorv+0xf2>
    1dde:	80 91 ae 03 	lds	r24, 0x03AE	; 0x8003ae <spoolPulses>
    1de2:	90 91 af 03 	lds	r25, 0x03AF	; 0x8003af <spoolPulses+0x1>
    1de6:	a0 91 b0 03 	lds	r26, 0x03B0	; 0x8003b0 <spoolPulses+0x2>
    1dea:	b0 91 b1 03 	lds	r27, 0x03B1	; 0x8003b1 <spoolPulses+0x3>
    1dee:	0a 97       	sbiw	r24, 0x0a	; 10
    1df0:	a1 05       	cpc	r26, r1
    1df2:	b1 05       	cpc	r27, r1
    1df4:	14 f0       	brlt	.+4      	; 0x1dfa <_Z17spoolPulse_Vectorv+0xf2>
    1df6:	81 e0       	ldi	r24, 0x01	; 1
    1df8:	01 c0       	rjmp	.+2      	; 0x1dfc <_Z17spoolPulse_Vectorv+0xf4>
    1dfa:	80 e0       	ldi	r24, 0x00	; 0
    1dfc:	88 23       	and	r24, r24
    1dfe:	19 f0       	breq	.+6      	; 0x1e06 <_Z17spoolPulse_Vectorv+0xfe>
    1e00:	81 e0       	ldi	r24, 0x01	; 1
    1e02:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <tickFlag>
    1e06:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <totalspoolTicks>
    1e0a:	90 91 bf 03 	lds	r25, 0x03BF	; 0x8003bf <totalspoolTicks+0x1>
    1e0e:	a0 91 c0 03 	lds	r26, 0x03C0	; 0x8003c0 <totalspoolTicks+0x2>
    1e12:	b0 91 c1 03 	lds	r27, 0x03C1	; 0x8003c1 <totalspoolTicks+0x3>
    1e16:	01 96       	adiw	r24, 0x01	; 1
    1e18:	a1 1d       	adc	r26, r1
    1e1a:	b1 1d       	adc	r27, r1
    1e1c:	80 93 be 03 	sts	0x03BE, r24	; 0x8003be <totalspoolTicks>
    1e20:	90 93 bf 03 	sts	0x03BF, r25	; 0x8003bf <totalspoolTicks+0x1>
    1e24:	a0 93 c0 03 	sts	0x03C0, r26	; 0x8003c0 <totalspoolTicks+0x2>
    1e28:	b0 93 c1 03 	sts	0x03C1, r27	; 0x8003c1 <totalspoolTicks+0x3>
    1e2c:	00 00       	nop
    1e2e:	df 91       	pop	r29
    1e30:	cf 91       	pop	r28
    1e32:	08 95       	ret

00001e34 <setup>:
    1e34:	cf 93       	push	r28
    1e36:	df 93       	push	r29
    1e38:	00 d0       	rcall	.+0      	; 0x1e3a <setup+0x6>
    1e3a:	cd b7       	in	r28, 0x3d	; 61
    1e3c:	de b7       	in	r29, 0x3e	; 62
    1e3e:	61 e0       	ldi	r22, 0x01	; 1
    1e40:	83 e0       	ldi	r24, 0x03	; 3
    1e42:	0e 94 79 19 	call	0x32f2	; 0x32f2 <pinMode>
    1e46:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <_ZL18directionOutputPin>
    1e4a:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <_ZL18directionOutputPin+0x1>
    1e4e:	61 e0       	ldi	r22, 0x01	; 1
    1e50:	0e 94 79 19 	call	0x32f2	; 0x32f2 <pinMode>
    1e54:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <_ZL14directionInput>
    1e58:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <_ZL14directionInput+0x1>
    1e5c:	60 e0       	ldi	r22, 0x00	; 0
    1e5e:	0e 94 79 19 	call	0x32f2	; 0x32f2 <pinMode>
    1e62:	60 e0       	ldi	r22, 0x00	; 0
    1e64:	86 e0       	ldi	r24, 0x06	; 6
    1e66:	0e 94 79 19 	call	0x32f2	; 0x32f2 <pinMode>
    1e6a:	41 e0       	ldi	r20, 0x01	; 1
    1e6c:	64 e8       	ldi	r22, 0x84	; 132
    1e6e:	7e e0       	ldi	r23, 0x0E	; 14
    1e70:	86 e0       	ldi	r24, 0x06	; 6
    1e72:	0e 94 58 08 	call	0x10b0	; 0x10b0 <_Z15enableInterrupthPFvvEh>
    1e76:	ce 01       	movw	r24, r28
    1e78:	01 96       	adiw	r24, 0x01	; 1
    1e7a:	0e 94 8e 00 	call	0x11c	; 0x11c <_ZN17ADC_ConfigurationC1Ev>
    1e7e:	ce 01       	movw	r24, r28
    1e80:	02 96       	adiw	r24, 0x02	; 2
    1e82:	0e 94 64 15 	call	0x2ac8	; 0x2ac8 <_ZN25Step_Output_ConfigurationC1Ev>
    1e86:	0e 94 9b 00 	call	0x136	; 0x136 <_ZN17ADC_Configuration8SetupADCEv>
    1e8a:	0e 94 71 15 	call	0x2ae2	; 0x2ae2 <_ZN25Step_Output_Configuration15SetupStepOutputEv>
    1e8e:	40 e0       	ldi	r20, 0x00	; 0
    1e90:	52 ec       	ldi	r21, 0xC2	; 194
    1e92:	61 e0       	ldi	r22, 0x01	; 1
    1e94:	70 e0       	ldi	r23, 0x00	; 0
    1e96:	8f ed       	ldi	r24, 0xDF	; 223
    1e98:	93 e0       	ldi	r25, 0x03	; 3
    1e9a:	0e 94 35 08 	call	0x106a	; 0x106a <_ZN14HardwareSerial5beginEm>
    1e9e:	42 e3       	ldi	r20, 0x32	; 50
    1ea0:	50 e0       	ldi	r21, 0x00	; 0
    1ea2:	60 e0       	ldi	r22, 0x00	; 0
    1ea4:	70 e0       	ldi	r23, 0x00	; 0
    1ea6:	8f ed       	ldi	r24, 0xDF	; 223
    1ea8:	93 e0       	ldi	r25, 0x03	; 3
    1eaa:	0e 94 ae 18 	call	0x315c	; 0x315c <_ZN6Stream10setTimeoutEm>
    1eae:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <RUN_MODE>
    1eb2:	ce 01       	movw	r24, r28
    1eb4:	02 96       	adiw	r24, 0x02	; 2
    1eb6:	0e 94 90 15 	call	0x2b20	; 0x2b20 <_ZN25Step_Output_ConfigurationD1Ev>
    1eba:	ce 01       	movw	r24, r28
    1ebc:	01 96       	adiw	r24, 0x01	; 1
    1ebe:	0e 94 be 00 	call	0x17c	; 0x17c <_ZN17ADC_ConfigurationD1Ev>
    1ec2:	00 00       	nop
    1ec4:	0f 90       	pop	r0
    1ec6:	0f 90       	pop	r0
    1ec8:	df 91       	pop	r29
    1eca:	cf 91       	pop	r28
    1ecc:	08 95       	ret

00001ece <loop>:
    1ece:	cf 92       	push	r12
    1ed0:	df 92       	push	r13
    1ed2:	ef 92       	push	r14
    1ed4:	ff 92       	push	r15
    1ed6:	0f 93       	push	r16
    1ed8:	1f 93       	push	r17
    1eda:	cf 93       	push	r28
    1edc:	df 93       	push	r29
    1ede:	cd b7       	in	r28, 0x3d	; 61
    1ee0:	de b7       	in	r29, 0x3e	; 62
    1ee2:	2c 97       	sbiw	r28, 0x0c	; 12
    1ee4:	0f b6       	in	r0, 0x3f	; 63
    1ee6:	f8 94       	cli
    1ee8:	de bf       	out	0x3e, r29	; 62
    1eea:	0f be       	out	0x3f, r0	; 63
    1eec:	cd bf       	out	0x3d, r28	; 61
    1eee:	8d ed       	ldi	r24, 0xDD	; 221
    1ef0:	93 e0       	ldi	r25, 0x03	; 3
    1ef2:	0e 94 e6 05 	call	0xbcc	; 0xbcc <_ZN15Serial_Commands15commandsProcessEv>
    1ef6:	89 e2       	ldi	r24, 0x29	; 41
    1ef8:	90 e0       	ldi	r25, 0x00	; 0
    1efa:	fc 01       	movw	r30, r24
    1efc:	80 81       	ld	r24, Z
    1efe:	88 2f       	mov	r24, r24
    1f00:	90 e0       	ldi	r25, 0x00	; 0
    1f02:	80 72       	andi	r24, 0x20	; 32
    1f04:	99 27       	eor	r25, r25
    1f06:	21 e0       	ldi	r18, 0x01	; 1
    1f08:	89 2b       	or	r24, r25
    1f0a:	09 f4       	brne	.+2      	; 0x1f0e <loop+0x40>
    1f0c:	20 e0       	ldi	r18, 0x00	; 0
    1f0e:	20 93 ad 03 	sts	0x03AD, r18	; 0x8003ad <directionInputState>
    1f12:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <RUN_MODE>
    1f16:	81 e0       	ldi	r24, 0x01	; 1
    1f18:	92 30       	cpi	r25, 0x02	; 2
    1f1a:	09 f0       	breq	.+2      	; 0x1f1e <loop+0x50>
    1f1c:	80 e0       	ldi	r24, 0x00	; 0
    1f1e:	88 23       	and	r24, r24
    1f20:	29 f1       	breq	.+74     	; 0x1f6c <loop+0x9e>
    1f22:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <TRAVERSE_RPM>
    1f26:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <TRAVERSE_RPM+0x1>
    1f2a:	a0 91 d8 03 	lds	r26, 0x03D8	; 0x8003d8 <TRAVERSE_RPM+0x2>
    1f2e:	b0 91 d9 03 	lds	r27, 0x03D9	; 0x8003d9 <TRAVERSE_RPM+0x3>
    1f32:	20 91 a9 03 	lds	r18, 0x03A9	; 0x8003a9 <traverse_rpm>
    1f36:	30 91 aa 03 	lds	r19, 0x03AA	; 0x8003aa <traverse_rpm+0x1>
    1f3a:	40 91 ab 03 	lds	r20, 0x03AB	; 0x8003ab <traverse_rpm+0x2>
    1f3e:	50 91 ac 03 	lds	r21, 0x03AC	; 0x8003ac <traverse_rpm+0x3>
    1f42:	61 e0       	ldi	r22, 0x01	; 1
    1f44:	82 17       	cp	r24, r18
    1f46:	93 07       	cpc	r25, r19
    1f48:	a4 07       	cpc	r26, r20
    1f4a:	b5 07       	cpc	r27, r21
    1f4c:	09 f4       	brne	.+2      	; 0x1f50 <loop+0x82>
    1f4e:	60 e0       	ldi	r22, 0x00	; 0
    1f50:	66 23       	and	r22, r22
    1f52:	61 f0       	breq	.+24     	; 0x1f6c <loop+0x9e>
    1f54:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <TRAVERSE_RPM>
    1f58:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <TRAVERSE_RPM+0x1>
    1f5c:	a0 91 d8 03 	lds	r26, 0x03D8	; 0x8003d8 <TRAVERSE_RPM+0x2>
    1f60:	b0 91 d9 03 	lds	r27, 0x03D9	; 0x8003d9 <TRAVERSE_RPM+0x3>
    1f64:	bc 01       	movw	r22, r24
    1f66:	cd 01       	movw	r24, r26
    1f68:	0e 94 96 14 	call	0x292c	; 0x292c <_Z16Set_Traverse_RPMl>
    1f6c:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <RUN_MODE>
    1f70:	81 e0       	ldi	r24, 0x01	; 1
    1f72:	93 30       	cpi	r25, 0x03	; 3
    1f74:	09 f0       	breq	.+2      	; 0x1f78 <loop+0xaa>
    1f76:	80 e0       	ldi	r24, 0x00	; 0
    1f78:	88 23       	and	r24, r24
    1f7a:	09 f4       	brne	.+2      	; 0x1f7e <loop+0xb0>
    1f7c:	75 c0       	rjmp	.+234    	; 0x2068 <loop+0x19a>
    1f7e:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <TRAVERSE_DIRECTION>
    1f82:	81 e0       	ldi	r24, 0x01	; 1
    1f84:	91 30       	cpi	r25, 0x01	; 1
    1f86:	09 f0       	breq	.+2      	; 0x1f8a <loop+0xbc>
    1f88:	80 e0       	ldi	r24, 0x00	; 0
    1f8a:	88 23       	and	r24, r24
    1f8c:	41 f1       	breq	.+80     	; 0x1fde <loop+0x110>
    1f8e:	c0 90 d6 03 	lds	r12, 0x03D6	; 0x8003d6 <TRAVERSE_RPM>
    1f92:	d0 90 d7 03 	lds	r13, 0x03D7	; 0x8003d7 <TRAVERSE_RPM+0x1>
    1f96:	e0 90 d8 03 	lds	r14, 0x03D8	; 0x8003d8 <TRAVERSE_RPM+0x2>
    1f9a:	f0 90 d9 03 	lds	r15, 0x03D9	; 0x8003d9 <TRAVERSE_RPM+0x3>
    1f9e:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <SPOOL_WIDTH>
    1fa2:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <SPOOL_WIDTH+0x1>
    1fa6:	40 91 ae 01 	lds	r20, 0x01AE	; 0x8001ae <SPOOL_WIDTH+0x2>
    1faa:	50 91 af 01 	lds	r21, 0x01AF	; 0x8001af <SPOOL_WIDTH+0x3>
    1fae:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <INNER_TRAVERSE_OFFSET>
    1fb2:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <INNER_TRAVERSE_OFFSET+0x1>
    1fb6:	a0 91 aa 01 	lds	r26, 0x01AA	; 0x8001aa <INNER_TRAVERSE_OFFSET+0x2>
    1fba:	b0 91 ab 01 	lds	r27, 0x01AB	; 0x8001ab <INNER_TRAVERSE_OFFSET+0x3>
    1fbe:	82 0f       	add	r24, r18
    1fc0:	93 1f       	adc	r25, r19
    1fc2:	a4 1f       	adc	r26, r20
    1fc4:	b5 1f       	adc	r27, r21
    1fc6:	bc 01       	movw	r22, r24
    1fc8:	cd 01       	movw	r24, r26
    1fca:	0e 94 3b 14 	call	0x2876	; 0x2876 <_Z9MMToStepsm>
    1fce:	dc 01       	movw	r26, r24
    1fd0:	cb 01       	movw	r24, r22
    1fd2:	a7 01       	movw	r20, r14
    1fd4:	96 01       	movw	r18, r12
    1fd6:	bc 01       	movw	r22, r24
    1fd8:	cd 01       	movw	r24, r26
    1fda:	0e 94 40 12 	call	0x2480	; 0x2480 <_Z20MoveAbsolutePositionmm>
    1fde:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <TRAVERSE_DIRECTION>
    1fe2:	81 e0       	ldi	r24, 0x01	; 1
    1fe4:	99 23       	and	r25, r25
    1fe6:	09 f0       	breq	.+2      	; 0x1fea <loop+0x11c>
    1fe8:	80 e0       	ldi	r24, 0x00	; 0
    1fea:	88 23       	and	r24, r24
    1fec:	e1 f0       	breq	.+56     	; 0x2026 <loop+0x158>
    1fee:	c0 90 d6 03 	lds	r12, 0x03D6	; 0x8003d6 <TRAVERSE_RPM>
    1ff2:	d0 90 d7 03 	lds	r13, 0x03D7	; 0x8003d7 <TRAVERSE_RPM+0x1>
    1ff6:	e0 90 d8 03 	lds	r14, 0x03D8	; 0x8003d8 <TRAVERSE_RPM+0x2>
    1ffa:	f0 90 d9 03 	lds	r15, 0x03D9	; 0x8003d9 <TRAVERSE_RPM+0x3>
    1ffe:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <INNER_TRAVERSE_OFFSET>
    2002:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <INNER_TRAVERSE_OFFSET+0x1>
    2006:	a0 91 aa 01 	lds	r26, 0x01AA	; 0x8001aa <INNER_TRAVERSE_OFFSET+0x2>
    200a:	b0 91 ab 01 	lds	r27, 0x01AB	; 0x8001ab <INNER_TRAVERSE_OFFSET+0x3>
    200e:	bc 01       	movw	r22, r24
    2010:	cd 01       	movw	r24, r26
    2012:	0e 94 3b 14 	call	0x2876	; 0x2876 <_Z9MMToStepsm>
    2016:	dc 01       	movw	r26, r24
    2018:	cb 01       	movw	r24, r22
    201a:	a7 01       	movw	r20, r14
    201c:	96 01       	movw	r18, r12
    201e:	bc 01       	movw	r22, r24
    2020:	cd 01       	movw	r24, r26
    2022:	0e 94 40 12 	call	0x2480	; 0x2480 <_Z20MoveAbsolutePositionmm>
    2026:	20 91 ce 03 	lds	r18, 0x03CE	; 0x8003ce <STEPS>
    202a:	30 91 cf 03 	lds	r19, 0x03CF	; 0x8003cf <STEPS+0x1>
    202e:	40 91 d0 03 	lds	r20, 0x03D0	; 0x8003d0 <STEPS+0x2>
    2032:	50 91 d1 03 	lds	r21, 0x03D1	; 0x8003d1 <STEPS+0x3>
    2036:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    203a:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    203e:	a0 91 d4 03 	lds	r26, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    2042:	b0 91 d5 03 	lds	r27, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    2046:	61 e0       	ldi	r22, 0x01	; 1
    2048:	28 17       	cp	r18, r24
    204a:	39 07       	cpc	r19, r25
    204c:	4a 07       	cpc	r20, r26
    204e:	5b 07       	cpc	r21, r27
    2050:	09 f0       	breq	.+2      	; 0x2054 <loop+0x186>
    2052:	60 e0       	ldi	r22, 0x00	; 0
    2054:	66 23       	and	r22, r22
    2056:	41 f0       	breq	.+16     	; 0x2068 <loop+0x19a>
    2058:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <TRAVERSE_DIRECTION>
    205c:	81 e0       	ldi	r24, 0x01	; 1
    205e:	91 30       	cpi	r25, 0x01	; 1
    2060:	09 f4       	brne	.+2      	; 0x2064 <loop+0x196>
    2062:	80 e0       	ldi	r24, 0x00	; 0
    2064:	80 93 b5 01 	sts	0x01B5, r24	; 0x8001b5 <TRAVERSE_DIRECTION>
    2068:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <RUN_MODE>
    206c:	81 e0       	ldi	r24, 0x01	; 1
    206e:	94 30       	cpi	r25, 0x04	; 4
    2070:	09 f0       	breq	.+2      	; 0x2074 <loop+0x1a6>
    2072:	80 e0       	ldi	r24, 0x00	; 0
    2074:	88 23       	and	r24, r24
    2076:	09 f4       	brne	.+2      	; 0x207a <loop+0x1ac>
    2078:	4b c1       	rjmp	.+662    	; 0x2310 <loop+0x442>
    207a:	0e 94 32 19 	call	0x3264	; 0x3264 <millis>
    207e:	7b 01       	movw	r14, r22
    2080:	8c 01       	movw	r16, r24
    2082:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <fullAutoUpdateInterval>
    2086:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <fullAutoUpdateInterval+0x1>
    208a:	9c 01       	movw	r18, r24
    208c:	99 0f       	add	r25, r25
    208e:	44 0b       	sbc	r20, r20
    2090:	55 0b       	sbc	r21, r21
    2092:	80 91 b6 03 	lds	r24, 0x03B6	; 0x8003b6 <previousFullAutoTime>
    2096:	90 91 b7 03 	lds	r25, 0x03B7	; 0x8003b7 <previousFullAutoTime+0x1>
    209a:	a0 91 b8 03 	lds	r26, 0x03B8	; 0x8003b8 <previousFullAutoTime+0x2>
    209e:	b0 91 b9 03 	lds	r27, 0x03B9	; 0x8003b9 <previousFullAutoTime+0x3>
    20a2:	82 0f       	add	r24, r18
    20a4:	93 1f       	adc	r25, r19
    20a6:	a4 1f       	adc	r26, r20
    20a8:	b5 1f       	adc	r27, r21
    20aa:	21 e0       	ldi	r18, 0x01	; 1
    20ac:	8e 15       	cp	r24, r14
    20ae:	9f 05       	cpc	r25, r15
    20b0:	a0 07       	cpc	r26, r16
    20b2:	b1 07       	cpc	r27, r17
    20b4:	08 f0       	brcs	.+2      	; 0x20b8 <loop+0x1ea>
    20b6:	20 e0       	ldi	r18, 0x00	; 0
    20b8:	22 23       	and	r18, r18
    20ba:	09 f4       	brne	.+2      	; 0x20be <loop+0x1f0>
    20bc:	29 c1       	rjmp	.+594    	; 0x2310 <loop+0x442>
    20be:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <INNER_TRAVERSE_OFFSET>
    20c2:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <INNER_TRAVERSE_OFFSET+0x1>
    20c6:	a0 91 aa 01 	lds	r26, 0x01AA	; 0x8001aa <INNER_TRAVERSE_OFFSET+0x2>
    20ca:	b0 91 ab 01 	lds	r27, 0x01AB	; 0x8001ab <INNER_TRAVERSE_OFFSET+0x3>
    20ce:	bc 01       	movw	r22, r24
    20d0:	cd 01       	movw	r24, r26
    20d2:	0e 94 3b 14 	call	0x2876	; 0x2876 <_Z9MMToStepsm>
    20d6:	dc 01       	movw	r26, r24
    20d8:	cb 01       	movw	r24, r22
    20da:	9c 01       	movw	r18, r24
    20dc:	ad 01       	movw	r20, r26
    20de:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <STEPS>
    20e2:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <STEPS+0x1>
    20e6:	a0 91 d0 03 	lds	r26, 0x03D0	; 0x8003d0 <STEPS+0x2>
    20ea:	b0 91 d1 03 	lds	r27, 0x03D1	; 0x8003d1 <STEPS+0x3>
    20ee:	61 e0       	ldi	r22, 0x01	; 1
    20f0:	82 17       	cp	r24, r18
    20f2:	93 07       	cpc	r25, r19
    20f4:	a4 07       	cpc	r26, r20
    20f6:	b5 07       	cpc	r27, r21
    20f8:	0c f0       	brlt	.+2      	; 0x20fc <loop+0x22e>
    20fa:	60 e0       	ldi	r22, 0x00	; 0
    20fc:	66 23       	and	r22, r22
    20fe:	51 f1       	breq	.+84     	; 0x2154 <loop+0x286>
    2100:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <INNER_TRAVERSE_OFFSET>
    2104:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <INNER_TRAVERSE_OFFSET+0x1>
    2108:	a0 91 aa 01 	lds	r26, 0x01AA	; 0x8001aa <INNER_TRAVERSE_OFFSET+0x2>
    210c:	b0 91 ab 01 	lds	r27, 0x01AB	; 0x8001ab <INNER_TRAVERSE_OFFSET+0x3>
    2110:	bc 01       	movw	r22, r24
    2112:	cd 01       	movw	r24, r26
    2114:	0e 94 3b 14 	call	0x2876	; 0x2876 <_Z9MMToStepsm>
    2118:	dc 01       	movw	r26, r24
    211a:	cb 01       	movw	r24, r22
    211c:	28 e5       	ldi	r18, 0x58	; 88
    211e:	32 e0       	ldi	r19, 0x02	; 2
    2120:	40 e0       	ldi	r20, 0x00	; 0
    2122:	50 e0       	ldi	r21, 0x00	; 0
    2124:	bc 01       	movw	r22, r24
    2126:	cd 01       	movw	r24, r26
    2128:	0e 94 40 12 	call	0x2480	; 0x2480 <_Z20MoveAbsolutePositionmm>
    212c:	81 e0       	ldi	r24, 0x01	; 1
    212e:	80 93 b5 01 	sts	0x01B5, r24	; 0x8001b5 <TRAVERSE_DIRECTION>
    2132:	10 92 c2 03 	sts	0x03C2, r1	; 0x8003c2 <previousSpoolTicks>
    2136:	10 92 c3 03 	sts	0x03C3, r1	; 0x8003c3 <previousSpoolTicks+0x1>
    213a:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <previousSpoolTicks+0x2>
    213e:	10 92 c5 03 	sts	0x03C5, r1	; 0x8003c5 <previousSpoolTicks+0x3>
    2142:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <totalspoolTicks>
    2146:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <totalspoolTicks+0x1>
    214a:	10 92 c0 03 	sts	0x03C0, r1	; 0x8003c0 <totalspoolTicks+0x2>
    214e:	10 92 c1 03 	sts	0x03C1, r1	; 0x8003c1 <totalspoolTicks+0x3>
    2152:	d2 c0       	rjmp	.+420    	; 0x22f8 <loop+0x42a>
    2154:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <FILAMENT_DIAMETER>
    2158:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <FILAMENT_DIAMETER+0x1>
    215c:	a0 91 b2 01 	lds	r26, 0x01B2	; 0x8001b2 <FILAMENT_DIAMETER+0x2>
    2160:	b0 91 b3 01 	lds	r27, 0x01B3	; 0x8001b3 <FILAMENT_DIAMETER+0x3>
    2164:	bc 01       	movw	r22, r24
    2166:	cd 01       	movw	r24, r26
    2168:	0e 94 3b 14 	call	0x2876	; 0x2876 <_Z9MMToStepsm>
    216c:	dc 01       	movw	r26, r24
    216e:	cb 01       	movw	r24, r22
    2170:	24 e6       	ldi	r18, 0x64	; 100
    2172:	30 e0       	ldi	r19, 0x00	; 0
    2174:	40 e0       	ldi	r20, 0x00	; 0
    2176:	50 e0       	ldi	r21, 0x00	; 0
    2178:	bc 01       	movw	r22, r24
    217a:	cd 01       	movw	r24, r26
    217c:	0e 94 c5 19 	call	0x338a	; 0x338a <__udivmodsi4>
    2180:	da 01       	movw	r26, r20
    2182:	c9 01       	movw	r24, r18
    2184:	89 83       	std	Y+1, r24	; 0x01
    2186:	9a 83       	std	Y+2, r25	; 0x02
    2188:	ab 83       	std	Y+3, r26	; 0x03
    218a:	bc 83       	std	Y+4, r27	; 0x04
    218c:	20 91 be 03 	lds	r18, 0x03BE	; 0x8003be <totalspoolTicks>
    2190:	30 91 bf 03 	lds	r19, 0x03BF	; 0x8003bf <totalspoolTicks+0x1>
    2194:	40 91 c0 03 	lds	r20, 0x03C0	; 0x8003c0 <totalspoolTicks+0x2>
    2198:	50 91 c1 03 	lds	r21, 0x03C1	; 0x8003c1 <totalspoolTicks+0x3>
    219c:	80 91 c2 03 	lds	r24, 0x03C2	; 0x8003c2 <previousSpoolTicks>
    21a0:	90 91 c3 03 	lds	r25, 0x03C3	; 0x8003c3 <previousSpoolTicks+0x1>
    21a4:	a0 91 c4 03 	lds	r26, 0x03C4	; 0x8003c4 <previousSpoolTicks+0x2>
    21a8:	b0 91 c5 03 	lds	r27, 0x03C5	; 0x8003c5 <previousSpoolTicks+0x3>
    21ac:	79 01       	movw	r14, r18
    21ae:	8a 01       	movw	r16, r20
    21b0:	e8 1a       	sub	r14, r24
    21b2:	f9 0a       	sbc	r15, r25
    21b4:	0a 0b       	sbc	r16, r26
    21b6:	1b 0b       	sbc	r17, r27
    21b8:	d8 01       	movw	r26, r16
    21ba:	c7 01       	movw	r24, r14
    21bc:	8d 83       	std	Y+5, r24	; 0x05
    21be:	9e 83       	std	Y+6, r25	; 0x06
    21c0:	af 83       	std	Y+7, r26	; 0x07
    21c2:	b8 87       	std	Y+8, r27	; 0x08
    21c4:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <TRAVERSE_DIRECTION>
    21c8:	81 e0       	ldi	r24, 0x01	; 1
    21ca:	91 30       	cpi	r25, 0x01	; 1
    21cc:	09 f0       	breq	.+2      	; 0x21d0 <loop+0x302>
    21ce:	80 e0       	ldi	r24, 0x00	; 0
    21d0:	88 23       	and	r24, r24
    21d2:	01 f1       	breq	.+64     	; 0x2214 <loop+0x346>
    21d4:	20 91 da 03 	lds	r18, 0x03DA	; 0x8003da <SPOOLRPM>
    21d8:	30 91 db 03 	lds	r19, 0x03DB	; 0x8003db <SPOOLRPM+0x1>
    21dc:	c9 01       	movw	r24, r18
    21de:	88 0f       	add	r24, r24
    21e0:	99 1f       	adc	r25, r25
    21e2:	82 0f       	add	r24, r18
    21e4:	93 1f       	adc	r25, r19
    21e6:	7c 01       	movw	r14, r24
    21e8:	00 e0       	ldi	r16, 0x00	; 0
    21ea:	10 e0       	ldi	r17, 0x00	; 0
    21ec:	2d 81       	ldd	r18, Y+5	; 0x05
    21ee:	3e 81       	ldd	r19, Y+6	; 0x06
    21f0:	4f 81       	ldd	r20, Y+7	; 0x07
    21f2:	58 85       	ldd	r21, Y+8	; 0x08
    21f4:	89 81       	ldd	r24, Y+1	; 0x01
    21f6:	9a 81       	ldd	r25, Y+2	; 0x02
    21f8:	ab 81       	ldd	r26, Y+3	; 0x03
    21fa:	bc 81       	ldd	r27, Y+4	; 0x04
    21fc:	bc 01       	movw	r22, r24
    21fe:	cd 01       	movw	r24, r26
    2200:	0e 94 b5 19 	call	0x336a	; 0x336a <__mulsi3>
    2204:	dc 01       	movw	r26, r24
    2206:	cb 01       	movw	r24, r22
    2208:	a8 01       	movw	r20, r16
    220a:	97 01       	movw	r18, r14
    220c:	bc 01       	movw	r22, r24
    220e:	cd 01       	movw	r24, r26
    2210:	0e 94 70 12 	call	0x24e0	; 0x24e0 <_Z20MoveRelativePositionll>
    2214:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <TRAVERSE_DIRECTION>
    2218:	81 e0       	ldi	r24, 0x01	; 1
    221a:	99 23       	and	r25, r25
    221c:	09 f0       	breq	.+2      	; 0x2220 <loop+0x352>
    221e:	80 e0       	ldi	r24, 0x00	; 0
    2220:	88 23       	and	r24, r24
    2222:	39 f1       	breq	.+78     	; 0x2272 <loop+0x3a4>
    2224:	20 91 da 03 	lds	r18, 0x03DA	; 0x8003da <SPOOLRPM>
    2228:	30 91 db 03 	lds	r19, 0x03DB	; 0x8003db <SPOOLRPM+0x1>
    222c:	c9 01       	movw	r24, r18
    222e:	88 0f       	add	r24, r24
    2230:	99 1f       	adc	r25, r25
    2232:	82 0f       	add	r24, r18
    2234:	93 1f       	adc	r25, r19
    2236:	7c 01       	movw	r14, r24
    2238:	00 e0       	ldi	r16, 0x00	; 0
    223a:	10 e0       	ldi	r17, 0x00	; 0
    223c:	2d 81       	ldd	r18, Y+5	; 0x05
    223e:	3e 81       	ldd	r19, Y+6	; 0x06
    2240:	4f 81       	ldd	r20, Y+7	; 0x07
    2242:	58 85       	ldd	r21, Y+8	; 0x08
    2244:	89 81       	ldd	r24, Y+1	; 0x01
    2246:	9a 81       	ldd	r25, Y+2	; 0x02
    2248:	ab 81       	ldd	r26, Y+3	; 0x03
    224a:	bc 81       	ldd	r27, Y+4	; 0x04
    224c:	bc 01       	movw	r22, r24
    224e:	cd 01       	movw	r24, r26
    2250:	0e 94 b5 19 	call	0x336a	; 0x336a <__mulsi3>
    2254:	dc 01       	movw	r26, r24
    2256:	cb 01       	movw	r24, r22
    2258:	b0 95       	com	r27
    225a:	a0 95       	com	r26
    225c:	90 95       	com	r25
    225e:	81 95       	neg	r24
    2260:	9f 4f       	sbci	r25, 0xFF	; 255
    2262:	af 4f       	sbci	r26, 0xFF	; 255
    2264:	bf 4f       	sbci	r27, 0xFF	; 255
    2266:	a8 01       	movw	r20, r16
    2268:	97 01       	movw	r18, r14
    226a:	bc 01       	movw	r22, r24
    226c:	cd 01       	movw	r24, r26
    226e:	0e 94 70 12 	call	0x24e0	; 0x24e0 <_Z20MoveRelativePositionll>
    2272:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <INNER_TRAVERSE_OFFSET>
    2276:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <INNER_TRAVERSE_OFFSET+0x1>
    227a:	a0 91 aa 01 	lds	r26, 0x01AA	; 0x8001aa <INNER_TRAVERSE_OFFSET+0x2>
    227e:	b0 91 ab 01 	lds	r27, 0x01AB	; 0x8001ab <INNER_TRAVERSE_OFFSET+0x3>
    2282:	bc 01       	movw	r22, r24
    2284:	cd 01       	movw	r24, r26
    2286:	0e 94 3b 14 	call	0x2876	; 0x2876 <_Z9MMToStepsm>
    228a:	6b 01       	movw	r12, r22
    228c:	7c 01       	movw	r14, r24
    228e:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <SPOOL_WIDTH>
    2292:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <SPOOL_WIDTH+0x1>
    2296:	a0 91 ae 01 	lds	r26, 0x01AE	; 0x8001ae <SPOOL_WIDTH+0x2>
    229a:	b0 91 af 01 	lds	r27, 0x01AF	; 0x8001af <SPOOL_WIDTH+0x3>
    229e:	bc 01       	movw	r22, r24
    22a0:	cd 01       	movw	r24, r26
    22a2:	0e 94 3b 14 	call	0x2876	; 0x2876 <_Z9MMToStepsm>
    22a6:	dc 01       	movw	r26, r24
    22a8:	cb 01       	movw	r24, r22
    22aa:	8c 0d       	add	r24, r12
    22ac:	9d 1d       	adc	r25, r13
    22ae:	ae 1d       	adc	r26, r14
    22b0:	bf 1d       	adc	r27, r15
    22b2:	20 91 ce 03 	lds	r18, 0x03CE	; 0x8003ce <STEPS>
    22b6:	30 91 cf 03 	lds	r19, 0x03CF	; 0x8003cf <STEPS+0x1>
    22ba:	40 91 d0 03 	lds	r20, 0x03D0	; 0x8003d0 <STEPS+0x2>
    22be:	50 91 d1 03 	lds	r21, 0x03D1	; 0x8003d1 <STEPS+0x3>
    22c2:	61 e0       	ldi	r22, 0x01	; 1
    22c4:	28 17       	cp	r18, r24
    22c6:	39 07       	cpc	r19, r25
    22c8:	4a 07       	cpc	r20, r26
    22ca:	5b 07       	cpc	r21, r27
    22cc:	08 f4       	brcc	.+2      	; 0x22d0 <loop+0x402>
    22ce:	60 e0       	ldi	r22, 0x00	; 0
    22d0:	66 23       	and	r22, r22
    22d2:	11 f0       	breq	.+4      	; 0x22d8 <loop+0x40a>
    22d4:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <TRAVERSE_DIRECTION>
    22d8:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <totalspoolTicks>
    22dc:	90 91 bf 03 	lds	r25, 0x03BF	; 0x8003bf <totalspoolTicks+0x1>
    22e0:	a0 91 c0 03 	lds	r26, 0x03C0	; 0x8003c0 <totalspoolTicks+0x2>
    22e4:	b0 91 c1 03 	lds	r27, 0x03C1	; 0x8003c1 <totalspoolTicks+0x3>
    22e8:	80 93 c2 03 	sts	0x03C2, r24	; 0x8003c2 <previousSpoolTicks>
    22ec:	90 93 c3 03 	sts	0x03C3, r25	; 0x8003c3 <previousSpoolTicks+0x1>
    22f0:	a0 93 c4 03 	sts	0x03C4, r26	; 0x8003c4 <previousSpoolTicks+0x2>
    22f4:	b0 93 c5 03 	sts	0x03C5, r27	; 0x8003c5 <previousSpoolTicks+0x3>
    22f8:	0e 94 32 19 	call	0x3264	; 0x3264 <millis>
    22fc:	dc 01       	movw	r26, r24
    22fe:	cb 01       	movw	r24, r22
    2300:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <previousFullAutoTime>
    2304:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <previousFullAutoTime+0x1>
    2308:	a0 93 b8 03 	sts	0x03B8, r26	; 0x8003b8 <previousFullAutoTime+0x2>
    230c:	b0 93 b9 03 	sts	0x03B9, r27	; 0x8003b9 <previousFullAutoTime+0x3>
    2310:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <RUN_MODE>
    2314:	81 e0       	ldi	r24, 0x01	; 1
    2316:	99 23       	and	r25, r25
    2318:	09 f0       	breq	.+2      	; 0x231c <loop+0x44e>
    231a:	80 e0       	ldi	r24, 0x00	; 0
    231c:	88 23       	and	r24, r24
    231e:	11 f0       	breq	.+4      	; 0x2324 <loop+0x456>
    2320:	0e 94 ac 12 	call	0x2558	; 0x2558 <_Z4homev>
    2324:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <tickFlag>
    2328:	88 23       	and	r24, r24
    232a:	e9 f4       	brne	.+58     	; 0x2366 <loop+0x498>
    232c:	0e 94 32 19 	call	0x3264	; 0x3264 <millis>
    2330:	7b 01       	movw	r14, r22
    2332:	8c 01       	movw	r16, r24
    2334:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <spoolUpdateInterval>
    2338:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <spoolUpdateInterval+0x1>
    233c:	9c 01       	movw	r18, r24
    233e:	99 0f       	add	r25, r25
    2340:	44 0b       	sbc	r20, r20
    2342:	55 0b       	sbc	r21, r21
    2344:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <previousSpoolTime>
    2348:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <previousSpoolTime+0x1>
    234c:	a0 91 bc 03 	lds	r26, 0x03BC	; 0x8003bc <previousSpoolTime+0x2>
    2350:	b0 91 bd 03 	lds	r27, 0x03BD	; 0x8003bd <previousSpoolTime+0x3>
    2354:	82 0f       	add	r24, r18
    2356:	93 1f       	adc	r25, r19
    2358:	a4 1f       	adc	r26, r20
    235a:	b5 1f       	adc	r27, r21
    235c:	8e 15       	cp	r24, r14
    235e:	9f 05       	cpc	r25, r15
    2360:	a0 07       	cpc	r26, r16
    2362:	b1 07       	cpc	r27, r17
    2364:	10 f4       	brcc	.+4      	; 0x236a <loop+0x49c>
    2366:	81 e0       	ldi	r24, 0x01	; 1
    2368:	01 c0       	rjmp	.+2      	; 0x236c <loop+0x49e>
    236a:	80 e0       	ldi	r24, 0x00	; 0
    236c:	88 23       	and	r24, r24
    236e:	09 f4       	brne	.+2      	; 0x2372 <loop+0x4a4>
    2370:	57 c0       	rjmp	.+174    	; 0x2420 <loop+0x552>
    2372:	0e 94 32 19 	call	0x3264	; 0x3264 <millis>
    2376:	9b 01       	movw	r18, r22
    2378:	ac 01       	movw	r20, r24
    237a:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <previousSpoolTime>
    237e:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <previousSpoolTime+0x1>
    2382:	a0 91 bc 03 	lds	r26, 0x03BC	; 0x8003bc <previousSpoolTime+0x2>
    2386:	b0 91 bd 03 	lds	r27, 0x03BD	; 0x8003bd <previousSpoolTime+0x3>
    238a:	79 01       	movw	r14, r18
    238c:	8a 01       	movw	r16, r20
    238e:	e8 1a       	sub	r14, r24
    2390:	f9 0a       	sbc	r15, r25
    2392:	0a 0b       	sbc	r16, r26
    2394:	1b 0b       	sbc	r17, r27
    2396:	d8 01       	movw	r26, r16
    2398:	c7 01       	movw	r24, r14
    239a:	89 87       	std	Y+9, r24	; 0x09
    239c:	9a 87       	std	Y+10, r25	; 0x0a
    239e:	ab 87       	std	Y+11, r26	; 0x0b
    23a0:	bc 87       	std	Y+12, r27	; 0x0c
    23a2:	f8 94       	cli
    23a4:	20 91 ae 03 	lds	r18, 0x03AE	; 0x8003ae <spoolPulses>
    23a8:	30 91 af 03 	lds	r19, 0x03AF	; 0x8003af <spoolPulses+0x1>
    23ac:	40 91 b0 03 	lds	r20, 0x03B0	; 0x8003b0 <spoolPulses+0x2>
    23b0:	50 91 b1 03 	lds	r21, 0x03B1	; 0x8003b1 <spoolPulses+0x3>
    23b4:	80 e6       	ldi	r24, 0x60	; 96
    23b6:	9a ee       	ldi	r25, 0xEA	; 234
    23b8:	dc 01       	movw	r26, r24
    23ba:	0e 94 06 1a 	call	0x340c	; 0x340c <__muluhisi3>
    23be:	dc 01       	movw	r26, r24
    23c0:	cb 01       	movw	r24, r22
    23c2:	29 85       	ldd	r18, Y+9	; 0x09
    23c4:	3a 85       	ldd	r19, Y+10	; 0x0a
    23c6:	4b 85       	ldd	r20, Y+11	; 0x0b
    23c8:	5c 85       	ldd	r21, Y+12	; 0x0c
    23ca:	bc 01       	movw	r22, r24
    23cc:	cd 01       	movw	r24, r26
    23ce:	0e 94 c5 19 	call	0x338a	; 0x338a <__udivmodsi4>
    23d2:	da 01       	movw	r26, r20
    23d4:	c9 01       	movw	r24, r18
    23d6:	24 e6       	ldi	r18, 0x64	; 100
    23d8:	30 e0       	ldi	r19, 0x00	; 0
    23da:	40 e0       	ldi	r20, 0x00	; 0
    23dc:	50 e0       	ldi	r21, 0x00	; 0
    23de:	bc 01       	movw	r22, r24
    23e0:	cd 01       	movw	r24, r26
    23e2:	0e 94 c5 19 	call	0x338a	; 0x338a <__udivmodsi4>
    23e6:	da 01       	movw	r26, r20
    23e8:	c9 01       	movw	r24, r18
    23ea:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <SPOOLRPM+0x1>
    23ee:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <SPOOLRPM>
    23f2:	10 92 ae 03 	sts	0x03AE, r1	; 0x8003ae <spoolPulses>
    23f6:	10 92 af 03 	sts	0x03AF, r1	; 0x8003af <spoolPulses+0x1>
    23fa:	10 92 b0 03 	sts	0x03B0, r1	; 0x8003b0 <spoolPulses+0x2>
    23fe:	10 92 b1 03 	sts	0x03B1, r1	; 0x8003b1 <spoolPulses+0x3>
    2402:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <tickFlag>
    2406:	78 94       	sei
    2408:	0e 94 32 19 	call	0x3264	; 0x3264 <millis>
    240c:	dc 01       	movw	r26, r24
    240e:	cb 01       	movw	r24, r22
    2410:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <previousSpoolTime>
    2414:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <previousSpoolTime+0x1>
    2418:	a0 93 bc 03 	sts	0x03BC, r26	; 0x8003bc <previousSpoolTime+0x2>
    241c:	b0 93 bd 03 	sts	0x03BD, r27	; 0x8003bd <previousSpoolTime+0x3>
    2420:	00 00       	nop
    2422:	2c 96       	adiw	r28, 0x0c	; 12
    2424:	0f b6       	in	r0, 0x3f	; 63
    2426:	f8 94       	cli
    2428:	de bf       	out	0x3e, r29	; 62
    242a:	0f be       	out	0x3f, r0	; 63
    242c:	cd bf       	out	0x3d, r28	; 61
    242e:	df 91       	pop	r29
    2430:	cf 91       	pop	r28
    2432:	1f 91       	pop	r17
    2434:	0f 91       	pop	r16
    2436:	ff 90       	pop	r15
    2438:	ef 90       	pop	r14
    243a:	df 90       	pop	r13
    243c:	cf 90       	pop	r12
    243e:	08 95       	ret

00002440 <_Z16ToggleStepOutputv>:
    2440:	cf 93       	push	r28
    2442:	df 93       	push	r29
    2444:	cd b7       	in	r28, 0x3d	; 61
    2446:	de b7       	in	r29, 0x3e	; 62
    2448:	89 e2       	ldi	r24, 0x29	; 41
    244a:	90 e0       	ldi	r25, 0x00	; 0
    244c:	fc 01       	movw	r30, r24
    244e:	80 81       	ld	r24, Z
    2450:	88 2f       	mov	r24, r24
    2452:	90 e0       	ldi	r25, 0x00	; 0
    2454:	88 70       	andi	r24, 0x08	; 8
    2456:	99 27       	eor	r25, r25
    2458:	89 2b       	or	r24, r25
    245a:	19 f4       	brne	.+6      	; 0x2462 <_Z16ToggleStepOutputv+0x22>
    245c:	89 e0       	ldi	r24, 0x09	; 9
    245e:	90 e0       	ldi	r25, 0x00	; 0
    2460:	02 c0       	rjmp	.+4      	; 0x2466 <_Z16ToggleStepOutputv+0x26>
    2462:	88 e0       	ldi	r24, 0x08	; 8
    2464:	90 e0       	ldi	r25, 0x00	; 0
    2466:	2b e2       	ldi	r18, 0x2B	; 43
    2468:	30 e0       	ldi	r19, 0x00	; 0
    246a:	4b e2       	ldi	r20, 0x2B	; 43
    246c:	50 e0       	ldi	r21, 0x00	; 0
    246e:	fa 01       	movw	r30, r20
    2470:	40 81       	ld	r20, Z
    2472:	84 27       	eor	r24, r20
    2474:	f9 01       	movw	r30, r18
    2476:	80 83       	st	Z, r24
    2478:	00 00       	nop
    247a:	df 91       	pop	r29
    247c:	cf 91       	pop	r28
    247e:	08 95       	ret

00002480 <_Z20MoveAbsolutePositionmm>:
    2480:	cf 93       	push	r28
    2482:	df 93       	push	r29
    2484:	cd b7       	in	r28, 0x3d	; 61
    2486:	de b7       	in	r29, 0x3e	; 62
    2488:	28 97       	sbiw	r28, 0x08	; 8
    248a:	0f b6       	in	r0, 0x3f	; 63
    248c:	f8 94       	cli
    248e:	de bf       	out	0x3e, r29	; 62
    2490:	0f be       	out	0x3f, r0	; 63
    2492:	cd bf       	out	0x3d, r28	; 61
    2494:	69 83       	std	Y+1, r22	; 0x01
    2496:	7a 83       	std	Y+2, r23	; 0x02
    2498:	8b 83       	std	Y+3, r24	; 0x03
    249a:	9c 83       	std	Y+4, r25	; 0x04
    249c:	2d 83       	std	Y+5, r18	; 0x05
    249e:	3e 83       	std	Y+6, r19	; 0x06
    24a0:	4f 83       	std	Y+7, r20	; 0x07
    24a2:	58 87       	std	Y+8, r21	; 0x08
    24a4:	8d 81       	ldd	r24, Y+5	; 0x05
    24a6:	9e 81       	ldd	r25, Y+6	; 0x06
    24a8:	af 81       	ldd	r26, Y+7	; 0x07
    24aa:	b8 85       	ldd	r27, Y+8	; 0x08
    24ac:	bc 01       	movw	r22, r24
    24ae:	cd 01       	movw	r24, r26
    24b0:	0e 94 96 14 	call	0x292c	; 0x292c <_Z16Set_Traverse_RPMl>
    24b4:	89 81       	ldd	r24, Y+1	; 0x01
    24b6:	9a 81       	ldd	r25, Y+2	; 0x02
    24b8:	ab 81       	ldd	r26, Y+3	; 0x03
    24ba:	bc 81       	ldd	r27, Y+4	; 0x04
    24bc:	80 93 d2 03 	sts	0x03D2, r24	; 0x8003d2 <DESIRED_POSITION>
    24c0:	90 93 d3 03 	sts	0x03D3, r25	; 0x8003d3 <DESIRED_POSITION+0x1>
    24c4:	a0 93 d4 03 	sts	0x03D4, r26	; 0x8003d4 <DESIRED_POSITION+0x2>
    24c8:	b0 93 d5 03 	sts	0x03D5, r27	; 0x8003d5 <DESIRED_POSITION+0x3>
    24cc:	00 00       	nop
    24ce:	28 96       	adiw	r28, 0x08	; 8
    24d0:	0f b6       	in	r0, 0x3f	; 63
    24d2:	f8 94       	cli
    24d4:	de bf       	out	0x3e, r29	; 62
    24d6:	0f be       	out	0x3f, r0	; 63
    24d8:	cd bf       	out	0x3d, r28	; 61
    24da:	df 91       	pop	r29
    24dc:	cf 91       	pop	r28
    24de:	08 95       	ret

000024e0 <_Z20MoveRelativePositionll>:
    24e0:	cf 93       	push	r28
    24e2:	df 93       	push	r29
    24e4:	cd b7       	in	r28, 0x3d	; 61
    24e6:	de b7       	in	r29, 0x3e	; 62
    24e8:	28 97       	sbiw	r28, 0x08	; 8
    24ea:	0f b6       	in	r0, 0x3f	; 63
    24ec:	f8 94       	cli
    24ee:	de bf       	out	0x3e, r29	; 62
    24f0:	0f be       	out	0x3f, r0	; 63
    24f2:	cd bf       	out	0x3d, r28	; 61
    24f4:	69 83       	std	Y+1, r22	; 0x01
    24f6:	7a 83       	std	Y+2, r23	; 0x02
    24f8:	8b 83       	std	Y+3, r24	; 0x03
    24fa:	9c 83       	std	Y+4, r25	; 0x04
    24fc:	2d 83       	std	Y+5, r18	; 0x05
    24fe:	3e 83       	std	Y+6, r19	; 0x06
    2500:	4f 83       	std	Y+7, r20	; 0x07
    2502:	58 87       	std	Y+8, r21	; 0x08
    2504:	8d 81       	ldd	r24, Y+5	; 0x05
    2506:	9e 81       	ldd	r25, Y+6	; 0x06
    2508:	af 81       	ldd	r26, Y+7	; 0x07
    250a:	b8 85       	ldd	r27, Y+8	; 0x08
    250c:	bc 01       	movw	r22, r24
    250e:	cd 01       	movw	r24, r26
    2510:	0e 94 96 14 	call	0x292c	; 0x292c <_Z16Set_Traverse_RPMl>
    2514:	20 91 d2 03 	lds	r18, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    2518:	30 91 d3 03 	lds	r19, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    251c:	40 91 d4 03 	lds	r20, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    2520:	50 91 d5 03 	lds	r21, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    2524:	89 81       	ldd	r24, Y+1	; 0x01
    2526:	9a 81       	ldd	r25, Y+2	; 0x02
    2528:	ab 81       	ldd	r26, Y+3	; 0x03
    252a:	bc 81       	ldd	r27, Y+4	; 0x04
    252c:	82 0f       	add	r24, r18
    252e:	93 1f       	adc	r25, r19
    2530:	a4 1f       	adc	r26, r20
    2532:	b5 1f       	adc	r27, r21
    2534:	80 93 d2 03 	sts	0x03D2, r24	; 0x8003d2 <DESIRED_POSITION>
    2538:	90 93 d3 03 	sts	0x03D3, r25	; 0x8003d3 <DESIRED_POSITION+0x1>
    253c:	a0 93 d4 03 	sts	0x03D4, r26	; 0x8003d4 <DESIRED_POSITION+0x2>
    2540:	b0 93 d5 03 	sts	0x03D5, r27	; 0x8003d5 <DESIRED_POSITION+0x3>
    2544:	00 00       	nop
    2546:	28 96       	adiw	r28, 0x08	; 8
    2548:	0f b6       	in	r0, 0x3f	; 63
    254a:	f8 94       	cli
    254c:	de bf       	out	0x3e, r29	; 62
    254e:	0f be       	out	0x3f, r0	; 63
    2550:	cd bf       	out	0x3d, r28	; 61
    2552:	df 91       	pop	r29
    2554:	cf 91       	pop	r28
    2556:	08 95       	ret

00002558 <_Z4homev>:
    2558:	cf 93       	push	r28
    255a:	df 93       	push	r29
    255c:	cd b7       	in	r28, 0x3d	; 61
    255e:	de b7       	in	r29, 0x3e	; 62
    2560:	10 92 d2 03 	sts	0x03D2, r1	; 0x8003d2 <DESIRED_POSITION>
    2564:	10 92 d3 03 	sts	0x03D3, r1	; 0x8003d3 <DESIRED_POSITION+0x1>
    2568:	10 92 d4 03 	sts	0x03D4, r1	; 0x8003d4 <DESIRED_POSITION+0x2>
    256c:	10 92 d5 03 	sts	0x03D5, r1	; 0x8003d5 <DESIRED_POSITION+0x3>
    2570:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <directionInputState>
    2574:	81 e0       	ldi	r24, 0x01	; 1
    2576:	89 27       	eor	r24, r25
    2578:	88 23       	and	r24, r24
    257a:	91 f1       	breq	.+100    	; 0x25e0 <_Z4homev+0x88>
    257c:	89 e2       	ldi	r24, 0x29	; 41
    257e:	90 e0       	ldi	r25, 0x00	; 0
    2580:	fc 01       	movw	r30, r24
    2582:	80 81       	ld	r24, Z
    2584:	88 2f       	mov	r24, r24
    2586:	90 e0       	ldi	r25, 0x00	; 0
    2588:	80 72       	andi	r24, 0x20	; 32
    258a:	99 27       	eor	r25, r25
    258c:	21 e0       	ldi	r18, 0x01	; 1
    258e:	89 2b       	or	r24, r25
    2590:	09 f4       	brne	.+2      	; 0x2594 <_Z4homev+0x3c>
    2592:	20 e0       	ldi	r18, 0x00	; 0
    2594:	20 93 ad 03 	sts	0x03AD, r18	; 0x8003ad <directionInputState>
    2598:	20 91 ce 03 	lds	r18, 0x03CE	; 0x8003ce <STEPS>
    259c:	30 91 cf 03 	lds	r19, 0x03CF	; 0x8003cf <STEPS+0x1>
    25a0:	40 91 d0 03 	lds	r20, 0x03D0	; 0x8003d0 <STEPS+0x2>
    25a4:	50 91 d1 03 	lds	r21, 0x03D1	; 0x8003d1 <STEPS+0x3>
    25a8:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    25ac:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    25b0:	a0 91 d4 03 	lds	r26, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    25b4:	b0 91 d5 03 	lds	r27, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    25b8:	61 e0       	ldi	r22, 0x01	; 1
    25ba:	28 17       	cp	r18, r24
    25bc:	39 07       	cpc	r19, r25
    25be:	4a 07       	cpc	r20, r26
    25c0:	5b 07       	cpc	r21, r27
    25c2:	09 f0       	breq	.+2      	; 0x25c6 <_Z4homev+0x6e>
    25c4:	60 e0       	ldi	r22, 0x00	; 0
    25c6:	66 23       	and	r22, r22
    25c8:	99 f2       	breq	.-90     	; 0x2570 <_Z4homev+0x18>
    25ca:	28 e5       	ldi	r18, 0x58	; 88
    25cc:	32 e0       	ldi	r19, 0x02	; 2
    25ce:	40 e0       	ldi	r20, 0x00	; 0
    25d0:	50 e0       	ldi	r21, 0x00	; 0
    25d2:	6c e9       	ldi	r22, 0x9C	; 156
    25d4:	7f ef       	ldi	r23, 0xFF	; 255
    25d6:	8f ef       	ldi	r24, 0xFF	; 255
    25d8:	9f ef       	ldi	r25, 0xFF	; 255
    25da:	0e 94 70 12 	call	0x24e0	; 0x24e0 <_Z20MoveRelativePositionll>
    25de:	c8 cf       	rjmp	.-112    	; 0x2570 <_Z4homev+0x18>
    25e0:	28 e5       	ldi	r18, 0x58	; 88
    25e2:	32 e0       	ldi	r19, 0x02	; 2
    25e4:	40 e0       	ldi	r20, 0x00	; 0
    25e6:	50 e0       	ldi	r21, 0x00	; 0
    25e8:	68 e1       	ldi	r22, 0x18	; 24
    25ea:	7c ef       	ldi	r23, 0xFC	; 252
    25ec:	8f ef       	ldi	r24, 0xFF	; 255
    25ee:	9f ef       	ldi	r25, 0xFF	; 255
    25f0:	0e 94 70 12 	call	0x24e0	; 0x24e0 <_Z20MoveRelativePositionll>
    25f4:	20 91 ce 03 	lds	r18, 0x03CE	; 0x8003ce <STEPS>
    25f8:	30 91 cf 03 	lds	r19, 0x03CF	; 0x8003cf <STEPS+0x1>
    25fc:	40 91 d0 03 	lds	r20, 0x03D0	; 0x8003d0 <STEPS+0x2>
    2600:	50 91 d1 03 	lds	r21, 0x03D1	; 0x8003d1 <STEPS+0x3>
    2604:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    2608:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    260c:	a0 91 d4 03 	lds	r26, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    2610:	b0 91 d5 03 	lds	r27, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    2614:	61 e0       	ldi	r22, 0x01	; 1
    2616:	28 17       	cp	r18, r24
    2618:	39 07       	cpc	r19, r25
    261a:	4a 07       	cpc	r20, r26
    261c:	5b 07       	cpc	r21, r27
    261e:	09 f4       	brne	.+2      	; 0x2622 <_Z4homev+0xca>
    2620:	60 e0       	ldi	r22, 0x00	; 0
    2622:	66 23       	and	r22, r22
    2624:	09 f0       	breq	.+2      	; 0x2628 <_Z4homev+0xd0>
    2626:	e6 cf       	rjmp	.-52     	; 0x25f4 <_Z4homev+0x9c>
    2628:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <directionInputState>
    262c:	88 23       	and	r24, r24
    262e:	91 f1       	breq	.+100    	; 0x2694 <_Z4homev+0x13c>
    2630:	89 e2       	ldi	r24, 0x29	; 41
    2632:	90 e0       	ldi	r25, 0x00	; 0
    2634:	fc 01       	movw	r30, r24
    2636:	80 81       	ld	r24, Z
    2638:	88 2f       	mov	r24, r24
    263a:	90 e0       	ldi	r25, 0x00	; 0
    263c:	80 72       	andi	r24, 0x20	; 32
    263e:	99 27       	eor	r25, r25
    2640:	21 e0       	ldi	r18, 0x01	; 1
    2642:	89 2b       	or	r24, r25
    2644:	09 f4       	brne	.+2      	; 0x2648 <_Z4homev+0xf0>
    2646:	20 e0       	ldi	r18, 0x00	; 0
    2648:	20 93 ad 03 	sts	0x03AD, r18	; 0x8003ad <directionInputState>
    264c:	20 91 ce 03 	lds	r18, 0x03CE	; 0x8003ce <STEPS>
    2650:	30 91 cf 03 	lds	r19, 0x03CF	; 0x8003cf <STEPS+0x1>
    2654:	40 91 d0 03 	lds	r20, 0x03D0	; 0x8003d0 <STEPS+0x2>
    2658:	50 91 d1 03 	lds	r21, 0x03D1	; 0x8003d1 <STEPS+0x3>
    265c:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    2660:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    2664:	a0 91 d4 03 	lds	r26, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    2668:	b0 91 d5 03 	lds	r27, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    266c:	61 e0       	ldi	r22, 0x01	; 1
    266e:	28 17       	cp	r18, r24
    2670:	39 07       	cpc	r19, r25
    2672:	4a 07       	cpc	r20, r26
    2674:	5b 07       	cpc	r21, r27
    2676:	09 f0       	breq	.+2      	; 0x267a <_Z4homev+0x122>
    2678:	60 e0       	ldi	r22, 0x00	; 0
    267a:	66 23       	and	r22, r22
    267c:	a9 f2       	breq	.-86     	; 0x2628 <_Z4homev+0xd0>
    267e:	28 e5       	ldi	r18, 0x58	; 88
    2680:	32 e0       	ldi	r19, 0x02	; 2
    2682:	40 e0       	ldi	r20, 0x00	; 0
    2684:	50 e0       	ldi	r21, 0x00	; 0
    2686:	64 e6       	ldi	r22, 0x64	; 100
    2688:	70 e0       	ldi	r23, 0x00	; 0
    268a:	80 e0       	ldi	r24, 0x00	; 0
    268c:	90 e0       	ldi	r25, 0x00	; 0
    268e:	0e 94 70 12 	call	0x24e0	; 0x24e0 <_Z20MoveRelativePositionll>
    2692:	ca cf       	rjmp	.-108    	; 0x2628 <_Z4homev+0xd0>
    2694:	28 e5       	ldi	r18, 0x58	; 88
    2696:	32 e0       	ldi	r19, 0x02	; 2
    2698:	40 e0       	ldi	r20, 0x00	; 0
    269a:	50 e0       	ldi	r21, 0x00	; 0
    269c:	68 e8       	ldi	r22, 0x88	; 136
    269e:	73 e1       	ldi	r23, 0x13	; 19
    26a0:	80 e0       	ldi	r24, 0x00	; 0
    26a2:	90 e0       	ldi	r25, 0x00	; 0
    26a4:	0e 94 70 12 	call	0x24e0	; 0x24e0 <_Z20MoveRelativePositionll>
    26a8:	20 91 ce 03 	lds	r18, 0x03CE	; 0x8003ce <STEPS>
    26ac:	30 91 cf 03 	lds	r19, 0x03CF	; 0x8003cf <STEPS+0x1>
    26b0:	40 91 d0 03 	lds	r20, 0x03D0	; 0x8003d0 <STEPS+0x2>
    26b4:	50 91 d1 03 	lds	r21, 0x03D1	; 0x8003d1 <STEPS+0x3>
    26b8:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    26bc:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    26c0:	a0 91 d4 03 	lds	r26, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    26c4:	b0 91 d5 03 	lds	r27, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    26c8:	61 e0       	ldi	r22, 0x01	; 1
    26ca:	28 17       	cp	r18, r24
    26cc:	39 07       	cpc	r19, r25
    26ce:	4a 07       	cpc	r20, r26
    26d0:	5b 07       	cpc	r21, r27
    26d2:	09 f4       	brne	.+2      	; 0x26d6 <_Z4homev+0x17e>
    26d4:	60 e0       	ldi	r22, 0x00	; 0
    26d6:	66 23       	and	r22, r22
    26d8:	09 f0       	breq	.+2      	; 0x26dc <_Z4homev+0x184>
    26da:	e6 cf       	rjmp	.-52     	; 0x26a8 <_Z4homev+0x150>
    26dc:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <directionInputState>
    26e0:	81 e0       	ldi	r24, 0x01	; 1
    26e2:	89 27       	eor	r24, r25
    26e4:	88 23       	and	r24, r24
    26e6:	91 f1       	breq	.+100    	; 0x274c <_Z4homev+0x1f4>
    26e8:	89 e2       	ldi	r24, 0x29	; 41
    26ea:	90 e0       	ldi	r25, 0x00	; 0
    26ec:	fc 01       	movw	r30, r24
    26ee:	80 81       	ld	r24, Z
    26f0:	88 2f       	mov	r24, r24
    26f2:	90 e0       	ldi	r25, 0x00	; 0
    26f4:	80 72       	andi	r24, 0x20	; 32
    26f6:	99 27       	eor	r25, r25
    26f8:	21 e0       	ldi	r18, 0x01	; 1
    26fa:	89 2b       	or	r24, r25
    26fc:	09 f4       	brne	.+2      	; 0x2700 <_Z4homev+0x1a8>
    26fe:	20 e0       	ldi	r18, 0x00	; 0
    2700:	20 93 ad 03 	sts	0x03AD, r18	; 0x8003ad <directionInputState>
    2704:	20 91 ce 03 	lds	r18, 0x03CE	; 0x8003ce <STEPS>
    2708:	30 91 cf 03 	lds	r19, 0x03CF	; 0x8003cf <STEPS+0x1>
    270c:	40 91 d0 03 	lds	r20, 0x03D0	; 0x8003d0 <STEPS+0x2>
    2710:	50 91 d1 03 	lds	r21, 0x03D1	; 0x8003d1 <STEPS+0x3>
    2714:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    2718:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    271c:	a0 91 d4 03 	lds	r26, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    2720:	b0 91 d5 03 	lds	r27, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    2724:	61 e0       	ldi	r22, 0x01	; 1
    2726:	28 17       	cp	r18, r24
    2728:	39 07       	cpc	r19, r25
    272a:	4a 07       	cpc	r20, r26
    272c:	5b 07       	cpc	r21, r27
    272e:	09 f0       	breq	.+2      	; 0x2732 <_Z4homev+0x1da>
    2730:	60 e0       	ldi	r22, 0x00	; 0
    2732:	66 23       	and	r22, r22
    2734:	99 f2       	breq	.-90     	; 0x26dc <_Z4homev+0x184>
    2736:	26 e9       	ldi	r18, 0x96	; 150
    2738:	30 e0       	ldi	r19, 0x00	; 0
    273a:	40 e0       	ldi	r20, 0x00	; 0
    273c:	50 e0       	ldi	r21, 0x00	; 0
    273e:	6c e9       	ldi	r22, 0x9C	; 156
    2740:	7f ef       	ldi	r23, 0xFF	; 255
    2742:	8f ef       	ldi	r24, 0xFF	; 255
    2744:	9f ef       	ldi	r25, 0xFF	; 255
    2746:	0e 94 70 12 	call	0x24e0	; 0x24e0 <_Z20MoveRelativePositionll>
    274a:	c8 cf       	rjmp	.-112    	; 0x26dc <_Z4homev+0x184>
    274c:	26 e9       	ldi	r18, 0x96	; 150
    274e:	30 e0       	ldi	r19, 0x00	; 0
    2750:	40 e0       	ldi	r20, 0x00	; 0
    2752:	50 e0       	ldi	r21, 0x00	; 0
    2754:	68 e1       	ldi	r22, 0x18	; 24
    2756:	7c ef       	ldi	r23, 0xFC	; 252
    2758:	8f ef       	ldi	r24, 0xFF	; 255
    275a:	9f ef       	ldi	r25, 0xFF	; 255
    275c:	0e 94 70 12 	call	0x24e0	; 0x24e0 <_Z20MoveRelativePositionll>
    2760:	20 91 ce 03 	lds	r18, 0x03CE	; 0x8003ce <STEPS>
    2764:	30 91 cf 03 	lds	r19, 0x03CF	; 0x8003cf <STEPS+0x1>
    2768:	40 91 d0 03 	lds	r20, 0x03D0	; 0x8003d0 <STEPS+0x2>
    276c:	50 91 d1 03 	lds	r21, 0x03D1	; 0x8003d1 <STEPS+0x3>
    2770:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    2774:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    2778:	a0 91 d4 03 	lds	r26, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    277c:	b0 91 d5 03 	lds	r27, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    2780:	61 e0       	ldi	r22, 0x01	; 1
    2782:	28 17       	cp	r18, r24
    2784:	39 07       	cpc	r19, r25
    2786:	4a 07       	cpc	r20, r26
    2788:	5b 07       	cpc	r21, r27
    278a:	09 f4       	brne	.+2      	; 0x278e <_Z4homev+0x236>
    278c:	60 e0       	ldi	r22, 0x00	; 0
    278e:	66 23       	and	r22, r22
    2790:	09 f0       	breq	.+2      	; 0x2794 <_Z4homev+0x23c>
    2792:	e6 cf       	rjmp	.-52     	; 0x2760 <_Z4homev+0x208>
    2794:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <directionInputState>
    2798:	88 23       	and	r24, r24
    279a:	91 f1       	breq	.+100    	; 0x2800 <_Z4homev+0x2a8>
    279c:	89 e2       	ldi	r24, 0x29	; 41
    279e:	90 e0       	ldi	r25, 0x00	; 0
    27a0:	fc 01       	movw	r30, r24
    27a2:	80 81       	ld	r24, Z
    27a4:	88 2f       	mov	r24, r24
    27a6:	90 e0       	ldi	r25, 0x00	; 0
    27a8:	80 72       	andi	r24, 0x20	; 32
    27aa:	99 27       	eor	r25, r25
    27ac:	21 e0       	ldi	r18, 0x01	; 1
    27ae:	89 2b       	or	r24, r25
    27b0:	09 f4       	brne	.+2      	; 0x27b4 <_Z4homev+0x25c>
    27b2:	20 e0       	ldi	r18, 0x00	; 0
    27b4:	20 93 ad 03 	sts	0x03AD, r18	; 0x8003ad <directionInputState>
    27b8:	20 91 ce 03 	lds	r18, 0x03CE	; 0x8003ce <STEPS>
    27bc:	30 91 cf 03 	lds	r19, 0x03CF	; 0x8003cf <STEPS+0x1>
    27c0:	40 91 d0 03 	lds	r20, 0x03D0	; 0x8003d0 <STEPS+0x2>
    27c4:	50 91 d1 03 	lds	r21, 0x03D1	; 0x8003d1 <STEPS+0x3>
    27c8:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    27cc:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    27d0:	a0 91 d4 03 	lds	r26, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    27d4:	b0 91 d5 03 	lds	r27, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    27d8:	61 e0       	ldi	r22, 0x01	; 1
    27da:	28 17       	cp	r18, r24
    27dc:	39 07       	cpc	r19, r25
    27de:	4a 07       	cpc	r20, r26
    27e0:	5b 07       	cpc	r21, r27
    27e2:	09 f0       	breq	.+2      	; 0x27e6 <_Z4homev+0x28e>
    27e4:	60 e0       	ldi	r22, 0x00	; 0
    27e6:	66 23       	and	r22, r22
    27e8:	a9 f2       	breq	.-86     	; 0x2794 <_Z4homev+0x23c>
    27ea:	26 e9       	ldi	r18, 0x96	; 150
    27ec:	30 e0       	ldi	r19, 0x00	; 0
    27ee:	40 e0       	ldi	r20, 0x00	; 0
    27f0:	50 e0       	ldi	r21, 0x00	; 0
    27f2:	64 e6       	ldi	r22, 0x64	; 100
    27f4:	70 e0       	ldi	r23, 0x00	; 0
    27f6:	80 e0       	ldi	r24, 0x00	; 0
    27f8:	90 e0       	ldi	r25, 0x00	; 0
    27fa:	0e 94 70 12 	call	0x24e0	; 0x24e0 <_Z20MoveRelativePositionll>
    27fe:	ca cf       	rjmp	.-108    	; 0x2794 <_Z4homev+0x23c>
    2800:	26 e9       	ldi	r18, 0x96	; 150
    2802:	30 e0       	ldi	r19, 0x00	; 0
    2804:	40 e0       	ldi	r20, 0x00	; 0
    2806:	50 e0       	ldi	r21, 0x00	; 0
    2808:	68 ee       	ldi	r22, 0xE8	; 232
    280a:	73 e0       	ldi	r23, 0x03	; 3
    280c:	80 e0       	ldi	r24, 0x00	; 0
    280e:	90 e0       	ldi	r25, 0x00	; 0
    2810:	0e 94 70 12 	call	0x24e0	; 0x24e0 <_Z20MoveRelativePositionll>
    2814:	20 91 ce 03 	lds	r18, 0x03CE	; 0x8003ce <STEPS>
    2818:	30 91 cf 03 	lds	r19, 0x03CF	; 0x8003cf <STEPS+0x1>
    281c:	40 91 d0 03 	lds	r20, 0x03D0	; 0x8003d0 <STEPS+0x2>
    2820:	50 91 d1 03 	lds	r21, 0x03D1	; 0x8003d1 <STEPS+0x3>
    2824:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <DESIRED_POSITION>
    2828:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <DESIRED_POSITION+0x1>
    282c:	a0 91 d4 03 	lds	r26, 0x03D4	; 0x8003d4 <DESIRED_POSITION+0x2>
    2830:	b0 91 d5 03 	lds	r27, 0x03D5	; 0x8003d5 <DESIRED_POSITION+0x3>
    2834:	61 e0       	ldi	r22, 0x01	; 1
    2836:	28 17       	cp	r18, r24
    2838:	39 07       	cpc	r19, r25
    283a:	4a 07       	cpc	r20, r26
    283c:	5b 07       	cpc	r21, r27
    283e:	09 f4       	brne	.+2      	; 0x2842 <_Z4homev+0x2ea>
    2840:	60 e0       	ldi	r22, 0x00	; 0
    2842:	66 23       	and	r22, r22
    2844:	09 f0       	breq	.+2      	; 0x2848 <_Z4homev+0x2f0>
    2846:	e6 cf       	rjmp	.-52     	; 0x2814 <_Z4homev+0x2bc>
    2848:	10 92 ce 03 	sts	0x03CE, r1	; 0x8003ce <STEPS>
    284c:	10 92 cf 03 	sts	0x03CF, r1	; 0x8003cf <STEPS+0x1>
    2850:	10 92 d0 03 	sts	0x03D0, r1	; 0x8003d0 <STEPS+0x2>
    2854:	10 92 d1 03 	sts	0x03D1, r1	; 0x8003d1 <STEPS+0x3>
    2858:	10 92 d2 03 	sts	0x03D2, r1	; 0x8003d2 <DESIRED_POSITION>
    285c:	10 92 d3 03 	sts	0x03D3, r1	; 0x8003d3 <DESIRED_POSITION+0x1>
    2860:	10 92 d4 03 	sts	0x03D4, r1	; 0x8003d4 <DESIRED_POSITION+0x2>
    2864:	10 92 d5 03 	sts	0x03D5, r1	; 0x8003d5 <DESIRED_POSITION+0x3>
    2868:	81 e0       	ldi	r24, 0x01	; 1
    286a:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <RUN_MODE>
    286e:	00 00       	nop
    2870:	df 91       	pop	r29
    2872:	cf 91       	pop	r28
    2874:	08 95       	ret

00002876 <_Z9MMToStepsm>:

uint32_t MMToSteps(uint32_t mm)
{
    2876:	cf 93       	push	r28
    2878:	df 93       	push	r29
    287a:	cd b7       	in	r28, 0x3d	; 61
    287c:	de b7       	in	r29, 0x3e	; 62
    287e:	28 97       	sbiw	r28, 0x08	; 8
    2880:	0f b6       	in	r0, 0x3f	; 63
    2882:	f8 94       	cli
    2884:	de bf       	out	0x3e, r29	; 62
    2886:	0f be       	out	0x3f, r0	; 63
    2888:	cd bf       	out	0x3d, r28	; 61
    288a:	6d 83       	std	Y+5, r22	; 0x05
    288c:	7e 83       	std	Y+6, r23	; 0x06
    288e:	8f 83       	std	Y+7, r24	; 0x07
    2890:	98 87       	std	Y+8, r25	; 0x08
	uint32_t position = (mm * 1000) / SCREW_PITCH_MM;
    2892:	2d 81       	ldd	r18, Y+5	; 0x05
    2894:	3e 81       	ldd	r19, Y+6	; 0x06
    2896:	4f 81       	ldd	r20, Y+7	; 0x07
    2898:	58 85       	ldd	r21, Y+8	; 0x08
    289a:	88 ee       	ldi	r24, 0xE8	; 232
    289c:	93 e0       	ldi	r25, 0x03	; 3
    289e:	dc 01       	movw	r26, r24
    28a0:	0e 94 06 1a 	call	0x340c	; 0x340c <__muluhisi3>
    28a4:	dc 01       	movw	r26, r24
    28a6:	cb 01       	movw	r24, r22
    28a8:	24 e3       	ldi	r18, 0x34	; 52
    28aa:	36 e0       	ldi	r19, 0x06	; 6
    28ac:	40 e0       	ldi	r20, 0x00	; 0
    28ae:	50 e0       	ldi	r21, 0x00	; 0
    28b0:	bc 01       	movw	r22, r24
    28b2:	cd 01       	movw	r24, r26
    28b4:	0e 94 c5 19 	call	0x338a	; 0x338a <__udivmodsi4>
    28b8:	da 01       	movw	r26, r20
    28ba:	c9 01       	movw	r24, r18
    28bc:	89 83       	std	Y+1, r24	; 0x01
    28be:	9a 83       	std	Y+2, r25	; 0x02
    28c0:	ab 83       	std	Y+3, r26	; 0x03
    28c2:	bc 83       	std	Y+4, r27	; 0x04
	position = (position * MOTOR_STEPS_PER_REV) / 1000;
    28c4:	29 81       	ldd	r18, Y+1	; 0x01
    28c6:	3a 81       	ldd	r19, Y+2	; 0x02
    28c8:	4b 81       	ldd	r20, Y+3	; 0x03
    28ca:	5c 81       	ldd	r21, Y+4	; 0x04
    28cc:	80 e8       	ldi	r24, 0x80	; 128
    28ce:	9c e0       	ldi	r25, 0x0C	; 12
    28d0:	dc 01       	movw	r26, r24
    28d2:	0e 94 06 1a 	call	0x340c	; 0x340c <__muluhisi3>
    28d6:	dc 01       	movw	r26, r24
    28d8:	cb 01       	movw	r24, r22
    28da:	28 ee       	ldi	r18, 0xE8	; 232
    28dc:	33 e0       	ldi	r19, 0x03	; 3
    28de:	40 e0       	ldi	r20, 0x00	; 0
    28e0:	50 e0       	ldi	r21, 0x00	; 0
    28e2:	bc 01       	movw	r22, r24
    28e4:	cd 01       	movw	r24, r26
    28e6:	0e 94 c5 19 	call	0x338a	; 0x338a <__udivmodsi4>
    28ea:	da 01       	movw	r26, r20
    28ec:	c9 01       	movw	r24, r18
    28ee:	89 83       	std	Y+1, r24	; 0x01
    28f0:	9a 83       	std	Y+2, r25	; 0x02
    28f2:	ab 83       	std	Y+3, r26	; 0x03
    28f4:	bc 83       	std	Y+4, r27	; 0x04
	position = position * 2;
    28f6:	89 81       	ldd	r24, Y+1	; 0x01
    28f8:	9a 81       	ldd	r25, Y+2	; 0x02
    28fa:	ab 81       	ldd	r26, Y+3	; 0x03
    28fc:	bc 81       	ldd	r27, Y+4	; 0x04
    28fe:	88 0f       	add	r24, r24
    2900:	99 1f       	adc	r25, r25
    2902:	aa 1f       	adc	r26, r26
    2904:	bb 1f       	adc	r27, r27
    2906:	89 83       	std	Y+1, r24	; 0x01
    2908:	9a 83       	std	Y+2, r25	; 0x02
    290a:	ab 83       	std	Y+3, r26	; 0x03
    290c:	bc 83       	std	Y+4, r27	; 0x04

	return position;
    290e:	89 81       	ldd	r24, Y+1	; 0x01
    2910:	9a 81       	ldd	r25, Y+2	; 0x02
    2912:	ab 81       	ldd	r26, Y+3	; 0x03
    2914:	bc 81       	ldd	r27, Y+4	; 0x04
}
    2916:	bc 01       	movw	r22, r24
    2918:	cd 01       	movw	r24, r26
    291a:	28 96       	adiw	r28, 0x08	; 8
    291c:	0f b6       	in	r0, 0x3f	; 63
    291e:	f8 94       	cli
    2920:	de bf       	out	0x3e, r29	; 62
    2922:	0f be       	out	0x3f, r0	; 63
    2924:	cd bf       	out	0x3d, r28	; 61
    2926:	df 91       	pop	r29
    2928:	cf 91       	pop	r28
    292a:	08 95       	ret

0000292c <_Z16Set_Traverse_RPMl>:



void Set_Traverse_RPM(long rpm)
{
    292c:	cf 93       	push	r28
    292e:	df 93       	push	r29
    2930:	cd b7       	in	r28, 0x3d	; 61
    2932:	de b7       	in	r29, 0x3e	; 62
    2934:	28 97       	sbiw	r28, 0x08	; 8
    2936:	0f b6       	in	r0, 0x3f	; 63
    2938:	f8 94       	cli
    293a:	de bf       	out	0x3e, r29	; 62
    293c:	0f be       	out	0x3f, r0	; 63
    293e:	cd bf       	out	0x3d, r28	; 61
    2940:	6d 83       	std	Y+5, r22	; 0x05
    2942:	7e 83       	std	Y+6, r23	; 0x06
    2944:	8f 83       	std	Y+7, r24	; 0x07
    2946:	98 87       	std	Y+8, r25	; 0x08
	
	uint32_t pps = (rpm * MOTOR_STEPS_PER_REV) / 60; // pps is also the frequency, 60 is minutes to seconds
    2948:	2d 81       	ldd	r18, Y+5	; 0x05
    294a:	3e 81       	ldd	r19, Y+6	; 0x06
    294c:	4f 81       	ldd	r20, Y+7	; 0x07
    294e:	58 85       	ldd	r21, Y+8	; 0x08
    2950:	80 e8       	ldi	r24, 0x80	; 128
    2952:	9c e0       	ldi	r25, 0x0C	; 12
    2954:	dc 01       	movw	r26, r24
    2956:	0e 94 06 1a 	call	0x340c	; 0x340c <__muluhisi3>
    295a:	dc 01       	movw	r26, r24
    295c:	cb 01       	movw	r24, r22
    295e:	2c e3       	ldi	r18, 0x3C	; 60
    2960:	30 e0       	ldi	r19, 0x00	; 0
    2962:	40 e0       	ldi	r20, 0x00	; 0
    2964:	50 e0       	ldi	r21, 0x00	; 0
    2966:	bc 01       	movw	r22, r24
    2968:	cd 01       	movw	r24, r26
    296a:	0e 94 e7 19 	call	0x33ce	; 0x33ce <__divmodsi4>
    296e:	da 01       	movw	r26, r20
    2970:	c9 01       	movw	r24, r18
    2972:	89 83       	std	Y+1, r24	; 0x01
    2974:	9a 83       	std	Y+2, r25	; 0x02
    2976:	ab 83       	std	Y+3, r26	; 0x03
    2978:	bc 83       	std	Y+4, r27	; 0x04
	pps = pps * 2; //* 2 to get two half period waves
    297a:	89 81       	ldd	r24, Y+1	; 0x01
    297c:	9a 81       	ldd	r25, Y+2	; 0x02
    297e:	ab 81       	ldd	r26, Y+3	; 0x03
    2980:	bc 81       	ldd	r27, Y+4	; 0x04
    2982:	88 0f       	add	r24, r24
    2984:	99 1f       	adc	r25, r25
    2986:	aa 1f       	adc	r26, r26
    2988:	bb 1f       	adc	r27, r27
    298a:	89 83       	std	Y+1, r24	; 0x01
    298c:	9a 83       	std	Y+2, r25	; 0x02
    298e:	ab 83       	std	Y+3, r26	; 0x03
    2990:	bc 83       	std	Y+4, r27	; 0x04
	stepDelay = F_CPU / (1 * pps) - 1;
    2992:	80 e0       	ldi	r24, 0x00	; 0
    2994:	94 e2       	ldi	r25, 0x24	; 36
    2996:	a4 ef       	ldi	r26, 0xF4	; 244
    2998:	b0 e0       	ldi	r27, 0x00	; 0
    299a:	29 81       	ldd	r18, Y+1	; 0x01
    299c:	3a 81       	ldd	r19, Y+2	; 0x02
    299e:	4b 81       	ldd	r20, Y+3	; 0x03
    29a0:	5c 81       	ldd	r21, Y+4	; 0x04
    29a2:	bc 01       	movw	r22, r24
    29a4:	cd 01       	movw	r24, r26
    29a6:	0e 94 c5 19 	call	0x338a	; 0x338a <__udivmodsi4>
    29aa:	da 01       	movw	r26, r20
    29ac:	c9 01       	movw	r24, r18
    29ae:	01 97       	sbiw	r24, 0x01	; 1
    29b0:	a1 09       	sbc	r26, r1
    29b2:	b1 09       	sbc	r27, r1
    29b4:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <stepDelay>
    29b8:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <stepDelay+0x1>
    29bc:	a0 93 a2 01 	sts	0x01A2, r26	; 0x8001a2 <stepDelay+0x2>
    29c0:	b0 93 a3 01 	sts	0x01A3, r27	; 0x8001a3 <stepDelay+0x3>
	}
    29c4:	00 00       	nop
    29c6:	28 96       	adiw	r28, 0x08	; 8
    29c8:	0f b6       	in	r0, 0x3f	; 63
    29ca:	f8 94       	cli
    29cc:	de bf       	out	0x3e, r29	; 62
    29ce:	0f be       	out	0x3f, r0	; 63
    29d0:	cd bf       	out	0x3d, r28	; 61
    29d2:	df 91       	pop	r29
    29d4:	cf 91       	pop	r28
    29d6:	08 95       	ret

000029d8 <_Z41__static_initialization_and_destruction_0ii>:
    29d8:	cf 93       	push	r28
    29da:	df 93       	push	r29
    29dc:	00 d0       	rcall	.+0      	; 0x29de <_Z41__static_initialization_and_destruction_0ii+0x6>
    29de:	00 d0       	rcall	.+0      	; 0x29e0 <_Z41__static_initialization_and_destruction_0ii+0x8>
    29e0:	cd b7       	in	r28, 0x3d	; 61
    29e2:	de b7       	in	r29, 0x3e	; 62
    29e4:	9a 83       	std	Y+2, r25	; 0x02
    29e6:	89 83       	std	Y+1, r24	; 0x01
    29e8:	7c 83       	std	Y+4, r23	; 0x04
    29ea:	6b 83       	std	Y+3, r22	; 0x03
    29ec:	89 81       	ldd	r24, Y+1	; 0x01
    29ee:	9a 81       	ldd	r25, Y+2	; 0x02
    29f0:	01 97       	sbiw	r24, 0x01	; 1
    29f2:	c1 f5       	brne	.+112    	; 0x2a64 <_Z41__static_initialization_and_destruction_0ii+0x8c>
    29f4:	8b 81       	ldd	r24, Y+3	; 0x03
    29f6:	9c 81       	ldd	r25, Y+4	; 0x04
    29f8:	01 96       	adiw	r24, 0x01	; 1
    29fa:	a1 f5       	brne	.+104    	; 0x2a64 <_Z41__static_initialization_and_destruction_0ii+0x8c>



int spoolUpdateInterval = 2000;
int fullAutoUpdateInterval = 50;
long previousFullAutoTime = fullAutoUpdateInterval;
    29fc:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <fullAutoUpdateInterval>
    2a00:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <fullAutoUpdateInterval+0x1>
    2a04:	09 2e       	mov	r0, r25
    2a06:	00 0c       	add	r0, r0
    2a08:	aa 0b       	sbc	r26, r26
    2a0a:	bb 0b       	sbc	r27, r27
    2a0c:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <previousFullAutoTime>
    2a10:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <previousFullAutoTime+0x1>
    2a14:	a0 93 b8 03 	sts	0x03B8, r26	; 0x8003b8 <previousFullAutoTime+0x2>
    2a18:	b0 93 b9 03 	sts	0x03B9, r27	; 0x8003b9 <previousFullAutoTime+0x3>
long previousSpoolTime = spoolUpdateInterval;
    2a1c:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <spoolUpdateInterval>
    2a20:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <spoolUpdateInterval+0x1>
    2a24:	09 2e       	mov	r0, r25
    2a26:	00 0c       	add	r0, r0
    2a28:	aa 0b       	sbc	r26, r26
    2a2a:	bb 0b       	sbc	r27, r27
    2a2c:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <previousSpoolTime>
    2a30:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <previousSpoolTime+0x1>
    2a34:	a0 93 bc 03 	sts	0x03BC, r26	; 0x8003bc <previousSpoolTime+0x2>
    2a38:	b0 93 bd 03 	sts	0x03BD, r27	; 0x8003bd <previousSpoolTime+0x3>
uint32_t serialTimerMillis = 1000; //Serial output scheduler delay time
uint32_t serialTimerPreviousMillis = 0; //Current delay time
volatile uint32_t totalspoolTicks = 0;
volatile uint32_t previousSpoolTicks = 0;
static unsigned long last_millis = 0;
unsigned long m = millis();
    2a3c:	0e 94 32 19 	call	0x3264	; 0x3264 <millis>
    2a40:	dc 01       	movw	r26, r24
    2a42:	cb 01       	movw	r24, r22
    2a44:	80 93 ca 03 	sts	0x03CA, r24	; 0x8003ca <m>
    2a48:	90 93 cb 03 	sts	0x03CB, r25	; 0x8003cb <m+0x1>
    2a4c:	a0 93 cc 03 	sts	0x03CC, r26	; 0x8003cc <m+0x2>
    2a50:	b0 93 cd 03 	sts	0x03CD, r27	; 0x8003cd <m+0x3>
volatile bool potEnabled = true;
#else
volatile bool potEnabled = false;
#endif

Serial_Commands _Serial_Commands;
    2a54:	8d ed       	ldi	r24, 0xDD	; 221
    2a56:	93 e0       	ldi	r25, 0x03	; 3
    2a58:	0e 94 4d 06 	call	0xc9a	; 0xc9a <_ZN15Serial_CommandsC1Ev>
Math_Helpers _Math_Helpers;
    2a5c:	8e ed       	ldi	r24, 0xDE	; 222
    2a5e:	93 e0       	ldi	r25, 0x03	; 3
    2a60:	0e 94 cb 00 	call	0x196	; 0x196 <_ZN12Math_HelpersC1Ev>
    2a64:	89 81       	ldd	r24, Y+1	; 0x01
    2a66:	9a 81       	ldd	r25, Y+2	; 0x02
    2a68:	89 2b       	or	r24, r25
    2a6a:	61 f4       	brne	.+24     	; 0x2a84 <_Z41__static_initialization_and_destruction_0ii+0xac>
    2a6c:	8b 81       	ldd	r24, Y+3	; 0x03
    2a6e:	9c 81       	ldd	r25, Y+4	; 0x04
    2a70:	01 96       	adiw	r24, 0x01	; 1
    2a72:	41 f4       	brne	.+16     	; 0x2a84 <_Z41__static_initialization_and_destruction_0ii+0xac>
    2a74:	8e ed       	ldi	r24, 0xDE	; 222
    2a76:	93 e0       	ldi	r25, 0x03	; 3
    2a78:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <_ZN12Math_HelpersD1Ev>
volatile bool potEnabled = true;
#else
volatile bool potEnabled = false;
#endif

Serial_Commands _Serial_Commands;
    2a7c:	8d ed       	ldi	r24, 0xDD	; 221
    2a7e:	93 e0       	ldi	r25, 0x03	; 3
    2a80:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZN15Serial_CommandsD1Ev>
{
	
	uint32_t pps = (rpm * MOTOR_STEPS_PER_REV) / 60; // pps is also the frequency, 60 is minutes to seconds
	pps = pps * 2; //* 2 to get two half period waves
	stepDelay = F_CPU / (1 * pps) - 1;
	}
    2a84:	00 00       	nop
    2a86:	0f 90       	pop	r0
    2a88:	0f 90       	pop	r0
    2a8a:	0f 90       	pop	r0
    2a8c:	0f 90       	pop	r0
    2a8e:	df 91       	pop	r29
    2a90:	cf 91       	pop	r28
    2a92:	08 95       	ret

00002a94 <_GLOBAL__sub_I_pcmsk>:
    2a94:	cf 93       	push	r28
    2a96:	df 93       	push	r29
    2a98:	cd b7       	in	r28, 0x3d	; 61
    2a9a:	de b7       	in	r29, 0x3e	; 62
    2a9c:	6f ef       	ldi	r22, 0xFF	; 255
    2a9e:	7f ef       	ldi	r23, 0xFF	; 255
    2aa0:	81 e0       	ldi	r24, 0x01	; 1
    2aa2:	90 e0       	ldi	r25, 0x00	; 0
    2aa4:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <_Z41__static_initialization_and_destruction_0ii>
    2aa8:	df 91       	pop	r29
    2aaa:	cf 91       	pop	r28
    2aac:	08 95       	ret

00002aae <_GLOBAL__sub_D_pcmsk>:
    2aae:	cf 93       	push	r28
    2ab0:	df 93       	push	r29
    2ab2:	cd b7       	in	r28, 0x3d	; 61
    2ab4:	de b7       	in	r29, 0x3e	; 62
    2ab6:	6f ef       	ldi	r22, 0xFF	; 255
    2ab8:	7f ef       	ldi	r23, 0xFF	; 255
    2aba:	80 e0       	ldi	r24, 0x00	; 0
    2abc:	90 e0       	ldi	r25, 0x00	; 0
    2abe:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <_Z41__static_initialization_and_destruction_0ii>
    2ac2:	df 91       	pop	r29
    2ac4:	cf 91       	pop	r28
    2ac6:	08 95       	ret

00002ac8 <_ZN25Step_Output_ConfigurationC1Ev>:
#include <Arduino.h>
#include "Step_Output_Configuration.h"


// default constructor
Step_Output_Configuration::Step_Output_Configuration()
    2ac8:	cf 93       	push	r28
    2aca:	df 93       	push	r29
    2acc:	00 d0       	rcall	.+0      	; 0x2ace <_ZN25Step_Output_ConfigurationC1Ev+0x6>
    2ace:	cd b7       	in	r28, 0x3d	; 61
    2ad0:	de b7       	in	r29, 0x3e	; 62
    2ad2:	9a 83       	std	Y+2, r25	; 0x02
    2ad4:	89 83       	std	Y+1, r24	; 0x01
{
} //Step_Output_Configuration
    2ad6:	00 00       	nop
    2ad8:	0f 90       	pop	r0
    2ada:	0f 90       	pop	r0
    2adc:	df 91       	pop	r29
    2ade:	cf 91       	pop	r28
    2ae0:	08 95       	ret

00002ae2 <_ZN25Step_Output_Configuration15SetupStepOutputEv>:

void Step_Output_Configuration::SetupStepOutput(void)
{
    2ae2:	cf 93       	push	r28
    2ae4:	df 93       	push	r29
    2ae6:	cd b7       	in	r28, 0x3d	; 61
    2ae8:	de b7       	in	r29, 0x3e	; 62
  //normal mode
  TCCR1A = 0x00;
    2aea:	80 e8       	ldi	r24, 0x80	; 128
    2aec:	90 e0       	ldi	r25, 0x00	; 0
    2aee:	fc 01       	movw	r30, r24
    2af0:	10 82       	st	Z, r1
  OCR1A   = 0;
    2af2:	88 e8       	ldi	r24, 0x88	; 136
    2af4:	90 e0       	ldi	r25, 0x00	; 0
    2af6:	fc 01       	movw	r30, r24
    2af8:	11 82       	std	Z+1, r1	; 0x01
    2afa:	10 82       	st	Z, r1
  TCCR1B = (1<<CS10);
    2afc:	81 e8       	ldi	r24, 0x81	; 129
    2afe:	90 e0       	ldi	r25, 0x00	; 0
    2b00:	21 e0       	ldi	r18, 0x01	; 1
    2b02:	fc 01       	movw	r30, r24
    2b04:	20 83       	st	Z, r18
  TIMSK1 |= bit (TOIE1);
    2b06:	8f e6       	ldi	r24, 0x6F	; 111
    2b08:	90 e0       	ldi	r25, 0x00	; 0
    2b0a:	2f e6       	ldi	r18, 0x6F	; 111
    2b0c:	30 e0       	ldi	r19, 0x00	; 0
    2b0e:	f9 01       	movw	r30, r18
    2b10:	20 81       	ld	r18, Z
    2b12:	21 60       	ori	r18, 0x01	; 1
    2b14:	fc 01       	movw	r30, r24
    2b16:	20 83       	st	Z, r18
}
    2b18:	00 00       	nop
    2b1a:	df 91       	pop	r29
    2b1c:	cf 91       	pop	r28
    2b1e:	08 95       	ret

00002b20 <_ZN25Step_Output_ConfigurationD1Ev>:

// default destructor
Step_Output_Configuration::~Step_Output_Configuration()
    2b20:	cf 93       	push	r28
    2b22:	df 93       	push	r29
    2b24:	00 d0       	rcall	.+0      	; 0x2b26 <_ZN25Step_Output_ConfigurationD1Ev+0x6>
    2b26:	cd b7       	in	r28, 0x3d	; 61
    2b28:	de b7       	in	r29, 0x3e	; 62
    2b2a:	9a 83       	std	Y+2, r25	; 0x02
    2b2c:	89 83       	std	Y+1, r24	; 0x01
{
} //~Step_Output_Configuration
    2b2e:	00 00       	nop
    2b30:	0f 90       	pop	r0
    2b32:	0f 90       	pop	r0
    2b34:	df 91       	pop	r29
    2b36:	cf 91       	pop	r28
    2b38:	08 95       	ret

00002b3a <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    2b3a:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    2b3c:	91 8d       	ldd	r25, Z+25	; 0x19
    2b3e:	22 8d       	ldd	r18, Z+26	; 0x1a
    2b40:	89 2f       	mov	r24, r25
    2b42:	90 e0       	ldi	r25, 0x00	; 0
    2b44:	80 5c       	subi	r24, 0xC0	; 192
    2b46:	9f 4f       	sbci	r25, 0xFF	; 255
    2b48:	82 1b       	sub	r24, r18
    2b4a:	91 09       	sbc	r25, r1
}
    2b4c:	8f 73       	andi	r24, 0x3F	; 63
    2b4e:	99 27       	eor	r25, r25
    2b50:	08 95       	ret

00002b52 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    2b52:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    2b54:	91 8d       	ldd	r25, Z+25	; 0x19
    2b56:	82 8d       	ldd	r24, Z+26	; 0x1a
    2b58:	98 17       	cp	r25, r24
    2b5a:	31 f0       	breq	.+12     	; 0x2b68 <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    2b5c:	82 8d       	ldd	r24, Z+26	; 0x1a
    2b5e:	e8 0f       	add	r30, r24
    2b60:	f1 1d       	adc	r31, r1
    2b62:	85 8d       	ldd	r24, Z+29	; 0x1d
    2b64:	90 e0       	ldi	r25, 0x00	; 0
    2b66:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    2b68:	8f ef       	ldi	r24, 0xFF	; 255
    2b6a:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    2b6c:	08 95       	ret

00002b6e <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    2b6e:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    2b70:	91 8d       	ldd	r25, Z+25	; 0x19
    2b72:	82 8d       	ldd	r24, Z+26	; 0x1a
    2b74:	98 17       	cp	r25, r24
    2b76:	61 f0       	breq	.+24     	; 0x2b90 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    2b78:	82 8d       	ldd	r24, Z+26	; 0x1a
    2b7a:	df 01       	movw	r26, r30
    2b7c:	a8 0f       	add	r26, r24
    2b7e:	b1 1d       	adc	r27, r1
    2b80:	5d 96       	adiw	r26, 0x1d	; 29
    2b82:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    2b84:	92 8d       	ldd	r25, Z+26	; 0x1a
    2b86:	9f 5f       	subi	r25, 0xFF	; 255
    2b88:	9f 73       	andi	r25, 0x3F	; 63
    2b8a:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    2b8c:	90 e0       	ldi	r25, 0x00	; 0
    2b8e:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    2b90:	8f ef       	ldi	r24, 0xFF	; 255
    2b92:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    2b94:	08 95       	ret

00002b96 <_ZN14HardwareSerial17availableForWriteEv>:
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    2b96:	fc 01       	movw	r30, r24
    2b98:	53 8d       	ldd	r21, Z+27	; 0x1b
    tail = _tx_buffer_tail;
    2b9a:	44 8d       	ldd	r20, Z+28	; 0x1c
    2b9c:	25 2f       	mov	r18, r21
    2b9e:	30 e0       	ldi	r19, 0x00	; 0
    2ba0:	84 2f       	mov	r24, r20
    2ba2:	90 e0       	ldi	r25, 0x00	; 0
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    2ba4:	82 1b       	sub	r24, r18
    2ba6:	93 0b       	sbc	r25, r19
    2ba8:	54 17       	cp	r21, r20
    2baa:	10 f0       	brcs	.+4      	; 0x2bb0 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    2bac:	cf 96       	adiw	r24, 0x3f	; 63
    2bae:	08 95       	ret
  return tail - head - 1;
    2bb0:	01 97       	sbiw	r24, 0x01	; 1
}
    2bb2:	08 95       	ret

00002bb4 <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    2bb4:	86 e3       	ldi	r24, 0x36	; 54
    2bb6:	97 e1       	ldi	r25, 0x17	; 23
    2bb8:	89 2b       	or	r24, r25
    2bba:	49 f0       	breq	.+18     	; 0x2bce <_Z14serialEventRunv+0x1a>
    2bbc:	80 e0       	ldi	r24, 0x00	; 0
    2bbe:	90 e0       	ldi	r25, 0x00	; 0
    2bc0:	89 2b       	or	r24, r25
    2bc2:	29 f0       	breq	.+10     	; 0x2bce <_Z14serialEventRunv+0x1a>
    2bc4:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <_Z17Serial0_availablev>
    2bc8:	81 11       	cpse	r24, r1
    2bca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    2bce:	08 95       	ret

00002bd0 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    2bd0:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    2bd2:	84 8d       	ldd	r24, Z+28	; 0x1c
    2bd4:	df 01       	movw	r26, r30
    2bd6:	a8 0f       	add	r26, r24
    2bd8:	b1 1d       	adc	r27, r1
    2bda:	a3 5a       	subi	r26, 0xA3	; 163
    2bdc:	bf 4f       	sbci	r27, 0xFF	; 255
    2bde:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    2be0:	84 8d       	ldd	r24, Z+28	; 0x1c
    2be2:	90 e0       	ldi	r25, 0x00	; 0
    2be4:	01 96       	adiw	r24, 0x01	; 1
    2be6:	8f 73       	andi	r24, 0x3F	; 63
    2be8:	99 27       	eor	r25, r25
    2bea:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    2bec:	a6 89       	ldd	r26, Z+22	; 0x16
    2bee:	b7 89       	ldd	r27, Z+23	; 0x17
    2bf0:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    2bf2:	a0 89       	ldd	r26, Z+16	; 0x10
    2bf4:	b1 89       	ldd	r27, Z+17	; 0x11
    2bf6:	8c 91       	ld	r24, X
    2bf8:	83 70       	andi	r24, 0x03	; 3
    2bfa:	80 64       	ori	r24, 0x40	; 64
    2bfc:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    2bfe:	93 8d       	ldd	r25, Z+27	; 0x1b
    2c00:	84 8d       	ldd	r24, Z+28	; 0x1c
    2c02:	98 13       	cpse	r25, r24
    2c04:	06 c0       	rjmp	.+12     	; 0x2c12 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    2c06:	02 88       	ldd	r0, Z+18	; 0x12
    2c08:	f3 89       	ldd	r31, Z+19	; 0x13
    2c0a:	e0 2d       	mov	r30, r0
    2c0c:	80 81       	ld	r24, Z
    2c0e:	8f 7d       	andi	r24, 0xDF	; 223
    2c10:	80 83       	st	Z, r24
    2c12:	08 95       	ret

00002c14 <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    2c14:	ef 92       	push	r14
    2c16:	ff 92       	push	r15
    2c18:	0f 93       	push	r16
    2c1a:	1f 93       	push	r17
    2c1c:	cf 93       	push	r28
    2c1e:	df 93       	push	r29
    2c20:	ec 01       	movw	r28, r24
  _written = true;
    2c22:	81 e0       	ldi	r24, 0x01	; 1
    2c24:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    2c26:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2c28:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2c2a:	98 13       	cpse	r25, r24
    2c2c:	05 c0       	rjmp	.+10     	; 0x2c38 <_ZN14HardwareSerial5writeEh+0x24>
    2c2e:	e8 89       	ldd	r30, Y+16	; 0x10
    2c30:	f9 89       	ldd	r31, Y+17	; 0x11
    2c32:	80 81       	ld	r24, Z
    2c34:	85 fd       	sbrc	r24, 5
    2c36:	26 c0       	rjmp	.+76     	; 0x2c84 <_ZN14HardwareSerial5writeEh+0x70>
    2c38:	f6 2e       	mov	r15, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    2c3a:	0b 8d       	ldd	r16, Y+27	; 0x1b
    2c3c:	10 e0       	ldi	r17, 0x00	; 0
    2c3e:	0f 5f       	subi	r16, 0xFF	; 255
    2c40:	1f 4f       	sbci	r17, 0xFF	; 255
    2c42:	0f 73       	andi	r16, 0x3F	; 63
    2c44:	11 27       	eor	r17, r17
    2c46:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    2c48:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2c4a:	e8 12       	cpse	r14, r24
    2c4c:	0c c0       	rjmp	.+24     	; 0x2c66 <_ZN14HardwareSerial5writeEh+0x52>
    if (bit_is_clear(SREG, SREG_I)) {
    2c4e:	0f b6       	in	r0, 0x3f	; 63
    2c50:	07 fc       	sbrc	r0, 7
    2c52:	fa cf       	rjmp	.-12     	; 0x2c48 <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    2c54:	e8 89       	ldd	r30, Y+16	; 0x10
    2c56:	f9 89       	ldd	r31, Y+17	; 0x11
    2c58:	80 81       	ld	r24, Z
    2c5a:	85 ff       	sbrs	r24, 5
    2c5c:	f5 cf       	rjmp	.-22     	; 0x2c48 <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    2c5e:	ce 01       	movw	r24, r28
    2c60:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    2c64:	f1 cf       	rjmp	.-30     	; 0x2c48 <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    2c66:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2c68:	fe 01       	movw	r30, r28
    2c6a:	e8 0f       	add	r30, r24
    2c6c:	f1 1d       	adc	r31, r1
    2c6e:	e3 5a       	subi	r30, 0xA3	; 163
    2c70:	ff 4f       	sbci	r31, 0xFF	; 255
    2c72:	f0 82       	st	Z, r15

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    2c74:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    2c76:	f8 94       	cli
    _tx_buffer_head = i;
    2c78:	0b 8f       	std	Y+27, r16	; 0x1b
    sbi(*_ucsrb, UDRIE0);
    2c7a:	ea 89       	ldd	r30, Y+18	; 0x12
    2c7c:	fb 89       	ldd	r31, Y+19	; 0x13
    2c7e:	80 81       	ld	r24, Z
    2c80:	80 62       	ori	r24, 0x20	; 32
    2c82:	0a c0       	rjmp	.+20     	; 0x2c98 <_ZN14HardwareSerial5writeEh+0x84>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    2c84:	9f b7       	in	r25, 0x3f	; 63
    2c86:	f8 94       	cli
      *_udr = c;
    2c88:	ee 89       	ldd	r30, Y+22	; 0x16
    2c8a:	ff 89       	ldd	r31, Y+23	; 0x17
    2c8c:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    2c8e:	e8 89       	ldd	r30, Y+16	; 0x10
    2c90:	f9 89       	ldd	r31, Y+17	; 0x11
    2c92:	80 81       	ld	r24, Z
    2c94:	83 70       	andi	r24, 0x03	; 3
    2c96:	80 64       	ori	r24, 0x40	; 64
    2c98:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    2c9a:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
    2c9c:	81 e0       	ldi	r24, 0x01	; 1
    2c9e:	90 e0       	ldi	r25, 0x00	; 0
    2ca0:	df 91       	pop	r29
    2ca2:	cf 91       	pop	r28
    2ca4:	1f 91       	pop	r17
    2ca6:	0f 91       	pop	r16
    2ca8:	ff 90       	pop	r15
    2caa:	ef 90       	pop	r14
    2cac:	08 95       	ret

00002cae <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    2cae:	cf 93       	push	r28
    2cb0:	df 93       	push	r29
    2cb2:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    2cb4:	88 8d       	ldd	r24, Y+24	; 0x18
    2cb6:	88 23       	and	r24, r24
    2cb8:	c9 f0       	breq	.+50     	; 0x2cec <_ZN14HardwareSerial5flushEv+0x3e>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    2cba:	ea 89       	ldd	r30, Y+18	; 0x12
    2cbc:	fb 89       	ldd	r31, Y+19	; 0x13
    2cbe:	80 81       	ld	r24, Z
    2cc0:	85 fd       	sbrc	r24, 5
    2cc2:	05 c0       	rjmp	.+10     	; 0x2cce <_ZN14HardwareSerial5flushEv+0x20>
    2cc4:	a8 89       	ldd	r26, Y+16	; 0x10
    2cc6:	b9 89       	ldd	r27, Y+17	; 0x11
    2cc8:	8c 91       	ld	r24, X
    2cca:	86 fd       	sbrc	r24, 6
    2ccc:	0f c0       	rjmp	.+30     	; 0x2cec <_ZN14HardwareSerial5flushEv+0x3e>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    2cce:	0f b6       	in	r0, 0x3f	; 63
    2cd0:	07 fc       	sbrc	r0, 7
    2cd2:	f5 cf       	rjmp	.-22     	; 0x2cbe <_ZN14HardwareSerial5flushEv+0x10>
    2cd4:	80 81       	ld	r24, Z
    2cd6:	85 ff       	sbrs	r24, 5
    2cd8:	f2 cf       	rjmp	.-28     	; 0x2cbe <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    2cda:	a8 89       	ldd	r26, Y+16	; 0x10
    2cdc:	b9 89       	ldd	r27, Y+17	; 0x11
    2cde:	8c 91       	ld	r24, X
    2ce0:	85 ff       	sbrs	r24, 5
    2ce2:	ed cf       	rjmp	.-38     	; 0x2cbe <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    2ce4:	ce 01       	movw	r24, r28
    2ce6:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    2cea:	e7 cf       	rjmp	.-50     	; 0x2cba <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    2cec:	df 91       	pop	r29
    2cee:	cf 91       	pop	r28
    2cf0:	08 95       	ret

00002cf2 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    2cf2:	cf 92       	push	r12
    2cf4:	df 92       	push	r13
    2cf6:	ef 92       	push	r14
    2cf8:	ff 92       	push	r15
    2cfa:	1f 93       	push	r17
    2cfc:	cf 93       	push	r28
    2cfe:	df 93       	push	r29
    2d00:	ec 01       	movw	r28, r24
    2d02:	6a 01       	movw	r12, r20
    2d04:	7b 01       	movw	r14, r22
    2d06:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    2d08:	e8 89       	ldd	r30, Y+16	; 0x10
    2d0a:	f9 89       	ldd	r31, Y+17	; 0x11
    2d0c:	82 e0       	ldi	r24, 0x02	; 2
    2d0e:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    2d10:	41 15       	cp	r20, r1
    2d12:	51 4e       	sbci	r21, 0xE1	; 225
    2d14:	61 05       	cpc	r22, r1
    2d16:	71 05       	cpc	r23, r1
    2d18:	b1 f0       	breq	.+44     	; 0x2d46 <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    2d1a:	60 e0       	ldi	r22, 0x00	; 0
    2d1c:	79 e0       	ldi	r23, 0x09	; 9
    2d1e:	8d e3       	ldi	r24, 0x3D	; 61
    2d20:	90 e0       	ldi	r25, 0x00	; 0
    2d22:	a7 01       	movw	r20, r14
    2d24:	96 01       	movw	r18, r12
    2d26:	0e 94 c5 19 	call	0x338a	; 0x338a <__udivmodsi4>
    2d2a:	da 01       	movw	r26, r20
    2d2c:	c9 01       	movw	r24, r18
    2d2e:	01 97       	sbiw	r24, 0x01	; 1
    2d30:	a1 09       	sbc	r26, r1
    2d32:	b1 09       	sbc	r27, r1
    2d34:	b6 95       	lsr	r27
    2d36:	a7 95       	ror	r26
    2d38:	97 95       	ror	r25
    2d3a:	87 95       	ror	r24
    2d3c:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    2d3e:	21 15       	cp	r18, r1
    2d40:	80 e1       	ldi	r24, 0x10	; 16
    2d42:	38 07       	cpc	r19, r24
    2d44:	a8 f0       	brcs	.+42     	; 0x2d70 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
    2d46:	e8 89       	ldd	r30, Y+16	; 0x10
    2d48:	f9 89       	ldd	r31, Y+17	; 0x11
    2d4a:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    2d4c:	60 e8       	ldi	r22, 0x80	; 128
    2d4e:	74 e8       	ldi	r23, 0x84	; 132
    2d50:	8e e1       	ldi	r24, 0x1E	; 30
    2d52:	90 e0       	ldi	r25, 0x00	; 0
    2d54:	a7 01       	movw	r20, r14
    2d56:	96 01       	movw	r18, r12
    2d58:	0e 94 c5 19 	call	0x338a	; 0x338a <__udivmodsi4>
    2d5c:	da 01       	movw	r26, r20
    2d5e:	c9 01       	movw	r24, r18
    2d60:	01 97       	sbiw	r24, 0x01	; 1
    2d62:	a1 09       	sbc	r26, r1
    2d64:	b1 09       	sbc	r27, r1
    2d66:	b6 95       	lsr	r27
    2d68:	a7 95       	ror	r26
    2d6a:	97 95       	ror	r25
    2d6c:	87 95       	ror	r24
    2d6e:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    2d70:	ec 85       	ldd	r30, Y+12	; 0x0c
    2d72:	fd 85       	ldd	r31, Y+13	; 0x0d
    2d74:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    2d76:	ee 85       	ldd	r30, Y+14	; 0x0e
    2d78:	ff 85       	ldd	r31, Y+15	; 0x0f
    2d7a:	20 83       	st	Z, r18

  _written = false;
    2d7c:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    2d7e:	ec 89       	ldd	r30, Y+20	; 0x14
    2d80:	fd 89       	ldd	r31, Y+21	; 0x15
    2d82:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    2d84:	ea 89       	ldd	r30, Y+18	; 0x12
    2d86:	fb 89       	ldd	r31, Y+19	; 0x13
    2d88:	80 81       	ld	r24, Z
    2d8a:	80 61       	ori	r24, 0x10	; 16
    2d8c:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    2d8e:	ea 89       	ldd	r30, Y+18	; 0x12
    2d90:	fb 89       	ldd	r31, Y+19	; 0x13
    2d92:	80 81       	ld	r24, Z
    2d94:	88 60       	ori	r24, 0x08	; 8
    2d96:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    2d98:	ea 89       	ldd	r30, Y+18	; 0x12
    2d9a:	fb 89       	ldd	r31, Y+19	; 0x13
    2d9c:	80 81       	ld	r24, Z
    2d9e:	80 68       	ori	r24, 0x80	; 128
    2da0:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    2da2:	ea 89       	ldd	r30, Y+18	; 0x12
    2da4:	fb 89       	ldd	r31, Y+19	; 0x13
    2da6:	80 81       	ld	r24, Z
    2da8:	8f 7d       	andi	r24, 0xDF	; 223
    2daa:	80 83       	st	Z, r24
}
    2dac:	df 91       	pop	r29
    2dae:	cf 91       	pop	r28
    2db0:	1f 91       	pop	r17
    2db2:	ff 90       	pop	r15
    2db4:	ef 90       	pop	r14
    2db6:	df 90       	pop	r13
    2db8:	cf 90       	pop	r12
    2dba:	08 95       	ret

00002dbc <__vector_18>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    2dbc:	1f 92       	push	r1
    2dbe:	0f 92       	push	r0
    2dc0:	0f b6       	in	r0, 0x3f	; 63
    2dc2:	0f 92       	push	r0
    2dc4:	11 24       	eor	r1, r1
    2dc6:	2f 93       	push	r18
    2dc8:	8f 93       	push	r24
    2dca:	9f 93       	push	r25
    2dcc:	ef 93       	push	r30
    2dce:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    2dd0:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <Serial+0x10>
    2dd4:	f0 91 f0 03 	lds	r31, 0x03F0	; 0x8003f0 <Serial+0x11>
    2dd8:	80 81       	ld	r24, Z
    2dda:	e0 91 f5 03 	lds	r30, 0x03F5	; 0x8003f5 <Serial+0x16>
    2dde:	f0 91 f6 03 	lds	r31, 0x03F6	; 0x8003f6 <Serial+0x17>
    2de2:	82 fd       	sbrc	r24, 2
    2de4:	12 c0       	rjmp	.+36     	; 0x2e0a <__vector_18+0x4e>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    2de6:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    2de8:	80 91 f8 03 	lds	r24, 0x03F8	; 0x8003f8 <Serial+0x19>
    2dec:	8f 5f       	subi	r24, 0xFF	; 255
    2dee:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    2df0:	20 91 f9 03 	lds	r18, 0x03F9	; 0x8003f9 <Serial+0x1a>
    2df4:	82 17       	cp	r24, r18
    2df6:	51 f0       	breq	.+20     	; 0x2e0c <__vector_18+0x50>
      _rx_buffer[_rx_buffer_head] = c;
    2df8:	e0 91 f8 03 	lds	r30, 0x03F8	; 0x8003f8 <Serial+0x19>
    2dfc:	f0 e0       	ldi	r31, 0x00	; 0
    2dfe:	e1 52       	subi	r30, 0x21	; 33
    2e00:	fc 4f       	sbci	r31, 0xFC	; 252
    2e02:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    2e04:	80 93 f8 03 	sts	0x03F8, r24	; 0x8003f8 <Serial+0x19>
    2e08:	01 c0       	rjmp	.+2      	; 0x2e0c <__vector_18+0x50>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    2e0a:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    2e0c:	ff 91       	pop	r31
    2e0e:	ef 91       	pop	r30
    2e10:	9f 91       	pop	r25
    2e12:	8f 91       	pop	r24
    2e14:	2f 91       	pop	r18
    2e16:	0f 90       	pop	r0
    2e18:	0f be       	out	0x3f, r0	; 63
    2e1a:	0f 90       	pop	r0
    2e1c:	1f 90       	pop	r1
    2e1e:	18 95       	reti

00002e20 <__vector_19>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    2e20:	1f 92       	push	r1
    2e22:	0f 92       	push	r0
    2e24:	0f b6       	in	r0, 0x3f	; 63
    2e26:	0f 92       	push	r0
    2e28:	11 24       	eor	r1, r1
    2e2a:	2f 93       	push	r18
    2e2c:	3f 93       	push	r19
    2e2e:	4f 93       	push	r20
    2e30:	5f 93       	push	r21
    2e32:	6f 93       	push	r22
    2e34:	7f 93       	push	r23
    2e36:	8f 93       	push	r24
    2e38:	9f 93       	push	r25
    2e3a:	af 93       	push	r26
    2e3c:	bf 93       	push	r27
    2e3e:	ef 93       	push	r30
    2e40:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    2e42:	8f ed       	ldi	r24, 0xDF	; 223
    2e44:	93 e0       	ldi	r25, 0x03	; 3
    2e46:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    2e4a:	ff 91       	pop	r31
    2e4c:	ef 91       	pop	r30
    2e4e:	bf 91       	pop	r27
    2e50:	af 91       	pop	r26
    2e52:	9f 91       	pop	r25
    2e54:	8f 91       	pop	r24
    2e56:	7f 91       	pop	r23
    2e58:	6f 91       	pop	r22
    2e5a:	5f 91       	pop	r21
    2e5c:	4f 91       	pop	r20
    2e5e:	3f 91       	pop	r19
    2e60:	2f 91       	pop	r18
    2e62:	0f 90       	pop	r0
    2e64:	0f be       	out	0x3f, r0	; 63
    2e66:	0f 90       	pop	r0
    2e68:	1f 90       	pop	r1
    2e6a:	18 95       	reti

00002e6c <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    2e6c:	8f ed       	ldi	r24, 0xDF	; 223
    2e6e:	93 e0       	ldi	r25, 0x03	; 3
    2e70:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <_ZN14HardwareSerial9availableEv>
    2e74:	21 e0       	ldi	r18, 0x01	; 1
    2e76:	89 2b       	or	r24, r25
    2e78:	09 f4       	brne	.+2      	; 0x2e7c <_Z17Serial0_availablev+0x10>
    2e7a:	20 e0       	ldi	r18, 0x00	; 0
}
    2e7c:	82 2f       	mov	r24, r18
    2e7e:	08 95       	ret

00002e80 <_GLOBAL__sub_I___vector_18>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    2e80:	ef ed       	ldi	r30, 0xDF	; 223
    2e82:	f3 e0       	ldi	r31, 0x03	; 3
    2e84:	13 82       	std	Z+3, r1	; 0x03
    2e86:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    2e88:	88 ee       	ldi	r24, 0xE8	; 232
    2e8a:	93 e0       	ldi	r25, 0x03	; 3
    2e8c:	a0 e0       	ldi	r26, 0x00	; 0
    2e8e:	b0 e0       	ldi	r27, 0x00	; 0
    2e90:	84 83       	std	Z+4, r24	; 0x04
    2e92:	95 83       	std	Z+5, r25	; 0x05
    2e94:	a6 83       	std	Z+6, r26	; 0x06
    2e96:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    2e98:	82 e5       	ldi	r24, 0x52	; 82
    2e9a:	93 e0       	ldi	r25, 0x03	; 3
    2e9c:	91 83       	std	Z+1, r25	; 0x01
    2e9e:	80 83       	st	Z, r24
    2ea0:	85 ec       	ldi	r24, 0xC5	; 197
    2ea2:	90 e0       	ldi	r25, 0x00	; 0
    2ea4:	95 87       	std	Z+13, r25	; 0x0d
    2ea6:	84 87       	std	Z+12, r24	; 0x0c
    2ea8:	84 ec       	ldi	r24, 0xC4	; 196
    2eaa:	90 e0       	ldi	r25, 0x00	; 0
    2eac:	97 87       	std	Z+15, r25	; 0x0f
    2eae:	86 87       	std	Z+14, r24	; 0x0e
    2eb0:	80 ec       	ldi	r24, 0xC0	; 192
    2eb2:	90 e0       	ldi	r25, 0x00	; 0
    2eb4:	91 8b       	std	Z+17, r25	; 0x11
    2eb6:	80 8b       	std	Z+16, r24	; 0x10
    2eb8:	81 ec       	ldi	r24, 0xC1	; 193
    2eba:	90 e0       	ldi	r25, 0x00	; 0
    2ebc:	93 8b       	std	Z+19, r25	; 0x13
    2ebe:	82 8b       	std	Z+18, r24	; 0x12
    2ec0:	82 ec       	ldi	r24, 0xC2	; 194
    2ec2:	90 e0       	ldi	r25, 0x00	; 0
    2ec4:	95 8b       	std	Z+21, r25	; 0x15
    2ec6:	84 8b       	std	Z+20, r24	; 0x14
    2ec8:	86 ec       	ldi	r24, 0xC6	; 198
    2eca:	90 e0       	ldi	r25, 0x00	; 0
    2ecc:	97 8b       	std	Z+23, r25	; 0x17
    2ece:	86 8b       	std	Z+22, r24	; 0x16
    2ed0:	11 8e       	std	Z+25, r1	; 0x19
    2ed2:	12 8e       	std	Z+26, r1	; 0x1a
    2ed4:	13 8e       	std	Z+27, r1	; 0x1b
    2ed6:	14 8e       	std	Z+28, r1	; 0x1c
    2ed8:	08 95       	ret

00002eda <initVariant>:
    2eda:	08 95       	ret

00002edc <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    2edc:	0e 94 3e 19 	call	0x327c	; 0x327c <init>

	initVariant();
    2ee0:	0e 94 6d 17 	call	0x2eda	; 0x2eda <initVariant>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    2ee4:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <setup>
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    2ee8:	ca ed       	ldi	r28, 0xDA	; 218
    2eea:	d5 e1       	ldi	r29, 0x15	; 21
#endif
	
	setup();
    
	for (;;) {
		loop();
    2eec:	0e 94 67 0f 	call	0x1ece	; 0x1ece <loop>
		if (serialEventRun) serialEventRun();
    2ef0:	20 97       	sbiw	r28, 0x00	; 0
    2ef2:	e1 f3       	breq	.-8      	; 0x2eec <main+0x10>
    2ef4:	0e 94 da 15 	call	0x2bb4	; 0x2bb4 <_Z14serialEventRunv>
    2ef8:	f9 cf       	rjmp	.-14     	; 0x2eec <main+0x10>

00002efa <_ZN5Print5writeEPKhj>:
size_t Print::println(int num, int base)
{
  size_t n = print(num, base);
  n += println();
  return n;
}
    2efa:	cf 92       	push	r12
    2efc:	df 92       	push	r13
    2efe:	ef 92       	push	r14
    2f00:	ff 92       	push	r15
    2f02:	0f 93       	push	r16
    2f04:	1f 93       	push	r17
    2f06:	cf 93       	push	r28
    2f08:	df 93       	push	r29
    2f0a:	6c 01       	movw	r12, r24
    2f0c:	7a 01       	movw	r14, r20
    2f0e:	8b 01       	movw	r16, r22
    2f10:	c0 e0       	ldi	r28, 0x00	; 0
    2f12:	d0 e0       	ldi	r29, 0x00	; 0
    2f14:	ce 15       	cp	r28, r14
    2f16:	df 05       	cpc	r29, r15
    2f18:	81 f0       	breq	.+32     	; 0x2f3a <_ZN5Print5writeEPKhj+0x40>
    2f1a:	d8 01       	movw	r26, r16
    2f1c:	6d 91       	ld	r22, X+
    2f1e:	8d 01       	movw	r16, r26
    2f20:	d6 01       	movw	r26, r12
    2f22:	ed 91       	ld	r30, X+
    2f24:	fc 91       	ld	r31, X
    2f26:	01 90       	ld	r0, Z+
    2f28:	f0 81       	ld	r31, Z
    2f2a:	e0 2d       	mov	r30, r0
    2f2c:	c6 01       	movw	r24, r12
    2f2e:	09 95       	icall
    2f30:	89 2b       	or	r24, r25
    2f32:	11 f0       	breq	.+4      	; 0x2f38 <_ZN5Print5writeEPKhj+0x3e>
    2f34:	21 96       	adiw	r28, 0x01	; 1
    2f36:	ee cf       	rjmp	.-36     	; 0x2f14 <_ZN5Print5writeEPKhj+0x1a>
    2f38:	7e 01       	movw	r14, r28
    2f3a:	c7 01       	movw	r24, r14
    2f3c:	df 91       	pop	r29
    2f3e:	cf 91       	pop	r28
    2f40:	1f 91       	pop	r17
    2f42:	0f 91       	pop	r16
    2f44:	ff 90       	pop	r15
    2f46:	ef 90       	pop	r14
    2f48:	df 90       	pop	r13
    2f4a:	cf 90       	pop	r12
    2f4c:	08 95       	ret

00002f4e <_ZN5Print5writeEPKc>:
    2f4e:	61 15       	cp	r22, r1
    2f50:	71 05       	cpc	r23, r1
    2f52:	79 f0       	breq	.+30     	; 0x2f72 <_ZN5Print5writeEPKc+0x24>
    2f54:	fb 01       	movw	r30, r22
    2f56:	01 90       	ld	r0, Z+
    2f58:	00 20       	and	r0, r0
    2f5a:	e9 f7       	brne	.-6      	; 0x2f56 <_ZN5Print5writeEPKc+0x8>
    2f5c:	31 97       	sbiw	r30, 0x01	; 1
    2f5e:	af 01       	movw	r20, r30
    2f60:	46 1b       	sub	r20, r22
    2f62:	57 0b       	sbc	r21, r23
    2f64:	dc 01       	movw	r26, r24
    2f66:	ed 91       	ld	r30, X+
    2f68:	fc 91       	ld	r31, X
    2f6a:	02 80       	ldd	r0, Z+2	; 0x02
    2f6c:	f3 81       	ldd	r31, Z+3	; 0x03
    2f6e:	e0 2d       	mov	r30, r0
    2f70:	09 94       	ijmp
    2f72:	80 e0       	ldi	r24, 0x00	; 0
    2f74:	90 e0       	ldi	r25, 0x00	; 0
    2f76:	08 95       	ret

00002f78 <_ZN5Print5printEPKc>:
    2f78:	0c 94 a7 17 	jmp	0x2f4e	; 0x2f4e <_ZN5Print5writeEPKc>

00002f7c <_ZN5Print5printEc>:
    2f7c:	dc 01       	movw	r26, r24
    2f7e:	ed 91       	ld	r30, X+
    2f80:	fc 91       	ld	r31, X
    2f82:	01 90       	ld	r0, Z+
    2f84:	f0 81       	ld	r31, Z
    2f86:	e0 2d       	mov	r30, r0
    2f88:	09 94       	ijmp

00002f8a <_ZN5Print7printlnEv>:
    2f8a:	60 e6       	ldi	r22, 0x60	; 96
    2f8c:	73 e0       	ldi	r23, 0x03	; 3
    2f8e:	0c 94 a7 17 	jmp	0x2f4e	; 0x2f4e <_ZN5Print5writeEPKc>

00002f92 <_ZN5Print7printlnEPKc>:
    2f92:	0f 93       	push	r16
    2f94:	1f 93       	push	r17
    2f96:	cf 93       	push	r28
    2f98:	df 93       	push	r29
    2f9a:	ec 01       	movw	r28, r24
    2f9c:	0e 94 a7 17 	call	0x2f4e	; 0x2f4e <_ZN5Print5writeEPKc>
    2fa0:	8c 01       	movw	r16, r24
    2fa2:	ce 01       	movw	r24, r28
    2fa4:	0e 94 c5 17 	call	0x2f8a	; 0x2f8a <_ZN5Print7printlnEv>
    2fa8:	80 0f       	add	r24, r16
    2faa:	91 1f       	adc	r25, r17
    2fac:	df 91       	pop	r29
    2fae:	cf 91       	pop	r28
    2fb0:	1f 91       	pop	r17
    2fb2:	0f 91       	pop	r16
    2fb4:	08 95       	ret

00002fb6 <_ZN5Print11printNumberEmh>:
    2fb6:	8f 92       	push	r8
    2fb8:	9f 92       	push	r9
    2fba:	af 92       	push	r10
    2fbc:	bf 92       	push	r11
    2fbe:	ef 92       	push	r14
    2fc0:	ff 92       	push	r15
    2fc2:	0f 93       	push	r16
    2fc4:	1f 93       	push	r17
    2fc6:	cf 93       	push	r28
    2fc8:	df 93       	push	r29
    2fca:	cd b7       	in	r28, 0x3d	; 61
    2fcc:	de b7       	in	r29, 0x3e	; 62
    2fce:	a1 97       	sbiw	r28, 0x21	; 33
    2fd0:	0f b6       	in	r0, 0x3f	; 63
    2fd2:	f8 94       	cli
    2fd4:	de bf       	out	0x3e, r29	; 62
    2fd6:	0f be       	out	0x3f, r0	; 63
    2fd8:	cd bf       	out	0x3d, r28	; 61
    2fda:	7c 01       	movw	r14, r24
    2fdc:	fa 01       	movw	r30, r20
    2fde:	cb 01       	movw	r24, r22
    2fe0:	19 a2       	std	Y+33, r1	; 0x21
    2fe2:	22 30       	cpi	r18, 0x02	; 2
    2fe4:	08 f4       	brcc	.+2      	; 0x2fe8 <_ZN5Print11printNumberEmh+0x32>
    2fe6:	2a e0       	ldi	r18, 0x0A	; 10
    2fe8:	8e 01       	movw	r16, r28
    2fea:	0f 5d       	subi	r16, 0xDF	; 223
    2fec:	1f 4f       	sbci	r17, 0xFF	; 255
    2fee:	82 2e       	mov	r8, r18
    2ff0:	91 2c       	mov	r9, r1
    2ff2:	a1 2c       	mov	r10, r1
    2ff4:	b1 2c       	mov	r11, r1
    2ff6:	bf 01       	movw	r22, r30
    2ff8:	a5 01       	movw	r20, r10
    2ffa:	94 01       	movw	r18, r8
    2ffc:	0e 94 c5 19 	call	0x338a	; 0x338a <__udivmodsi4>
    3000:	f9 01       	movw	r30, r18
    3002:	ca 01       	movw	r24, r20
    3004:	01 50       	subi	r16, 0x01	; 1
    3006:	11 09       	sbc	r17, r1
    3008:	6a 30       	cpi	r22, 0x0A	; 10
    300a:	10 f4       	brcc	.+4      	; 0x3010 <_ZN5Print11printNumberEmh+0x5a>
    300c:	60 5d       	subi	r22, 0xD0	; 208
    300e:	01 c0       	rjmp	.+2      	; 0x3012 <_ZN5Print11printNumberEmh+0x5c>
    3010:	69 5c       	subi	r22, 0xC9	; 201
    3012:	d8 01       	movw	r26, r16
    3014:	6c 93       	st	X, r22
    3016:	23 2b       	or	r18, r19
    3018:	24 2b       	or	r18, r20
    301a:	25 2b       	or	r18, r21
    301c:	61 f7       	brne	.-40     	; 0x2ff6 <_ZN5Print11printNumberEmh+0x40>
    301e:	b8 01       	movw	r22, r16
    3020:	c7 01       	movw	r24, r14
    3022:	0e 94 a7 17 	call	0x2f4e	; 0x2f4e <_ZN5Print5writeEPKc>
    3026:	a1 96       	adiw	r28, 0x21	; 33
    3028:	0f b6       	in	r0, 0x3f	; 63
    302a:	f8 94       	cli
    302c:	de bf       	out	0x3e, r29	; 62
    302e:	0f be       	out	0x3f, r0	; 63
    3030:	cd bf       	out	0x3d, r28	; 61
    3032:	df 91       	pop	r29
    3034:	cf 91       	pop	r28
    3036:	1f 91       	pop	r17
    3038:	0f 91       	pop	r16
    303a:	ff 90       	pop	r15
    303c:	ef 90       	pop	r14
    303e:	bf 90       	pop	r11
    3040:	af 90       	pop	r10
    3042:	9f 90       	pop	r9
    3044:	8f 90       	pop	r8
    3046:	08 95       	ret

00003048 <_ZN5Print5printEli>:
    3048:	cf 92       	push	r12
    304a:	df 92       	push	r13
    304c:	ef 92       	push	r14
    304e:	ff 92       	push	r15
    3050:	0f 93       	push	r16
    3052:	1f 93       	push	r17
    3054:	cf 93       	push	r28
    3056:	df 93       	push	r29
    3058:	21 15       	cp	r18, r1
    305a:	31 05       	cpc	r19, r1
    305c:	81 f4       	brne	.+32     	; 0x307e <_ZN5Print5printEli+0x36>
    305e:	dc 01       	movw	r26, r24
    3060:	ed 91       	ld	r30, X+
    3062:	fc 91       	ld	r31, X
    3064:	01 90       	ld	r0, Z+
    3066:	f0 81       	ld	r31, Z
    3068:	e0 2d       	mov	r30, r0
    306a:	64 2f       	mov	r22, r20
    306c:	df 91       	pop	r29
    306e:	cf 91       	pop	r28
    3070:	1f 91       	pop	r17
    3072:	0f 91       	pop	r16
    3074:	ff 90       	pop	r15
    3076:	ef 90       	pop	r14
    3078:	df 90       	pop	r13
    307a:	cf 90       	pop	r12
    307c:	09 94       	ijmp
    307e:	2a 30       	cpi	r18, 0x0A	; 10
    3080:	31 05       	cpc	r19, r1
    3082:	01 f5       	brne	.+64     	; 0x30c4 <_ZN5Print5printEli+0x7c>
    3084:	77 ff       	sbrs	r23, 7
    3086:	1d c0       	rjmp	.+58     	; 0x30c2 <_ZN5Print5printEli+0x7a>
    3088:	6a 01       	movw	r12, r20
    308a:	7b 01       	movw	r14, r22
    308c:	ec 01       	movw	r28, r24
    308e:	6d e2       	ldi	r22, 0x2D	; 45
    3090:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <_ZN5Print5printEc>
    3094:	8c 01       	movw	r16, r24
    3096:	44 27       	eor	r20, r20
    3098:	55 27       	eor	r21, r21
    309a:	ba 01       	movw	r22, r20
    309c:	4c 19       	sub	r20, r12
    309e:	5d 09       	sbc	r21, r13
    30a0:	6e 09       	sbc	r22, r14
    30a2:	7f 09       	sbc	r23, r15
    30a4:	2a e0       	ldi	r18, 0x0A	; 10
    30a6:	ce 01       	movw	r24, r28
    30a8:	0e 94 db 17 	call	0x2fb6	; 0x2fb6 <_ZN5Print11printNumberEmh>
    30ac:	80 0f       	add	r24, r16
    30ae:	91 1f       	adc	r25, r17
    30b0:	df 91       	pop	r29
    30b2:	cf 91       	pop	r28
    30b4:	1f 91       	pop	r17
    30b6:	0f 91       	pop	r16
    30b8:	ff 90       	pop	r15
    30ba:	ef 90       	pop	r14
    30bc:	df 90       	pop	r13
    30be:	cf 90       	pop	r12
    30c0:	08 95       	ret
    30c2:	2a e0       	ldi	r18, 0x0A	; 10
    30c4:	df 91       	pop	r29
    30c6:	cf 91       	pop	r28
    30c8:	1f 91       	pop	r17
    30ca:	0f 91       	pop	r16
    30cc:	ff 90       	pop	r15
    30ce:	ef 90       	pop	r14
    30d0:	df 90       	pop	r13
    30d2:	cf 90       	pop	r12
    30d4:	0c 94 db 17 	jmp	0x2fb6	; 0x2fb6 <_ZN5Print11printNumberEmh>

000030d8 <_ZN5Print7printlnEli>:
  n += println();
  return n;
}

size_t Print::println(long num, int base)
{
    30d8:	0f 93       	push	r16
    30da:	1f 93       	push	r17
    30dc:	cf 93       	push	r28
    30de:	df 93       	push	r29
    30e0:	ec 01       	movw	r28, r24
  size_t n = print(num, base);
    30e2:	0e 94 24 18 	call	0x3048	; 0x3048 <_ZN5Print5printEli>
    30e6:	8c 01       	movw	r16, r24
  n += println();
    30e8:	ce 01       	movw	r24, r28
    30ea:	0e 94 c5 17 	call	0x2f8a	; 0x2f8a <_ZN5Print7printlnEv>
  return n;
}
    30ee:	80 0f       	add	r24, r16
    30f0:	91 1f       	adc	r25, r17
    30f2:	df 91       	pop	r29
    30f4:	cf 91       	pop	r28
    30f6:	1f 91       	pop	r17
    30f8:	0f 91       	pop	r16
    30fa:	08 95       	ret

000030fc <_ZN6Stream9timedReadEv>:
    if (c < 0) break;
    *buffer++ = (char)c;
    count++;
  }
  return count;
}
    30fc:	0f 93       	push	r16
    30fe:	1f 93       	push	r17
    3100:	cf 93       	push	r28
    3102:	df 93       	push	r29
    3104:	ec 01       	movw	r28, r24
    3106:	0e 94 32 19 	call	0x3264	; 0x3264 <millis>
    310a:	68 87       	std	Y+8, r22	; 0x08
    310c:	79 87       	std	Y+9, r23	; 0x09
    310e:	8a 87       	std	Y+10, r24	; 0x0a
    3110:	9b 87       	std	Y+11, r25	; 0x0b
    3112:	e8 81       	ld	r30, Y
    3114:	f9 81       	ldd	r31, Y+1	; 0x01
    3116:	02 84       	ldd	r0, Z+10	; 0x0a
    3118:	f3 85       	ldd	r31, Z+11	; 0x0b
    311a:	e0 2d       	mov	r30, r0
    311c:	ce 01       	movw	r24, r28
    311e:	09 95       	icall
    3120:	97 ff       	sbrs	r25, 7
    3122:	17 c0       	rjmp	.+46     	; 0x3152 <_ZN6Stream9timedReadEv+0x56>
    3124:	0e 94 32 19 	call	0x3264	; 0x3264 <millis>
    3128:	08 85       	ldd	r16, Y+8	; 0x08
    312a:	19 85       	ldd	r17, Y+9	; 0x09
    312c:	2a 85       	ldd	r18, Y+10	; 0x0a
    312e:	3b 85       	ldd	r19, Y+11	; 0x0b
    3130:	dc 01       	movw	r26, r24
    3132:	cb 01       	movw	r24, r22
    3134:	80 1b       	sub	r24, r16
    3136:	91 0b       	sbc	r25, r17
    3138:	a2 0b       	sbc	r26, r18
    313a:	b3 0b       	sbc	r27, r19
    313c:	0c 81       	ldd	r16, Y+4	; 0x04
    313e:	1d 81       	ldd	r17, Y+5	; 0x05
    3140:	2e 81       	ldd	r18, Y+6	; 0x06
    3142:	3f 81       	ldd	r19, Y+7	; 0x07
    3144:	80 17       	cp	r24, r16
    3146:	91 07       	cpc	r25, r17
    3148:	a2 07       	cpc	r26, r18
    314a:	b3 07       	cpc	r27, r19
    314c:	10 f3       	brcs	.-60     	; 0x3112 <_ZN6Stream9timedReadEv+0x16>
    314e:	8f ef       	ldi	r24, 0xFF	; 255
    3150:	9f ef       	ldi	r25, 0xFF	; 255
    3152:	df 91       	pop	r29
    3154:	cf 91       	pop	r28
    3156:	1f 91       	pop	r17
    3158:	0f 91       	pop	r16
    315a:	08 95       	ret

0000315c <_ZN6Stream10setTimeoutEm>:
    315c:	fc 01       	movw	r30, r24
    315e:	44 83       	std	Z+4, r20	; 0x04
    3160:	55 83       	std	Z+5, r21	; 0x05
    3162:	66 83       	std	Z+6, r22	; 0x06
    3164:	77 83       	std	Z+7, r23	; 0x07
    3166:	08 95       	ret

00003168 <_ZN6Stream14readBytesUntilEcPcj>:
// as readBytes with terminator character
// terminates if length characters have been read, timeout, or if the terminator character  detected
// returns the number of characters placed in the buffer (0 means no valid data found)

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
    3168:	af 92       	push	r10
    316a:	bf 92       	push	r11
    316c:	cf 92       	push	r12
    316e:	df 92       	push	r13
    3170:	ef 92       	push	r14
    3172:	ff 92       	push	r15
    3174:	0f 93       	push	r16
    3176:	1f 93       	push	r17
    3178:	cf 93       	push	r28
    317a:	df 93       	push	r29
  if (length < 1) return 0;
    317c:	21 15       	cp	r18, r1
    317e:	31 05       	cpc	r19, r1
    3180:	c1 f0       	breq	.+48     	; 0x31b2 <_ZN6Stream14readBytesUntilEcPcj+0x4a>
    3182:	89 01       	movw	r16, r18
    3184:	5c 01       	movw	r10, r24
    3186:	6a 01       	movw	r12, r20
    3188:	c0 e0       	ldi	r28, 0x00	; 0
    318a:	d0 e0       	ldi	r29, 0x00	; 0
  size_t index = 0;
  while (index < length) {
    int c = timedRead();
    if (c < 0 || c == terminator) break;
    318c:	e6 2e       	mov	r14, r22
    318e:	f1 2c       	mov	r15, r1
size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
  if (length < 1) return 0;
  size_t index = 0;
  while (index < length) {
    int c = timedRead();
    3190:	c5 01       	movw	r24, r10
    3192:	0e 94 7e 18 	call	0x30fc	; 0x30fc <_ZN6Stream9timedReadEv>
    if (c < 0 || c == terminator) break;
    3196:	97 fd       	sbrc	r25, 7
    3198:	0f c0       	rjmp	.+30     	; 0x31b8 <_ZN6Stream14readBytesUntilEcPcj+0x50>
    319a:	8e 15       	cp	r24, r14
    319c:	9f 05       	cpc	r25, r15
    319e:	61 f0       	breq	.+24     	; 0x31b8 <_ZN6Stream14readBytesUntilEcPcj+0x50>
    *buffer++ = (char)c;
    31a0:	f6 01       	movw	r30, r12
    31a2:	81 93       	st	Z+, r24
    31a4:	6f 01       	movw	r12, r30
    index++;
    31a6:	21 96       	adiw	r28, 0x01	; 1

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
  if (length < 1) return 0;
  size_t index = 0;
  while (index < length) {
    31a8:	0c 17       	cp	r16, r28
    31aa:	1d 07       	cpc	r17, r29
    31ac:	89 f7       	brne	.-30     	; 0x3190 <_ZN6Stream14readBytesUntilEcPcj+0x28>
    31ae:	c8 01       	movw	r24, r16
    31b0:	04 c0       	rjmp	.+8      	; 0x31ba <_ZN6Stream14readBytesUntilEcPcj+0x52>
// terminates if length characters have been read, timeout, or if the terminator character  detected
// returns the number of characters placed in the buffer (0 means no valid data found)

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
  if (length < 1) return 0;
    31b2:	80 e0       	ldi	r24, 0x00	; 0
    31b4:	90 e0       	ldi	r25, 0x00	; 0
    31b6:	01 c0       	rjmp	.+2      	; 0x31ba <_ZN6Stream14readBytesUntilEcPcj+0x52>
    31b8:	ce 01       	movw	r24, r28
    if (c < 0 || c == terminator) break;
    *buffer++ = (char)c;
    index++;
  }
  return index; // return number of characters, not including null terminator
}
    31ba:	df 91       	pop	r29
    31bc:	cf 91       	pop	r28
    31be:	1f 91       	pop	r17
    31c0:	0f 91       	pop	r16
    31c2:	ff 90       	pop	r15
    31c4:	ef 90       	pop	r14
    31c6:	df 90       	pop	r13
    31c8:	cf 90       	pop	r12
    31ca:	bf 90       	pop	r11
    31cc:	af 90       	pop	r10
    31ce:	08 95       	ret

000031d0 <__vector_16>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    31d0:	1f 92       	push	r1
    31d2:	0f 92       	push	r0
    31d4:	0f b6       	in	r0, 0x3f	; 63
    31d6:	0f 92       	push	r0
    31d8:	11 24       	eor	r1, r1
    31da:	2f 93       	push	r18
    31dc:	3f 93       	push	r19
    31de:	8f 93       	push	r24
    31e0:	9f 93       	push	r25
    31e2:	af 93       	push	r26
    31e4:	bf 93       	push	r27
    31e6:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <timer0_millis>
    31ea:	90 91 7e 04 	lds	r25, 0x047E	; 0x80047e <timer0_millis+0x1>
    31ee:	a0 91 7f 04 	lds	r26, 0x047F	; 0x80047f <timer0_millis+0x2>
    31f2:	b0 91 80 04 	lds	r27, 0x0480	; 0x800480 <timer0_millis+0x3>
    31f6:	30 91 7c 04 	lds	r19, 0x047C	; 0x80047c <timer0_fract>
    31fa:	23 e0       	ldi	r18, 0x03	; 3
    31fc:	23 0f       	add	r18, r19
    31fe:	2d 37       	cpi	r18, 0x7D	; 125
    3200:	20 f4       	brcc	.+8      	; 0x320a <__vector_16+0x3a>
    3202:	01 96       	adiw	r24, 0x01	; 1
    3204:	a1 1d       	adc	r26, r1
    3206:	b1 1d       	adc	r27, r1
    3208:	05 c0       	rjmp	.+10     	; 0x3214 <__vector_16+0x44>
    320a:	26 e8       	ldi	r18, 0x86	; 134
    320c:	23 0f       	add	r18, r19
    320e:	02 96       	adiw	r24, 0x02	; 2
    3210:	a1 1d       	adc	r26, r1
    3212:	b1 1d       	adc	r27, r1
    3214:	20 93 7c 04 	sts	0x047C, r18	; 0x80047c <timer0_fract>
    3218:	80 93 7d 04 	sts	0x047D, r24	; 0x80047d <timer0_millis>
    321c:	90 93 7e 04 	sts	0x047E, r25	; 0x80047e <timer0_millis+0x1>
    3220:	a0 93 7f 04 	sts	0x047F, r26	; 0x80047f <timer0_millis+0x2>
    3224:	b0 93 80 04 	sts	0x0480, r27	; 0x800480 <timer0_millis+0x3>
    3228:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <timer0_overflow_count>
    322c:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <timer0_overflow_count+0x1>
    3230:	a0 91 83 04 	lds	r26, 0x0483	; 0x800483 <timer0_overflow_count+0x2>
    3234:	b0 91 84 04 	lds	r27, 0x0484	; 0x800484 <timer0_overflow_count+0x3>
    3238:	01 96       	adiw	r24, 0x01	; 1
    323a:	a1 1d       	adc	r26, r1
    323c:	b1 1d       	adc	r27, r1
    323e:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <timer0_overflow_count>
    3242:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <timer0_overflow_count+0x1>
    3246:	a0 93 83 04 	sts	0x0483, r26	; 0x800483 <timer0_overflow_count+0x2>
    324a:	b0 93 84 04 	sts	0x0484, r27	; 0x800484 <timer0_overflow_count+0x3>
    324e:	bf 91       	pop	r27
    3250:	af 91       	pop	r26
    3252:	9f 91       	pop	r25
    3254:	8f 91       	pop	r24
    3256:	3f 91       	pop	r19
    3258:	2f 91       	pop	r18
    325a:	0f 90       	pop	r0
    325c:	0f be       	out	0x3f, r0	; 63
    325e:	0f 90       	pop	r0
    3260:	1f 90       	pop	r1
    3262:	18 95       	reti

00003264 <millis>:
    3264:	2f b7       	in	r18, 0x3f	; 63
    3266:	f8 94       	cli
    3268:	60 91 7d 04 	lds	r22, 0x047D	; 0x80047d <timer0_millis>
    326c:	70 91 7e 04 	lds	r23, 0x047E	; 0x80047e <timer0_millis+0x1>
    3270:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <timer0_millis+0x2>
    3274:	90 91 80 04 	lds	r25, 0x0480	; 0x800480 <timer0_millis+0x3>
    3278:	2f bf       	out	0x3f, r18	; 63
    327a:	08 95       	ret

0000327c <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    327c:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    327e:	84 b5       	in	r24, 0x24	; 36
    3280:	82 60       	ori	r24, 0x02	; 2
    3282:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    3284:	84 b5       	in	r24, 0x24	; 36
    3286:	81 60       	ori	r24, 0x01	; 1
    3288:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    328a:	85 b5       	in	r24, 0x25	; 37
    328c:	82 60       	ori	r24, 0x02	; 2
    328e:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    3290:	85 b5       	in	r24, 0x25	; 37
    3292:	81 60       	ori	r24, 0x01	; 1
    3294:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    3296:	ee e6       	ldi	r30, 0x6E	; 110
    3298:	f0 e0       	ldi	r31, 0x00	; 0
    329a:	80 81       	ld	r24, Z
    329c:	81 60       	ori	r24, 0x01	; 1
    329e:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    32a0:	e1 e8       	ldi	r30, 0x81	; 129
    32a2:	f0 e0       	ldi	r31, 0x00	; 0
    32a4:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    32a6:	80 81       	ld	r24, Z
    32a8:	82 60       	ori	r24, 0x02	; 2
    32aa:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    32ac:	80 81       	ld	r24, Z
    32ae:	81 60       	ori	r24, 0x01	; 1
    32b0:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    32b2:	e0 e8       	ldi	r30, 0x80	; 128
    32b4:	f0 e0       	ldi	r31, 0x00	; 0
    32b6:	80 81       	ld	r24, Z
    32b8:	81 60       	ori	r24, 0x01	; 1
    32ba:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    32bc:	e1 eb       	ldi	r30, 0xB1	; 177
    32be:	f0 e0       	ldi	r31, 0x00	; 0
    32c0:	80 81       	ld	r24, Z
    32c2:	84 60       	ori	r24, 0x04	; 4
    32c4:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    32c6:	e0 eb       	ldi	r30, 0xB0	; 176
    32c8:	f0 e0       	ldi	r31, 0x00	; 0
    32ca:	80 81       	ld	r24, Z
    32cc:	81 60       	ori	r24, 0x01	; 1
    32ce:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    32d0:	ea e7       	ldi	r30, 0x7A	; 122
    32d2:	f0 e0       	ldi	r31, 0x00	; 0
    32d4:	80 81       	ld	r24, Z
    32d6:	84 60       	ori	r24, 0x04	; 4
    32d8:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    32da:	80 81       	ld	r24, Z
    32dc:	82 60       	ori	r24, 0x02	; 2
    32de:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    32e0:	80 81       	ld	r24, Z
    32e2:	81 60       	ori	r24, 0x01	; 1
    32e4:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    32e6:	80 81       	ld	r24, Z
    32e8:	80 68       	ori	r24, 0x80	; 128
    32ea:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    32ec:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    32f0:	08 95       	ret

000032f2 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    32f2:	cf 93       	push	r28
    32f4:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    32f6:	90 e0       	ldi	r25, 0x00	; 0
    32f8:	fc 01       	movw	r30, r24
    32fa:	e4 58       	subi	r30, 0x84	; 132
    32fc:	ff 4f       	sbci	r31, 0xFF	; 255
    32fe:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    3300:	fc 01       	movw	r30, r24
    3302:	e0 57       	subi	r30, 0x70	; 112
    3304:	ff 4f       	sbci	r31, 0xFF	; 255
    3306:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    3308:	88 23       	and	r24, r24
    330a:	61 f1       	breq	.+88     	; 0x3364 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    330c:	90 e0       	ldi	r25, 0x00	; 0
    330e:	88 0f       	add	r24, r24
    3310:	99 1f       	adc	r25, r25
    3312:	fc 01       	movw	r30, r24
    3314:	e8 54       	subi	r30, 0x48	; 72
    3316:	ff 4f       	sbci	r31, 0xFF	; 255
    3318:	c5 91       	lpm	r28, Z+
    331a:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    331c:	fc 01       	movw	r30, r24
    331e:	e2 55       	subi	r30, 0x52	; 82
    3320:	ff 4f       	sbci	r31, 0xFF	; 255
    3322:	a5 91       	lpm	r26, Z+
    3324:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    3326:	61 11       	cpse	r22, r1
    3328:	09 c0       	rjmp	.+18     	; 0x333c <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    332a:	9f b7       	in	r25, 0x3f	; 63
                cli();
    332c:	f8 94       	cli
		*reg &= ~bit;
    332e:	88 81       	ld	r24, Y
    3330:	20 95       	com	r18
    3332:	82 23       	and	r24, r18
    3334:	88 83       	st	Y, r24
		*out &= ~bit;
    3336:	ec 91       	ld	r30, X
    3338:	2e 23       	and	r18, r30
    333a:	0b c0       	rjmp	.+22     	; 0x3352 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    333c:	62 30       	cpi	r22, 0x02	; 2
    333e:	61 f4       	brne	.+24     	; 0x3358 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    3340:	9f b7       	in	r25, 0x3f	; 63
                cli();
    3342:	f8 94       	cli
		*reg &= ~bit;
    3344:	88 81       	ld	r24, Y
    3346:	32 2f       	mov	r19, r18
    3348:	30 95       	com	r19
    334a:	83 23       	and	r24, r19
    334c:	88 83       	st	Y, r24
		*out |= bit;
    334e:	ec 91       	ld	r30, X
    3350:	2e 2b       	or	r18, r30
    3352:	2c 93       	st	X, r18
		SREG = oldSREG;
    3354:	9f bf       	out	0x3f, r25	; 63
    3356:	06 c0       	rjmp	.+12     	; 0x3364 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    3358:	8f b7       	in	r24, 0x3f	; 63
                cli();
    335a:	f8 94       	cli
		*reg |= bit;
    335c:	e8 81       	ld	r30, Y
    335e:	2e 2b       	or	r18, r30
    3360:	28 83       	st	Y, r18
		SREG = oldSREG;
    3362:	8f bf       	out	0x3f, r24	; 63
	}
}
    3364:	df 91       	pop	r29
    3366:	cf 91       	pop	r28
    3368:	08 95       	ret

0000336a <__mulsi3>:
    336a:	db 01       	movw	r26, r22
    336c:	8f 93       	push	r24
    336e:	9f 93       	push	r25
    3370:	0e 94 06 1a 	call	0x340c	; 0x340c <__muluhisi3>
    3374:	bf 91       	pop	r27
    3376:	af 91       	pop	r26
    3378:	a2 9f       	mul	r26, r18
    337a:	80 0d       	add	r24, r0
    337c:	91 1d       	adc	r25, r1
    337e:	a3 9f       	mul	r26, r19
    3380:	90 0d       	add	r25, r0
    3382:	b2 9f       	mul	r27, r18
    3384:	90 0d       	add	r25, r0
    3386:	11 24       	eor	r1, r1
    3388:	08 95       	ret

0000338a <__udivmodsi4>:
    338a:	a1 e2       	ldi	r26, 0x21	; 33
    338c:	1a 2e       	mov	r1, r26
    338e:	aa 1b       	sub	r26, r26
    3390:	bb 1b       	sub	r27, r27
    3392:	fd 01       	movw	r30, r26
    3394:	0d c0       	rjmp	.+26     	; 0x33b0 <__udivmodsi4_ep>

00003396 <__udivmodsi4_loop>:
    3396:	aa 1f       	adc	r26, r26
    3398:	bb 1f       	adc	r27, r27
    339a:	ee 1f       	adc	r30, r30
    339c:	ff 1f       	adc	r31, r31
    339e:	a2 17       	cp	r26, r18
    33a0:	b3 07       	cpc	r27, r19
    33a2:	e4 07       	cpc	r30, r20
    33a4:	f5 07       	cpc	r31, r21
    33a6:	20 f0       	brcs	.+8      	; 0x33b0 <__udivmodsi4_ep>
    33a8:	a2 1b       	sub	r26, r18
    33aa:	b3 0b       	sbc	r27, r19
    33ac:	e4 0b       	sbc	r30, r20
    33ae:	f5 0b       	sbc	r31, r21

000033b0 <__udivmodsi4_ep>:
    33b0:	66 1f       	adc	r22, r22
    33b2:	77 1f       	adc	r23, r23
    33b4:	88 1f       	adc	r24, r24
    33b6:	99 1f       	adc	r25, r25
    33b8:	1a 94       	dec	r1
    33ba:	69 f7       	brne	.-38     	; 0x3396 <__udivmodsi4_loop>
    33bc:	60 95       	com	r22
    33be:	70 95       	com	r23
    33c0:	80 95       	com	r24
    33c2:	90 95       	com	r25
    33c4:	9b 01       	movw	r18, r22
    33c6:	ac 01       	movw	r20, r24
    33c8:	bd 01       	movw	r22, r26
    33ca:	cf 01       	movw	r24, r30
    33cc:	08 95       	ret

000033ce <__divmodsi4>:
    33ce:	05 2e       	mov	r0, r21
    33d0:	97 fb       	bst	r25, 7
    33d2:	1e f4       	brtc	.+6      	; 0x33da <__divmodsi4+0xc>
    33d4:	00 94       	com	r0
    33d6:	0e 94 fe 19 	call	0x33fc	; 0x33fc <__negsi2>
    33da:	57 fd       	sbrc	r21, 7
    33dc:	07 d0       	rcall	.+14     	; 0x33ec <__divmodsi4_neg2>
    33de:	0e 94 c5 19 	call	0x338a	; 0x338a <__udivmodsi4>
    33e2:	07 fc       	sbrc	r0, 7
    33e4:	03 d0       	rcall	.+6      	; 0x33ec <__divmodsi4_neg2>
    33e6:	4e f4       	brtc	.+18     	; 0x33fa <__divmodsi4_exit>
    33e8:	0c 94 fe 19 	jmp	0x33fc	; 0x33fc <__negsi2>

000033ec <__divmodsi4_neg2>:
    33ec:	50 95       	com	r21
    33ee:	40 95       	com	r20
    33f0:	30 95       	com	r19
    33f2:	21 95       	neg	r18
    33f4:	3f 4f       	sbci	r19, 0xFF	; 255
    33f6:	4f 4f       	sbci	r20, 0xFF	; 255
    33f8:	5f 4f       	sbci	r21, 0xFF	; 255

000033fa <__divmodsi4_exit>:
    33fa:	08 95       	ret

000033fc <__negsi2>:
    33fc:	90 95       	com	r25
    33fe:	80 95       	com	r24
    3400:	70 95       	com	r23
    3402:	61 95       	neg	r22
    3404:	7f 4f       	sbci	r23, 0xFF	; 255
    3406:	8f 4f       	sbci	r24, 0xFF	; 255
    3408:	9f 4f       	sbci	r25, 0xFF	; 255
    340a:	08 95       	ret

0000340c <__muluhisi3>:
    340c:	0e 94 17 1a 	call	0x342e	; 0x342e <__umulhisi3>
    3410:	a5 9f       	mul	r26, r21
    3412:	90 0d       	add	r25, r0
    3414:	b4 9f       	mul	r27, r20
    3416:	90 0d       	add	r25, r0
    3418:	a4 9f       	mul	r26, r20
    341a:	80 0d       	add	r24, r0
    341c:	91 1d       	adc	r25, r1
    341e:	11 24       	eor	r1, r1
    3420:	08 95       	ret

00003422 <__tablejump2__>:
    3422:	ee 0f       	add	r30, r30
    3424:	ff 1f       	adc	r31, r31
    3426:	05 90       	lpm	r0, Z+
    3428:	f4 91       	lpm	r31, Z
    342a:	e0 2d       	mov	r30, r0
    342c:	09 94       	ijmp

0000342e <__umulhisi3>:
    342e:	a2 9f       	mul	r26, r18
    3430:	b0 01       	movw	r22, r0
    3432:	b3 9f       	mul	r27, r19
    3434:	c0 01       	movw	r24, r0
    3436:	a3 9f       	mul	r26, r19
    3438:	70 0d       	add	r23, r0
    343a:	81 1d       	adc	r24, r1
    343c:	11 24       	eor	r1, r1
    343e:	91 1d       	adc	r25, r1
    3440:	b2 9f       	mul	r27, r18
    3442:	70 0d       	add	r23, r0
    3444:	81 1d       	adc	r24, r1
    3446:	11 24       	eor	r1, r1
    3448:	91 1d       	adc	r25, r1
    344a:	08 95       	ret

0000344c <strtol>:
    344c:	a0 e0       	ldi	r26, 0x00	; 0
    344e:	b0 e0       	ldi	r27, 0x00	; 0
    3450:	ec e2       	ldi	r30, 0x2C	; 44
    3452:	fa e1       	ldi	r31, 0x1A	; 26
    3454:	0c 94 56 1e 	jmp	0x3cac	; 0x3cac <__prologue_saves__+0x2>
    3458:	5c 01       	movw	r10, r24
    345a:	6b 01       	movw	r12, r22
    345c:	7a 01       	movw	r14, r20
    345e:	61 15       	cp	r22, r1
    3460:	71 05       	cpc	r23, r1
    3462:	19 f0       	breq	.+6      	; 0x346a <strtol+0x1e>
    3464:	fb 01       	movw	r30, r22
    3466:	91 83       	std	Z+1, r25	; 0x01
    3468:	80 83       	st	Z, r24
    346a:	e1 14       	cp	r14, r1
    346c:	f1 04       	cpc	r15, r1
    346e:	29 f0       	breq	.+10     	; 0x347a <strtol+0x2e>
    3470:	c7 01       	movw	r24, r14
    3472:	02 97       	sbiw	r24, 0x02	; 2
    3474:	83 97       	sbiw	r24, 0x23	; 35
    3476:	08 f0       	brcs	.+2      	; 0x347a <strtol+0x2e>
    3478:	e5 c0       	rjmp	.+458    	; 0x3644 <strtol+0x1f8>
    347a:	e5 01       	movw	r28, r10
    347c:	21 96       	adiw	r28, 0x01	; 1
    347e:	f5 01       	movw	r30, r10
    3480:	10 81       	ld	r17, Z
    3482:	81 2f       	mov	r24, r17
    3484:	90 e0       	ldi	r25, 0x00	; 0
    3486:	0e 94 5a 1b 	call	0x36b4	; 0x36b4 <isspace>
    348a:	89 2b       	or	r24, r25
    348c:	11 f0       	breq	.+4      	; 0x3492 <strtol+0x46>
    348e:	5e 01       	movw	r10, r28
    3490:	f4 cf       	rjmp	.-24     	; 0x347a <strtol+0x2e>
    3492:	1d 32       	cpi	r17, 0x2D	; 45
    3494:	29 f4       	brne	.+10     	; 0x34a0 <strtol+0x54>
    3496:	21 96       	adiw	r28, 0x01	; 1
    3498:	f5 01       	movw	r30, r10
    349a:	11 81       	ldd	r17, Z+1	; 0x01
    349c:	01 e0       	ldi	r16, 0x01	; 1
    349e:	07 c0       	rjmp	.+14     	; 0x34ae <strtol+0x62>
    34a0:	1b 32       	cpi	r17, 0x2B	; 43
    34a2:	21 f4       	brne	.+8      	; 0x34ac <strtol+0x60>
    34a4:	e5 01       	movw	r28, r10
    34a6:	22 96       	adiw	r28, 0x02	; 2
    34a8:	f5 01       	movw	r30, r10
    34aa:	11 81       	ldd	r17, Z+1	; 0x01
    34ac:	00 e0       	ldi	r16, 0x00	; 0
    34ae:	e1 14       	cp	r14, r1
    34b0:	f1 04       	cpc	r15, r1
    34b2:	09 f1       	breq	.+66     	; 0x34f6 <strtol+0xaa>
    34b4:	f0 e1       	ldi	r31, 0x10	; 16
    34b6:	ef 16       	cp	r14, r31
    34b8:	f1 04       	cpc	r15, r1
    34ba:	29 f4       	brne	.+10     	; 0x34c6 <strtol+0x7a>
    34bc:	3f c0       	rjmp	.+126    	; 0x353c <strtol+0xf0>
    34be:	10 e3       	ldi	r17, 0x30	; 48
    34c0:	e1 14       	cp	r14, r1
    34c2:	f1 04       	cpc	r15, r1
    34c4:	21 f1       	breq	.+72     	; 0x350e <strtol+0xc2>
    34c6:	28 e0       	ldi	r18, 0x08	; 8
    34c8:	e2 16       	cp	r14, r18
    34ca:	f1 04       	cpc	r15, r1
    34cc:	01 f1       	breq	.+64     	; 0x350e <strtol+0xc2>
    34ce:	54 f4       	brge	.+20     	; 0x34e4 <strtol+0x98>
    34d0:	e2 e0       	ldi	r30, 0x02	; 2
    34d2:	ee 16       	cp	r14, r30
    34d4:	f1 04       	cpc	r15, r1
    34d6:	21 f5       	brne	.+72     	; 0x3520 <strtol+0xd4>
    34d8:	81 2c       	mov	r8, r1
    34da:	91 2c       	mov	r9, r1
    34dc:	a1 2c       	mov	r10, r1
    34de:	b0 e4       	ldi	r27, 0x40	; 64
    34e0:	bb 2e       	mov	r11, r27
    34e2:	3e c0       	rjmp	.+124    	; 0x3560 <strtol+0x114>
    34e4:	fa e0       	ldi	r31, 0x0A	; 10
    34e6:	ef 16       	cp	r14, r31
    34e8:	f1 04       	cpc	r15, r1
    34ea:	39 f0       	breq	.+14     	; 0x34fa <strtol+0xae>
    34ec:	20 e1       	ldi	r18, 0x10	; 16
    34ee:	e2 16       	cp	r14, r18
    34f0:	f1 04       	cpc	r15, r1
    34f2:	b1 f4       	brne	.+44     	; 0x3520 <strtol+0xd4>
    34f4:	30 c0       	rjmp	.+96     	; 0x3556 <strtol+0x10a>
    34f6:	10 33       	cpi	r17, 0x30	; 48
    34f8:	19 f1       	breq	.+70     	; 0x3540 <strtol+0xf4>
    34fa:	fa e0       	ldi	r31, 0x0A	; 10
    34fc:	ef 2e       	mov	r14, r31
    34fe:	f1 2c       	mov	r15, r1
    3500:	ac ec       	ldi	r26, 0xCC	; 204
    3502:	8a 2e       	mov	r8, r26
    3504:	98 2c       	mov	r9, r8
    3506:	a8 2c       	mov	r10, r8
    3508:	ac e0       	ldi	r26, 0x0C	; 12
    350a:	ba 2e       	mov	r11, r26
    350c:	29 c0       	rjmp	.+82     	; 0x3560 <strtol+0x114>
    350e:	78 e0       	ldi	r23, 0x08	; 8
    3510:	e7 2e       	mov	r14, r23
    3512:	f1 2c       	mov	r15, r1
    3514:	81 2c       	mov	r8, r1
    3516:	91 2c       	mov	r9, r1
    3518:	a1 2c       	mov	r10, r1
    351a:	e0 e1       	ldi	r30, 0x10	; 16
    351c:	be 2e       	mov	r11, r30
    351e:	20 c0       	rjmp	.+64     	; 0x3560 <strtol+0x114>
    3520:	60 e0       	ldi	r22, 0x00	; 0
    3522:	70 e0       	ldi	r23, 0x00	; 0
    3524:	80 e0       	ldi	r24, 0x00	; 0
    3526:	90 e8       	ldi	r25, 0x80	; 128
    3528:	97 01       	movw	r18, r14
    352a:	0f 2c       	mov	r0, r15
    352c:	00 0c       	add	r0, r0
    352e:	44 0b       	sbc	r20, r20
    3530:	55 0b       	sbc	r21, r21
    3532:	0e 94 c5 19 	call	0x338a	; 0x338a <__udivmodsi4>
    3536:	49 01       	movw	r8, r18
    3538:	5a 01       	movw	r10, r20
    353a:	12 c0       	rjmp	.+36     	; 0x3560 <strtol+0x114>
    353c:	10 33       	cpi	r17, 0x30	; 48
    353e:	59 f4       	brne	.+22     	; 0x3556 <strtol+0x10a>
    3540:	88 81       	ld	r24, Y
    3542:	8f 7d       	andi	r24, 0xDF	; 223
    3544:	88 35       	cpi	r24, 0x58	; 88
    3546:	09 f0       	breq	.+2      	; 0x354a <strtol+0xfe>
    3548:	ba cf       	rjmp	.-140    	; 0x34be <strtol+0x72>
    354a:	19 81       	ldd	r17, Y+1	; 0x01
    354c:	22 96       	adiw	r28, 0x02	; 2
    354e:	02 60       	ori	r16, 0x02	; 2
    3550:	80 e1       	ldi	r24, 0x10	; 16
    3552:	e8 2e       	mov	r14, r24
    3554:	f1 2c       	mov	r15, r1
    3556:	81 2c       	mov	r8, r1
    3558:	91 2c       	mov	r9, r1
    355a:	a1 2c       	mov	r10, r1
    355c:	68 e0       	ldi	r22, 0x08	; 8
    355e:	b6 2e       	mov	r11, r22
    3560:	40 e0       	ldi	r20, 0x00	; 0
    3562:	60 e0       	ldi	r22, 0x00	; 0
    3564:	70 e0       	ldi	r23, 0x00	; 0
    3566:	cb 01       	movw	r24, r22
    3568:	27 01       	movw	r4, r14
    356a:	0f 2c       	mov	r0, r15
    356c:	00 0c       	add	r0, r0
    356e:	66 08       	sbc	r6, r6
    3570:	77 08       	sbc	r7, r7
    3572:	fe 01       	movw	r30, r28
    3574:	50 ed       	ldi	r21, 0xD0	; 208
    3576:	35 2e       	mov	r3, r21
    3578:	31 0e       	add	r3, r17
    357a:	29 e0       	ldi	r18, 0x09	; 9
    357c:	23 15       	cp	r18, r3
    357e:	70 f4       	brcc	.+28     	; 0x359c <strtol+0x150>
    3580:	2f eb       	ldi	r18, 0xBF	; 191
    3582:	21 0f       	add	r18, r17
    3584:	2a 31       	cpi	r18, 0x1A	; 26
    3586:	18 f4       	brcc	.+6      	; 0x358e <strtol+0x142>
    3588:	39 ec       	ldi	r19, 0xC9	; 201
    358a:	33 2e       	mov	r3, r19
    358c:	06 c0       	rjmp	.+12     	; 0x359a <strtol+0x14e>
    358e:	2f e9       	ldi	r18, 0x9F	; 159
    3590:	21 0f       	add	r18, r17
    3592:	2a 31       	cpi	r18, 0x1A	; 26
    3594:	18 f5       	brcc	.+70     	; 0x35dc <strtol+0x190>
    3596:	29 ea       	ldi	r18, 0xA9	; 169
    3598:	32 2e       	mov	r3, r18
    359a:	31 0e       	add	r3, r17
    359c:	23 2d       	mov	r18, r3
    359e:	30 e0       	ldi	r19, 0x00	; 0
    35a0:	2e 15       	cp	r18, r14
    35a2:	3f 05       	cpc	r19, r15
    35a4:	dc f4       	brge	.+54     	; 0x35dc <strtol+0x190>
    35a6:	47 fd       	sbrc	r20, 7
    35a8:	16 c0       	rjmp	.+44     	; 0x35d6 <strtol+0x18a>
    35aa:	86 16       	cp	r8, r22
    35ac:	97 06       	cpc	r9, r23
    35ae:	a8 06       	cpc	r10, r24
    35b0:	b9 06       	cpc	r11, r25
    35b2:	70 f0       	brcs	.+28     	; 0x35d0 <strtol+0x184>
    35b4:	a3 01       	movw	r20, r6
    35b6:	92 01       	movw	r18, r4
    35b8:	0e 94 b5 19 	call	0x336a	; 0x336a <__mulsi3>
    35bc:	63 0d       	add	r22, r3
    35be:	71 1d       	adc	r23, r1
    35c0:	81 1d       	adc	r24, r1
    35c2:	91 1d       	adc	r25, r1
    35c4:	61 30       	cpi	r22, 0x01	; 1
    35c6:	71 05       	cpc	r23, r1
    35c8:	81 05       	cpc	r24, r1
    35ca:	20 e8       	ldi	r18, 0x80	; 128
    35cc:	92 07       	cpc	r25, r18
    35ce:	10 f0       	brcs	.+4      	; 0x35d4 <strtol+0x188>
    35d0:	4f ef       	ldi	r20, 0xFF	; 255
    35d2:	01 c0       	rjmp	.+2      	; 0x35d6 <strtol+0x18a>
    35d4:	41 e0       	ldi	r20, 0x01	; 1
    35d6:	21 96       	adiw	r28, 0x01	; 1
    35d8:	10 81       	ld	r17, Z
    35da:	cb cf       	rjmp	.-106    	; 0x3572 <strtol+0x126>
    35dc:	20 2f       	mov	r18, r16
    35de:	21 70       	andi	r18, 0x01	; 1
    35e0:	c1 14       	cp	r12, r1
    35e2:	d1 04       	cpc	r13, r1
    35e4:	71 f0       	breq	.+28     	; 0x3602 <strtol+0x1b6>
    35e6:	44 23       	and	r20, r20
    35e8:	29 f0       	breq	.+10     	; 0x35f4 <strtol+0x1a8>
    35ea:	21 97       	sbiw	r28, 0x01	; 1
    35ec:	f6 01       	movw	r30, r12
    35ee:	d1 83       	std	Z+1, r29	; 0x01
    35f0:	c0 83       	st	Z, r28
    35f2:	07 c0       	rjmp	.+14     	; 0x3602 <strtol+0x1b6>
    35f4:	01 ff       	sbrs	r16, 1
    35f6:	19 c0       	rjmp	.+50     	; 0x362a <strtol+0x1de>
    35f8:	22 97       	sbiw	r28, 0x02	; 2
    35fa:	f6 01       	movw	r30, r12
    35fc:	d1 83       	std	Z+1, r29	; 0x01
    35fe:	c0 83       	st	Z, r28
    3600:	14 c0       	rjmp	.+40     	; 0x362a <strtol+0x1de>
    3602:	47 ff       	sbrs	r20, 7
    3604:	12 c0       	rjmp	.+36     	; 0x362a <strtol+0x1de>
    3606:	22 23       	and	r18, r18
    3608:	29 f0       	breq	.+10     	; 0x3614 <strtol+0x1c8>
    360a:	60 e0       	ldi	r22, 0x00	; 0
    360c:	70 e0       	ldi	r23, 0x00	; 0
    360e:	80 e0       	ldi	r24, 0x00	; 0
    3610:	90 e8       	ldi	r25, 0x80	; 128
    3612:	04 c0       	rjmp	.+8      	; 0x361c <strtol+0x1d0>
    3614:	6f ef       	ldi	r22, 0xFF	; 255
    3616:	7f ef       	ldi	r23, 0xFF	; 255
    3618:	8f ef       	ldi	r24, 0xFF	; 255
    361a:	9f e7       	ldi	r25, 0x7F	; 127
    361c:	22 e2       	ldi	r18, 0x22	; 34
    361e:	30 e0       	ldi	r19, 0x00	; 0
    3620:	30 93 86 04 	sts	0x0486, r19	; 0x800486 <errno+0x1>
    3624:	20 93 85 04 	sts	0x0485, r18	; 0x800485 <errno>
    3628:	09 c0       	rjmp	.+18     	; 0x363c <strtol+0x1f0>
    362a:	22 23       	and	r18, r18
    362c:	81 f0       	breq	.+32     	; 0x364e <strtol+0x202>
    362e:	90 95       	com	r25
    3630:	80 95       	com	r24
    3632:	70 95       	com	r23
    3634:	61 95       	neg	r22
    3636:	7f 4f       	sbci	r23, 0xFF	; 255
    3638:	8f 4f       	sbci	r24, 0xFF	; 255
    363a:	9f 4f       	sbci	r25, 0xFF	; 255
    363c:	46 2f       	mov	r20, r22
    363e:	37 2f       	mov	r19, r23
    3640:	28 2f       	mov	r18, r24
    3642:	12 c0       	rjmp	.+36     	; 0x3668 <strtol+0x21c>
    3644:	40 e0       	ldi	r20, 0x00	; 0
    3646:	30 e0       	ldi	r19, 0x00	; 0
    3648:	20 e0       	ldi	r18, 0x00	; 0
    364a:	90 e0       	ldi	r25, 0x00	; 0
    364c:	0d c0       	rjmp	.+26     	; 0x3668 <strtol+0x21c>
    364e:	97 ff       	sbrs	r25, 7
    3650:	f5 cf       	rjmp	.-22     	; 0x363c <strtol+0x1f0>
    3652:	82 e2       	ldi	r24, 0x22	; 34
    3654:	90 e0       	ldi	r25, 0x00	; 0
    3656:	90 93 86 04 	sts	0x0486, r25	; 0x800486 <errno+0x1>
    365a:	80 93 85 04 	sts	0x0485, r24	; 0x800485 <errno>
    365e:	6f ef       	ldi	r22, 0xFF	; 255
    3660:	7f ef       	ldi	r23, 0xFF	; 255
    3662:	8f ef       	ldi	r24, 0xFF	; 255
    3664:	9f e7       	ldi	r25, 0x7F	; 127
    3666:	ea cf       	rjmp	.-44     	; 0x363c <strtol+0x1f0>
    3668:	64 2f       	mov	r22, r20
    366a:	73 2f       	mov	r23, r19
    366c:	82 2f       	mov	r24, r18
    366e:	cd b7       	in	r28, 0x3d	; 61
    3670:	de b7       	in	r29, 0x3e	; 62
    3672:	e1 e1       	ldi	r30, 0x11	; 17
    3674:	0c 94 72 1e 	jmp	0x3ce4	; 0x3ce4 <__epilogue_restores__+0x2>

00003678 <atoi>:
    3678:	fc 01       	movw	r30, r24
    367a:	88 27       	eor	r24, r24
    367c:	99 27       	eor	r25, r25
    367e:	e8 94       	clt
    3680:	21 91       	ld	r18, Z+
    3682:	20 32       	cpi	r18, 0x20	; 32
    3684:	e9 f3       	breq	.-6      	; 0x3680 <atoi+0x8>
    3686:	29 30       	cpi	r18, 0x09	; 9
    3688:	10 f0       	brcs	.+4      	; 0x368e <atoi+0x16>
    368a:	2e 30       	cpi	r18, 0x0E	; 14
    368c:	c8 f3       	brcs	.-14     	; 0x3680 <atoi+0x8>
    368e:	2b 32       	cpi	r18, 0x2B	; 43
    3690:	41 f0       	breq	.+16     	; 0x36a2 <atoi+0x2a>
    3692:	2d 32       	cpi	r18, 0x2D	; 45
    3694:	39 f4       	brne	.+14     	; 0x36a4 <atoi+0x2c>
    3696:	68 94       	set
    3698:	04 c0       	rjmp	.+8      	; 0x36a2 <atoi+0x2a>
    369a:	0e 94 97 1b 	call	0x372e	; 0x372e <__mulhi_const_10>
    369e:	82 0f       	add	r24, r18
    36a0:	91 1d       	adc	r25, r1
    36a2:	21 91       	ld	r18, Z+
    36a4:	20 53       	subi	r18, 0x30	; 48
    36a6:	2a 30       	cpi	r18, 0x0A	; 10
    36a8:	c0 f3       	brcs	.-16     	; 0x369a <atoi+0x22>
    36aa:	1e f4       	brtc	.+6      	; 0x36b2 <atoi+0x3a>
    36ac:	90 95       	com	r25
    36ae:	81 95       	neg	r24
    36b0:	9f 4f       	sbci	r25, 0xFF	; 255
    36b2:	08 95       	ret

000036b4 <isspace>:
    36b4:	91 11       	cpse	r25, r1
    36b6:	0c 94 a2 1d 	jmp	0x3b44	; 0x3b44 <__ctype_isfalse>
    36ba:	80 32       	cpi	r24, 0x20	; 32
    36bc:	19 f0       	breq	.+6      	; 0x36c4 <isspace+0x10>
    36be:	89 50       	subi	r24, 0x09	; 9
    36c0:	85 50       	subi	r24, 0x05	; 5
    36c2:	c8 f7       	brcc	.-14     	; 0x36b6 <isspace+0x2>
    36c4:	08 95       	ret

000036c6 <tolower>:
    36c6:	91 11       	cpse	r25, r1
    36c8:	08 95       	ret
    36ca:	81 54       	subi	r24, 0x41	; 65
    36cc:	8a 51       	subi	r24, 0x1A	; 26
    36ce:	08 f4       	brcc	.+2      	; 0x36d2 <tolower+0xc>
    36d0:	80 5e       	subi	r24, 0xE0	; 224
    36d2:	85 5a       	subi	r24, 0xA5	; 165
    36d4:	08 95       	ret

000036d6 <strtok>:
    36d6:	40 e7       	ldi	r20, 0x70	; 112
    36d8:	53 e0       	ldi	r21, 0x03	; 3
    36da:	0e 94 70 1b 	call	0x36e0	; 0x36e0 <strtok_r>
    36de:	08 95       	ret

000036e0 <strtok_r>:
    36e0:	fa 01       	movw	r30, r20
    36e2:	a1 91       	ld	r26, Z+
    36e4:	b0 81       	ld	r27, Z
    36e6:	00 97       	sbiw	r24, 0x00	; 0
    36e8:	19 f4       	brne	.+6      	; 0x36f0 <strtok_r+0x10>
    36ea:	10 97       	sbiw	r26, 0x00	; 0
    36ec:	e1 f0       	breq	.+56     	; 0x3726 <strtok_r+0x46>
    36ee:	cd 01       	movw	r24, r26
    36f0:	dc 01       	movw	r26, r24
    36f2:	cd 01       	movw	r24, r26
    36f4:	0d 90       	ld	r0, X+
    36f6:	00 20       	and	r0, r0
    36f8:	11 f4       	brne	.+4      	; 0x36fe <strtok_r+0x1e>
    36fa:	c0 01       	movw	r24, r0
    36fc:	13 c0       	rjmp	.+38     	; 0x3724 <strtok_r+0x44>
    36fe:	fb 01       	movw	r30, r22
    3700:	21 91       	ld	r18, Z+
    3702:	22 23       	and	r18, r18
    3704:	19 f0       	breq	.+6      	; 0x370c <strtok_r+0x2c>
    3706:	20 15       	cp	r18, r0
    3708:	d9 f7       	brne	.-10     	; 0x3700 <strtok_r+0x20>
    370a:	f3 cf       	rjmp	.-26     	; 0x36f2 <strtok_r+0x12>
    370c:	fb 01       	movw	r30, r22
    370e:	21 91       	ld	r18, Z+
    3710:	20 15       	cp	r18, r0
    3712:	19 f4       	brne	.+6      	; 0x371a <strtok_r+0x3a>
    3714:	1e 92       	st	-X, r1
    3716:	11 96       	adiw	r26, 0x01	; 1
    3718:	06 c0       	rjmp	.+12     	; 0x3726 <strtok_r+0x46>
    371a:	22 23       	and	r18, r18
    371c:	c1 f7       	brne	.-16     	; 0x370e <strtok_r+0x2e>
    371e:	0d 90       	ld	r0, X+
    3720:	00 20       	and	r0, r0
    3722:	a1 f7       	brne	.-24     	; 0x370c <strtok_r+0x2c>
    3724:	d0 01       	movw	r26, r0
    3726:	fa 01       	movw	r30, r20
    3728:	a1 93       	st	Z+, r26
    372a:	b0 83       	st	Z, r27
    372c:	08 95       	ret

0000372e <__mulhi_const_10>:
    372e:	7a e0       	ldi	r23, 0x0A	; 10
    3730:	97 9f       	mul	r25, r23
    3732:	90 2d       	mov	r25, r0
    3734:	87 9f       	mul	r24, r23
    3736:	80 2d       	mov	r24, r0
    3738:	91 0d       	add	r25, r1
    373a:	11 24       	eor	r1, r1
    373c:	08 95       	ret

0000373e <sprintf>:
    373e:	ae e0       	ldi	r26, 0x0E	; 14
    3740:	b0 e0       	ldi	r27, 0x00	; 0
    3742:	e5 ea       	ldi	r30, 0xA5	; 165
    3744:	fb e1       	ldi	r31, 0x1B	; 27
    3746:	0c 94 63 1e 	jmp	0x3cc6	; 0x3cc6 <__prologue_saves__+0x1c>
    374a:	0d 89       	ldd	r16, Y+21	; 0x15
    374c:	1e 89       	ldd	r17, Y+22	; 0x16
    374e:	86 e0       	ldi	r24, 0x06	; 6
    3750:	8c 83       	std	Y+4, r24	; 0x04
    3752:	1a 83       	std	Y+2, r17	; 0x02
    3754:	09 83       	std	Y+1, r16	; 0x01
    3756:	8f ef       	ldi	r24, 0xFF	; 255
    3758:	9f e7       	ldi	r25, 0x7F	; 127
    375a:	9e 83       	std	Y+6, r25	; 0x06
    375c:	8d 83       	std	Y+5, r24	; 0x05
    375e:	ae 01       	movw	r20, r28
    3760:	47 5e       	subi	r20, 0xE7	; 231
    3762:	5f 4f       	sbci	r21, 0xFF	; 255
    3764:	6f 89       	ldd	r22, Y+23	; 0x17
    3766:	78 8d       	ldd	r23, Y+24	; 0x18
    3768:	ce 01       	movw	r24, r28
    376a:	01 96       	adiw	r24, 0x01	; 1
    376c:	0e 94 c1 1b 	call	0x3782	; 0x3782 <vfprintf>
    3770:	ef 81       	ldd	r30, Y+7	; 0x07
    3772:	f8 85       	ldd	r31, Y+8	; 0x08
    3774:	e0 0f       	add	r30, r16
    3776:	f1 1f       	adc	r31, r17
    3778:	10 82       	st	Z, r1
    377a:	2e 96       	adiw	r28, 0x0e	; 14
    377c:	e4 e0       	ldi	r30, 0x04	; 4
    377e:	0c 94 7f 1e 	jmp	0x3cfe	; 0x3cfe <__epilogue_restores__+0x1c>

00003782 <vfprintf>:
    3782:	ab e0       	ldi	r26, 0x0B	; 11
    3784:	b0 e0       	ldi	r27, 0x00	; 0
    3786:	e7 ec       	ldi	r30, 0xC7	; 199
    3788:	fb e1       	ldi	r31, 0x1B	; 27
    378a:	0c 94 55 1e 	jmp	0x3caa	; 0x3caa <__prologue_saves__>
    378e:	6c 01       	movw	r12, r24
    3790:	7b 01       	movw	r14, r22
    3792:	8a 01       	movw	r16, r20
    3794:	fc 01       	movw	r30, r24
    3796:	17 82       	std	Z+7, r1	; 0x07
    3798:	16 82       	std	Z+6, r1	; 0x06
    379a:	83 81       	ldd	r24, Z+3	; 0x03
    379c:	81 ff       	sbrs	r24, 1
    379e:	cc c1       	rjmp	.+920    	; 0x3b38 <vfprintf+0x3b6>
    37a0:	ce 01       	movw	r24, r28
    37a2:	01 96       	adiw	r24, 0x01	; 1
    37a4:	3c 01       	movw	r6, r24
    37a6:	f6 01       	movw	r30, r12
    37a8:	93 81       	ldd	r25, Z+3	; 0x03
    37aa:	f7 01       	movw	r30, r14
    37ac:	93 fd       	sbrc	r25, 3
    37ae:	85 91       	lpm	r24, Z+
    37b0:	93 ff       	sbrs	r25, 3
    37b2:	81 91       	ld	r24, Z+
    37b4:	7f 01       	movw	r14, r30
    37b6:	88 23       	and	r24, r24
    37b8:	09 f4       	brne	.+2      	; 0x37bc <vfprintf+0x3a>
    37ba:	ba c1       	rjmp	.+884    	; 0x3b30 <vfprintf+0x3ae>
    37bc:	85 32       	cpi	r24, 0x25	; 37
    37be:	39 f4       	brne	.+14     	; 0x37ce <vfprintf+0x4c>
    37c0:	93 fd       	sbrc	r25, 3
    37c2:	85 91       	lpm	r24, Z+
    37c4:	93 ff       	sbrs	r25, 3
    37c6:	81 91       	ld	r24, Z+
    37c8:	7f 01       	movw	r14, r30
    37ca:	85 32       	cpi	r24, 0x25	; 37
    37cc:	29 f4       	brne	.+10     	; 0x37d8 <vfprintf+0x56>
    37ce:	b6 01       	movw	r22, r12
    37d0:	90 e0       	ldi	r25, 0x00	; 0
    37d2:	0e 94 bb 1d 	call	0x3b76	; 0x3b76 <fputc>
    37d6:	e7 cf       	rjmp	.-50     	; 0x37a6 <vfprintf+0x24>
    37d8:	91 2c       	mov	r9, r1
    37da:	21 2c       	mov	r2, r1
    37dc:	31 2c       	mov	r3, r1
    37de:	ff e1       	ldi	r31, 0x1F	; 31
    37e0:	f3 15       	cp	r31, r3
    37e2:	d8 f0       	brcs	.+54     	; 0x381a <vfprintf+0x98>
    37e4:	8b 32       	cpi	r24, 0x2B	; 43
    37e6:	79 f0       	breq	.+30     	; 0x3806 <vfprintf+0x84>
    37e8:	38 f4       	brcc	.+14     	; 0x37f8 <vfprintf+0x76>
    37ea:	80 32       	cpi	r24, 0x20	; 32
    37ec:	79 f0       	breq	.+30     	; 0x380c <vfprintf+0x8a>
    37ee:	83 32       	cpi	r24, 0x23	; 35
    37f0:	a1 f4       	brne	.+40     	; 0x381a <vfprintf+0x98>
    37f2:	23 2d       	mov	r18, r3
    37f4:	20 61       	ori	r18, 0x10	; 16
    37f6:	1d c0       	rjmp	.+58     	; 0x3832 <vfprintf+0xb0>
    37f8:	8d 32       	cpi	r24, 0x2D	; 45
    37fa:	61 f0       	breq	.+24     	; 0x3814 <vfprintf+0x92>
    37fc:	80 33       	cpi	r24, 0x30	; 48
    37fe:	69 f4       	brne	.+26     	; 0x381a <vfprintf+0x98>
    3800:	23 2d       	mov	r18, r3
    3802:	21 60       	ori	r18, 0x01	; 1
    3804:	16 c0       	rjmp	.+44     	; 0x3832 <vfprintf+0xb0>
    3806:	83 2d       	mov	r24, r3
    3808:	82 60       	ori	r24, 0x02	; 2
    380a:	38 2e       	mov	r3, r24
    380c:	e3 2d       	mov	r30, r3
    380e:	e4 60       	ori	r30, 0x04	; 4
    3810:	3e 2e       	mov	r3, r30
    3812:	2a c0       	rjmp	.+84     	; 0x3868 <vfprintf+0xe6>
    3814:	f3 2d       	mov	r31, r3
    3816:	f8 60       	ori	r31, 0x08	; 8
    3818:	1d c0       	rjmp	.+58     	; 0x3854 <vfprintf+0xd2>
    381a:	37 fc       	sbrc	r3, 7
    381c:	2d c0       	rjmp	.+90     	; 0x3878 <vfprintf+0xf6>
    381e:	20 ed       	ldi	r18, 0xD0	; 208
    3820:	28 0f       	add	r18, r24
    3822:	2a 30       	cpi	r18, 0x0A	; 10
    3824:	40 f0       	brcs	.+16     	; 0x3836 <vfprintf+0xb4>
    3826:	8e 32       	cpi	r24, 0x2E	; 46
    3828:	b9 f4       	brne	.+46     	; 0x3858 <vfprintf+0xd6>
    382a:	36 fc       	sbrc	r3, 6
    382c:	81 c1       	rjmp	.+770    	; 0x3b30 <vfprintf+0x3ae>
    382e:	23 2d       	mov	r18, r3
    3830:	20 64       	ori	r18, 0x40	; 64
    3832:	32 2e       	mov	r3, r18
    3834:	19 c0       	rjmp	.+50     	; 0x3868 <vfprintf+0xe6>
    3836:	36 fe       	sbrs	r3, 6
    3838:	06 c0       	rjmp	.+12     	; 0x3846 <vfprintf+0xc4>
    383a:	8a e0       	ldi	r24, 0x0A	; 10
    383c:	98 9e       	mul	r9, r24
    383e:	20 0d       	add	r18, r0
    3840:	11 24       	eor	r1, r1
    3842:	92 2e       	mov	r9, r18
    3844:	11 c0       	rjmp	.+34     	; 0x3868 <vfprintf+0xe6>
    3846:	ea e0       	ldi	r30, 0x0A	; 10
    3848:	2e 9e       	mul	r2, r30
    384a:	20 0d       	add	r18, r0
    384c:	11 24       	eor	r1, r1
    384e:	22 2e       	mov	r2, r18
    3850:	f3 2d       	mov	r31, r3
    3852:	f0 62       	ori	r31, 0x20	; 32
    3854:	3f 2e       	mov	r3, r31
    3856:	08 c0       	rjmp	.+16     	; 0x3868 <vfprintf+0xe6>
    3858:	8c 36       	cpi	r24, 0x6C	; 108
    385a:	21 f4       	brne	.+8      	; 0x3864 <vfprintf+0xe2>
    385c:	83 2d       	mov	r24, r3
    385e:	80 68       	ori	r24, 0x80	; 128
    3860:	38 2e       	mov	r3, r24
    3862:	02 c0       	rjmp	.+4      	; 0x3868 <vfprintf+0xe6>
    3864:	88 36       	cpi	r24, 0x68	; 104
    3866:	41 f4       	brne	.+16     	; 0x3878 <vfprintf+0xf6>
    3868:	f7 01       	movw	r30, r14
    386a:	93 fd       	sbrc	r25, 3
    386c:	85 91       	lpm	r24, Z+
    386e:	93 ff       	sbrs	r25, 3
    3870:	81 91       	ld	r24, Z+
    3872:	7f 01       	movw	r14, r30
    3874:	81 11       	cpse	r24, r1
    3876:	b3 cf       	rjmp	.-154    	; 0x37de <vfprintf+0x5c>
    3878:	98 2f       	mov	r25, r24
    387a:	9f 7d       	andi	r25, 0xDF	; 223
    387c:	95 54       	subi	r25, 0x45	; 69
    387e:	93 30       	cpi	r25, 0x03	; 3
    3880:	28 f4       	brcc	.+10     	; 0x388c <vfprintf+0x10a>
    3882:	0c 5f       	subi	r16, 0xFC	; 252
    3884:	1f 4f       	sbci	r17, 0xFF	; 255
    3886:	9f e3       	ldi	r25, 0x3F	; 63
    3888:	99 83       	std	Y+1, r25	; 0x01
    388a:	0d c0       	rjmp	.+26     	; 0x38a6 <vfprintf+0x124>
    388c:	83 36       	cpi	r24, 0x63	; 99
    388e:	31 f0       	breq	.+12     	; 0x389c <vfprintf+0x11a>
    3890:	83 37       	cpi	r24, 0x73	; 115
    3892:	71 f0       	breq	.+28     	; 0x38b0 <vfprintf+0x12e>
    3894:	83 35       	cpi	r24, 0x53	; 83
    3896:	09 f0       	breq	.+2      	; 0x389a <vfprintf+0x118>
    3898:	59 c0       	rjmp	.+178    	; 0x394c <vfprintf+0x1ca>
    389a:	21 c0       	rjmp	.+66     	; 0x38de <vfprintf+0x15c>
    389c:	f8 01       	movw	r30, r16
    389e:	80 81       	ld	r24, Z
    38a0:	89 83       	std	Y+1, r24	; 0x01
    38a2:	0e 5f       	subi	r16, 0xFE	; 254
    38a4:	1f 4f       	sbci	r17, 0xFF	; 255
    38a6:	88 24       	eor	r8, r8
    38a8:	83 94       	inc	r8
    38aa:	91 2c       	mov	r9, r1
    38ac:	53 01       	movw	r10, r6
    38ae:	13 c0       	rjmp	.+38     	; 0x38d6 <vfprintf+0x154>
    38b0:	28 01       	movw	r4, r16
    38b2:	f2 e0       	ldi	r31, 0x02	; 2
    38b4:	4f 0e       	add	r4, r31
    38b6:	51 1c       	adc	r5, r1
    38b8:	f8 01       	movw	r30, r16
    38ba:	a0 80       	ld	r10, Z
    38bc:	b1 80       	ldd	r11, Z+1	; 0x01
    38be:	36 fe       	sbrs	r3, 6
    38c0:	03 c0       	rjmp	.+6      	; 0x38c8 <vfprintf+0x146>
    38c2:	69 2d       	mov	r22, r9
    38c4:	70 e0       	ldi	r23, 0x00	; 0
    38c6:	02 c0       	rjmp	.+4      	; 0x38cc <vfprintf+0x14a>
    38c8:	6f ef       	ldi	r22, 0xFF	; 255
    38ca:	7f ef       	ldi	r23, 0xFF	; 255
    38cc:	c5 01       	movw	r24, r10
    38ce:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <strnlen>
    38d2:	4c 01       	movw	r8, r24
    38d4:	82 01       	movw	r16, r4
    38d6:	f3 2d       	mov	r31, r3
    38d8:	ff 77       	andi	r31, 0x7F	; 127
    38da:	3f 2e       	mov	r3, r31
    38dc:	16 c0       	rjmp	.+44     	; 0x390a <vfprintf+0x188>
    38de:	28 01       	movw	r4, r16
    38e0:	22 e0       	ldi	r18, 0x02	; 2
    38e2:	42 0e       	add	r4, r18
    38e4:	51 1c       	adc	r5, r1
    38e6:	f8 01       	movw	r30, r16
    38e8:	a0 80       	ld	r10, Z
    38ea:	b1 80       	ldd	r11, Z+1	; 0x01
    38ec:	36 fe       	sbrs	r3, 6
    38ee:	03 c0       	rjmp	.+6      	; 0x38f6 <vfprintf+0x174>
    38f0:	69 2d       	mov	r22, r9
    38f2:	70 e0       	ldi	r23, 0x00	; 0
    38f4:	02 c0       	rjmp	.+4      	; 0x38fa <vfprintf+0x178>
    38f6:	6f ef       	ldi	r22, 0xFF	; 255
    38f8:	7f ef       	ldi	r23, 0xFF	; 255
    38fa:	c5 01       	movw	r24, r10
    38fc:	0e 94 a5 1d 	call	0x3b4a	; 0x3b4a <strnlen_P>
    3900:	4c 01       	movw	r8, r24
    3902:	f3 2d       	mov	r31, r3
    3904:	f0 68       	ori	r31, 0x80	; 128
    3906:	3f 2e       	mov	r3, r31
    3908:	82 01       	movw	r16, r4
    390a:	33 fc       	sbrc	r3, 3
    390c:	1b c0       	rjmp	.+54     	; 0x3944 <vfprintf+0x1c2>
    390e:	82 2d       	mov	r24, r2
    3910:	90 e0       	ldi	r25, 0x00	; 0
    3912:	88 16       	cp	r8, r24
    3914:	99 06       	cpc	r9, r25
    3916:	b0 f4       	brcc	.+44     	; 0x3944 <vfprintf+0x1c2>
    3918:	b6 01       	movw	r22, r12
    391a:	80 e2       	ldi	r24, 0x20	; 32
    391c:	90 e0       	ldi	r25, 0x00	; 0
    391e:	0e 94 bb 1d 	call	0x3b76	; 0x3b76 <fputc>
    3922:	2a 94       	dec	r2
    3924:	f4 cf       	rjmp	.-24     	; 0x390e <vfprintf+0x18c>
    3926:	f5 01       	movw	r30, r10
    3928:	37 fc       	sbrc	r3, 7
    392a:	85 91       	lpm	r24, Z+
    392c:	37 fe       	sbrs	r3, 7
    392e:	81 91       	ld	r24, Z+
    3930:	5f 01       	movw	r10, r30
    3932:	b6 01       	movw	r22, r12
    3934:	90 e0       	ldi	r25, 0x00	; 0
    3936:	0e 94 bb 1d 	call	0x3b76	; 0x3b76 <fputc>
    393a:	21 10       	cpse	r2, r1
    393c:	2a 94       	dec	r2
    393e:	21 e0       	ldi	r18, 0x01	; 1
    3940:	82 1a       	sub	r8, r18
    3942:	91 08       	sbc	r9, r1
    3944:	81 14       	cp	r8, r1
    3946:	91 04       	cpc	r9, r1
    3948:	71 f7       	brne	.-36     	; 0x3926 <vfprintf+0x1a4>
    394a:	e8 c0       	rjmp	.+464    	; 0x3b1c <vfprintf+0x39a>
    394c:	84 36       	cpi	r24, 0x64	; 100
    394e:	11 f0       	breq	.+4      	; 0x3954 <vfprintf+0x1d2>
    3950:	89 36       	cpi	r24, 0x69	; 105
    3952:	41 f5       	brne	.+80     	; 0x39a4 <vfprintf+0x222>
    3954:	f8 01       	movw	r30, r16
    3956:	37 fe       	sbrs	r3, 7
    3958:	07 c0       	rjmp	.+14     	; 0x3968 <vfprintf+0x1e6>
    395a:	60 81       	ld	r22, Z
    395c:	71 81       	ldd	r23, Z+1	; 0x01
    395e:	82 81       	ldd	r24, Z+2	; 0x02
    3960:	93 81       	ldd	r25, Z+3	; 0x03
    3962:	0c 5f       	subi	r16, 0xFC	; 252
    3964:	1f 4f       	sbci	r17, 0xFF	; 255
    3966:	08 c0       	rjmp	.+16     	; 0x3978 <vfprintf+0x1f6>
    3968:	60 81       	ld	r22, Z
    396a:	71 81       	ldd	r23, Z+1	; 0x01
    396c:	07 2e       	mov	r0, r23
    396e:	00 0c       	add	r0, r0
    3970:	88 0b       	sbc	r24, r24
    3972:	99 0b       	sbc	r25, r25
    3974:	0e 5f       	subi	r16, 0xFE	; 254
    3976:	1f 4f       	sbci	r17, 0xFF	; 255
    3978:	f3 2d       	mov	r31, r3
    397a:	ff 76       	andi	r31, 0x6F	; 111
    397c:	3f 2e       	mov	r3, r31
    397e:	97 ff       	sbrs	r25, 7
    3980:	09 c0       	rjmp	.+18     	; 0x3994 <vfprintf+0x212>
    3982:	90 95       	com	r25
    3984:	80 95       	com	r24
    3986:	70 95       	com	r23
    3988:	61 95       	neg	r22
    398a:	7f 4f       	sbci	r23, 0xFF	; 255
    398c:	8f 4f       	sbci	r24, 0xFF	; 255
    398e:	9f 4f       	sbci	r25, 0xFF	; 255
    3990:	f0 68       	ori	r31, 0x80	; 128
    3992:	3f 2e       	mov	r3, r31
    3994:	2a e0       	ldi	r18, 0x0A	; 10
    3996:	30 e0       	ldi	r19, 0x00	; 0
    3998:	a3 01       	movw	r20, r6
    399a:	0e 94 f7 1d 	call	0x3bee	; 0x3bee <__ultoa_invert>
    399e:	88 2e       	mov	r8, r24
    39a0:	86 18       	sub	r8, r6
    39a2:	45 c0       	rjmp	.+138    	; 0x3a2e <vfprintf+0x2ac>
    39a4:	85 37       	cpi	r24, 0x75	; 117
    39a6:	31 f4       	brne	.+12     	; 0x39b4 <vfprintf+0x232>
    39a8:	23 2d       	mov	r18, r3
    39aa:	2f 7e       	andi	r18, 0xEF	; 239
    39ac:	b2 2e       	mov	r11, r18
    39ae:	2a e0       	ldi	r18, 0x0A	; 10
    39b0:	30 e0       	ldi	r19, 0x00	; 0
    39b2:	25 c0       	rjmp	.+74     	; 0x39fe <vfprintf+0x27c>
    39b4:	93 2d       	mov	r25, r3
    39b6:	99 7f       	andi	r25, 0xF9	; 249
    39b8:	b9 2e       	mov	r11, r25
    39ba:	8f 36       	cpi	r24, 0x6F	; 111
    39bc:	c1 f0       	breq	.+48     	; 0x39ee <vfprintf+0x26c>
    39be:	18 f4       	brcc	.+6      	; 0x39c6 <vfprintf+0x244>
    39c0:	88 35       	cpi	r24, 0x58	; 88
    39c2:	79 f0       	breq	.+30     	; 0x39e2 <vfprintf+0x260>
    39c4:	b5 c0       	rjmp	.+362    	; 0x3b30 <vfprintf+0x3ae>
    39c6:	80 37       	cpi	r24, 0x70	; 112
    39c8:	19 f0       	breq	.+6      	; 0x39d0 <vfprintf+0x24e>
    39ca:	88 37       	cpi	r24, 0x78	; 120
    39cc:	21 f0       	breq	.+8      	; 0x39d6 <vfprintf+0x254>
    39ce:	b0 c0       	rjmp	.+352    	; 0x3b30 <vfprintf+0x3ae>
    39d0:	e9 2f       	mov	r30, r25
    39d2:	e0 61       	ori	r30, 0x10	; 16
    39d4:	be 2e       	mov	r11, r30
    39d6:	b4 fe       	sbrs	r11, 4
    39d8:	0d c0       	rjmp	.+26     	; 0x39f4 <vfprintf+0x272>
    39da:	fb 2d       	mov	r31, r11
    39dc:	f4 60       	ori	r31, 0x04	; 4
    39de:	bf 2e       	mov	r11, r31
    39e0:	09 c0       	rjmp	.+18     	; 0x39f4 <vfprintf+0x272>
    39e2:	34 fe       	sbrs	r3, 4
    39e4:	0a c0       	rjmp	.+20     	; 0x39fa <vfprintf+0x278>
    39e6:	29 2f       	mov	r18, r25
    39e8:	26 60       	ori	r18, 0x06	; 6
    39ea:	b2 2e       	mov	r11, r18
    39ec:	06 c0       	rjmp	.+12     	; 0x39fa <vfprintf+0x278>
    39ee:	28 e0       	ldi	r18, 0x08	; 8
    39f0:	30 e0       	ldi	r19, 0x00	; 0
    39f2:	05 c0       	rjmp	.+10     	; 0x39fe <vfprintf+0x27c>
    39f4:	20 e1       	ldi	r18, 0x10	; 16
    39f6:	30 e0       	ldi	r19, 0x00	; 0
    39f8:	02 c0       	rjmp	.+4      	; 0x39fe <vfprintf+0x27c>
    39fa:	20 e1       	ldi	r18, 0x10	; 16
    39fc:	32 e0       	ldi	r19, 0x02	; 2
    39fe:	f8 01       	movw	r30, r16
    3a00:	b7 fe       	sbrs	r11, 7
    3a02:	07 c0       	rjmp	.+14     	; 0x3a12 <vfprintf+0x290>
    3a04:	60 81       	ld	r22, Z
    3a06:	71 81       	ldd	r23, Z+1	; 0x01
    3a08:	82 81       	ldd	r24, Z+2	; 0x02
    3a0a:	93 81       	ldd	r25, Z+3	; 0x03
    3a0c:	0c 5f       	subi	r16, 0xFC	; 252
    3a0e:	1f 4f       	sbci	r17, 0xFF	; 255
    3a10:	06 c0       	rjmp	.+12     	; 0x3a1e <vfprintf+0x29c>
    3a12:	60 81       	ld	r22, Z
    3a14:	71 81       	ldd	r23, Z+1	; 0x01
    3a16:	80 e0       	ldi	r24, 0x00	; 0
    3a18:	90 e0       	ldi	r25, 0x00	; 0
    3a1a:	0e 5f       	subi	r16, 0xFE	; 254
    3a1c:	1f 4f       	sbci	r17, 0xFF	; 255
    3a1e:	a3 01       	movw	r20, r6
    3a20:	0e 94 f7 1d 	call	0x3bee	; 0x3bee <__ultoa_invert>
    3a24:	88 2e       	mov	r8, r24
    3a26:	86 18       	sub	r8, r6
    3a28:	fb 2d       	mov	r31, r11
    3a2a:	ff 77       	andi	r31, 0x7F	; 127
    3a2c:	3f 2e       	mov	r3, r31
    3a2e:	36 fe       	sbrs	r3, 6
    3a30:	0d c0       	rjmp	.+26     	; 0x3a4c <vfprintf+0x2ca>
    3a32:	23 2d       	mov	r18, r3
    3a34:	2e 7f       	andi	r18, 0xFE	; 254
    3a36:	a2 2e       	mov	r10, r18
    3a38:	89 14       	cp	r8, r9
    3a3a:	58 f4       	brcc	.+22     	; 0x3a52 <vfprintf+0x2d0>
    3a3c:	34 fe       	sbrs	r3, 4
    3a3e:	0b c0       	rjmp	.+22     	; 0x3a56 <vfprintf+0x2d4>
    3a40:	32 fc       	sbrc	r3, 2
    3a42:	09 c0       	rjmp	.+18     	; 0x3a56 <vfprintf+0x2d4>
    3a44:	83 2d       	mov	r24, r3
    3a46:	8e 7e       	andi	r24, 0xEE	; 238
    3a48:	a8 2e       	mov	r10, r24
    3a4a:	05 c0       	rjmp	.+10     	; 0x3a56 <vfprintf+0x2d4>
    3a4c:	b8 2c       	mov	r11, r8
    3a4e:	a3 2c       	mov	r10, r3
    3a50:	03 c0       	rjmp	.+6      	; 0x3a58 <vfprintf+0x2d6>
    3a52:	b8 2c       	mov	r11, r8
    3a54:	01 c0       	rjmp	.+2      	; 0x3a58 <vfprintf+0x2d6>
    3a56:	b9 2c       	mov	r11, r9
    3a58:	a4 fe       	sbrs	r10, 4
    3a5a:	0f c0       	rjmp	.+30     	; 0x3a7a <vfprintf+0x2f8>
    3a5c:	fe 01       	movw	r30, r28
    3a5e:	e8 0d       	add	r30, r8
    3a60:	f1 1d       	adc	r31, r1
    3a62:	80 81       	ld	r24, Z
    3a64:	80 33       	cpi	r24, 0x30	; 48
    3a66:	21 f4       	brne	.+8      	; 0x3a70 <vfprintf+0x2ee>
    3a68:	9a 2d       	mov	r25, r10
    3a6a:	99 7e       	andi	r25, 0xE9	; 233
    3a6c:	a9 2e       	mov	r10, r25
    3a6e:	09 c0       	rjmp	.+18     	; 0x3a82 <vfprintf+0x300>
    3a70:	a2 fe       	sbrs	r10, 2
    3a72:	06 c0       	rjmp	.+12     	; 0x3a80 <vfprintf+0x2fe>
    3a74:	b3 94       	inc	r11
    3a76:	b3 94       	inc	r11
    3a78:	04 c0       	rjmp	.+8      	; 0x3a82 <vfprintf+0x300>
    3a7a:	8a 2d       	mov	r24, r10
    3a7c:	86 78       	andi	r24, 0x86	; 134
    3a7e:	09 f0       	breq	.+2      	; 0x3a82 <vfprintf+0x300>
    3a80:	b3 94       	inc	r11
    3a82:	a3 fc       	sbrc	r10, 3
    3a84:	11 c0       	rjmp	.+34     	; 0x3aa8 <vfprintf+0x326>
    3a86:	a0 fe       	sbrs	r10, 0
    3a88:	06 c0       	rjmp	.+12     	; 0x3a96 <vfprintf+0x314>
    3a8a:	b2 14       	cp	r11, r2
    3a8c:	88 f4       	brcc	.+34     	; 0x3ab0 <vfprintf+0x32e>
    3a8e:	28 0c       	add	r2, r8
    3a90:	92 2c       	mov	r9, r2
    3a92:	9b 18       	sub	r9, r11
    3a94:	0e c0       	rjmp	.+28     	; 0x3ab2 <vfprintf+0x330>
    3a96:	b2 14       	cp	r11, r2
    3a98:	60 f4       	brcc	.+24     	; 0x3ab2 <vfprintf+0x330>
    3a9a:	b6 01       	movw	r22, r12
    3a9c:	80 e2       	ldi	r24, 0x20	; 32
    3a9e:	90 e0       	ldi	r25, 0x00	; 0
    3aa0:	0e 94 bb 1d 	call	0x3b76	; 0x3b76 <fputc>
    3aa4:	b3 94       	inc	r11
    3aa6:	f7 cf       	rjmp	.-18     	; 0x3a96 <vfprintf+0x314>
    3aa8:	b2 14       	cp	r11, r2
    3aaa:	18 f4       	brcc	.+6      	; 0x3ab2 <vfprintf+0x330>
    3aac:	2b 18       	sub	r2, r11
    3aae:	02 c0       	rjmp	.+4      	; 0x3ab4 <vfprintf+0x332>
    3ab0:	98 2c       	mov	r9, r8
    3ab2:	21 2c       	mov	r2, r1
    3ab4:	a4 fe       	sbrs	r10, 4
    3ab6:	10 c0       	rjmp	.+32     	; 0x3ad8 <vfprintf+0x356>
    3ab8:	b6 01       	movw	r22, r12
    3aba:	80 e3       	ldi	r24, 0x30	; 48
    3abc:	90 e0       	ldi	r25, 0x00	; 0
    3abe:	0e 94 bb 1d 	call	0x3b76	; 0x3b76 <fputc>
    3ac2:	a2 fe       	sbrs	r10, 2
    3ac4:	17 c0       	rjmp	.+46     	; 0x3af4 <vfprintf+0x372>
    3ac6:	a1 fc       	sbrc	r10, 1
    3ac8:	03 c0       	rjmp	.+6      	; 0x3ad0 <vfprintf+0x34e>
    3aca:	88 e7       	ldi	r24, 0x78	; 120
    3acc:	90 e0       	ldi	r25, 0x00	; 0
    3ace:	02 c0       	rjmp	.+4      	; 0x3ad4 <vfprintf+0x352>
    3ad0:	88 e5       	ldi	r24, 0x58	; 88
    3ad2:	90 e0       	ldi	r25, 0x00	; 0
    3ad4:	b6 01       	movw	r22, r12
    3ad6:	0c c0       	rjmp	.+24     	; 0x3af0 <vfprintf+0x36e>
    3ad8:	8a 2d       	mov	r24, r10
    3ada:	86 78       	andi	r24, 0x86	; 134
    3adc:	59 f0       	breq	.+22     	; 0x3af4 <vfprintf+0x372>
    3ade:	a1 fe       	sbrs	r10, 1
    3ae0:	02 c0       	rjmp	.+4      	; 0x3ae6 <vfprintf+0x364>
    3ae2:	8b e2       	ldi	r24, 0x2B	; 43
    3ae4:	01 c0       	rjmp	.+2      	; 0x3ae8 <vfprintf+0x366>
    3ae6:	80 e2       	ldi	r24, 0x20	; 32
    3ae8:	a7 fc       	sbrc	r10, 7
    3aea:	8d e2       	ldi	r24, 0x2D	; 45
    3aec:	b6 01       	movw	r22, r12
    3aee:	90 e0       	ldi	r25, 0x00	; 0
    3af0:	0e 94 bb 1d 	call	0x3b76	; 0x3b76 <fputc>
    3af4:	89 14       	cp	r8, r9
    3af6:	38 f4       	brcc	.+14     	; 0x3b06 <vfprintf+0x384>
    3af8:	b6 01       	movw	r22, r12
    3afa:	80 e3       	ldi	r24, 0x30	; 48
    3afc:	90 e0       	ldi	r25, 0x00	; 0
    3afe:	0e 94 bb 1d 	call	0x3b76	; 0x3b76 <fputc>
    3b02:	9a 94       	dec	r9
    3b04:	f7 cf       	rjmp	.-18     	; 0x3af4 <vfprintf+0x372>
    3b06:	8a 94       	dec	r8
    3b08:	f3 01       	movw	r30, r6
    3b0a:	e8 0d       	add	r30, r8
    3b0c:	f1 1d       	adc	r31, r1
    3b0e:	80 81       	ld	r24, Z
    3b10:	b6 01       	movw	r22, r12
    3b12:	90 e0       	ldi	r25, 0x00	; 0
    3b14:	0e 94 bb 1d 	call	0x3b76	; 0x3b76 <fputc>
    3b18:	81 10       	cpse	r8, r1
    3b1a:	f5 cf       	rjmp	.-22     	; 0x3b06 <vfprintf+0x384>
    3b1c:	22 20       	and	r2, r2
    3b1e:	09 f4       	brne	.+2      	; 0x3b22 <vfprintf+0x3a0>
    3b20:	42 ce       	rjmp	.-892    	; 0x37a6 <vfprintf+0x24>
    3b22:	b6 01       	movw	r22, r12
    3b24:	80 e2       	ldi	r24, 0x20	; 32
    3b26:	90 e0       	ldi	r25, 0x00	; 0
    3b28:	0e 94 bb 1d 	call	0x3b76	; 0x3b76 <fputc>
    3b2c:	2a 94       	dec	r2
    3b2e:	f6 cf       	rjmp	.-20     	; 0x3b1c <vfprintf+0x39a>
    3b30:	f6 01       	movw	r30, r12
    3b32:	86 81       	ldd	r24, Z+6	; 0x06
    3b34:	97 81       	ldd	r25, Z+7	; 0x07
    3b36:	02 c0       	rjmp	.+4      	; 0x3b3c <vfprintf+0x3ba>
    3b38:	8f ef       	ldi	r24, 0xFF	; 255
    3b3a:	9f ef       	ldi	r25, 0xFF	; 255
    3b3c:	2b 96       	adiw	r28, 0x0b	; 11
    3b3e:	e2 e1       	ldi	r30, 0x12	; 18
    3b40:	0c 94 71 1e 	jmp	0x3ce2	; 0x3ce2 <__epilogue_restores__>

00003b44 <__ctype_isfalse>:
    3b44:	99 27       	eor	r25, r25
    3b46:	88 27       	eor	r24, r24

00003b48 <__ctype_istrue>:
    3b48:	08 95       	ret

00003b4a <strnlen_P>:
    3b4a:	fc 01       	movw	r30, r24
    3b4c:	05 90       	lpm	r0, Z+
    3b4e:	61 50       	subi	r22, 0x01	; 1
    3b50:	70 40       	sbci	r23, 0x00	; 0
    3b52:	01 10       	cpse	r0, r1
    3b54:	d8 f7       	brcc	.-10     	; 0x3b4c <strnlen_P+0x2>
    3b56:	80 95       	com	r24
    3b58:	90 95       	com	r25
    3b5a:	8e 0f       	add	r24, r30
    3b5c:	9f 1f       	adc	r25, r31
    3b5e:	08 95       	ret

00003b60 <strnlen>:
    3b60:	fc 01       	movw	r30, r24
    3b62:	61 50       	subi	r22, 0x01	; 1
    3b64:	70 40       	sbci	r23, 0x00	; 0
    3b66:	01 90       	ld	r0, Z+
    3b68:	01 10       	cpse	r0, r1
    3b6a:	d8 f7       	brcc	.-10     	; 0x3b62 <strnlen+0x2>
    3b6c:	80 95       	com	r24
    3b6e:	90 95       	com	r25
    3b70:	8e 0f       	add	r24, r30
    3b72:	9f 1f       	adc	r25, r31
    3b74:	08 95       	ret

00003b76 <fputc>:
    3b76:	0f 93       	push	r16
    3b78:	1f 93       	push	r17
    3b7a:	cf 93       	push	r28
    3b7c:	df 93       	push	r29
    3b7e:	fb 01       	movw	r30, r22
    3b80:	23 81       	ldd	r18, Z+3	; 0x03
    3b82:	21 fd       	sbrc	r18, 1
    3b84:	03 c0       	rjmp	.+6      	; 0x3b8c <fputc+0x16>
    3b86:	8f ef       	ldi	r24, 0xFF	; 255
    3b88:	9f ef       	ldi	r25, 0xFF	; 255
    3b8a:	2c c0       	rjmp	.+88     	; 0x3be4 <fputc+0x6e>
    3b8c:	22 ff       	sbrs	r18, 2
    3b8e:	16 c0       	rjmp	.+44     	; 0x3bbc <fputc+0x46>
    3b90:	46 81       	ldd	r20, Z+6	; 0x06
    3b92:	57 81       	ldd	r21, Z+7	; 0x07
    3b94:	24 81       	ldd	r18, Z+4	; 0x04
    3b96:	35 81       	ldd	r19, Z+5	; 0x05
    3b98:	42 17       	cp	r20, r18
    3b9a:	53 07       	cpc	r21, r19
    3b9c:	44 f4       	brge	.+16     	; 0x3bae <fputc+0x38>
    3b9e:	a0 81       	ld	r26, Z
    3ba0:	b1 81       	ldd	r27, Z+1	; 0x01
    3ba2:	9d 01       	movw	r18, r26
    3ba4:	2f 5f       	subi	r18, 0xFF	; 255
    3ba6:	3f 4f       	sbci	r19, 0xFF	; 255
    3ba8:	31 83       	std	Z+1, r19	; 0x01
    3baa:	20 83       	st	Z, r18
    3bac:	8c 93       	st	X, r24
    3bae:	26 81       	ldd	r18, Z+6	; 0x06
    3bb0:	37 81       	ldd	r19, Z+7	; 0x07
    3bb2:	2f 5f       	subi	r18, 0xFF	; 255
    3bb4:	3f 4f       	sbci	r19, 0xFF	; 255
    3bb6:	37 83       	std	Z+7, r19	; 0x07
    3bb8:	26 83       	std	Z+6, r18	; 0x06
    3bba:	14 c0       	rjmp	.+40     	; 0x3be4 <fputc+0x6e>
    3bbc:	8b 01       	movw	r16, r22
    3bbe:	ec 01       	movw	r28, r24
    3bc0:	fb 01       	movw	r30, r22
    3bc2:	00 84       	ldd	r0, Z+8	; 0x08
    3bc4:	f1 85       	ldd	r31, Z+9	; 0x09
    3bc6:	e0 2d       	mov	r30, r0
    3bc8:	09 95       	icall
    3bca:	89 2b       	or	r24, r25
    3bcc:	e1 f6       	brne	.-72     	; 0x3b86 <fputc+0x10>
    3bce:	d8 01       	movw	r26, r16
    3bd0:	16 96       	adiw	r26, 0x06	; 6
    3bd2:	8d 91       	ld	r24, X+
    3bd4:	9c 91       	ld	r25, X
    3bd6:	17 97       	sbiw	r26, 0x07	; 7
    3bd8:	01 96       	adiw	r24, 0x01	; 1
    3bda:	17 96       	adiw	r26, 0x07	; 7
    3bdc:	9c 93       	st	X, r25
    3bde:	8e 93       	st	-X, r24
    3be0:	16 97       	sbiw	r26, 0x06	; 6
    3be2:	ce 01       	movw	r24, r28
    3be4:	df 91       	pop	r29
    3be6:	cf 91       	pop	r28
    3be8:	1f 91       	pop	r17
    3bea:	0f 91       	pop	r16
    3bec:	08 95       	ret

00003bee <__ultoa_invert>:
    3bee:	fa 01       	movw	r30, r20
    3bf0:	aa 27       	eor	r26, r26
    3bf2:	28 30       	cpi	r18, 0x08	; 8
    3bf4:	51 f1       	breq	.+84     	; 0x3c4a <__ultoa_invert+0x5c>
    3bf6:	20 31       	cpi	r18, 0x10	; 16
    3bf8:	81 f1       	breq	.+96     	; 0x3c5a <__ultoa_invert+0x6c>
    3bfa:	e8 94       	clt
    3bfc:	6f 93       	push	r22
    3bfe:	6e 7f       	andi	r22, 0xFE	; 254
    3c00:	6e 5f       	subi	r22, 0xFE	; 254
    3c02:	7f 4f       	sbci	r23, 0xFF	; 255
    3c04:	8f 4f       	sbci	r24, 0xFF	; 255
    3c06:	9f 4f       	sbci	r25, 0xFF	; 255
    3c08:	af 4f       	sbci	r26, 0xFF	; 255
    3c0a:	b1 e0       	ldi	r27, 0x01	; 1
    3c0c:	3e d0       	rcall	.+124    	; 0x3c8a <__ultoa_invert+0x9c>
    3c0e:	b4 e0       	ldi	r27, 0x04	; 4
    3c10:	3c d0       	rcall	.+120    	; 0x3c8a <__ultoa_invert+0x9c>
    3c12:	67 0f       	add	r22, r23
    3c14:	78 1f       	adc	r23, r24
    3c16:	89 1f       	adc	r24, r25
    3c18:	9a 1f       	adc	r25, r26
    3c1a:	a1 1d       	adc	r26, r1
    3c1c:	68 0f       	add	r22, r24
    3c1e:	79 1f       	adc	r23, r25
    3c20:	8a 1f       	adc	r24, r26
    3c22:	91 1d       	adc	r25, r1
    3c24:	a1 1d       	adc	r26, r1
    3c26:	6a 0f       	add	r22, r26
    3c28:	71 1d       	adc	r23, r1
    3c2a:	81 1d       	adc	r24, r1
    3c2c:	91 1d       	adc	r25, r1
    3c2e:	a1 1d       	adc	r26, r1
    3c30:	20 d0       	rcall	.+64     	; 0x3c72 <__ultoa_invert+0x84>
    3c32:	09 f4       	brne	.+2      	; 0x3c36 <__ultoa_invert+0x48>
    3c34:	68 94       	set
    3c36:	3f 91       	pop	r19
    3c38:	2a e0       	ldi	r18, 0x0A	; 10
    3c3a:	26 9f       	mul	r18, r22
    3c3c:	11 24       	eor	r1, r1
    3c3e:	30 19       	sub	r19, r0
    3c40:	30 5d       	subi	r19, 0xD0	; 208
    3c42:	31 93       	st	Z+, r19
    3c44:	de f6       	brtc	.-74     	; 0x3bfc <__ultoa_invert+0xe>
    3c46:	cf 01       	movw	r24, r30
    3c48:	08 95       	ret
    3c4a:	46 2f       	mov	r20, r22
    3c4c:	47 70       	andi	r20, 0x07	; 7
    3c4e:	40 5d       	subi	r20, 0xD0	; 208
    3c50:	41 93       	st	Z+, r20
    3c52:	b3 e0       	ldi	r27, 0x03	; 3
    3c54:	0f d0       	rcall	.+30     	; 0x3c74 <__ultoa_invert+0x86>
    3c56:	c9 f7       	brne	.-14     	; 0x3c4a <__ultoa_invert+0x5c>
    3c58:	f6 cf       	rjmp	.-20     	; 0x3c46 <__ultoa_invert+0x58>
    3c5a:	46 2f       	mov	r20, r22
    3c5c:	4f 70       	andi	r20, 0x0F	; 15
    3c5e:	40 5d       	subi	r20, 0xD0	; 208
    3c60:	4a 33       	cpi	r20, 0x3A	; 58
    3c62:	18 f0       	brcs	.+6      	; 0x3c6a <__ultoa_invert+0x7c>
    3c64:	49 5d       	subi	r20, 0xD9	; 217
    3c66:	31 fd       	sbrc	r19, 1
    3c68:	40 52       	subi	r20, 0x20	; 32
    3c6a:	41 93       	st	Z+, r20
    3c6c:	02 d0       	rcall	.+4      	; 0x3c72 <__ultoa_invert+0x84>
    3c6e:	a9 f7       	brne	.-22     	; 0x3c5a <__ultoa_invert+0x6c>
    3c70:	ea cf       	rjmp	.-44     	; 0x3c46 <__ultoa_invert+0x58>
    3c72:	b4 e0       	ldi	r27, 0x04	; 4
    3c74:	a6 95       	lsr	r26
    3c76:	97 95       	ror	r25
    3c78:	87 95       	ror	r24
    3c7a:	77 95       	ror	r23
    3c7c:	67 95       	ror	r22
    3c7e:	ba 95       	dec	r27
    3c80:	c9 f7       	brne	.-14     	; 0x3c74 <__ultoa_invert+0x86>
    3c82:	00 97       	sbiw	r24, 0x00	; 0
    3c84:	61 05       	cpc	r22, r1
    3c86:	71 05       	cpc	r23, r1
    3c88:	08 95       	ret
    3c8a:	9b 01       	movw	r18, r22
    3c8c:	ac 01       	movw	r20, r24
    3c8e:	0a 2e       	mov	r0, r26
    3c90:	06 94       	lsr	r0
    3c92:	57 95       	ror	r21
    3c94:	47 95       	ror	r20
    3c96:	37 95       	ror	r19
    3c98:	27 95       	ror	r18
    3c9a:	ba 95       	dec	r27
    3c9c:	c9 f7       	brne	.-14     	; 0x3c90 <__ultoa_invert+0xa2>
    3c9e:	62 0f       	add	r22, r18
    3ca0:	73 1f       	adc	r23, r19
    3ca2:	84 1f       	adc	r24, r20
    3ca4:	95 1f       	adc	r25, r21
    3ca6:	a0 1d       	adc	r26, r0
    3ca8:	08 95       	ret

00003caa <__prologue_saves__>:
    3caa:	2f 92       	push	r2
    3cac:	3f 92       	push	r3
    3cae:	4f 92       	push	r4
    3cb0:	5f 92       	push	r5
    3cb2:	6f 92       	push	r6
    3cb4:	7f 92       	push	r7
    3cb6:	8f 92       	push	r8
    3cb8:	9f 92       	push	r9
    3cba:	af 92       	push	r10
    3cbc:	bf 92       	push	r11
    3cbe:	cf 92       	push	r12
    3cc0:	df 92       	push	r13
    3cc2:	ef 92       	push	r14
    3cc4:	ff 92       	push	r15
    3cc6:	0f 93       	push	r16
    3cc8:	1f 93       	push	r17
    3cca:	cf 93       	push	r28
    3ccc:	df 93       	push	r29
    3cce:	cd b7       	in	r28, 0x3d	; 61
    3cd0:	de b7       	in	r29, 0x3e	; 62
    3cd2:	ca 1b       	sub	r28, r26
    3cd4:	db 0b       	sbc	r29, r27
    3cd6:	0f b6       	in	r0, 0x3f	; 63
    3cd8:	f8 94       	cli
    3cda:	de bf       	out	0x3e, r29	; 62
    3cdc:	0f be       	out	0x3f, r0	; 63
    3cde:	cd bf       	out	0x3d, r28	; 61
    3ce0:	09 94       	ijmp

00003ce2 <__epilogue_restores__>:
    3ce2:	2a 88       	ldd	r2, Y+18	; 0x12
    3ce4:	39 88       	ldd	r3, Y+17	; 0x11
    3ce6:	48 88       	ldd	r4, Y+16	; 0x10
    3ce8:	5f 84       	ldd	r5, Y+15	; 0x0f
    3cea:	6e 84       	ldd	r6, Y+14	; 0x0e
    3cec:	7d 84       	ldd	r7, Y+13	; 0x0d
    3cee:	8c 84       	ldd	r8, Y+12	; 0x0c
    3cf0:	9b 84       	ldd	r9, Y+11	; 0x0b
    3cf2:	aa 84       	ldd	r10, Y+10	; 0x0a
    3cf4:	b9 84       	ldd	r11, Y+9	; 0x09
    3cf6:	c8 84       	ldd	r12, Y+8	; 0x08
    3cf8:	df 80       	ldd	r13, Y+7	; 0x07
    3cfa:	ee 80       	ldd	r14, Y+6	; 0x06
    3cfc:	fd 80       	ldd	r15, Y+5	; 0x05
    3cfe:	0c 81       	ldd	r16, Y+4	; 0x04
    3d00:	1b 81       	ldd	r17, Y+3	; 0x03
    3d02:	aa 81       	ldd	r26, Y+2	; 0x02
    3d04:	b9 81       	ldd	r27, Y+1	; 0x01
    3d06:	ce 0f       	add	r28, r30
    3d08:	d1 1d       	adc	r29, r1
    3d0a:	0f b6       	in	r0, 0x3f	; 63
    3d0c:	f8 94       	cli
    3d0e:	de bf       	out	0x3e, r29	; 62
    3d10:	0f be       	out	0x3f, r0	; 63
    3d12:	cd bf       	out	0x3d, r28	; 61
    3d14:	ed 01       	movw	r28, r26
    3d16:	08 95       	ret

00003d18 <__do_global_dtors>:
    3d18:	10 e0       	ldi	r17, 0x00	; 0
    3d1a:	c3 e6       	ldi	r28, 0x63	; 99
    3d1c:	d0 e0       	ldi	r29, 0x00	; 0
    3d1e:	04 c0       	rjmp	.+8      	; 0x3d28 <__do_global_dtors+0x10>
    3d20:	fe 01       	movw	r30, r28
    3d22:	0e 94 11 1a 	call	0x3422	; 0x3422 <__tablejump2__>
    3d26:	21 96       	adiw	r28, 0x01	; 1
    3d28:	c4 36       	cpi	r28, 0x64	; 100
    3d2a:	d1 07       	cpc	r29, r17
    3d2c:	c9 f7       	brne	.-14     	; 0x3d20 <__do_global_dtors+0x8>
    3d2e:	f8 94       	cli

00003d30 <__stop_program>:
    3d30:	ff cf       	rjmp	.-2      	; 0x3d30 <__stop_program>
