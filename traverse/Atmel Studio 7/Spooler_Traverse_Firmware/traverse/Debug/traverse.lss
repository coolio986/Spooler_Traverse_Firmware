
traverse.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002b4  00800100  000044f6  0000458a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000044f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000120  008003b4  008003b4  0000483e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000483e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000489c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000570  00000000  00000000  000048dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000ce01  00000000  00000000  00004e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000028bd  00000000  00000000  00011c4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003bc6  00000000  00000000  0001450a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000014b0  00000000  00000000  000180d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003348  00000000  00000000  00019580  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000571f  00000000  00000000  0001c8c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000500  00000000  00000000  00021fe7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__dtors_end>
       4:	0c 94 2a 0c 	jmp	0x1854	; 0x1854 <__vector_1>
       8:	0c 94 5b 0c 	jmp	0x18b6	; 0x18b6 <__vector_2>
       c:	0c 94 8c 0c 	jmp	0x1918	; 0x1918 <__vector_3>
      10:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__vector_4>
      14:	0c 94 e6 0d 	jmp	0x1bcc	; 0x1bcc <__vector_5>
      18:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      1c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      20:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      24:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      28:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      2c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      30:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      34:	0c 94 a9 0e 	jmp	0x1d52	; 0x1d52 <__vector_13>
      38:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      3c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      40:	0c 94 ca 1c 	jmp	0x3994	; 0x3994 <__vector_16>
      44:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      48:	0c 94 c0 1a 	jmp	0x3580	; 0x3580 <__vector_18>
      4c:	0c 94 f2 1a 	jmp	0x35e4	; 0x35e4 <__vector_19>
      50:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      54:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      58:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      5c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      60:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      64:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 01       	movw	r0, r0
      6a:	02 03       	mulsu	r16, r18
      6c:	04 05       	cpc	r16, r4
      6e:	06 07       	cpc	r16, r22
      70:	00 01       	movw	r0, r0
      72:	02 03       	mulsu	r16, r18
      74:	04 05       	cpc	r16, r4
      76:	00 01       	movw	r0, r0
      78:	02 03       	mulsu	r16, r18
      7a:	04 05       	cpc	r16, r4

0000007c <digital_pin_to_bit_mask_PGM>:
      7c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      8c:	04 08 10 20                                         ... 

00000090 <digital_pin_to_port_PGM>:
      90:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      a0:	03 03 03 03                                         ....

000000a4 <port_to_input_PGM>:
      a4:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

000000ae <port_to_output_PGM>:
      ae:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000b8 <port_to_mode_PGM>:
      b8:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000c2 <__ctors_start>:
      c2:	fb 17       	cp	r31, r27
      c4:	22 1b       	sub	r18, r18

000000c6 <__ctors_end>:
      c6:	08 18       	sub	r0, r8

000000c8 <__dtors_end>:
      c8:	11 24       	eor	r1, r1
      ca:	1f be       	out	0x3f, r1	; 63
      cc:	cf ef       	ldi	r28, 0xFF	; 255
      ce:	d8 e0       	ldi	r29, 0x08	; 8
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_copy_data>:
      d4:	13 e0       	ldi	r17, 0x03	; 3
      d6:	a0 e0       	ldi	r26, 0x00	; 0
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	e6 ef       	ldi	r30, 0xF6	; 246
      dc:	f4 e4       	ldi	r31, 0x44	; 68
      de:	02 c0       	rjmp	.+4      	; 0xe4 <__do_copy_data+0x10>
      e0:	05 90       	lpm	r0, Z+
      e2:	0d 92       	st	X+, r0
      e4:	a4 3b       	cpi	r26, 0xB4	; 180
      e6:	b1 07       	cpc	r27, r17
      e8:	d9 f7       	brne	.-10     	; 0xe0 <__do_copy_data+0xc>

000000ea <__do_clear_bss>:
      ea:	24 e0       	ldi	r18, 0x04	; 4
      ec:	a4 eb       	ldi	r26, 0xB4	; 180
      ee:	b3 e0       	ldi	r27, 0x03	; 3
      f0:	01 c0       	rjmp	.+2      	; 0xf4 <.do_clear_bss_start>

000000f2 <.do_clear_bss_loop>:
      f2:	1d 92       	st	X+, r1

000000f4 <.do_clear_bss_start>:
      f4:	a4 3d       	cpi	r26, 0xD4	; 212
      f6:	b2 07       	cpc	r27, r18
      f8:	e1 f7       	brne	.-8      	; 0xf2 <.do_clear_bss_loop>

000000fa <__do_global_ctors>:
      fa:	10 e0       	ldi	r17, 0x00	; 0
      fc:	c3 e6       	ldi	r28, 0x63	; 99
      fe:	d0 e0       	ldi	r29, 0x00	; 0
     100:	04 c0       	rjmp	.+8      	; 0x10a <__do_global_ctors+0x10>
     102:	21 97       	sbiw	r28, 0x01	; 1
     104:	fe 01       	movw	r30, r28
     106:	0e 94 f3 1d 	call	0x3be6	; 0x3be6 <__tablejump2__>
     10a:	c1 36       	cpi	r28, 0x61	; 97
     10c:	d1 07       	cpc	r29, r17
     10e:	c9 f7       	brne	.-14     	; 0x102 <__do_global_ctors+0x8>
     110:	0e 94 50 1b 	call	0x36a0	; 0x36a0 <main>
     114:	0c 94 6e 22 	jmp	0x44dc	; 0x44dc <__do_global_dtors>

00000118 <__bad_interrupt>:
     118:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011c <_ZN17ADC_ConfigurationC1Ev>:

#include <Arduino.h>
#include "ADC_Configuration.h"

// default constructor
ADC_Configuration::ADC_Configuration()
     11c:	cf 93       	push	r28
     11e:	df 93       	push	r29
     120:	00 d0       	rcall	.+0      	; 0x122 <_ZN17ADC_ConfigurationC1Ev+0x6>
     122:	cd b7       	in	r28, 0x3d	; 61
     124:	de b7       	in	r29, 0x3e	; 62
     126:	9a 83       	std	Y+2, r25	; 0x02
     128:	89 83       	std	Y+1, r24	; 0x01
{
  
} //ADC_Configuration
     12a:	00 00       	nop
     12c:	0f 90       	pop	r0
     12e:	0f 90       	pop	r0
     130:	df 91       	pop	r29
     132:	cf 91       	pop	r28
     134:	08 95       	ret

00000136 <_ZN17ADC_Configuration8SetupADCEv>:

void ADC_Configuration::SetupADC(void)
  {
     136:	cf 93       	push	r28
     138:	df 93       	push	r29
     13a:	cd b7       	in	r28, 0x3d	; 61
     13c:	de b7       	in	r29, 0x3e	; 62
    #if FASTADC
    // set prescale to 16
    sbi(ADCSRA,ADPS2) ;
     13e:	8a e7       	ldi	r24, 0x7A	; 122
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	2a e7       	ldi	r18, 0x7A	; 122
     144:	30 e0       	ldi	r19, 0x00	; 0
     146:	f9 01       	movw	r30, r18
     148:	20 81       	ld	r18, Z
     14a:	24 60       	ori	r18, 0x04	; 4
     14c:	fc 01       	movw	r30, r24
     14e:	20 83       	st	Z, r18
    cbi(ADCSRA,ADPS1) ;
     150:	8a e7       	ldi	r24, 0x7A	; 122
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	2a e7       	ldi	r18, 0x7A	; 122
     156:	30 e0       	ldi	r19, 0x00	; 0
     158:	f9 01       	movw	r30, r18
     15a:	20 81       	ld	r18, Z
     15c:	2d 7f       	andi	r18, 0xFD	; 253
     15e:	fc 01       	movw	r30, r24
     160:	20 83       	st	Z, r18
    cbi(ADCSRA,ADPS0) ;
     162:	8a e7       	ldi	r24, 0x7A	; 122
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	2a e7       	ldi	r18, 0x7A	; 122
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	f9 01       	movw	r30, r18
     16c:	20 81       	ld	r18, Z
     16e:	2e 7f       	andi	r18, 0xFE	; 254
     170:	fc 01       	movw	r30, r24
     172:	20 83       	st	Z, r18
    #endif
  }
     174:	00 00       	nop
     176:	df 91       	pop	r29
     178:	cf 91       	pop	r28
     17a:	08 95       	ret

0000017c <_ZN17ADC_ConfigurationD1Ev>:


// default destructor
ADC_Configuration::~ADC_Configuration()
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	00 d0       	rcall	.+0      	; 0x182 <_ZN17ADC_ConfigurationD1Ev+0x6>
     182:	cd b7       	in	r28, 0x3d	; 61
     184:	de b7       	in	r29, 0x3e	; 62
     186:	9a 83       	std	Y+2, r25	; 0x02
     188:	89 83       	std	Y+1, r24	; 0x01
{
} //~ADC_Configuration
     18a:	00 00       	nop
     18c:	0f 90       	pop	r0
     18e:	0f 90       	pop	r0
     190:	df 91       	pop	r29
     192:	cf 91       	pop	r28
     194:	08 95       	ret

00000196 <_ZN12Math_HelpersC1Ev>:
  {
    rangedValue =  newBegin - (pow(normalizedCurVal, curve) * NewRange);
  }

  return rangedValue;
}
     196:	cf 93       	push	r28
     198:	df 93       	push	r29
     19a:	00 d0       	rcall	.+0      	; 0x19c <_ZN12Math_HelpersC1Ev+0x6>
     19c:	cd b7       	in	r28, 0x3d	; 61
     19e:	de b7       	in	r29, 0x3e	; 62
     1a0:	9a 83       	std	Y+2, r25	; 0x02
     1a2:	89 83       	std	Y+1, r24	; 0x01
     1a4:	00 00       	nop
     1a6:	0f 90       	pop	r0
     1a8:	0f 90       	pop	r0
     1aa:	df 91       	pop	r29
     1ac:	cf 91       	pop	r28
     1ae:	08 95       	ret

000001b0 <_ZN12Math_HelpersD1Ev>:

// default destructor
Math_Helpers::~Math_Helpers()
     1b0:	cf 93       	push	r28
     1b2:	df 93       	push	r29
     1b4:	00 d0       	rcall	.+0      	; 0x1b6 <_ZN12Math_HelpersD1Ev+0x6>
     1b6:	cd b7       	in	r28, 0x3d	; 61
     1b8:	de b7       	in	r29, 0x3e	; 62
     1ba:	9a 83       	std	Y+2, r25	; 0x02
     1bc:	89 83       	std	Y+1, r24	; 0x01
{
} //~Math_Helpers
     1be:	00 00       	nop
     1c0:	0f 90       	pop	r0
     1c2:	0f 90       	pop	r0
     1c4:	df 91       	pop	r29
     1c6:	cf 91       	pop	r28
     1c8:	08 95       	ret

000001ca <_ZL8Home_cmdiPcS_>:

	sprintf(output + strlen(output),"%s", s2);

	return output;

}
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	00 d0       	rcall	.+0      	; 0x1d0 <_ZL8Home_cmdiPcS_+0x6>
     1d0:	00 d0       	rcall	.+0      	; 0x1d2 <_ZL8Home_cmdiPcS_+0x8>
     1d2:	00 d0       	rcall	.+0      	; 0x1d4 <_ZL8Home_cmdiPcS_+0xa>
     1d4:	cd b7       	in	r28, 0x3d	; 61
     1d6:	de b7       	in	r29, 0x3e	; 62
     1d8:	9a 83       	std	Y+2, r25	; 0x02
     1da:	89 83       	std	Y+1, r24	; 0x01
     1dc:	7c 83       	std	Y+4, r23	; 0x04
     1de:	6b 83       	std	Y+3, r22	; 0x03
     1e0:	5e 83       	std	Y+6, r21	; 0x06
     1e2:	4d 83       	std	Y+5, r20	; 0x05
     1e4:	6a ef       	ldi	r22, 0xFA	; 250
     1e6:	71 e0       	ldi	r23, 0x01	; 1
     1e8:	8c e2       	ldi	r24, 0x2C	; 44
     1ea:	94 e0       	ldi	r25, 0x04	; 4
     1ec:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     1f0:	10 92 f7 01 	sts	0x01F7, r1	; 0x8001f7 <RUN_MODE>
     1f4:	00 00       	nop
     1f6:	26 96       	adiw	r28, 0x06	; 6
     1f8:	0f b6       	in	r0, 0x3f	; 63
     1fa:	f8 94       	cli
     1fc:	de bf       	out	0x3e, r29	; 62
     1fe:	0f be       	out	0x3f, r0	; 63
     200:	cd bf       	out	0x3d, r28	; 61
     202:	df 91       	pop	r29
     204:	cf 91       	pop	r28
     206:	08 95       	ret

00000208 <_ZL12GetSteps_cmdiPcS_>:
     208:	cf 93       	push	r28
     20a:	df 93       	push	r29
     20c:	00 d0       	rcall	.+0      	; 0x20e <_ZL12GetSteps_cmdiPcS_+0x6>
     20e:	00 d0       	rcall	.+0      	; 0x210 <_ZL12GetSteps_cmdiPcS_+0x8>
     210:	00 d0       	rcall	.+0      	; 0x212 <_ZL12GetSteps_cmdiPcS_+0xa>
     212:	cd b7       	in	r28, 0x3d	; 61
     214:	de b7       	in	r29, 0x3e	; 62
     216:	9a 83       	std	Y+2, r25	; 0x02
     218:	89 83       	std	Y+1, r24	; 0x01
     21a:	7c 83       	std	Y+4, r23	; 0x04
     21c:	6b 83       	std	Y+3, r22	; 0x03
     21e:	5e 83       	std	Y+6, r21	; 0x06
     220:	4d 83       	std	Y+5, r20	; 0x05
     222:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <STEPS>
     226:	90 91 13 04 	lds	r25, 0x0413	; 0x800413 <STEPS+0x1>
     22a:	a0 91 14 04 	lds	r26, 0x0414	; 0x800414 <STEPS+0x2>
     22e:	b0 91 15 04 	lds	r27, 0x0415	; 0x800415 <STEPS+0x3>
     232:	2a e0       	ldi	r18, 0x0A	; 10
     234:	30 e0       	ldi	r19, 0x00	; 0
     236:	ac 01       	movw	r20, r24
     238:	bd 01       	movw	r22, r26
     23a:	8c e2       	ldi	r24, 0x2C	; 44
     23c:	94 e0       	ldi	r25, 0x04	; 4
     23e:	0e 94 4e 1c 	call	0x389c	; 0x389c <_ZN5Print7printlnEli>
     242:	00 00       	nop
     244:	26 96       	adiw	r28, 0x06	; 6
     246:	0f b6       	in	r0, 0x3f	; 63
     248:	f8 94       	cli
     24a:	de bf       	out	0x3e, r29	; 62
     24c:	0f be       	out	0x3f, r0	; 63
     24e:	cd bf       	out	0x3d, r28	; 61
     250:	df 91       	pop	r29
     252:	cf 91       	pop	r28
     254:	08 95       	ret

00000256 <_ZL15TraverseRPM_cmdiPcS_>:
     256:	0f 93       	push	r16
     258:	1f 93       	push	r17
     25a:	cf 93       	push	r28
     25c:	df 93       	push	r29
     25e:	cd b7       	in	r28, 0x3d	; 61
     260:	de b7       	in	r29, 0x3e	; 62
     262:	c8 54       	subi	r28, 0x48	; 72
     264:	d1 09       	sbc	r29, r1
     266:	0f b6       	in	r0, 0x3f	; 63
     268:	f8 94       	cli
     26a:	de bf       	out	0x3e, r29	; 62
     26c:	0f be       	out	0x3f, r0	; 63
     26e:	cd bf       	out	0x3d, r28	; 61
     270:	9e 01       	movw	r18, r28
     272:	2d 5b       	subi	r18, 0xBD	; 189
     274:	3f 4f       	sbci	r19, 0xFF	; 255
     276:	f9 01       	movw	r30, r18
     278:	91 83       	std	Z+1, r25	; 0x01
     27a:	80 83       	st	Z, r24
     27c:	ce 01       	movw	r24, r28
     27e:	8b 5b       	subi	r24, 0xBB	; 187
     280:	9f 4f       	sbci	r25, 0xFF	; 255
     282:	fc 01       	movw	r30, r24
     284:	71 83       	std	Z+1, r23	; 0x01
     286:	60 83       	st	Z, r22
     288:	ce 01       	movw	r24, r28
     28a:	89 5b       	subi	r24, 0xB9	; 185
     28c:	9f 4f       	sbci	r25, 0xFF	; 255
     28e:	fc 01       	movw	r30, r24
     290:	51 83       	std	Z+1, r21	; 0x01
     292:	40 83       	st	Z, r20
     294:	ce 01       	movw	r24, r28
     296:	89 5b       	subi	r24, 0xB9	; 185
     298:	9f 4f       	sbci	r25, 0xFF	; 255
     29a:	fc 01       	movw	r30, r24
     29c:	80 81       	ld	r24, Z
     29e:	91 81       	ldd	r25, Z+1	; 0x01
     2a0:	89 2b       	or	r24, r25
     2a2:	09 f4       	brne	.+2      	; 0x2a6 <_ZL15TraverseRPM_cmdiPcS_+0x50>
     2a4:	6a c0       	rjmp	.+212    	; 0x37a <_ZL15TraverseRPM_cmdiPcS_+0x124>
     2a6:	1a 82       	std	Y+2, r1	; 0x02
     2a8:	19 82       	std	Y+1, r1	; 0x01
     2aa:	89 81       	ldd	r24, Y+1	; 0x01
     2ac:	9a 81       	ldd	r25, Y+2	; 0x02
     2ae:	9e 01       	movw	r18, r28
     2b0:	29 5b       	subi	r18, 0xB9	; 185
     2b2:	3f 4f       	sbci	r19, 0xFF	; 255
     2b4:	f9 01       	movw	r30, r18
     2b6:	20 81       	ld	r18, Z
     2b8:	31 81       	ldd	r19, Z+1	; 0x01
     2ba:	82 0f       	add	r24, r18
     2bc:	93 1f       	adc	r25, r19
     2be:	fc 01       	movw	r30, r24
     2c0:	80 81       	ld	r24, Z
     2c2:	88 23       	and	r24, r24
     2c4:	29 f1       	breq	.+74     	; 0x310 <_ZL15TraverseRPM_cmdiPcS_+0xba>
     2c6:	89 81       	ldd	r24, Y+1	; 0x01
     2c8:	9a 81       	ldd	r25, Y+2	; 0x02
     2ca:	9e 01       	movw	r18, r28
     2cc:	29 5b       	subi	r18, 0xB9	; 185
     2ce:	3f 4f       	sbci	r19, 0xFF	; 255
     2d0:	f9 01       	movw	r30, r18
     2d2:	20 81       	ld	r18, Z
     2d4:	31 81       	ldd	r19, Z+1	; 0x01
     2d6:	82 0f       	add	r24, r18
     2d8:	93 1f       	adc	r25, r19
     2da:	fc 01       	movw	r30, r24
     2dc:	80 81       	ld	r24, Z
     2de:	88 2f       	mov	r24, r24
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	c0 97       	sbiw	r24, 0x30	; 48
     2e4:	0a 97       	sbiw	r24, 0x0a	; 10
     2e6:	10 f0       	brcs	.+4      	; 0x2ec <_ZL15TraverseRPM_cmdiPcS_+0x96>
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	01 c0       	rjmp	.+2      	; 0x2ee <_ZL15TraverseRPM_cmdiPcS_+0x98>
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	88 23       	and	r24, r24
     2f0:	49 f0       	breq	.+18     	; 0x304 <_ZL15TraverseRPM_cmdiPcS_+0xae>
     2f2:	60 e1       	ldi	r22, 0x10	; 16
     2f4:	72 e0       	ldi	r23, 0x02	; 2
     2f6:	8c e2       	ldi	r24, 0x2C	; 44
     2f8:	94 e0       	ldi	r25, 0x04	; 4
     2fa:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     2fe:	80 e0       	ldi	r24, 0x00	; 0
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	61 c0       	rjmp	.+194    	; 0x3c6 <_ZL15TraverseRPM_cmdiPcS_+0x170>
     304:	89 81       	ldd	r24, Y+1	; 0x01
     306:	9a 81       	ldd	r25, Y+2	; 0x02
     308:	01 96       	adiw	r24, 0x01	; 1
     30a:	9a 83       	std	Y+2, r25	; 0x02
     30c:	89 83       	std	Y+1, r24	; 0x01
     30e:	cd cf       	rjmp	.-102    	; 0x2aa <_ZL15TraverseRPM_cmdiPcS_+0x54>
     310:	ce 01       	movw	r24, r28
     312:	89 5b       	subi	r24, 0xB9	; 185
     314:	9f 4f       	sbci	r25, 0xFF	; 255
     316:	fc 01       	movw	r30, r24
     318:	80 81       	ld	r24, Z
     31a:	91 81       	ldd	r25, Z+1	; 0x01
     31c:	4a e0       	ldi	r20, 0x0A	; 10
     31e:	50 e0       	ldi	r21, 0x00	; 0
     320:	60 e0       	ldi	r22, 0x00	; 0
     322:	70 e0       	ldi	r23, 0x00	; 0
     324:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <strtol>
     328:	dc 01       	movw	r26, r24
     32a:	cb 01       	movw	r24, r22
     32c:	8b 83       	std	Y+3, r24	; 0x03
     32e:	9c 83       	std	Y+4, r25	; 0x04
     330:	ad 83       	std	Y+5, r26	; 0x05
     332:	be 83       	std	Y+6, r27	; 0x06
     334:	8b 81       	ldd	r24, Y+3	; 0x03
     336:	9c 81       	ldd	r25, Y+4	; 0x04
     338:	ad 81       	ldd	r26, Y+5	; 0x05
     33a:	be 81       	ldd	r27, Y+6	; 0x06
     33c:	89 35       	cpi	r24, 0x59	; 89
     33e:	92 40       	sbci	r25, 0x02	; 2
     340:	a1 05       	cpc	r26, r1
     342:	b1 05       	cpc	r27, r1
     344:	68 f4       	brcc	.+26     	; 0x360 <_ZL15TraverseRPM_cmdiPcS_+0x10a>
     346:	8b 81       	ldd	r24, Y+3	; 0x03
     348:	9c 81       	ldd	r25, Y+4	; 0x04
     34a:	ad 81       	ldd	r26, Y+5	; 0x05
     34c:	be 81       	ldd	r27, Y+6	; 0x06
     34e:	80 93 1a 04 	sts	0x041A, r24	; 0x80041a <TRAVERSE_RPM>
     352:	90 93 1b 04 	sts	0x041B, r25	; 0x80041b <TRAVERSE_RPM+0x1>
     356:	a0 93 1c 04 	sts	0x041C, r26	; 0x80041c <TRAVERSE_RPM+0x2>
     35a:	b0 93 1d 04 	sts	0x041D, r27	; 0x80041d <TRAVERSE_RPM+0x3>
     35e:	33 c0       	rjmp	.+102    	; 0x3c6 <_ZL15TraverseRPM_cmdiPcS_+0x170>
     360:	88 e5       	ldi	r24, 0x58	; 88
     362:	92 e0       	ldi	r25, 0x02	; 2
     364:	a0 e0       	ldi	r26, 0x00	; 0
     366:	b0 e0       	ldi	r27, 0x00	; 0
     368:	80 93 1a 04 	sts	0x041A, r24	; 0x80041a <TRAVERSE_RPM>
     36c:	90 93 1b 04 	sts	0x041B, r25	; 0x80041b <TRAVERSE_RPM+0x1>
     370:	a0 93 1c 04 	sts	0x041C, r26	; 0x80041c <TRAVERSE_RPM+0x2>
     374:	b0 93 1d 04 	sts	0x041D, r27	; 0x80041d <TRAVERSE_RPM+0x3>
     378:	26 c0       	rjmp	.+76     	; 0x3c6 <_ZL15TraverseRPM_cmdiPcS_+0x170>
     37a:	2c e3       	ldi	r18, 0x3C	; 60
     37c:	ce 01       	movw	r24, r28
     37e:	07 96       	adiw	r24, 0x07	; 7
     380:	fc 01       	movw	r30, r24
     382:	32 2f       	mov	r19, r18
     384:	11 92       	st	Z+, r1
     386:	3a 95       	dec	r19
     388:	e9 f7       	brne	.-6      	; 0x384 <_ZL15TraverseRPM_cmdiPcS_+0x12e>
     38a:	80 91 1a 04 	lds	r24, 0x041A	; 0x80041a <TRAVERSE_RPM>
     38e:	90 91 1b 04 	lds	r25, 0x041B	; 0x80041b <TRAVERSE_RPM+0x1>
     392:	a0 91 1c 04 	lds	r26, 0x041C	; 0x80041c <TRAVERSE_RPM+0x2>
     396:	b0 91 1d 04 	lds	r27, 0x041D	; 0x80041d <TRAVERSE_RPM+0x3>
     39a:	9e 01       	movw	r18, r28
     39c:	2b 5b       	subi	r18, 0xBB	; 187
     39e:	3f 4f       	sbci	r19, 0xFF	; 255
     3a0:	f9 01       	movw	r30, r18
     3a2:	40 81       	ld	r20, Z
     3a4:	51 81       	ldd	r21, Z+1	; 0x01
     3a6:	fe 01       	movw	r30, r28
     3a8:	37 96       	adiw	r30, 0x07	; 7
     3aa:	8c 01       	movw	r16, r24
     3ac:	9d 01       	movw	r18, r26
     3ae:	63 e0       	ldi	r22, 0x03	; 3
     3b0:	70 e0       	ldi	r23, 0x00	; 0
     3b2:	cf 01       	movw	r24, r30
     3b4:	0e 94 04 08 	call	0x1008	; 0x1008 <_Z17BuildSerialOutputPciS_m>
     3b8:	ce 01       	movw	r24, r28
     3ba:	07 96       	adiw	r24, 0x07	; 7
     3bc:	bc 01       	movw	r22, r24
     3be:	8c e2       	ldi	r24, 0x2C	; 44
     3c0:	94 e0       	ldi	r25, 0x04	; 4
     3c2:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     3c6:	c8 5b       	subi	r28, 0xB8	; 184
     3c8:	df 4f       	sbci	r29, 0xFF	; 255
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	f8 94       	cli
     3ce:	de bf       	out	0x3e, r29	; 62
     3d0:	0f be       	out	0x3f, r0	; 63
     3d2:	cd bf       	out	0x3d, r28	; 61
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	1f 91       	pop	r17
     3da:	0f 91       	pop	r16
     3dc:	08 95       	ret

000003de <_ZL10Status_cmdiPcS_>:
     3de:	cf 93       	push	r28
     3e0:	df 93       	push	r29
     3e2:	00 d0       	rcall	.+0      	; 0x3e4 <_ZL10Status_cmdiPcS_+0x6>
     3e4:	00 d0       	rcall	.+0      	; 0x3e6 <_ZL10Status_cmdiPcS_+0x8>
     3e6:	00 d0       	rcall	.+0      	; 0x3e8 <_ZL10Status_cmdiPcS_+0xa>
     3e8:	cd b7       	in	r28, 0x3d	; 61
     3ea:	de b7       	in	r29, 0x3e	; 62
     3ec:	9a 83       	std	Y+2, r25	; 0x02
     3ee:	89 83       	std	Y+1, r24	; 0x01
     3f0:	7c 83       	std	Y+4, r23	; 0x04
     3f2:	6b 83       	std	Y+3, r22	; 0x03
     3f4:	5e 83       	std	Y+6, r21	; 0x06
     3f6:	4d 83       	std	Y+5, r20	; 0x05
     3f8:	63 e3       	ldi	r22, 0x33	; 51
     3fa:	72 e0       	ldi	r23, 0x02	; 2
     3fc:	8c e2       	ldi	r24, 0x2C	; 44
     3fe:	94 e0       	ldi	r25, 0x04	; 4
     400:	0e 94 9e 1b 	call	0x373c	; 0x373c <_ZN5Print5printEPKc>
     404:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <RUN_MODE>
     408:	81 e0       	ldi	r24, 0x01	; 1
     40a:	93 30       	cpi	r25, 0x03	; 3
     40c:	09 f0       	breq	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     40e:	80 e0       	ldi	r24, 0x00	; 0
     410:	88 23       	and	r24, r24
     412:	31 f0       	breq	.+12     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     414:	67 e4       	ldi	r22, 0x47	; 71
     416:	72 e0       	ldi	r23, 0x02	; 2
     418:	8c e2       	ldi	r24, 0x2C	; 44
     41a:	94 e0       	ldi	r25, 0x04	; 4
     41c:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     420:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <RUN_MODE>
     424:	81 e0       	ldi	r24, 0x01	; 1
     426:	94 30       	cpi	r25, 0x04	; 4
     428:	09 f0       	breq	.+2      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     42a:	80 e0       	ldi	r24, 0x00	; 0
     42c:	88 23       	and	r24, r24
     42e:	31 f0       	breq	.+12     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     430:	6c e5       	ldi	r22, 0x5C	; 92
     432:	72 e0       	ldi	r23, 0x02	; 2
     434:	8c e2       	ldi	r24, 0x2C	; 44
     436:	94 e0       	ldi	r25, 0x04	; 4
     438:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     43c:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <RUN_MODE>
     440:	81 e0       	ldi	r24, 0x01	; 1
     442:	92 30       	cpi	r25, 0x02	; 2
     444:	09 f0       	breq	.+2      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     446:	80 e0       	ldi	r24, 0x00	; 0
     448:	88 23       	and	r24, r24
     44a:	31 f0       	breq	.+12     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     44c:	61 e7       	ldi	r22, 0x71	; 113
     44e:	72 e0       	ldi	r23, 0x02	; 2
     450:	8c e2       	ldi	r24, 0x2C	; 44
     452:	94 e0       	ldi	r25, 0x04	; 4
     454:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     458:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <RUN_MODE>
     45c:	81 e0       	ldi	r24, 0x01	; 1
     45e:	99 23       	and	r25, r25
     460:	09 f0       	breq	.+2      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     462:	80 e0       	ldi	r24, 0x00	; 0
     464:	88 23       	and	r24, r24
     466:	31 f0       	breq	.+12     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
     468:	63 e8       	ldi	r22, 0x83	; 131
     46a:	72 e0       	ldi	r23, 0x02	; 2
     46c:	8c e2       	ldi	r24, 0x2C	; 44
     46e:	94 e0       	ldi	r25, 0x04	; 4
     470:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     474:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <RUN_MODE>
     478:	81 e0       	ldi	r24, 0x01	; 1
     47a:	91 30       	cpi	r25, 0x01	; 1
     47c:	09 f0       	breq	.+2      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
     47e:	80 e0       	ldi	r24, 0x00	; 0
     480:	88 23       	and	r24, r24
     482:	31 f0       	breq	.+12     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     484:	6d e8       	ldi	r22, 0x8D	; 141
     486:	72 e0       	ldi	r23, 0x02	; 2
     488:	8c e2       	ldi	r24, 0x2C	; 44
     48a:	94 e0       	ldi	r25, 0x04	; 4
     48c:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     490:	00 00       	nop
     492:	26 96       	adiw	r28, 0x06	; 6
     494:	0f b6       	in	r0, 0x3f	; 63
     496:	f8 94       	cli
     498:	de bf       	out	0x3e, r29	; 62
     49a:	0f be       	out	0x3f, r0	; 63
     49c:	cd bf       	out	0x3d, r28	; 61
     49e:	df 91       	pop	r29
     4a0:	cf 91       	pop	r28
     4a2:	08 95       	ret

000004a4 <_ZL8Stop_cmdiPcS_>:
     4a4:	cf 93       	push	r28
     4a6:	df 93       	push	r29
     4a8:	00 d0       	rcall	.+0      	; 0x4aa <_ZL8Stop_cmdiPcS_+0x6>
     4aa:	00 d0       	rcall	.+0      	; 0x4ac <_ZL8Stop_cmdiPcS_+0x8>
     4ac:	00 d0       	rcall	.+0      	; 0x4ae <_ZL8Stop_cmdiPcS_+0xa>
     4ae:	cd b7       	in	r28, 0x3d	; 61
     4b0:	de b7       	in	r29, 0x3e	; 62
     4b2:	9a 83       	std	Y+2, r25	; 0x02
     4b4:	89 83       	std	Y+1, r24	; 0x01
     4b6:	7c 83       	std	Y+4, r23	; 0x04
     4b8:	6b 83       	std	Y+3, r22	; 0x03
     4ba:	5e 83       	std	Y+6, r21	; 0x06
     4bc:	4d 83       	std	Y+5, r20	; 0x05
     4be:	81 e0       	ldi	r24, 0x01	; 1
     4c0:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <RUN_MODE>
     4c4:	00 00       	nop
     4c6:	26 96       	adiw	r28, 0x06	; 6
     4c8:	0f b6       	in	r0, 0x3f	; 63
     4ca:	f8 94       	cli
     4cc:	de bf       	out	0x3e, r29	; 62
     4ce:	0f be       	out	0x3f, r0	; 63
     4d0:	cd bf       	out	0x3d, r28	; 61
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	08 95       	ret

000004d8 <_ZL11RunMode_cmdiPcS_>:
     4d8:	0f 93       	push	r16
     4da:	1f 93       	push	r17
     4dc:	cf 93       	push	r28
     4de:	df 93       	push	r29
     4e0:	cd b7       	in	r28, 0x3d	; 61
     4e2:	de b7       	in	r29, 0x3e	; 62
     4e4:	c6 54       	subi	r28, 0x46	; 70
     4e6:	d1 09       	sbc	r29, r1
     4e8:	0f b6       	in	r0, 0x3f	; 63
     4ea:	f8 94       	cli
     4ec:	de bf       	out	0x3e, r29	; 62
     4ee:	0f be       	out	0x3f, r0	; 63
     4f0:	cd bf       	out	0x3d, r28	; 61
     4f2:	9e 01       	movw	r18, r28
     4f4:	2f 5b       	subi	r18, 0xBF	; 191
     4f6:	3f 4f       	sbci	r19, 0xFF	; 255
     4f8:	f9 01       	movw	r30, r18
     4fa:	91 83       	std	Z+1, r25	; 0x01
     4fc:	80 83       	st	Z, r24
     4fe:	ce 01       	movw	r24, r28
     500:	8d 5b       	subi	r24, 0xBD	; 189
     502:	9f 4f       	sbci	r25, 0xFF	; 255
     504:	fc 01       	movw	r30, r24
     506:	71 83       	std	Z+1, r23	; 0x01
     508:	60 83       	st	Z, r22
     50a:	ce 01       	movw	r24, r28
     50c:	8b 5b       	subi	r24, 0xBB	; 187
     50e:	9f 4f       	sbci	r25, 0xFF	; 255
     510:	fc 01       	movw	r30, r24
     512:	51 83       	std	Z+1, r21	; 0x01
     514:	40 83       	st	Z, r20
     516:	ce 01       	movw	r24, r28
     518:	8b 5b       	subi	r24, 0xBB	; 187
     51a:	9f 4f       	sbci	r25, 0xFF	; 255
     51c:	fc 01       	movw	r30, r24
     51e:	80 81       	ld	r24, Z
     520:	91 81       	ldd	r25, Z+1	; 0x01
     522:	89 2b       	or	r24, r25
     524:	09 f4       	brne	.+2      	; 0x528 <_ZL11RunMode_cmdiPcS_+0x50>
     526:	4d c0       	rjmp	.+154    	; 0x5c2 <_ZL11RunMode_cmdiPcS_+0xea>
     528:	1a 82       	std	Y+2, r1	; 0x02
     52a:	19 82       	std	Y+1, r1	; 0x01
     52c:	89 81       	ldd	r24, Y+1	; 0x01
     52e:	9a 81       	ldd	r25, Y+2	; 0x02
     530:	9e 01       	movw	r18, r28
     532:	2b 5b       	subi	r18, 0xBB	; 187
     534:	3f 4f       	sbci	r19, 0xFF	; 255
     536:	f9 01       	movw	r30, r18
     538:	20 81       	ld	r18, Z
     53a:	31 81       	ldd	r19, Z+1	; 0x01
     53c:	82 0f       	add	r24, r18
     53e:	93 1f       	adc	r25, r19
     540:	fc 01       	movw	r30, r24
     542:	80 81       	ld	r24, Z
     544:	88 23       	and	r24, r24
     546:	29 f1       	breq	.+74     	; 0x592 <_ZL11RunMode_cmdiPcS_+0xba>
     548:	89 81       	ldd	r24, Y+1	; 0x01
     54a:	9a 81       	ldd	r25, Y+2	; 0x02
     54c:	9e 01       	movw	r18, r28
     54e:	2b 5b       	subi	r18, 0xBB	; 187
     550:	3f 4f       	sbci	r19, 0xFF	; 255
     552:	f9 01       	movw	r30, r18
     554:	20 81       	ld	r18, Z
     556:	31 81       	ldd	r19, Z+1	; 0x01
     558:	82 0f       	add	r24, r18
     55a:	93 1f       	adc	r25, r19
     55c:	fc 01       	movw	r30, r24
     55e:	80 81       	ld	r24, Z
     560:	88 2f       	mov	r24, r24
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	c0 97       	sbiw	r24, 0x30	; 48
     566:	0a 97       	sbiw	r24, 0x0a	; 10
     568:	10 f0       	brcs	.+4      	; 0x56e <_ZL11RunMode_cmdiPcS_+0x96>
     56a:	81 e0       	ldi	r24, 0x01	; 1
     56c:	01 c0       	rjmp	.+2      	; 0x570 <_ZL11RunMode_cmdiPcS_+0x98>
     56e:	80 e0       	ldi	r24, 0x00	; 0
     570:	88 23       	and	r24, r24
     572:	49 f0       	breq	.+18     	; 0x586 <_ZL11RunMode_cmdiPcS_+0xae>
     574:	60 ea       	ldi	r22, 0xA0	; 160
     576:	72 e0       	ldi	r23, 0x02	; 2
     578:	8c e2       	ldi	r24, 0x2C	; 44
     57a:	94 e0       	ldi	r25, 0x04	; 4
     57c:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	42 c0       	rjmp	.+132    	; 0x60a <_ZL11RunMode_cmdiPcS_+0x132>
     586:	89 81       	ldd	r24, Y+1	; 0x01
     588:	9a 81       	ldd	r25, Y+2	; 0x02
     58a:	01 96       	adiw	r24, 0x01	; 1
     58c:	9a 83       	std	Y+2, r25	; 0x02
     58e:	89 83       	std	Y+1, r24	; 0x01
     590:	cd cf       	rjmp	.-102    	; 0x52c <_ZL11RunMode_cmdiPcS_+0x54>
     592:	ce 01       	movw	r24, r28
     594:	8b 5b       	subi	r24, 0xBB	; 187
     596:	9f 4f       	sbci	r25, 0xFF	; 255
     598:	fc 01       	movw	r30, r24
     59a:	80 81       	ld	r24, Z
     59c:	91 81       	ldd	r25, Z+1	; 0x01
     59e:	4a e0       	ldi	r20, 0x0A	; 10
     5a0:	50 e0       	ldi	r21, 0x00	; 0
     5a2:	60 e0       	ldi	r22, 0x00	; 0
     5a4:	70 e0       	ldi	r23, 0x00	; 0
     5a6:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <strtol>
     5aa:	dc 01       	movw	r26, r24
     5ac:	cb 01       	movw	r24, r22
     5ae:	9c 83       	std	Y+4, r25	; 0x04
     5b0:	8b 83       	std	Y+3, r24	; 0x03
     5b2:	8b 81       	ldd	r24, Y+3	; 0x03
     5b4:	9c 81       	ldd	r25, Y+4	; 0x04
     5b6:	05 97       	sbiw	r24, 0x05	; 5
     5b8:	40 f5       	brcc	.+80     	; 0x60a <_ZL11RunMode_cmdiPcS_+0x132>
     5ba:	8b 81       	ldd	r24, Y+3	; 0x03
     5bc:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <RUN_MODE>
     5c0:	24 c0       	rjmp	.+72     	; 0x60a <_ZL11RunMode_cmdiPcS_+0x132>
     5c2:	2c e3       	ldi	r18, 0x3C	; 60
     5c4:	ce 01       	movw	r24, r28
     5c6:	05 96       	adiw	r24, 0x05	; 5
     5c8:	fc 01       	movw	r30, r24
     5ca:	32 2f       	mov	r19, r18
     5cc:	11 92       	st	Z+, r1
     5ce:	3a 95       	dec	r19
     5d0:	e9 f7       	brne	.-6      	; 0x5cc <_ZL11RunMode_cmdiPcS_+0xf4>
     5d2:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <RUN_MODE>
     5d6:	88 2f       	mov	r24, r24
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	a0 e0       	ldi	r26, 0x00	; 0
     5dc:	b0 e0       	ldi	r27, 0x00	; 0
     5de:	9e 01       	movw	r18, r28
     5e0:	2d 5b       	subi	r18, 0xBD	; 189
     5e2:	3f 4f       	sbci	r19, 0xFF	; 255
     5e4:	f9 01       	movw	r30, r18
     5e6:	40 81       	ld	r20, Z
     5e8:	51 81       	ldd	r21, Z+1	; 0x01
     5ea:	fe 01       	movw	r30, r28
     5ec:	35 96       	adiw	r30, 0x05	; 5
     5ee:	8c 01       	movw	r16, r24
     5f0:	9d 01       	movw	r18, r26
     5f2:	63 e0       	ldi	r22, 0x03	; 3
     5f4:	70 e0       	ldi	r23, 0x00	; 0
     5f6:	cf 01       	movw	r24, r30
     5f8:	0e 94 04 08 	call	0x1008	; 0x1008 <_Z17BuildSerialOutputPciS_m>
     5fc:	ce 01       	movw	r24, r28
     5fe:	05 96       	adiw	r24, 0x05	; 5
     600:	bc 01       	movw	r22, r24
     602:	8c e2       	ldi	r24, 0x2C	; 44
     604:	94 e0       	ldi	r25, 0x04	; 4
     606:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     60a:	ca 5b       	subi	r28, 0xBA	; 186
     60c:	df 4f       	sbci	r29, 0xFF	; 255
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	1f 91       	pop	r17
     61e:	0f 91       	pop	r16
     620:	08 95       	ret

00000622 <_ZL16MoveAbsolute_cmdiPcS_>:
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	cd b7       	in	r28, 0x3d	; 61
     628:	de b7       	in	r29, 0x3e	; 62
     62a:	2c 97       	sbiw	r28, 0x0c	; 12
     62c:	0f b6       	in	r0, 0x3f	; 63
     62e:	f8 94       	cli
     630:	de bf       	out	0x3e, r29	; 62
     632:	0f be       	out	0x3f, r0	; 63
     634:	cd bf       	out	0x3d, r28	; 61
     636:	98 87       	std	Y+8, r25	; 0x08
     638:	8f 83       	std	Y+7, r24	; 0x07
     63a:	7a 87       	std	Y+10, r23	; 0x0a
     63c:	69 87       	std	Y+9, r22	; 0x09
     63e:	5c 87       	std	Y+12, r21	; 0x0c
     640:	4b 87       	std	Y+11, r20	; 0x0b
     642:	8b 85       	ldd	r24, Y+11	; 0x0b
     644:	9c 85       	ldd	r25, Y+12	; 0x0c
     646:	89 2b       	or	r24, r25
     648:	09 f4       	brne	.+2      	; 0x64c <_ZL16MoveAbsolute_cmdiPcS_+0x2a>
     64a:	a4 c0       	rjmp	.+328    	; 0x794 <_ZL16MoveAbsolute_cmdiPcS_+0x172>
     64c:	1a 82       	std	Y+2, r1	; 0x02
     64e:	19 82       	std	Y+1, r1	; 0x01
     650:	89 81       	ldd	r24, Y+1	; 0x01
     652:	9a 81       	ldd	r25, Y+2	; 0x02
     654:	2b 85       	ldd	r18, Y+11	; 0x0b
     656:	3c 85       	ldd	r19, Y+12	; 0x0c
     658:	82 0f       	add	r24, r18
     65a:	93 1f       	adc	r25, r19
     65c:	fc 01       	movw	r30, r24
     65e:	80 81       	ld	r24, Z
     660:	88 23       	and	r24, r24
     662:	09 f1       	breq	.+66     	; 0x6a6 <_ZL16MoveAbsolute_cmdiPcS_+0x84>
     664:	89 81       	ldd	r24, Y+1	; 0x01
     666:	9a 81       	ldd	r25, Y+2	; 0x02
     668:	2b 85       	ldd	r18, Y+11	; 0x0b
     66a:	3c 85       	ldd	r19, Y+12	; 0x0c
     66c:	82 0f       	add	r24, r18
     66e:	93 1f       	adc	r25, r19
     670:	fc 01       	movw	r30, r24
     672:	80 81       	ld	r24, Z
     674:	88 2f       	mov	r24, r24
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	c0 97       	sbiw	r24, 0x30	; 48
     67a:	0a 97       	sbiw	r24, 0x0a	; 10
     67c:	10 f0       	brcs	.+4      	; 0x682 <_ZL16MoveAbsolute_cmdiPcS_+0x60>
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	01 c0       	rjmp	.+2      	; 0x684 <_ZL16MoveAbsolute_cmdiPcS_+0x62>
     682:	80 e0       	ldi	r24, 0x00	; 0
     684:	88 23       	and	r24, r24
     686:	49 f0       	breq	.+18     	; 0x69a <_ZL16MoveAbsolute_cmdiPcS_+0x78>
     688:	68 ec       	ldi	r22, 0xC8	; 200
     68a:	72 e0       	ldi	r23, 0x02	; 2
     68c:	8c e2       	ldi	r24, 0x2C	; 44
     68e:	94 e0       	ldi	r25, 0x04	; 4
     690:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     694:	80 e0       	ldi	r24, 0x00	; 0
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	7d c0       	rjmp	.+250    	; 0x794 <_ZL16MoveAbsolute_cmdiPcS_+0x172>
     69a:	89 81       	ldd	r24, Y+1	; 0x01
     69c:	9a 81       	ldd	r25, Y+2	; 0x02
     69e:	01 96       	adiw	r24, 0x01	; 1
     6a0:	9a 83       	std	Y+2, r25	; 0x02
     6a2:	89 83       	std	Y+1, r24	; 0x01
     6a4:	d5 cf       	rjmp	.-86     	; 0x650 <_ZL16MoveAbsolute_cmdiPcS_+0x2e>
     6a6:	8b 85       	ldd	r24, Y+11	; 0x0b
     6a8:	9c 85       	ldd	r25, Y+12	; 0x0c
     6aa:	4a e0       	ldi	r20, 0x0A	; 10
     6ac:	50 e0       	ldi	r21, 0x00	; 0
     6ae:	60 e0       	ldi	r22, 0x00	; 0
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <strtol>
     6b6:	dc 01       	movw	r26, r24
     6b8:	cb 01       	movw	r24, r22
     6ba:	8b 83       	std	Y+3, r24	; 0x03
     6bc:	9c 83       	std	Y+4, r25	; 0x04
     6be:	ad 83       	std	Y+5, r26	; 0x05
     6c0:	be 83       	std	Y+6, r27	; 0x06
     6c2:	2b 81       	ldd	r18, Y+3	; 0x03
     6c4:	3c 81       	ldd	r19, Y+4	; 0x04
     6c6:	4d 81       	ldd	r20, Y+5	; 0x05
     6c8:	5e 81       	ldd	r21, Y+6	; 0x06
     6ca:	88 ee       	ldi	r24, 0xE8	; 232
     6cc:	93 e0       	ldi	r25, 0x03	; 3
     6ce:	dc 01       	movw	r26, r24
     6d0:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <__muluhisi3>
     6d4:	dc 01       	movw	r26, r24
     6d6:	cb 01       	movw	r24, r22
     6d8:	24 e3       	ldi	r18, 0x34	; 52
     6da:	36 e0       	ldi	r19, 0x06	; 6
     6dc:	40 e0       	ldi	r20, 0x00	; 0
     6de:	50 e0       	ldi	r21, 0x00	; 0
     6e0:	bc 01       	movw	r22, r24
     6e2:	cd 01       	movw	r24, r26
     6e4:	0e 94 c9 1d 	call	0x3b92	; 0x3b92 <__divmodsi4>
     6e8:	da 01       	movw	r26, r20
     6ea:	c9 01       	movw	r24, r18
     6ec:	8b 83       	std	Y+3, r24	; 0x03
     6ee:	9c 83       	std	Y+4, r25	; 0x04
     6f0:	ad 83       	std	Y+5, r26	; 0x05
     6f2:	be 83       	std	Y+6, r27	; 0x06
     6f4:	8b 81       	ldd	r24, Y+3	; 0x03
     6f6:	9c 81       	ldd	r25, Y+4	; 0x04
     6f8:	ad 81       	ldd	r26, Y+5	; 0x05
     6fa:	be 81       	ldd	r27, Y+6	; 0x06
     6fc:	bb 23       	and	r27, r27
     6fe:	ac f0       	brlt	.+42     	; 0x72a <_ZL16MoveAbsolute_cmdiPcS_+0x108>
     700:	8b 81       	ldd	r24, Y+3	; 0x03
     702:	9c 81       	ldd	r25, Y+4	; 0x04
     704:	ad 81       	ldd	r26, Y+5	; 0x05
     706:	be 81       	ldd	r27, Y+6	; 0x06
     708:	86 3c       	cpi	r24, 0xC6	; 198
     70a:	92 42       	sbci	r25, 0x22	; 34
     70c:	a1 40       	sbci	r26, 0x01	; 1
     70e:	b1 05       	cpc	r27, r1
     710:	64 f4       	brge	.+24     	; 0x72a <_ZL16MoveAbsolute_cmdiPcS_+0x108>
     712:	8b 81       	ldd	r24, Y+3	; 0x03
     714:	9c 81       	ldd	r25, Y+4	; 0x04
     716:	ad 81       	ldd	r26, Y+5	; 0x05
     718:	be 81       	ldd	r27, Y+6	; 0x06
     71a:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <DESIRED_POSITION>
     71e:	90 93 17 04 	sts	0x0417, r25	; 0x800417 <DESIRED_POSITION+0x1>
     722:	a0 93 18 04 	sts	0x0418, r26	; 0x800418 <DESIRED_POSITION+0x2>
     726:	b0 93 19 04 	sts	0x0419, r27	; 0x800419 <DESIRED_POSITION+0x3>
     72a:	20 91 16 04 	lds	r18, 0x0416	; 0x800416 <DESIRED_POSITION>
     72e:	30 91 17 04 	lds	r19, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
     732:	40 91 18 04 	lds	r20, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
     736:	50 91 19 04 	lds	r21, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
     73a:	80 e8       	ldi	r24, 0x80	; 128
     73c:	9c e0       	ldi	r25, 0x0C	; 12
     73e:	dc 01       	movw	r26, r24
     740:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <__muluhisi3>
     744:	dc 01       	movw	r26, r24
     746:	cb 01       	movw	r24, r22
     748:	28 ee       	ldi	r18, 0xE8	; 232
     74a:	33 e0       	ldi	r19, 0x03	; 3
     74c:	40 e0       	ldi	r20, 0x00	; 0
     74e:	50 e0       	ldi	r21, 0x00	; 0
     750:	bc 01       	movw	r22, r24
     752:	cd 01       	movw	r24, r26
     754:	0e 94 c9 1d 	call	0x3b92	; 0x3b92 <__divmodsi4>
     758:	da 01       	movw	r26, r20
     75a:	c9 01       	movw	r24, r18
     75c:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <DESIRED_POSITION>
     760:	90 93 17 04 	sts	0x0417, r25	; 0x800417 <DESIRED_POSITION+0x1>
     764:	a0 93 18 04 	sts	0x0418, r26	; 0x800418 <DESIRED_POSITION+0x2>
     768:	b0 93 19 04 	sts	0x0419, r27	; 0x800419 <DESIRED_POSITION+0x3>
     76c:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <DESIRED_POSITION>
     770:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
     774:	a0 91 18 04 	lds	r26, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
     778:	b0 91 19 04 	lds	r27, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
     77c:	88 0f       	add	r24, r24
     77e:	99 1f       	adc	r25, r25
     780:	aa 1f       	adc	r26, r26
     782:	bb 1f       	adc	r27, r27
     784:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <DESIRED_POSITION>
     788:	90 93 17 04 	sts	0x0417, r25	; 0x800417 <DESIRED_POSITION+0x1>
     78c:	a0 93 18 04 	sts	0x0418, r26	; 0x800418 <DESIRED_POSITION+0x2>
     790:	b0 93 19 04 	sts	0x0419, r27	; 0x800419 <DESIRED_POSITION+0x3>
     794:	2c 96       	adiw	r28, 0x0c	; 12
     796:	0f b6       	in	r0, 0x3f	; 63
     798:	f8 94       	cli
     79a:	de bf       	out	0x3e, r29	; 62
     79c:	0f be       	out	0x3f, r0	; 63
     79e:	cd bf       	out	0x3d, r28	; 61
     7a0:	df 91       	pop	r29
     7a2:	cf 91       	pop	r28
     7a4:	08 95       	ret

000007a6 <_ZL12SpoolRPM_cmdiPcS_>:
     7a6:	0f 93       	push	r16
     7a8:	1f 93       	push	r17
     7aa:	cf 93       	push	r28
     7ac:	df 93       	push	r29
     7ae:	cd b7       	in	r28, 0x3d	; 61
     7b0:	de b7       	in	r29, 0x3e	; 62
     7b2:	c2 54       	subi	r28, 0x42	; 66
     7b4:	d1 09       	sbc	r29, r1
     7b6:	0f b6       	in	r0, 0x3f	; 63
     7b8:	f8 94       	cli
     7ba:	de bf       	out	0x3e, r29	; 62
     7bc:	0f be       	out	0x3f, r0	; 63
     7be:	cd bf       	out	0x3d, r28	; 61
     7c0:	9e af       	std	Y+62, r25	; 0x3e
     7c2:	8d af       	std	Y+61, r24	; 0x3d
     7c4:	ce 01       	movw	r24, r28
     7c6:	cf 96       	adiw	r24, 0x3f	; 63
     7c8:	fc 01       	movw	r30, r24
     7ca:	71 83       	std	Z+1, r23	; 0x01
     7cc:	60 83       	st	Z, r22
     7ce:	ce 01       	movw	r24, r28
     7d0:	8f 5b       	subi	r24, 0xBF	; 191
     7d2:	9f 4f       	sbci	r25, 0xFF	; 255
     7d4:	fc 01       	movw	r30, r24
     7d6:	51 83       	std	Z+1, r21	; 0x01
     7d8:	40 83       	st	Z, r20
     7da:	2c e3       	ldi	r18, 0x3C	; 60
     7dc:	ce 01       	movw	r24, r28
     7de:	01 96       	adiw	r24, 0x01	; 1
     7e0:	fc 01       	movw	r30, r24
     7e2:	32 2f       	mov	r19, r18
     7e4:	11 92       	st	Z+, r1
     7e6:	3a 95       	dec	r19
     7e8:	e9 f7       	brne	.-6      	; 0x7e4 <_ZL12SpoolRPM_cmdiPcS_+0x3e>
     7ea:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <SPOOLRPM>
     7ee:	90 91 1f 04 	lds	r25, 0x041F	; 0x80041f <SPOOLRPM+0x1>
     7f2:	cc 01       	movw	r24, r24
     7f4:	a0 e0       	ldi	r26, 0x00	; 0
     7f6:	b0 e0       	ldi	r27, 0x00	; 0
     7f8:	9e 01       	movw	r18, r28
     7fa:	21 5c       	subi	r18, 0xC1	; 193
     7fc:	3f 4f       	sbci	r19, 0xFF	; 255
     7fe:	f9 01       	movw	r30, r18
     800:	40 81       	ld	r20, Z
     802:	51 81       	ldd	r21, Z+1	; 0x01
     804:	8c 01       	movw	r16, r24
     806:	9d 01       	movw	r18, r26
     808:	63 e0       	ldi	r22, 0x03	; 3
     80a:	70 e0       	ldi	r23, 0x00	; 0
     80c:	ce 01       	movw	r24, r28
     80e:	01 96       	adiw	r24, 0x01	; 1
     810:	0e 94 04 08 	call	0x1008	; 0x1008 <_Z17BuildSerialOutputPciS_m>
     814:	ce 01       	movw	r24, r28
     816:	01 96       	adiw	r24, 0x01	; 1
     818:	bc 01       	movw	r22, r24
     81a:	8c e2       	ldi	r24, 0x2C	; 44
     81c:	94 e0       	ldi	r25, 0x04	; 4
     81e:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     822:	00 00       	nop
     824:	ce 5b       	subi	r28, 0xBE	; 190
     826:	df 4f       	sbci	r29, 0xFF	; 255
     828:	0f b6       	in	r0, 0x3f	; 63
     82a:	f8 94       	cli
     82c:	de bf       	out	0x3e, r29	; 62
     82e:	0f be       	out	0x3f, r0	; 63
     830:	cd bf       	out	0x3d, r28	; 61
     832:	df 91       	pop	r29
     834:	cf 91       	pop	r28
     836:	1f 91       	pop	r17
     838:	0f 91       	pop	r16
     83a:	08 95       	ret

0000083c <_ZL15InnerOffset_cmdiPcS_>:
     83c:	0f 93       	push	r16
     83e:	1f 93       	push	r17
     840:	cf 93       	push	r28
     842:	df 93       	push	r29
     844:	cd b7       	in	r28, 0x3d	; 61
     846:	de b7       	in	r29, 0x3e	; 62
     848:	c4 54       	subi	r28, 0x44	; 68
     84a:	d1 09       	sbc	r29, r1
     84c:	0f b6       	in	r0, 0x3f	; 63
     84e:	f8 94       	cli
     850:	de bf       	out	0x3e, r29	; 62
     852:	0f be       	out	0x3f, r0	; 63
     854:	cd bf       	out	0x3d, r28	; 61
     856:	9e 01       	movw	r18, r28
     858:	21 5c       	subi	r18, 0xC1	; 193
     85a:	3f 4f       	sbci	r19, 0xFF	; 255
     85c:	f9 01       	movw	r30, r18
     85e:	91 83       	std	Z+1, r25	; 0x01
     860:	80 83       	st	Z, r24
     862:	ce 01       	movw	r24, r28
     864:	8f 5b       	subi	r24, 0xBF	; 191
     866:	9f 4f       	sbci	r25, 0xFF	; 255
     868:	fc 01       	movw	r30, r24
     86a:	71 83       	std	Z+1, r23	; 0x01
     86c:	60 83       	st	Z, r22
     86e:	ce 01       	movw	r24, r28
     870:	8d 5b       	subi	r24, 0xBD	; 189
     872:	9f 4f       	sbci	r25, 0xFF	; 255
     874:	fc 01       	movw	r30, r24
     876:	51 83       	std	Z+1, r21	; 0x01
     878:	40 83       	st	Z, r20
     87a:	ce 01       	movw	r24, r28
     87c:	8d 5b       	subi	r24, 0xBD	; 189
     87e:	9f 4f       	sbci	r25, 0xFF	; 255
     880:	fc 01       	movw	r30, r24
     882:	80 81       	ld	r24, Z
     884:	91 81       	ldd	r25, Z+1	; 0x01
     886:	89 2b       	or	r24, r25
     888:	09 f4       	brne	.+2      	; 0x88c <_ZL15InnerOffset_cmdiPcS_+0x50>
     88a:	4c c0       	rjmp	.+152    	; 0x924 <__stack+0x25>
     88c:	1a 82       	std	Y+2, r1	; 0x02
     88e:	19 82       	std	Y+1, r1	; 0x01
     890:	89 81       	ldd	r24, Y+1	; 0x01
     892:	9a 81       	ldd	r25, Y+2	; 0x02
     894:	9e 01       	movw	r18, r28
     896:	2d 5b       	subi	r18, 0xBD	; 189
     898:	3f 4f       	sbci	r19, 0xFF	; 255
     89a:	f9 01       	movw	r30, r18
     89c:	20 81       	ld	r18, Z
     89e:	31 81       	ldd	r19, Z+1	; 0x01
     8a0:	82 0f       	add	r24, r18
     8a2:	93 1f       	adc	r25, r19
     8a4:	fc 01       	movw	r30, r24
     8a6:	80 81       	ld	r24, Z
     8a8:	88 23       	and	r24, r24
     8aa:	29 f1       	breq	.+74     	; 0x8f6 <_ZL15InnerOffset_cmdiPcS_+0xba>
     8ac:	89 81       	ldd	r24, Y+1	; 0x01
     8ae:	9a 81       	ldd	r25, Y+2	; 0x02
     8b0:	9e 01       	movw	r18, r28
     8b2:	2d 5b       	subi	r18, 0xBD	; 189
     8b4:	3f 4f       	sbci	r19, 0xFF	; 255
     8b6:	f9 01       	movw	r30, r18
     8b8:	20 81       	ld	r18, Z
     8ba:	31 81       	ldd	r19, Z+1	; 0x01
     8bc:	82 0f       	add	r24, r18
     8be:	93 1f       	adc	r25, r19
     8c0:	fc 01       	movw	r30, r24
     8c2:	80 81       	ld	r24, Z
     8c4:	88 2f       	mov	r24, r24
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	c0 97       	sbiw	r24, 0x30	; 48
     8ca:	0a 97       	sbiw	r24, 0x0a	; 10
     8cc:	10 f0       	brcs	.+4      	; 0x8d2 <_ZL15InnerOffset_cmdiPcS_+0x96>
     8ce:	81 e0       	ldi	r24, 0x01	; 1
     8d0:	01 c0       	rjmp	.+2      	; 0x8d4 <_ZL15InnerOffset_cmdiPcS_+0x98>
     8d2:	80 e0       	ldi	r24, 0x00	; 0
     8d4:	88 23       	and	r24, r24
     8d6:	49 f0       	breq	.+18     	; 0x8ea <_ZL15InnerOffset_cmdiPcS_+0xae>
     8d8:	60 ef       	ldi	r22, 0xF0	; 240
     8da:	72 e0       	ldi	r23, 0x02	; 2
     8dc:	8c e2       	ldi	r24, 0x2C	; 44
     8de:	94 e0       	ldi	r25, 0x04	; 4
     8e0:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     8e4:	80 e0       	ldi	r24, 0x00	; 0
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	43 c0       	rjmp	.+134    	; 0x970 <__stack+0x71>
     8ea:	89 81       	ldd	r24, Y+1	; 0x01
     8ec:	9a 81       	ldd	r25, Y+2	; 0x02
     8ee:	01 96       	adiw	r24, 0x01	; 1
     8f0:	9a 83       	std	Y+2, r25	; 0x02
     8f2:	89 83       	std	Y+1, r24	; 0x01
     8f4:	cd cf       	rjmp	.-102    	; 0x890 <_ZL15InnerOffset_cmdiPcS_+0x54>
     8f6:	ce 01       	movw	r24, r28
     8f8:	8d 5b       	subi	r24, 0xBD	; 189
     8fa:	9f 4f       	sbci	r25, 0xFF	; 255
     8fc:	fc 01       	movw	r30, r24
     8fe:	80 81       	ld	r24, Z
     900:	91 81       	ldd	r25, Z+1	; 0x01
     902:	4a e0       	ldi	r20, 0x0A	; 10
     904:	50 e0       	ldi	r21, 0x00	; 0
     906:	60 e0       	ldi	r22, 0x00	; 0
     908:	70 e0       	ldi	r23, 0x00	; 0
     90a:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <strtol>
     90e:	dc 01       	movw	r26, r24
     910:	cb 01       	movw	r24, r22
     912:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <INNER_TRAVERSE_OFFSET>
     916:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
     91a:	a0 93 ed 01 	sts	0x01ED, r26	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
     91e:	b0 93 ee 01 	sts	0x01EE, r27	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
     922:	26 c0       	rjmp	.+76     	; 0x970 <__stack+0x71>
     924:	2c e3       	ldi	r18, 0x3C	; 60
     926:	ce 01       	movw	r24, r28
     928:	03 96       	adiw	r24, 0x03	; 3
     92a:	fc 01       	movw	r30, r24
     92c:	32 2f       	mov	r19, r18
     92e:	11 92       	st	Z+, r1
     930:	3a 95       	dec	r19
     932:	e9 f7       	brne	.-6      	; 0x92e <__stack+0x2f>
     934:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
     938:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
     93c:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
     940:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
     944:	9e 01       	movw	r18, r28
     946:	2f 5b       	subi	r18, 0xBF	; 191
     948:	3f 4f       	sbci	r19, 0xFF	; 255
     94a:	f9 01       	movw	r30, r18
     94c:	40 81       	ld	r20, Z
     94e:	51 81       	ldd	r21, Z+1	; 0x01
     950:	fe 01       	movw	r30, r28
     952:	33 96       	adiw	r30, 0x03	; 3
     954:	8c 01       	movw	r16, r24
     956:	9d 01       	movw	r18, r26
     958:	63 e0       	ldi	r22, 0x03	; 3
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	cf 01       	movw	r24, r30
     95e:	0e 94 04 08 	call	0x1008	; 0x1008 <_Z17BuildSerialOutputPciS_m>
     962:	ce 01       	movw	r24, r28
     964:	03 96       	adiw	r24, 0x03	; 3
     966:	bc 01       	movw	r22, r24
     968:	8c e2       	ldi	r24, 0x2C	; 44
     96a:	94 e0       	ldi	r25, 0x04	; 4
     96c:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     970:	cc 5b       	subi	r28, 0xBC	; 188
     972:	df 4f       	sbci	r29, 0xFF	; 255
     974:	0f b6       	in	r0, 0x3f	; 63
     976:	f8 94       	cli
     978:	de bf       	out	0x3e, r29	; 62
     97a:	0f be       	out	0x3f, r0	; 63
     97c:	cd bf       	out	0x3d, r28	; 61
     97e:	df 91       	pop	r29
     980:	cf 91       	pop	r28
     982:	1f 91       	pop	r17
     984:	0f 91       	pop	r16
     986:	08 95       	ret

00000988 <_ZL14SpoolWidth_cmdiPcS_>:
     988:	0f 93       	push	r16
     98a:	1f 93       	push	r17
     98c:	cf 93       	push	r28
     98e:	df 93       	push	r29
     990:	cd b7       	in	r28, 0x3d	; 61
     992:	de b7       	in	r29, 0x3e	; 62
     994:	c4 54       	subi	r28, 0x44	; 68
     996:	d1 09       	sbc	r29, r1
     998:	0f b6       	in	r0, 0x3f	; 63
     99a:	f8 94       	cli
     99c:	de bf       	out	0x3e, r29	; 62
     99e:	0f be       	out	0x3f, r0	; 63
     9a0:	cd bf       	out	0x3d, r28	; 61
     9a2:	9e 01       	movw	r18, r28
     9a4:	21 5c       	subi	r18, 0xC1	; 193
     9a6:	3f 4f       	sbci	r19, 0xFF	; 255
     9a8:	f9 01       	movw	r30, r18
     9aa:	91 83       	std	Z+1, r25	; 0x01
     9ac:	80 83       	st	Z, r24
     9ae:	ce 01       	movw	r24, r28
     9b0:	8f 5b       	subi	r24, 0xBF	; 191
     9b2:	9f 4f       	sbci	r25, 0xFF	; 255
     9b4:	fc 01       	movw	r30, r24
     9b6:	71 83       	std	Z+1, r23	; 0x01
     9b8:	60 83       	st	Z, r22
     9ba:	ce 01       	movw	r24, r28
     9bc:	8d 5b       	subi	r24, 0xBD	; 189
     9be:	9f 4f       	sbci	r25, 0xFF	; 255
     9c0:	fc 01       	movw	r30, r24
     9c2:	51 83       	std	Z+1, r21	; 0x01
     9c4:	40 83       	st	Z, r20
     9c6:	ce 01       	movw	r24, r28
     9c8:	8d 5b       	subi	r24, 0xBD	; 189
     9ca:	9f 4f       	sbci	r25, 0xFF	; 255
     9cc:	fc 01       	movw	r30, r24
     9ce:	80 81       	ld	r24, Z
     9d0:	91 81       	ldd	r25, Z+1	; 0x01
     9d2:	89 2b       	or	r24, r25
     9d4:	09 f4       	brne	.+2      	; 0x9d8 <_ZL14SpoolWidth_cmdiPcS_+0x50>
     9d6:	4c c0       	rjmp	.+152    	; 0xa70 <_ZL14SpoolWidth_cmdiPcS_+0xe8>
     9d8:	1a 82       	std	Y+2, r1	; 0x02
     9da:	19 82       	std	Y+1, r1	; 0x01
     9dc:	89 81       	ldd	r24, Y+1	; 0x01
     9de:	9a 81       	ldd	r25, Y+2	; 0x02
     9e0:	9e 01       	movw	r18, r28
     9e2:	2d 5b       	subi	r18, 0xBD	; 189
     9e4:	3f 4f       	sbci	r19, 0xFF	; 255
     9e6:	f9 01       	movw	r30, r18
     9e8:	20 81       	ld	r18, Z
     9ea:	31 81       	ldd	r19, Z+1	; 0x01
     9ec:	82 0f       	add	r24, r18
     9ee:	93 1f       	adc	r25, r19
     9f0:	fc 01       	movw	r30, r24
     9f2:	80 81       	ld	r24, Z
     9f4:	88 23       	and	r24, r24
     9f6:	29 f1       	breq	.+74     	; 0xa42 <_ZL14SpoolWidth_cmdiPcS_+0xba>
     9f8:	89 81       	ldd	r24, Y+1	; 0x01
     9fa:	9a 81       	ldd	r25, Y+2	; 0x02
     9fc:	9e 01       	movw	r18, r28
     9fe:	2d 5b       	subi	r18, 0xBD	; 189
     a00:	3f 4f       	sbci	r19, 0xFF	; 255
     a02:	f9 01       	movw	r30, r18
     a04:	20 81       	ld	r18, Z
     a06:	31 81       	ldd	r19, Z+1	; 0x01
     a08:	82 0f       	add	r24, r18
     a0a:	93 1f       	adc	r25, r19
     a0c:	fc 01       	movw	r30, r24
     a0e:	80 81       	ld	r24, Z
     a10:	88 2f       	mov	r24, r24
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	c0 97       	sbiw	r24, 0x30	; 48
     a16:	0a 97       	sbiw	r24, 0x0a	; 10
     a18:	10 f0       	brcs	.+4      	; 0xa1e <_ZL14SpoolWidth_cmdiPcS_+0x96>
     a1a:	81 e0       	ldi	r24, 0x01	; 1
     a1c:	01 c0       	rjmp	.+2      	; 0xa20 <_ZL14SpoolWidth_cmdiPcS_+0x98>
     a1e:	80 e0       	ldi	r24, 0x00	; 0
     a20:	88 23       	and	r24, r24
     a22:	49 f0       	breq	.+18     	; 0xa36 <_ZL14SpoolWidth_cmdiPcS_+0xae>
     a24:	66 e1       	ldi	r22, 0x16	; 22
     a26:	73 e0       	ldi	r23, 0x03	; 3
     a28:	8c e2       	ldi	r24, 0x2C	; 44
     a2a:	94 e0       	ldi	r25, 0x04	; 4
     a2c:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     a30:	80 e0       	ldi	r24, 0x00	; 0
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	43 c0       	rjmp	.+134    	; 0xabc <_ZL14SpoolWidth_cmdiPcS_+0x134>
     a36:	89 81       	ldd	r24, Y+1	; 0x01
     a38:	9a 81       	ldd	r25, Y+2	; 0x02
     a3a:	01 96       	adiw	r24, 0x01	; 1
     a3c:	9a 83       	std	Y+2, r25	; 0x02
     a3e:	89 83       	std	Y+1, r24	; 0x01
     a40:	cd cf       	rjmp	.-102    	; 0x9dc <_ZL14SpoolWidth_cmdiPcS_+0x54>
     a42:	ce 01       	movw	r24, r28
     a44:	8d 5b       	subi	r24, 0xBD	; 189
     a46:	9f 4f       	sbci	r25, 0xFF	; 255
     a48:	fc 01       	movw	r30, r24
     a4a:	80 81       	ld	r24, Z
     a4c:	91 81       	ldd	r25, Z+1	; 0x01
     a4e:	4a e0       	ldi	r20, 0x0A	; 10
     a50:	50 e0       	ldi	r21, 0x00	; 0
     a52:	60 e0       	ldi	r22, 0x00	; 0
     a54:	70 e0       	ldi	r23, 0x00	; 0
     a56:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <strtol>
     a5a:	dc 01       	movw	r26, r24
     a5c:	cb 01       	movw	r24, r22
     a5e:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <SPOOL_WIDTH>
     a62:	90 93 f0 01 	sts	0x01F0, r25	; 0x8001f0 <SPOOL_WIDTH+0x1>
     a66:	a0 93 f1 01 	sts	0x01F1, r26	; 0x8001f1 <SPOOL_WIDTH+0x2>
     a6a:	b0 93 f2 01 	sts	0x01F2, r27	; 0x8001f2 <SPOOL_WIDTH+0x3>
     a6e:	26 c0       	rjmp	.+76     	; 0xabc <_ZL14SpoolWidth_cmdiPcS_+0x134>
     a70:	2c e3       	ldi	r18, 0x3C	; 60
     a72:	ce 01       	movw	r24, r28
     a74:	03 96       	adiw	r24, 0x03	; 3
     a76:	fc 01       	movw	r30, r24
     a78:	32 2f       	mov	r19, r18
     a7a:	11 92       	st	Z+, r1
     a7c:	3a 95       	dec	r19
     a7e:	e9 f7       	brne	.-6      	; 0xa7a <_ZL14SpoolWidth_cmdiPcS_+0xf2>
     a80:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <SPOOL_WIDTH>
     a84:	90 91 f0 01 	lds	r25, 0x01F0	; 0x8001f0 <SPOOL_WIDTH+0x1>
     a88:	a0 91 f1 01 	lds	r26, 0x01F1	; 0x8001f1 <SPOOL_WIDTH+0x2>
     a8c:	b0 91 f2 01 	lds	r27, 0x01F2	; 0x8001f2 <SPOOL_WIDTH+0x3>
     a90:	9e 01       	movw	r18, r28
     a92:	2f 5b       	subi	r18, 0xBF	; 191
     a94:	3f 4f       	sbci	r19, 0xFF	; 255
     a96:	f9 01       	movw	r30, r18
     a98:	40 81       	ld	r20, Z
     a9a:	51 81       	ldd	r21, Z+1	; 0x01
     a9c:	fe 01       	movw	r30, r28
     a9e:	33 96       	adiw	r30, 0x03	; 3
     aa0:	8c 01       	movw	r16, r24
     aa2:	9d 01       	movw	r18, r26
     aa4:	63 e0       	ldi	r22, 0x03	; 3
     aa6:	70 e0       	ldi	r23, 0x00	; 0
     aa8:	cf 01       	movw	r24, r30
     aaa:	0e 94 04 08 	call	0x1008	; 0x1008 <_Z17BuildSerialOutputPciS_m>
     aae:	ce 01       	movw	r24, r28
     ab0:	03 96       	adiw	r24, 0x03	; 3
     ab2:	bc 01       	movw	r22, r24
     ab4:	8c e2       	ldi	r24, 0x2C	; 44
     ab6:	94 e0       	ldi	r25, 0x04	; 4
     ab8:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     abc:	cc 5b       	subi	r28, 0xBC	; 188
     abe:	df 4f       	sbci	r29, 0xFF	; 255
     ac0:	0f b6       	in	r0, 0x3f	; 63
     ac2:	f8 94       	cli
     ac4:	de bf       	out	0x3e, r29	; 62
     ac6:	0f be       	out	0x3f, r0	; 63
     ac8:	cd bf       	out	0x3d, r28	; 61
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	1f 91       	pop	r17
     ad0:	0f 91       	pop	r16
     ad2:	08 95       	ret

00000ad4 <_ZL20FilamentDiameter_cmdiPcS_>:
     ad4:	0f 93       	push	r16
     ad6:	1f 93       	push	r17
     ad8:	cf 93       	push	r28
     ada:	df 93       	push	r29
     adc:	cd b7       	in	r28, 0x3d	; 61
     ade:	de b7       	in	r29, 0x3e	; 62
     ae0:	c4 54       	subi	r28, 0x44	; 68
     ae2:	d1 09       	sbc	r29, r1
     ae4:	0f b6       	in	r0, 0x3f	; 63
     ae6:	f8 94       	cli
     ae8:	de bf       	out	0x3e, r29	; 62
     aea:	0f be       	out	0x3f, r0	; 63
     aec:	cd bf       	out	0x3d, r28	; 61
     aee:	9e 01       	movw	r18, r28
     af0:	21 5c       	subi	r18, 0xC1	; 193
     af2:	3f 4f       	sbci	r19, 0xFF	; 255
     af4:	f9 01       	movw	r30, r18
     af6:	91 83       	std	Z+1, r25	; 0x01
     af8:	80 83       	st	Z, r24
     afa:	ce 01       	movw	r24, r28
     afc:	8f 5b       	subi	r24, 0xBF	; 191
     afe:	9f 4f       	sbci	r25, 0xFF	; 255
     b00:	fc 01       	movw	r30, r24
     b02:	71 83       	std	Z+1, r23	; 0x01
     b04:	60 83       	st	Z, r22
     b06:	ce 01       	movw	r24, r28
     b08:	8d 5b       	subi	r24, 0xBD	; 189
     b0a:	9f 4f       	sbci	r25, 0xFF	; 255
     b0c:	fc 01       	movw	r30, r24
     b0e:	51 83       	std	Z+1, r21	; 0x01
     b10:	40 83       	st	Z, r20
     b12:	ce 01       	movw	r24, r28
     b14:	8d 5b       	subi	r24, 0xBD	; 189
     b16:	9f 4f       	sbci	r25, 0xFF	; 255
     b18:	fc 01       	movw	r30, r24
     b1a:	80 81       	ld	r24, Z
     b1c:	91 81       	ldd	r25, Z+1	; 0x01
     b1e:	89 2b       	or	r24, r25
     b20:	09 f4       	brne	.+2      	; 0xb24 <_ZL20FilamentDiameter_cmdiPcS_+0x50>
     b22:	4c c0       	rjmp	.+152    	; 0xbbc <_ZL20FilamentDiameter_cmdiPcS_+0xe8>
     b24:	1a 82       	std	Y+2, r1	; 0x02
     b26:	19 82       	std	Y+1, r1	; 0x01
     b28:	89 81       	ldd	r24, Y+1	; 0x01
     b2a:	9a 81       	ldd	r25, Y+2	; 0x02
     b2c:	9e 01       	movw	r18, r28
     b2e:	2d 5b       	subi	r18, 0xBD	; 189
     b30:	3f 4f       	sbci	r19, 0xFF	; 255
     b32:	f9 01       	movw	r30, r18
     b34:	20 81       	ld	r18, Z
     b36:	31 81       	ldd	r19, Z+1	; 0x01
     b38:	82 0f       	add	r24, r18
     b3a:	93 1f       	adc	r25, r19
     b3c:	fc 01       	movw	r30, r24
     b3e:	80 81       	ld	r24, Z
     b40:	88 23       	and	r24, r24
     b42:	29 f1       	breq	.+74     	; 0xb8e <_ZL20FilamentDiameter_cmdiPcS_+0xba>
     b44:	89 81       	ldd	r24, Y+1	; 0x01
     b46:	9a 81       	ldd	r25, Y+2	; 0x02
     b48:	9e 01       	movw	r18, r28
     b4a:	2d 5b       	subi	r18, 0xBD	; 189
     b4c:	3f 4f       	sbci	r19, 0xFF	; 255
     b4e:	f9 01       	movw	r30, r18
     b50:	20 81       	ld	r18, Z
     b52:	31 81       	ldd	r19, Z+1	; 0x01
     b54:	82 0f       	add	r24, r18
     b56:	93 1f       	adc	r25, r19
     b58:	fc 01       	movw	r30, r24
     b5a:	80 81       	ld	r24, Z
     b5c:	88 2f       	mov	r24, r24
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	c0 97       	sbiw	r24, 0x30	; 48
     b62:	0a 97       	sbiw	r24, 0x0a	; 10
     b64:	10 f0       	brcs	.+4      	; 0xb6a <_ZL20FilamentDiameter_cmdiPcS_+0x96>
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	01 c0       	rjmp	.+2      	; 0xb6c <_ZL20FilamentDiameter_cmdiPcS_+0x98>
     b6a:	80 e0       	ldi	r24, 0x00	; 0
     b6c:	88 23       	and	r24, r24
     b6e:	49 f0       	breq	.+18     	; 0xb82 <_ZL20FilamentDiameter_cmdiPcS_+0xae>
     b70:	66 e1       	ldi	r22, 0x16	; 22
     b72:	73 e0       	ldi	r23, 0x03	; 3
     b74:	8c e2       	ldi	r24, 0x2C	; 44
     b76:	94 e0       	ldi	r25, 0x04	; 4
     b78:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     b7c:	80 e0       	ldi	r24, 0x00	; 0
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	43 c0       	rjmp	.+134    	; 0xc08 <_ZL20FilamentDiameter_cmdiPcS_+0x134>
     b82:	89 81       	ldd	r24, Y+1	; 0x01
     b84:	9a 81       	ldd	r25, Y+2	; 0x02
     b86:	01 96       	adiw	r24, 0x01	; 1
     b88:	9a 83       	std	Y+2, r25	; 0x02
     b8a:	89 83       	std	Y+1, r24	; 0x01
     b8c:	cd cf       	rjmp	.-102    	; 0xb28 <_ZL20FilamentDiameter_cmdiPcS_+0x54>
     b8e:	ce 01       	movw	r24, r28
     b90:	8d 5b       	subi	r24, 0xBD	; 189
     b92:	9f 4f       	sbci	r25, 0xFF	; 255
     b94:	fc 01       	movw	r30, r24
     b96:	80 81       	ld	r24, Z
     b98:	91 81       	ldd	r25, Z+1	; 0x01
     b9a:	4a e0       	ldi	r20, 0x0A	; 10
     b9c:	50 e0       	ldi	r21, 0x00	; 0
     b9e:	60 e0       	ldi	r22, 0x00	; 0
     ba0:	70 e0       	ldi	r23, 0x00	; 0
     ba2:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <strtol>
     ba6:	dc 01       	movw	r26, r24
     ba8:	cb 01       	movw	r24, r22
     baa:	80 93 f3 01 	sts	0x01F3, r24	; 0x8001f3 <FILAMENT_DIAMETER>
     bae:	90 93 f4 01 	sts	0x01F4, r25	; 0x8001f4 <FILAMENT_DIAMETER+0x1>
     bb2:	a0 93 f5 01 	sts	0x01F5, r26	; 0x8001f5 <FILAMENT_DIAMETER+0x2>
     bb6:	b0 93 f6 01 	sts	0x01F6, r27	; 0x8001f6 <FILAMENT_DIAMETER+0x3>
     bba:	26 c0       	rjmp	.+76     	; 0xc08 <_ZL20FilamentDiameter_cmdiPcS_+0x134>
     bbc:	2c e3       	ldi	r18, 0x3C	; 60
     bbe:	ce 01       	movw	r24, r28
     bc0:	03 96       	adiw	r24, 0x03	; 3
     bc2:	fc 01       	movw	r30, r24
     bc4:	32 2f       	mov	r19, r18
     bc6:	11 92       	st	Z+, r1
     bc8:	3a 95       	dec	r19
     bca:	e9 f7       	brne	.-6      	; 0xbc6 <_ZL20FilamentDiameter_cmdiPcS_+0xf2>
     bcc:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <FILAMENT_DIAMETER>
     bd0:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <FILAMENT_DIAMETER+0x1>
     bd4:	a0 91 f5 01 	lds	r26, 0x01F5	; 0x8001f5 <FILAMENT_DIAMETER+0x2>
     bd8:	b0 91 f6 01 	lds	r27, 0x01F6	; 0x8001f6 <FILAMENT_DIAMETER+0x3>
     bdc:	9e 01       	movw	r18, r28
     bde:	2f 5b       	subi	r18, 0xBF	; 191
     be0:	3f 4f       	sbci	r19, 0xFF	; 255
     be2:	f9 01       	movw	r30, r18
     be4:	40 81       	ld	r20, Z
     be6:	51 81       	ldd	r21, Z+1	; 0x01
     be8:	fe 01       	movw	r30, r28
     bea:	33 96       	adiw	r30, 0x03	; 3
     bec:	8c 01       	movw	r16, r24
     bee:	9d 01       	movw	r18, r26
     bf0:	63 e0       	ldi	r22, 0x03	; 3
     bf2:	70 e0       	ldi	r23, 0x00	; 0
     bf4:	cf 01       	movw	r24, r30
     bf6:	0e 94 04 08 	call	0x1008	; 0x1008 <_Z17BuildSerialOutputPciS_m>
     bfa:	ce 01       	movw	r24, r28
     bfc:	03 96       	adiw	r24, 0x03	; 3
     bfe:	bc 01       	movw	r22, r24
     c00:	8c e2       	ldi	r24, 0x2C	; 44
     c02:	94 e0       	ldi	r25, 0x04	; 4
     c04:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     c08:	cc 5b       	subi	r28, 0xBC	; 188
     c0a:	df 4f       	sbci	r29, 0xFF	; 255
     c0c:	0f b6       	in	r0, 0x3f	; 63
     c0e:	f8 94       	cli
     c10:	de bf       	out	0x3e, r29	; 62
     c12:	0f be       	out	0x3f, r0	; 63
     c14:	cd bf       	out	0x3d, r28	; 61
     c16:	df 91       	pop	r29
     c18:	cf 91       	pop	r28
     c1a:	1f 91       	pop	r17
     c1c:	0f 91       	pop	r16
     c1e:	08 95       	ret

00000c20 <_ZL13MoveToEnd_cmdiPcS_>:
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	00 d0       	rcall	.+0      	; 0xc26 <_ZL13MoveToEnd_cmdiPcS_+0x6>
     c26:	00 d0       	rcall	.+0      	; 0xc28 <_ZL13MoveToEnd_cmdiPcS_+0x8>
     c28:	00 d0       	rcall	.+0      	; 0xc2a <_ZL13MoveToEnd_cmdiPcS_+0xa>
     c2a:	cd b7       	in	r28, 0x3d	; 61
     c2c:	de b7       	in	r29, 0x3e	; 62
     c2e:	9a 83       	std	Y+2, r25	; 0x02
     c30:	89 83       	std	Y+1, r24	; 0x01
     c32:	7c 83       	std	Y+4, r23	; 0x04
     c34:	6b 83       	std	Y+3, r22	; 0x03
     c36:	5e 83       	std	Y+6, r21	; 0x06
     c38:	4d 83       	std	Y+5, r20	; 0x05
     c3a:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <RUN_MODE>
     c3e:	84 30       	cpi	r24, 0x04	; 4
     c40:	21 f0       	breq	.+8      	; 0xc4a <_ZL13MoveToEnd_cmdiPcS_+0x2a>
     c42:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <RUN_MODE>
     c46:	83 30       	cpi	r24, 0x03	; 3
     c48:	11 f4       	brne	.+4      	; 0xc4e <_ZL13MoveToEnd_cmdiPcS_+0x2e>
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	01 c0       	rjmp	.+2      	; 0xc50 <_ZL13MoveToEnd_cmdiPcS_+0x30>
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	88 23       	and	r24, r24
     c52:	19 f0       	breq	.+6      	; 0xc5a <_ZL13MoveToEnd_cmdiPcS_+0x3a>
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <MOVE_TO_END>
     c5a:	00 00       	nop
     c5c:	26 96       	adiw	r28, 0x06	; 6
     c5e:	0f b6       	in	r0, 0x3f	; 63
     c60:	f8 94       	cli
     c62:	de bf       	out	0x3e, r29	; 62
     c64:	0f be       	out	0x3f, r0	; 63
     c66:	cd bf       	out	0x3d, r28	; 61
     c68:	df 91       	pop	r29
     c6a:	cf 91       	pop	r28
     c6c:	08 95       	ret

00000c6e <_ZL17StartPosition_cmdiPcS_>:
     c6e:	0f 93       	push	r16
     c70:	1f 93       	push	r17
     c72:	cf 93       	push	r28
     c74:	df 93       	push	r29
     c76:	cd b7       	in	r28, 0x3d	; 61
     c78:	de b7       	in	r29, 0x3e	; 62
     c7a:	c6 54       	subi	r28, 0x46	; 70
     c7c:	d1 09       	sbc	r29, r1
     c7e:	0f b6       	in	r0, 0x3f	; 63
     c80:	f8 94       	cli
     c82:	de bf       	out	0x3e, r29	; 62
     c84:	0f be       	out	0x3f, r0	; 63
     c86:	cd bf       	out	0x3d, r28	; 61
     c88:	9e 01       	movw	r18, r28
     c8a:	2f 5b       	subi	r18, 0xBF	; 191
     c8c:	3f 4f       	sbci	r19, 0xFF	; 255
     c8e:	f9 01       	movw	r30, r18
     c90:	91 83       	std	Z+1, r25	; 0x01
     c92:	80 83       	st	Z, r24
     c94:	ce 01       	movw	r24, r28
     c96:	8d 5b       	subi	r24, 0xBD	; 189
     c98:	9f 4f       	sbci	r25, 0xFF	; 255
     c9a:	fc 01       	movw	r30, r24
     c9c:	71 83       	std	Z+1, r23	; 0x01
     c9e:	60 83       	st	Z, r22
     ca0:	ce 01       	movw	r24, r28
     ca2:	8b 5b       	subi	r24, 0xBB	; 187
     ca4:	9f 4f       	sbci	r25, 0xFF	; 255
     ca6:	fc 01       	movw	r30, r24
     ca8:	51 83       	std	Z+1, r21	; 0x01
     caa:	40 83       	st	Z, r20
     cac:	ce 01       	movw	r24, r28
     cae:	8b 5b       	subi	r24, 0xBB	; 187
     cb0:	9f 4f       	sbci	r25, 0xFF	; 255
     cb2:	fc 01       	movw	r30, r24
     cb4:	80 81       	ld	r24, Z
     cb6:	91 81       	ldd	r25, Z+1	; 0x01
     cb8:	89 2b       	or	r24, r25
     cba:	09 f4       	brne	.+2      	; 0xcbe <_ZL17StartPosition_cmdiPcS_+0x50>
     cbc:	4d c0       	rjmp	.+154    	; 0xd58 <_ZL17StartPosition_cmdiPcS_+0xea>
     cbe:	1a 82       	std	Y+2, r1	; 0x02
     cc0:	19 82       	std	Y+1, r1	; 0x01
     cc2:	89 81       	ldd	r24, Y+1	; 0x01
     cc4:	9a 81       	ldd	r25, Y+2	; 0x02
     cc6:	9e 01       	movw	r18, r28
     cc8:	2b 5b       	subi	r18, 0xBB	; 187
     cca:	3f 4f       	sbci	r19, 0xFF	; 255
     ccc:	f9 01       	movw	r30, r18
     cce:	20 81       	ld	r18, Z
     cd0:	31 81       	ldd	r19, Z+1	; 0x01
     cd2:	82 0f       	add	r24, r18
     cd4:	93 1f       	adc	r25, r19
     cd6:	fc 01       	movw	r30, r24
     cd8:	80 81       	ld	r24, Z
     cda:	88 23       	and	r24, r24
     cdc:	29 f1       	breq	.+74     	; 0xd28 <_ZL17StartPosition_cmdiPcS_+0xba>
     cde:	89 81       	ldd	r24, Y+1	; 0x01
     ce0:	9a 81       	ldd	r25, Y+2	; 0x02
     ce2:	9e 01       	movw	r18, r28
     ce4:	2b 5b       	subi	r18, 0xBB	; 187
     ce6:	3f 4f       	sbci	r19, 0xFF	; 255
     ce8:	f9 01       	movw	r30, r18
     cea:	20 81       	ld	r18, Z
     cec:	31 81       	ldd	r19, Z+1	; 0x01
     cee:	82 0f       	add	r24, r18
     cf0:	93 1f       	adc	r25, r19
     cf2:	fc 01       	movw	r30, r24
     cf4:	80 81       	ld	r24, Z
     cf6:	88 2f       	mov	r24, r24
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	c0 97       	sbiw	r24, 0x30	; 48
     cfc:	0a 97       	sbiw	r24, 0x0a	; 10
     cfe:	10 f0       	brcs	.+4      	; 0xd04 <_ZL17StartPosition_cmdiPcS_+0x96>
     d00:	81 e0       	ldi	r24, 0x01	; 1
     d02:	01 c0       	rjmp	.+2      	; 0xd06 <_ZL17StartPosition_cmdiPcS_+0x98>
     d04:	80 e0       	ldi	r24, 0x00	; 0
     d06:	88 23       	and	r24, r24
     d08:	49 f0       	breq	.+18     	; 0xd1c <_ZL17StartPosition_cmdiPcS_+0xae>
     d0a:	60 ea       	ldi	r22, 0xA0	; 160
     d0c:	72 e0       	ldi	r23, 0x02	; 2
     d0e:	8c e2       	ldi	r24, 0x2C	; 44
     d10:	94 e0       	ldi	r25, 0x04	; 4
     d12:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     d16:	80 e0       	ldi	r24, 0x00	; 0
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	42 c0       	rjmp	.+132    	; 0xda0 <_ZL17StartPosition_cmdiPcS_+0x132>
     d1c:	89 81       	ldd	r24, Y+1	; 0x01
     d1e:	9a 81       	ldd	r25, Y+2	; 0x02
     d20:	01 96       	adiw	r24, 0x01	; 1
     d22:	9a 83       	std	Y+2, r25	; 0x02
     d24:	89 83       	std	Y+1, r24	; 0x01
     d26:	cd cf       	rjmp	.-102    	; 0xcc2 <_ZL17StartPosition_cmdiPcS_+0x54>
     d28:	ce 01       	movw	r24, r28
     d2a:	8b 5b       	subi	r24, 0xBB	; 187
     d2c:	9f 4f       	sbci	r25, 0xFF	; 255
     d2e:	fc 01       	movw	r30, r24
     d30:	80 81       	ld	r24, Z
     d32:	91 81       	ldd	r25, Z+1	; 0x01
     d34:	4a e0       	ldi	r20, 0x0A	; 10
     d36:	50 e0       	ldi	r21, 0x00	; 0
     d38:	60 e0       	ldi	r22, 0x00	; 0
     d3a:	70 e0       	ldi	r23, 0x00	; 0
     d3c:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <strtol>
     d40:	dc 01       	movw	r26, r24
     d42:	cb 01       	movw	r24, r22
     d44:	9c 83       	std	Y+4, r25	; 0x04
     d46:	8b 83       	std	Y+3, r24	; 0x03
     d48:	8b 81       	ldd	r24, Y+3	; 0x03
     d4a:	9c 81       	ldd	r25, Y+4	; 0x04
     d4c:	04 97       	sbiw	r24, 0x04	; 4
     d4e:	40 f5       	brcc	.+80     	; 0xda0 <_ZL17StartPosition_cmdiPcS_+0x132>
     d50:	8b 81       	ldd	r24, Y+3	; 0x03
     d52:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <START_POSITION>
     d56:	24 c0       	rjmp	.+72     	; 0xda0 <_ZL17StartPosition_cmdiPcS_+0x132>
     d58:	2c e3       	ldi	r18, 0x3C	; 60
     d5a:	ce 01       	movw	r24, r28
     d5c:	05 96       	adiw	r24, 0x05	; 5
     d5e:	fc 01       	movw	r30, r24
     d60:	32 2f       	mov	r19, r18
     d62:	11 92       	st	Z+, r1
     d64:	3a 95       	dec	r19
     d66:	e9 f7       	brne	.-6      	; 0xd62 <_ZL17StartPosition_cmdiPcS_+0xf4>
     d68:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <START_POSITION>
     d6c:	88 2f       	mov	r24, r24
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	a0 e0       	ldi	r26, 0x00	; 0
     d72:	b0 e0       	ldi	r27, 0x00	; 0
     d74:	9e 01       	movw	r18, r28
     d76:	2d 5b       	subi	r18, 0xBD	; 189
     d78:	3f 4f       	sbci	r19, 0xFF	; 255
     d7a:	f9 01       	movw	r30, r18
     d7c:	40 81       	ld	r20, Z
     d7e:	51 81       	ldd	r21, Z+1	; 0x01
     d80:	fe 01       	movw	r30, r28
     d82:	35 96       	adiw	r30, 0x05	; 5
     d84:	8c 01       	movw	r16, r24
     d86:	9d 01       	movw	r18, r26
     d88:	63 e0       	ldi	r22, 0x03	; 3
     d8a:	70 e0       	ldi	r23, 0x00	; 0
     d8c:	cf 01       	movw	r24, r30
     d8e:	0e 94 04 08 	call	0x1008	; 0x1008 <_Z17BuildSerialOutputPciS_m>
     d92:	ce 01       	movw	r24, r28
     d94:	05 96       	adiw	r24, 0x05	; 5
     d96:	bc 01       	movw	r22, r24
     d98:	8c e2       	ldi	r24, 0x2C	; 44
     d9a:	94 e0       	ldi	r25, 0x04	; 4
     d9c:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     da0:	ca 5b       	subi	r28, 0xBA	; 186
     da2:	df 4f       	sbci	r29, 0xFF	; 255
     da4:	0f b6       	in	r0, 0x3f	; 63
     da6:	f8 94       	cli
     da8:	de bf       	out	0x3e, r29	; 62
     daa:	0f be       	out	0x3f, r0	; 63
     dac:	cd bf       	out	0x3d, r28	; 61
     dae:	df 91       	pop	r29
     db0:	cf 91       	pop	r28
     db2:	1f 91       	pop	r17
     db4:	0f 91       	pop	r16
     db6:	08 95       	ret

00000db8 <_ZL19FilamentCapture_cmdiPcS_>:
     db8:	0f 93       	push	r16
     dba:	1f 93       	push	r17
     dbc:	cf 93       	push	r28
     dbe:	df 93       	push	r29
     dc0:	cd b7       	in	r28, 0x3d	; 61
     dc2:	de b7       	in	r29, 0x3e	; 62
     dc4:	c6 54       	subi	r28, 0x46	; 70
     dc6:	d1 09       	sbc	r29, r1
     dc8:	0f b6       	in	r0, 0x3f	; 63
     dca:	f8 94       	cli
     dcc:	de bf       	out	0x3e, r29	; 62
     dce:	0f be       	out	0x3f, r0	; 63
     dd0:	cd bf       	out	0x3d, r28	; 61
     dd2:	9e 01       	movw	r18, r28
     dd4:	2f 5b       	subi	r18, 0xBF	; 191
     dd6:	3f 4f       	sbci	r19, 0xFF	; 255
     dd8:	f9 01       	movw	r30, r18
     dda:	91 83       	std	Z+1, r25	; 0x01
     ddc:	80 83       	st	Z, r24
     dde:	ce 01       	movw	r24, r28
     de0:	8d 5b       	subi	r24, 0xBD	; 189
     de2:	9f 4f       	sbci	r25, 0xFF	; 255
     de4:	fc 01       	movw	r30, r24
     de6:	71 83       	std	Z+1, r23	; 0x01
     de8:	60 83       	st	Z, r22
     dea:	ce 01       	movw	r24, r28
     dec:	8b 5b       	subi	r24, 0xBB	; 187
     dee:	9f 4f       	sbci	r25, 0xFF	; 255
     df0:	fc 01       	movw	r30, r24
     df2:	51 83       	std	Z+1, r21	; 0x01
     df4:	40 83       	st	Z, r20
     df6:	ce 01       	movw	r24, r28
     df8:	8b 5b       	subi	r24, 0xBB	; 187
     dfa:	9f 4f       	sbci	r25, 0xFF	; 255
     dfc:	fc 01       	movw	r30, r24
     dfe:	80 81       	ld	r24, Z
     e00:	91 81       	ldd	r25, Z+1	; 0x01
     e02:	89 2b       	or	r24, r25
     e04:	09 f4       	brne	.+2      	; 0xe08 <_ZL19FilamentCapture_cmdiPcS_+0x50>
     e06:	5a c0       	rjmp	.+180    	; 0xebc <_ZL19FilamentCapture_cmdiPcS_+0x104>
     e08:	1a 82       	std	Y+2, r1	; 0x02
     e0a:	19 82       	std	Y+1, r1	; 0x01
     e0c:	89 81       	ldd	r24, Y+1	; 0x01
     e0e:	9a 81       	ldd	r25, Y+2	; 0x02
     e10:	9e 01       	movw	r18, r28
     e12:	2b 5b       	subi	r18, 0xBB	; 187
     e14:	3f 4f       	sbci	r19, 0xFF	; 255
     e16:	f9 01       	movw	r30, r18
     e18:	20 81       	ld	r18, Z
     e1a:	31 81       	ldd	r19, Z+1	; 0x01
     e1c:	82 0f       	add	r24, r18
     e1e:	93 1f       	adc	r25, r19
     e20:	fc 01       	movw	r30, r24
     e22:	80 81       	ld	r24, Z
     e24:	88 23       	and	r24, r24
     e26:	29 f1       	breq	.+74     	; 0xe72 <_ZL19FilamentCapture_cmdiPcS_+0xba>
     e28:	89 81       	ldd	r24, Y+1	; 0x01
     e2a:	9a 81       	ldd	r25, Y+2	; 0x02
     e2c:	9e 01       	movw	r18, r28
     e2e:	2b 5b       	subi	r18, 0xBB	; 187
     e30:	3f 4f       	sbci	r19, 0xFF	; 255
     e32:	f9 01       	movw	r30, r18
     e34:	20 81       	ld	r18, Z
     e36:	31 81       	ldd	r19, Z+1	; 0x01
     e38:	82 0f       	add	r24, r18
     e3a:	93 1f       	adc	r25, r19
     e3c:	fc 01       	movw	r30, r24
     e3e:	80 81       	ld	r24, Z
     e40:	88 2f       	mov	r24, r24
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	c0 97       	sbiw	r24, 0x30	; 48
     e46:	0a 97       	sbiw	r24, 0x0a	; 10
     e48:	10 f0       	brcs	.+4      	; 0xe4e <_ZL19FilamentCapture_cmdiPcS_+0x96>
     e4a:	81 e0       	ldi	r24, 0x01	; 1
     e4c:	01 c0       	rjmp	.+2      	; 0xe50 <_ZL19FilamentCapture_cmdiPcS_+0x98>
     e4e:	80 e0       	ldi	r24, 0x00	; 0
     e50:	88 23       	and	r24, r24
     e52:	49 f0       	breq	.+18     	; 0xe66 <_ZL19FilamentCapture_cmdiPcS_+0xae>
     e54:	60 ea       	ldi	r22, 0xA0	; 160
     e56:	72 e0       	ldi	r23, 0x02	; 2
     e58:	8c e2       	ldi	r24, 0x2C	; 44
     e5a:	94 e0       	ldi	r25, 0x04	; 4
     e5c:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     e60:	80 e0       	ldi	r24, 0x00	; 0
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	4f c0       	rjmp	.+158    	; 0xf04 <_ZL19FilamentCapture_cmdiPcS_+0x14c>
     e66:	89 81       	ldd	r24, Y+1	; 0x01
     e68:	9a 81       	ldd	r25, Y+2	; 0x02
     e6a:	01 96       	adiw	r24, 0x01	; 1
     e6c:	9a 83       	std	Y+2, r25	; 0x02
     e6e:	89 83       	std	Y+1, r24	; 0x01
     e70:	cd cf       	rjmp	.-102    	; 0xe0c <_ZL19FilamentCapture_cmdiPcS_+0x54>
     e72:	ce 01       	movw	r24, r28
     e74:	8b 5b       	subi	r24, 0xBB	; 187
     e76:	9f 4f       	sbci	r25, 0xFF	; 255
     e78:	fc 01       	movw	r30, r24
     e7a:	80 81       	ld	r24, Z
     e7c:	91 81       	ldd	r25, Z+1	; 0x01
     e7e:	4a e0       	ldi	r20, 0x0A	; 10
     e80:	50 e0       	ldi	r21, 0x00	; 0
     e82:	60 e0       	ldi	r22, 0x00	; 0
     e84:	70 e0       	ldi	r23, 0x00	; 0
     e86:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <strtol>
     e8a:	dc 01       	movw	r26, r24
     e8c:	cb 01       	movw	r24, r22
     e8e:	9c 83       	std	Y+4, r25	; 0x04
     e90:	8b 83       	std	Y+3, r24	; 0x03
     e92:	21 e0       	ldi	r18, 0x01	; 1
     e94:	8b 81       	ldd	r24, Y+3	; 0x03
     e96:	9c 81       	ldd	r25, Y+4	; 0x04
     e98:	01 97       	sbiw	r24, 0x01	; 1
     e9a:	09 f0       	breq	.+2      	; 0xe9e <_ZL19FilamentCapture_cmdiPcS_+0xe6>
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	20 93 22 04 	sts	0x0422, r18	; 0x800422 <FILAMENT_CAPTURE>
     ea2:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <FILAMENT_CAPTURE>
     ea6:	88 23       	and	r24, r24
     ea8:	69 f1       	breq	.+90     	; 0xf04 <_ZL19FilamentCapture_cmdiPcS_+0x14c>
     eaa:	10 92 23 04 	sts	0x0423, r1	; 0x800423 <SPOOL_TICKS>
     eae:	10 92 24 04 	sts	0x0424, r1	; 0x800424 <SPOOL_TICKS+0x1>
     eb2:	10 92 25 04 	sts	0x0425, r1	; 0x800425 <SPOOL_TICKS+0x2>
     eb6:	10 92 26 04 	sts	0x0426, r1	; 0x800426 <SPOOL_TICKS+0x3>
     eba:	24 c0       	rjmp	.+72     	; 0xf04 <_ZL19FilamentCapture_cmdiPcS_+0x14c>
     ebc:	2c e3       	ldi	r18, 0x3C	; 60
     ebe:	ce 01       	movw	r24, r28
     ec0:	05 96       	adiw	r24, 0x05	; 5
     ec2:	fc 01       	movw	r30, r24
     ec4:	32 2f       	mov	r19, r18
     ec6:	11 92       	st	Z+, r1
     ec8:	3a 95       	dec	r19
     eca:	e9 f7       	brne	.-6      	; 0xec6 <_ZL19FilamentCapture_cmdiPcS_+0x10e>
     ecc:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <FILAMENT_CAPTURE>
     ed0:	88 2f       	mov	r24, r24
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	a0 e0       	ldi	r26, 0x00	; 0
     ed6:	b0 e0       	ldi	r27, 0x00	; 0
     ed8:	9e 01       	movw	r18, r28
     eda:	2d 5b       	subi	r18, 0xBD	; 189
     edc:	3f 4f       	sbci	r19, 0xFF	; 255
     ede:	f9 01       	movw	r30, r18
     ee0:	40 81       	ld	r20, Z
     ee2:	51 81       	ldd	r21, Z+1	; 0x01
     ee4:	fe 01       	movw	r30, r28
     ee6:	35 96       	adiw	r30, 0x05	; 5
     ee8:	8c 01       	movw	r16, r24
     eea:	9d 01       	movw	r18, r26
     eec:	63 e0       	ldi	r22, 0x03	; 3
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	cf 01       	movw	r24, r30
     ef2:	0e 94 04 08 	call	0x1008	; 0x1008 <_Z17BuildSerialOutputPciS_m>
     ef6:	ce 01       	movw	r24, r28
     ef8:	05 96       	adiw	r24, 0x05	; 5
     efa:	bc 01       	movw	r22, r24
     efc:	8c e2       	ldi	r24, 0x2C	; 44
     efe:	94 e0       	ldi	r25, 0x04	; 4
     f00:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     f04:	ca 5b       	subi	r28, 0xBA	; 186
     f06:	df 4f       	sbci	r29, 0xFF	; 255
     f08:	0f b6       	in	r0, 0x3f	; 63
     f0a:	f8 94       	cli
     f0c:	de bf       	out	0x3e, r29	; 62
     f0e:	0f be       	out	0x3f, r0	; 63
     f10:	cd bf       	out	0x3d, r28	; 61
     f12:	df 91       	pop	r29
     f14:	cf 91       	pop	r28
     f16:	1f 91       	pop	r17
     f18:	0f 91       	pop	r16
     f1a:	08 95       	ret

00000f1c <_ZL14SpoolTicks_cmdiPcS_>:
     f1c:	0f 93       	push	r16
     f1e:	1f 93       	push	r17
     f20:	cf 93       	push	r28
     f22:	df 93       	push	r29
     f24:	cd b7       	in	r28, 0x3d	; 61
     f26:	de b7       	in	r29, 0x3e	; 62
     f28:	c2 54       	subi	r28, 0x42	; 66
     f2a:	d1 09       	sbc	r29, r1
     f2c:	0f b6       	in	r0, 0x3f	; 63
     f2e:	f8 94       	cli
     f30:	de bf       	out	0x3e, r29	; 62
     f32:	0f be       	out	0x3f, r0	; 63
     f34:	cd bf       	out	0x3d, r28	; 61
     f36:	9e af       	std	Y+62, r25	; 0x3e
     f38:	8d af       	std	Y+61, r24	; 0x3d
     f3a:	ce 01       	movw	r24, r28
     f3c:	cf 96       	adiw	r24, 0x3f	; 63
     f3e:	fc 01       	movw	r30, r24
     f40:	71 83       	std	Z+1, r23	; 0x01
     f42:	60 83       	st	Z, r22
     f44:	ce 01       	movw	r24, r28
     f46:	8f 5b       	subi	r24, 0xBF	; 191
     f48:	9f 4f       	sbci	r25, 0xFF	; 255
     f4a:	fc 01       	movw	r30, r24
     f4c:	51 83       	std	Z+1, r21	; 0x01
     f4e:	40 83       	st	Z, r20
     f50:	2c e3       	ldi	r18, 0x3C	; 60
     f52:	ce 01       	movw	r24, r28
     f54:	01 96       	adiw	r24, 0x01	; 1
     f56:	fc 01       	movw	r30, r24
     f58:	32 2f       	mov	r19, r18
     f5a:	11 92       	st	Z+, r1
     f5c:	3a 95       	dec	r19
     f5e:	e9 f7       	brne	.-6      	; 0xf5a <_ZL14SpoolTicks_cmdiPcS_+0x3e>
     f60:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <SPOOL_TICKS>
     f64:	90 91 24 04 	lds	r25, 0x0424	; 0x800424 <SPOOL_TICKS+0x1>
     f68:	a0 91 25 04 	lds	r26, 0x0425	; 0x800425 <SPOOL_TICKS+0x2>
     f6c:	b0 91 26 04 	lds	r27, 0x0426	; 0x800426 <SPOOL_TICKS+0x3>
     f70:	9e 01       	movw	r18, r28
     f72:	21 5c       	subi	r18, 0xC1	; 193
     f74:	3f 4f       	sbci	r19, 0xFF	; 255
     f76:	f9 01       	movw	r30, r18
     f78:	40 81       	ld	r20, Z
     f7a:	51 81       	ldd	r21, Z+1	; 0x01
     f7c:	8c 01       	movw	r16, r24
     f7e:	9d 01       	movw	r18, r26
     f80:	63 e0       	ldi	r22, 0x03	; 3
     f82:	70 e0       	ldi	r23, 0x00	; 0
     f84:	ce 01       	movw	r24, r28
     f86:	01 96       	adiw	r24, 0x01	; 1
     f88:	0e 94 04 08 	call	0x1008	; 0x1008 <_Z17BuildSerialOutputPciS_m>
     f8c:	ce 01       	movw	r24, r28
     f8e:	01 96       	adiw	r24, 0x01	; 1
     f90:	bc 01       	movw	r22, r24
     f92:	8c e2       	ldi	r24, 0x2C	; 44
     f94:	94 e0       	ldi	r25, 0x04	; 4
     f96:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
     f9a:	00 00       	nop
     f9c:	ce 5b       	subi	r28, 0xBE	; 190
     f9e:	df 4f       	sbci	r29, 0xFF	; 255
     fa0:	0f b6       	in	r0, 0x3f	; 63
     fa2:	f8 94       	cli
     fa4:	de bf       	out	0x3e, r29	; 62
     fa6:	0f be       	out	0x3f, r0	; 63
     fa8:	cd bf       	out	0x3d, r28	; 61
     faa:	df 91       	pop	r29
     fac:	cf 91       	pop	r28
     fae:	1f 91       	pop	r17
     fb0:	0f 91       	pop	r16
     fb2:	08 95       	ret

00000fb4 <_ZN15Serial_Commands15commandsProcessEv>:
     fb4:	cf 93       	push	r28
     fb6:	df 93       	push	r29
     fb8:	cd b7       	in	r28, 0x3d	; 61
     fba:	de b7       	in	r29, 0x3e	; 62
     fbc:	c2 58       	subi	r28, 0x82	; 130
     fbe:	d1 09       	sbc	r29, r1
     fc0:	0f b6       	in	r0, 0x3f	; 63
     fc2:	f8 94       	cli
     fc4:	de bf       	out	0x3e, r29	; 62
     fc6:	0f be       	out	0x3f, r0	; 63
     fc8:	cd bf       	out	0x3d, r28	; 61
     fca:	9e 01       	movw	r18, r28
     fcc:	2f 57       	subi	r18, 0x7F	; 127
     fce:	3f 4f       	sbci	r19, 0xFF	; 255
     fd0:	f9 01       	movw	r30, r18
     fd2:	91 83       	std	Z+1, r25	; 0x01
     fd4:	80 83       	st	Z, r24
     fd6:	ce 01       	movw	r24, r28
     fd8:	01 96       	adiw	r24, 0x01	; 1
     fda:	0e 94 65 08 	call	0x10ca	; 0x10ca <_ZN17Serial_ProcessingC1Ev>
     fde:	6f e9       	ldi	r22, 0x9F	; 159
     fe0:	71 e0       	ldi	r23, 0x01	; 1
     fe2:	ce 01       	movw	r24, r28
     fe4:	01 96       	adiw	r24, 0x01	; 1
     fe6:	0e 94 8c 08 	call	0x1118	; 0x1118 <_ZN17Serial_Processing15CommandsProcessEP8sCommand>
     fea:	ce 01       	movw	r24, r28
     fec:	01 96       	adiw	r24, 0x01	; 1
     fee:	0e 94 26 0a 	call	0x144c	; 0x144c <_ZN17Serial_ProcessingD1Ev>
     ff2:	00 00       	nop
     ff4:	ce 57       	subi	r28, 0x7E	; 126
     ff6:	df 4f       	sbci	r29, 0xFF	; 255
     ff8:	0f b6       	in	r0, 0x3f	; 63
     ffa:	f8 94       	cli
     ffc:	de bf       	out	0x3e, r29	; 62
     ffe:	0f be       	out	0x3f, r0	; 63
    1000:	cd bf       	out	0x3d, r28	; 61
    1002:	df 91       	pop	r29
    1004:	cf 91       	pop	r28
    1006:	08 95       	ret

00001008 <_Z17BuildSerialOutputPciS_m>:
    1008:	0f 93       	push	r16
    100a:	1f 93       	push	r17
    100c:	cf 93       	push	r28
    100e:	df 93       	push	r29
    1010:	cd b7       	in	r28, 0x3d	; 61
    1012:	de b7       	in	r29, 0x3e	; 62
    1014:	2a 97       	sbiw	r28, 0x0a	; 10
    1016:	0f b6       	in	r0, 0x3f	; 63
    1018:	f8 94       	cli
    101a:	de bf       	out	0x3e, r29	; 62
    101c:	0f be       	out	0x3f, r0	; 63
    101e:	cd bf       	out	0x3d, r28	; 61
    1020:	9a 83       	std	Y+2, r25	; 0x02
    1022:	89 83       	std	Y+1, r24	; 0x01
    1024:	7c 83       	std	Y+4, r23	; 0x04
    1026:	6b 83       	std	Y+3, r22	; 0x03
    1028:	5e 83       	std	Y+6, r21	; 0x06
    102a:	4d 83       	std	Y+5, r20	; 0x05
    102c:	0f 83       	std	Y+7, r16	; 0x07
    102e:	18 87       	std	Y+8, r17	; 0x08
    1030:	29 87       	std	Y+9, r18	; 0x09
    1032:	3a 87       	std	Y+10, r19	; 0x0a
    1034:	8a 85       	ldd	r24, Y+10	; 0x0a
    1036:	8f 93       	push	r24
    1038:	89 85       	ldd	r24, Y+9	; 0x09
    103a:	8f 93       	push	r24
    103c:	88 85       	ldd	r24, Y+8	; 0x08
    103e:	8f 93       	push	r24
    1040:	8f 81       	ldd	r24, Y+7	; 0x07
    1042:	8f 93       	push	r24
    1044:	8e 81       	ldd	r24, Y+6	; 0x06
    1046:	8f 93       	push	r24
    1048:	8d 81       	ldd	r24, Y+5	; 0x05
    104a:	8f 93       	push	r24
    104c:	8c 81       	ldd	r24, Y+4	; 0x04
    104e:	8f 93       	push	r24
    1050:	8b 81       	ldd	r24, Y+3	; 0x03
    1052:	8f 93       	push	r24
    1054:	87 e4       	ldi	r24, 0x47	; 71
    1056:	93 e0       	ldi	r25, 0x03	; 3
    1058:	89 2f       	mov	r24, r25
    105a:	8f 93       	push	r24
    105c:	87 e4       	ldi	r24, 0x47	; 71
    105e:	93 e0       	ldi	r25, 0x03	; 3
    1060:	8f 93       	push	r24
    1062:	8a 81       	ldd	r24, Y+2	; 0x02
    1064:	8f 93       	push	r24
    1066:	89 81       	ldd	r24, Y+1	; 0x01
    1068:	8f 93       	push	r24
    106a:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <sprintf>
    106e:	8d b7       	in	r24, 0x3d	; 61
    1070:	9e b7       	in	r25, 0x3e	; 62
    1072:	0c 96       	adiw	r24, 0x0c	; 12
    1074:	0f b6       	in	r0, 0x3f	; 63
    1076:	f8 94       	cli
    1078:	de bf       	out	0x3e, r29	; 62
    107a:	0f be       	out	0x3f, r0	; 63
    107c:	cd bf       	out	0x3d, r28	; 61
    107e:	00 00       	nop
    1080:	2a 96       	adiw	r28, 0x0a	; 10
    1082:	0f b6       	in	r0, 0x3f	; 63
    1084:	f8 94       	cli
    1086:	de bf       	out	0x3e, r29	; 62
    1088:	0f be       	out	0x3f, r0	; 63
    108a:	cd bf       	out	0x3d, r28	; 61
    108c:	df 91       	pop	r29
    108e:	cf 91       	pop	r28
    1090:	1f 91       	pop	r17
    1092:	0f 91       	pop	r16
    1094:	08 95       	ret

00001096 <_ZN15Serial_CommandsC1Ev>:



// default constructor
Serial_Commands::Serial_Commands()
    1096:	cf 93       	push	r28
    1098:	df 93       	push	r29
    109a:	00 d0       	rcall	.+0      	; 0x109c <_ZN15Serial_CommandsC1Ev+0x6>
    109c:	cd b7       	in	r28, 0x3d	; 61
    109e:	de b7       	in	r29, 0x3e	; 62
    10a0:	9a 83       	std	Y+2, r25	; 0x02
    10a2:	89 83       	std	Y+1, r24	; 0x01
{
} //Serial_Commands
    10a4:	00 00       	nop
    10a6:	0f 90       	pop	r0
    10a8:	0f 90       	pop	r0
    10aa:	df 91       	pop	r29
    10ac:	cf 91       	pop	r28
    10ae:	08 95       	ret

000010b0 <_ZN15Serial_CommandsD1Ev>:

// default destructor
Serial_Commands::~Serial_Commands()
    10b0:	cf 93       	push	r28
    10b2:	df 93       	push	r29
    10b4:	00 d0       	rcall	.+0      	; 0x10b6 <_ZN15Serial_CommandsD1Ev+0x6>
    10b6:	cd b7       	in	r28, 0x3d	; 61
    10b8:	de b7       	in	r29, 0x3e	; 62
    10ba:	9a 83       	std	Y+2, r25	; 0x02
    10bc:	89 83       	std	Y+1, r24	; 0x01
{
} //~Serial_Commands
    10be:	00 00       	nop
    10c0:	0f 90       	pop	r0
    10c2:	0f 90       	pop	r0
    10c4:	df 91       	pop	r29
    10c6:	cf 91       	pop	r28
    10c8:	08 95       	ret

000010ca <_ZN17Serial_ProcessingC1Ev>:

void Serial_Processing::Setup(void)
{
  //Serial.begin(SERIAL_BAUD);               //Set the hardware serial port speed
  //Serial.setTimeout(50);
}
    10ca:	cf 93       	push	r28
    10cc:	df 93       	push	r29
    10ce:	00 d0       	rcall	.+0      	; 0x10d0 <_ZN17Serial_ProcessingC1Ev+0x6>
    10d0:	cd b7       	in	r28, 0x3d	; 61
    10d2:	de b7       	in	r29, 0x3e	; 62
    10d4:	9a 83       	std	Y+2, r25	; 0x02
    10d6:	89 83       	std	Y+1, r24	; 0x01
    10d8:	89 81       	ldd	r24, Y+1	; 0x01
    10da:	9a 81       	ldd	r25, Y+2	; 0x02
    10dc:	fc 01       	movw	r30, r24
    10de:	10 82       	st	Z, r1
    10e0:	89 81       	ldd	r24, Y+1	; 0x01
    10e2:	9a 81       	ldd	r25, Y+2	; 0x02
    10e4:	fc 01       	movw	r30, r24
    10e6:	11 82       	std	Z+1, r1	; 0x01
    10e8:	89 81       	ldd	r24, Y+1	; 0x01
    10ea:	9a 81       	ldd	r25, Y+2	; 0x02
    10ec:	2c e3       	ldi	r18, 0x3C	; 60
    10ee:	02 96       	adiw	r24, 0x02	; 2
    10f0:	fc 01       	movw	r30, r24
    10f2:	32 2f       	mov	r19, r18
    10f4:	11 92       	st	Z+, r1
    10f6:	3a 95       	dec	r19
    10f8:	e9 f7       	brne	.-6      	; 0x10f4 <_ZN17Serial_ProcessingC1Ev+0x2a>
    10fa:	89 81       	ldd	r24, Y+1	; 0x01
    10fc:	9a 81       	ldd	r25, Y+2	; 0x02
    10fe:	2c e3       	ldi	r18, 0x3C	; 60
    1100:	ce 96       	adiw	r24, 0x3e	; 62
    1102:	fc 01       	movw	r30, r24
    1104:	32 2f       	mov	r19, r18
    1106:	11 92       	st	Z+, r1
    1108:	3a 95       	dec	r19
    110a:	e9 f7       	brne	.-6      	; 0x1106 <_ZN17Serial_ProcessingC1Ev+0x3c>
    110c:	00 00       	nop
    110e:	0f 90       	pop	r0
    1110:	0f 90       	pop	r0
    1112:	df 91       	pop	r29
    1114:	cf 91       	pop	r28
    1116:	08 95       	ret

00001118 <_ZN17Serial_Processing15CommandsProcessEP8sCommand>:


int Serial_Processing::CommandsProcess(sCommand *ptrCmds)
{
    1118:	cf 93       	push	r28
    111a:	df 93       	push	r29
    111c:	00 d0       	rcall	.+0      	; 0x111e <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x6>
    111e:	00 d0       	rcall	.+0      	; 0x1120 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x8>
    1120:	cd b7       	in	r28, 0x3d	; 61
    1122:	de b7       	in	r29, 0x3e	; 62
    1124:	9a 83       	std	Y+2, r25	; 0x02
    1126:	89 83       	std	Y+1, r24	; 0x01
    1128:	7c 83       	std	Y+4, r23	; 0x04
    112a:	6b 83       	std	Y+3, r22	; 0x03


  if (Serial.available() > 0)
    112c:	8c e2       	ldi	r24, 0x2C	; 44
    112e:	94 e0       	ldi	r25, 0x04	; 4
    1130:	0e 94 7f 19 	call	0x32fe	; 0x32fe <_ZN14HardwareSerial9availableEv>
    1134:	21 e0       	ldi	r18, 0x01	; 1
    1136:	18 16       	cp	r1, r24
    1138:	19 06       	cpc	r1, r25
    113a:	0c f0       	brlt	.+2      	; 0x113e <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x26>
    113c:	20 e0       	ldi	r18, 0x00	; 0
    113e:	22 23       	and	r18, r18
    1140:	19 f1       	breq	.+70     	; 0x1188 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x70>
  {
    computer_bytes_received = Serial.readBytesUntil(10, computerdata, MAX_CMD_LENGTH); //We read the data sent from the serial monitor(pc/mac/other) until we see a <CR>. We also count how many characters have been received
    1142:	89 81       	ldd	r24, Y+1	; 0x01
    1144:	9a 81       	ldd	r25, Y+2	; 0x02
    1146:	02 96       	adiw	r24, 0x02	; 2
    1148:	2c e3       	ldi	r18, 0x3C	; 60
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	ac 01       	movw	r20, r24
    114e:	6a e0       	ldi	r22, 0x0A	; 10
    1150:	8c e2       	ldi	r24, 0x2C	; 44
    1152:	94 e0       	ldi	r25, 0x04	; 4
    1154:	0e 94 96 1c 	call	0x392c	; 0x392c <_ZN6Stream14readBytesUntilEcPcj>
    1158:	28 2f       	mov	r18, r24
    115a:	89 81       	ldd	r24, Y+1	; 0x01
    115c:	9a 81       	ldd	r25, Y+2	; 0x02
    115e:	fc 01       	movw	r30, r24
    1160:	20 83       	st	Z, r18
    computerdata[computer_bytes_received] = 0; //We add a 0 to the spot in the array just after the last character we received.. This will stop us from transmitting incorrect data that may have been left in the buffer
    1162:	89 81       	ldd	r24, Y+1	; 0x01
    1164:	9a 81       	ldd	r25, Y+2	; 0x02
    1166:	fc 01       	movw	r30, r24
    1168:	80 81       	ld	r24, Z
    116a:	88 2f       	mov	r24, r24
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	29 81       	ldd	r18, Y+1	; 0x01
    1170:	3a 81       	ldd	r19, Y+2	; 0x02
    1172:	82 0f       	add	r24, r18
    1174:	93 1f       	adc	r25, r19
    1176:	02 96       	adiw	r24, 0x02	; 2
    1178:	fc 01       	movw	r30, r24
    117a:	10 82       	st	Z, r1
  else
  {
	  return 0;
  }

  if (computerdata != 0) {             //If computer_bytes_received does not equal zero
    117c:	89 81       	ldd	r24, Y+1	; 0x01
    117e:	9a 81       	ldd	r25, Y+2	; 0x02
    1180:	02 96       	adiw	r24, 0x02	; 2
    1182:	89 2b       	or	r24, r25
    1184:	09 f1       	breq	.+66     	; 0x11c8 <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0xb0>
    1186:	03 c0       	rjmp	.+6      	; 0x118e <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0x76>
    computerdata[computer_bytes_received] = 0; //We add a 0 to the spot in the array just after the last character we received.. This will stop us from transmitting incorrect data that may have been left in the buffer
	
  }
  else
  {
	  return 0;
    1188:	80 e0       	ldi	r24, 0x00	; 0
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	1f c0       	rjmp	.+62     	; 0x11cc <_ZN17Serial_Processing15CommandsProcessEP8sCommand+0xb4>
  }

  if (computerdata != 0) {             //If computer_bytes_received does not equal zero
    
    CommandParse(ptrCmds, computerdata);
    118e:	89 81       	ldd	r24, Y+1	; 0x01
    1190:	9a 81       	ldd	r25, Y+2	; 0x02
    1192:	ac 01       	movw	r20, r24
    1194:	4e 5f       	subi	r20, 0xFE	; 254
    1196:	5f 4f       	sbci	r21, 0xFF	; 255
    1198:	2b 81       	ldd	r18, Y+3	; 0x03
    119a:	3c 81       	ldd	r19, Y+4	; 0x04
    119c:	89 81       	ldd	r24, Y+1	; 0x01
    119e:	9a 81       	ldd	r25, Y+2	; 0x02
    11a0:	b9 01       	movw	r22, r18
    11a2:	0e 94 ed 08 	call	0x11da	; 0x11da <_ZN17Serial_Processing12CommandParseEP8sCommandPc>
    
    computer_bytes_received = 0;                  //Reset the var computer_bytes_received to equal 0
    11a6:	89 81       	ldd	r24, Y+1	; 0x01
    11a8:	9a 81       	ldd	r25, Y+2	; 0x02
    11aa:	fc 01       	movw	r30, r24
    11ac:	10 82       	st	Z, r1
	computerdata[computer_bytes_received] = {0};
    11ae:	89 81       	ldd	r24, Y+1	; 0x01
    11b0:	9a 81       	ldd	r25, Y+2	; 0x02
    11b2:	fc 01       	movw	r30, r24
    11b4:	80 81       	ld	r24, Z
    11b6:	88 2f       	mov	r24, r24
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	29 81       	ldd	r18, Y+1	; 0x01
    11bc:	3a 81       	ldd	r19, Y+2	; 0x02
    11be:	82 0f       	add	r24, r18
    11c0:	93 1f       	adc	r25, r19
    11c2:	02 96       	adiw	r24, 0x02	; 2
    11c4:	fc 01       	movw	r30, r24
    11c6:	10 82       	st	Z, r1
  }

  return 0;
    11c8:	80 e0       	ldi	r24, 0x00	; 0
    11ca:	90 e0       	ldi	r25, 0x00	; 0
}
    11cc:	0f 90       	pop	r0
    11ce:	0f 90       	pop	r0
    11d0:	0f 90       	pop	r0
    11d2:	0f 90       	pop	r0
    11d4:	df 91       	pop	r29
    11d6:	cf 91       	pop	r28
    11d8:	08 95       	ret

000011da <_ZN17Serial_Processing12CommandParseEP8sCommandPc>:


unsigned int Serial_Processing::CommandParse(sCommand *ptrCmds, char str[MAX_CMD_LENGTH])
{
    11da:	cf 93       	push	r28
    11dc:	df 93       	push	r29
    11de:	cd b7       	in	r28, 0x3d	; 61
    11e0:	de b7       	in	r29, 0x3e	; 62
    11e2:	2e 97       	sbiw	r28, 0x0e	; 14
    11e4:	0f b6       	in	r0, 0x3f	; 63
    11e6:	f8 94       	cli
    11e8:	de bf       	out	0x3e, r29	; 62
    11ea:	0f be       	out	0x3f, r0	; 63
    11ec:	cd bf       	out	0x3d, r28	; 61
    11ee:	9a 87       	std	Y+10, r25	; 0x0a
    11f0:	89 87       	std	Y+9, r24	; 0x09
    11f2:	7c 87       	std	Y+12, r23	; 0x0c
    11f4:	6b 87       	std	Y+11, r22	; 0x0b
    11f6:	5e 87       	std	Y+14, r21	; 0x0e
    11f8:	4d 87       	std	Y+13, r20	; 0x0d
  hardwareType = strtok(str, DELIMITER); //hardware ID
    11fa:	8d 85       	ldd	r24, Y+13	; 0x0d
    11fc:	9e 85       	ldd	r25, Y+14	; 0x0e
    11fe:	61 e5       	ldi	r22, 0x51	; 81
    1200:	73 e0       	ldi	r23, 0x03	; 3
    1202:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <strtok>
    1206:	9c 01       	movw	r18, r24
    1208:	89 85       	ldd	r24, Y+9	; 0x09
    120a:	9a 85       	ldd	r25, Y+10	; 0x0a
    120c:	86 58       	subi	r24, 0x86	; 134
    120e:	9f 4f       	sbci	r25, 0xFF	; 255
    1210:	fc 01       	movw	r30, r24
    1212:	31 83       	std	Z+1, r19	; 0x01
    1214:	20 83       	st	Z, r18
  cmd = strtok(NULL, DELIMITER);
    1216:	61 e5       	ldi	r22, 0x51	; 81
    1218:	73 e0       	ldi	r23, 0x03	; 3
    121a:	80 e0       	ldi	r24, 0x00	; 0
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <strtok>
    1222:	9c 01       	movw	r18, r24
    1224:	89 85       	ldd	r24, Y+9	; 0x09
    1226:	9a 85       	ldd	r25, Y+10	; 0x0a
    1228:	84 58       	subi	r24, 0x84	; 132
    122a:	9f 4f       	sbci	r25, 0xFF	; 255
    122c:	fc 01       	movw	r30, r24
    122e:	31 83       	std	Z+1, r19	; 0x01
    1230:	20 83       	st	Z, r18
  arguments = strtok(NULL, DELIMITER);
    1232:	61 e5       	ldi	r22, 0x51	; 81
    1234:	73 e0       	ldi	r23, 0x03	; 3
    1236:	80 e0       	ldi	r24, 0x00	; 0
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <strtok>
    123e:	9c 01       	movw	r18, r24
    1240:	89 85       	ldd	r24, Y+9	; 0x09
    1242:	9a 85       	ldd	r25, Y+10	; 0x0a
    1244:	82 58       	subi	r24, 0x82	; 130
    1246:	9f 4f       	sbci	r25, 0xFF	; 255
    1248:	fc 01       	movw	r30, r24
    124a:	31 83       	std	Z+1, r19	; 0x01
    124c:	20 83       	st	Z, r18

  for (int i=0; hardwareType[i]!= '\0'; i++)
    124e:	1a 82       	std	Y+2, r1	; 0x02
    1250:	19 82       	std	Y+1, r1	; 0x01
    1252:	89 85       	ldd	r24, Y+9	; 0x09
    1254:	9a 85       	ldd	r25, Y+10	; 0x0a
    1256:	86 58       	subi	r24, 0x86	; 134
    1258:	9f 4f       	sbci	r25, 0xFF	; 255
    125a:	fc 01       	movw	r30, r24
    125c:	20 81       	ld	r18, Z
    125e:	31 81       	ldd	r19, Z+1	; 0x01
    1260:	89 81       	ldd	r24, Y+1	; 0x01
    1262:	9a 81       	ldd	r25, Y+2	; 0x02
    1264:	82 0f       	add	r24, r18
    1266:	93 1f       	adc	r25, r19
    1268:	fc 01       	movw	r30, r24
    126a:	80 81       	ld	r24, Z
    126c:	88 23       	and	r24, r24
    126e:	31 f1       	breq	.+76     	; 0x12bc <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xe2>
  {
    //Serial.println(hardwareType[i]);
    if (!isdigit(hardwareType[i]) != 0)
    1270:	89 85       	ldd	r24, Y+9	; 0x09
    1272:	9a 85       	ldd	r25, Y+10	; 0x0a
    1274:	86 58       	subi	r24, 0x86	; 134
    1276:	9f 4f       	sbci	r25, 0xFF	; 255
    1278:	fc 01       	movw	r30, r24
    127a:	20 81       	ld	r18, Z
    127c:	31 81       	ldd	r19, Z+1	; 0x01
    127e:	89 81       	ldd	r24, Y+1	; 0x01
    1280:	9a 81       	ldd	r25, Y+2	; 0x02
    1282:	82 0f       	add	r24, r18
    1284:	93 1f       	adc	r25, r19
    1286:	fc 01       	movw	r30, r24
    1288:	80 81       	ld	r24, Z
    128a:	88 2f       	mov	r24, r24
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	c0 97       	sbiw	r24, 0x30	; 48
    1290:	0a 97       	sbiw	r24, 0x0a	; 10
    1292:	10 f0       	brcs	.+4      	; 0x1298 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xbe>
    1294:	81 e0       	ldi	r24, 0x01	; 1
    1296:	01 c0       	rjmp	.+2      	; 0x129a <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xc0>
    1298:	80 e0       	ldi	r24, 0x00	; 0
    129a:	88 23       	and	r24, r24
    129c:	49 f0       	breq	.+18     	; 0x12b0 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0xd6>
    {
      Serial.println("Invalid Hardware ID, number is not a digit");
    129e:	63 e5       	ldi	r22, 0x53	; 83
    12a0:	73 e0       	ldi	r23, 0x03	; 3
    12a2:	8c e2       	ldi	r24, 0x2C	; 44
    12a4:	94 e0       	ldi	r25, 0x04	; 4
    12a6:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
      return 0;
    12aa:	80 e0       	ldi	r24, 0x00	; 0
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	79 c0       	rjmp	.+242    	; 0x13a2 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c8>
{
  hardwareType = strtok(str, DELIMITER); //hardware ID
  cmd = strtok(NULL, DELIMITER);
  arguments = strtok(NULL, DELIMITER);

  for (int i=0; hardwareType[i]!= '\0'; i++)
    12b0:	89 81       	ldd	r24, Y+1	; 0x01
    12b2:	9a 81       	ldd	r25, Y+2	; 0x02
    12b4:	01 96       	adiw	r24, 0x01	; 1
    12b6:	9a 83       	std	Y+2, r25	; 0x02
    12b8:	89 83       	std	Y+1, r24	; 0x01
    12ba:	cb cf       	rjmp	.-106    	; 0x1252 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x78>
      Serial.println("Invalid Hardware ID, number is not a digit");
      return 0;
    }
  }

  if (MYHARDWARETYPE != atoi(hardwareType))
    12bc:	89 85       	ldd	r24, Y+9	; 0x09
    12be:	9a 85       	ldd	r25, Y+10	; 0x0a
    12c0:	86 58       	subi	r24, 0x86	; 134
    12c2:	9f 4f       	sbci	r25, 0xFF	; 255
    12c4:	fc 01       	movw	r30, r24
    12c6:	80 81       	ld	r24, Z
    12c8:	91 81       	ldd	r25, Z+1	; 0x01
    12ca:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <atoi>
    12ce:	03 97       	sbiw	r24, 0x03	; 3
    12d0:	49 f0       	breq	.+18     	; 0x12e4 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x10a>
  {
    Serial.println("Invalid Hardware ID");
    12d2:	6e e7       	ldi	r22, 0x7E	; 126
    12d4:	73 e0       	ldi	r23, 0x03	; 3
    12d6:	8c e2       	ldi	r24, 0x2C	; 44
    12d8:	94 e0       	ldi	r25, 0x04	; 4
    12da:	0e 94 ab 1b 	call	0x3756	; 0x3756 <_ZN5Print7printlnEPKc>
    return 0;
    12de:	80 e0       	ldi	r24, 0x00	; 0
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	5f c0       	rjmp	.+190    	; 0x13a2 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c8>
  }

  unsigned int i;
  sCommand cmd_list;
  i=0;
    12e4:	1c 82       	std	Y+4, r1	; 0x04
    12e6:	1b 82       	std	Y+3, r1	; 0x03

  memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
    12e8:	8b 81       	ldd	r24, Y+3	; 0x03
    12ea:	9c 81       	ldd	r25, Y+4	; 0x04
    12ec:	88 0f       	add	r24, r24
    12ee:	99 1f       	adc	r25, r25
    12f0:	88 0f       	add	r24, r24
    12f2:	99 1f       	adc	r25, r25
    12f4:	2b 85       	ldd	r18, Y+11	; 0x0b
    12f6:	3c 85       	ldd	r19, Y+12	; 0x0c
    12f8:	82 0f       	add	r24, r18
    12fa:	93 1f       	adc	r25, r19
    12fc:	fc 01       	movw	r30, r24
    12fe:	80 81       	ld	r24, Z
    1300:	91 81       	ldd	r25, Z+1	; 0x01
    1302:	a2 81       	ldd	r26, Z+2	; 0x02
    1304:	b3 81       	ldd	r27, Z+3	; 0x03
    1306:	8d 83       	std	Y+5, r24	; 0x05
    1308:	9e 83       	std	Y+6, r25	; 0x06
    130a:	af 83       	std	Y+7, r26	; 0x07
    130c:	b8 87       	std	Y+8, r27	; 0x08
  
  
  while(cmd_list.function!=0)
    130e:	8f 81       	ldd	r24, Y+7	; 0x07
    1310:	98 85       	ldd	r25, Y+8	; 0x08
    1312:	89 2b       	or	r24, r25
    1314:	09 f4       	brne	.+2      	; 0x1318 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x13e>
    1316:	43 c0       	rjmp	.+134    	; 0x139e <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c4>
  {
    if (strcicmp(cmd,cmd_list.name)==0){
    1318:	4d 81       	ldd	r20, Y+5	; 0x05
    131a:	5e 81       	ldd	r21, Y+6	; 0x06
    131c:	89 85       	ldd	r24, Y+9	; 0x09
    131e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1320:	84 58       	subi	r24, 0x84	; 132
    1322:	9f 4f       	sbci	r25, 0xFF	; 255
    1324:	fc 01       	movw	r30, r24
    1326:	20 81       	ld	r18, Z
    1328:	31 81       	ldd	r19, Z+1	; 0x01
    132a:	89 85       	ldd	r24, Y+9	; 0x09
    132c:	9a 85       	ldd	r25, Y+10	; 0x0a
    132e:	b9 01       	movw	r22, r18
    1330:	0e 94 da 09 	call	0x13b4	; 0x13b4 <_ZN17Serial_Processing8strcicmpEPKcS1_>
    1334:	21 e0       	ldi	r18, 0x01	; 1
    1336:	89 2b       	or	r24, r25
    1338:	09 f0       	breq	.+2      	; 0x133c <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x162>
    133a:	20 e0       	ldi	r18, 0x00	; 0
    133c:	22 23       	and	r18, r18
    133e:	b1 f0       	breq	.+44     	; 0x136c <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x192>
      return (*cmd_list.function)(0,cmd,arguments);
    1340:	2f 81       	ldd	r18, Y+7	; 0x07
    1342:	38 85       	ldd	r19, Y+8	; 0x08
    1344:	89 85       	ldd	r24, Y+9	; 0x09
    1346:	9a 85       	ldd	r25, Y+10	; 0x0a
    1348:	82 58       	subi	r24, 0x82	; 130
    134a:	9f 4f       	sbci	r25, 0xFF	; 255
    134c:	fc 01       	movw	r30, r24
    134e:	40 81       	ld	r20, Z
    1350:	51 81       	ldd	r21, Z+1	; 0x01
    1352:	89 85       	ldd	r24, Y+9	; 0x09
    1354:	9a 85       	ldd	r25, Y+10	; 0x0a
    1356:	84 58       	subi	r24, 0x84	; 132
    1358:	9f 4f       	sbci	r25, 0xFF	; 255
    135a:	fc 01       	movw	r30, r24
    135c:	80 81       	ld	r24, Z
    135e:	91 81       	ldd	r25, Z+1	; 0x01
    1360:	bc 01       	movw	r22, r24
    1362:	80 e0       	ldi	r24, 0x00	; 0
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	f9 01       	movw	r30, r18
    1368:	09 95       	icall
    136a:	1b c0       	rjmp	.+54     	; 0x13a2 <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x1c8>
    }

    i=i+1;
    136c:	8b 81       	ldd	r24, Y+3	; 0x03
    136e:	9c 81       	ldd	r25, Y+4	; 0x04
    1370:	01 96       	adiw	r24, 0x01	; 1
    1372:	9c 83       	std	Y+4, r25	; 0x04
    1374:	8b 83       	std	Y+3, r24	; 0x03
    memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
    1376:	8b 81       	ldd	r24, Y+3	; 0x03
    1378:	9c 81       	ldd	r25, Y+4	; 0x04
    137a:	88 0f       	add	r24, r24
    137c:	99 1f       	adc	r25, r25
    137e:	88 0f       	add	r24, r24
    1380:	99 1f       	adc	r25, r25
    1382:	2b 85       	ldd	r18, Y+11	; 0x0b
    1384:	3c 85       	ldd	r19, Y+12	; 0x0c
    1386:	82 0f       	add	r24, r18
    1388:	93 1f       	adc	r25, r19
    138a:	fc 01       	movw	r30, r24
    138c:	80 81       	ld	r24, Z
    138e:	91 81       	ldd	r25, Z+1	; 0x01
    1390:	a2 81       	ldd	r26, Z+2	; 0x02
    1392:	b3 81       	ldd	r27, Z+3	; 0x03
    1394:	8d 83       	std	Y+5, r24	; 0x05
    1396:	9e 83       	std	Y+6, r25	; 0x06
    1398:	af 83       	std	Y+7, r26	; 0x07
    139a:	b8 87       	std	Y+8, r27	; 0x08
  i=0;

  memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
  
  
  while(cmd_list.function!=0)
    139c:	b8 cf       	rjmp	.-144    	; 0x130e <_ZN17Serial_Processing12CommandParseEP8sCommandPc+0x134>
    i=i+1;
    memcpy(&cmd_list, &ptrCmds[i], sizeof(sCommand));
  }
  

  return 1;
    139e:	81 e0       	ldi	r24, 0x01	; 1
    13a0:	90 e0       	ldi	r25, 0x00	; 0
}
    13a2:	2e 96       	adiw	r28, 0x0e	; 14
    13a4:	0f b6       	in	r0, 0x3f	; 63
    13a6:	f8 94       	cli
    13a8:	de bf       	out	0x3e, r29	; 62
    13aa:	0f be       	out	0x3f, r0	; 63
    13ac:	cd bf       	out	0x3d, r28	; 61
    13ae:	df 91       	pop	r29
    13b0:	cf 91       	pop	r28
    13b2:	08 95       	ret

000013b4 <_ZN17Serial_Processing8strcicmpEPKcS1_>:

int Serial_Processing::strcicmp(char const *a, char const *b)
{
    13b4:	0f 93       	push	r16
    13b6:	1f 93       	push	r17
    13b8:	cf 93       	push	r28
    13ba:	df 93       	push	r29
    13bc:	cd b7       	in	r28, 0x3d	; 61
    13be:	de b7       	in	r29, 0x3e	; 62
    13c0:	28 97       	sbiw	r28, 0x08	; 8
    13c2:	0f b6       	in	r0, 0x3f	; 63
    13c4:	f8 94       	cli
    13c6:	de bf       	out	0x3e, r29	; 62
    13c8:	0f be       	out	0x3f, r0	; 63
    13ca:	cd bf       	out	0x3d, r28	; 61
    13cc:	9c 83       	std	Y+4, r25	; 0x04
    13ce:	8b 83       	std	Y+3, r24	; 0x03
    13d0:	7e 83       	std	Y+6, r23	; 0x06
    13d2:	6d 83       	std	Y+5, r22	; 0x05
    13d4:	58 87       	std	Y+8, r21	; 0x08
    13d6:	4f 83       	std	Y+7, r20	; 0x07
  for (;; a++, b++) {
    int d = tolower(*a) - tolower(*b);
    13d8:	8d 81       	ldd	r24, Y+5	; 0x05
    13da:	9e 81       	ldd	r25, Y+6	; 0x06
    13dc:	fc 01       	movw	r30, r24
    13de:	80 81       	ld	r24, Z
    13e0:	88 2f       	mov	r24, r24
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	0e 94 45 1f 	call	0x3e8a	; 0x3e8a <tolower>
    13e8:	8c 01       	movw	r16, r24
    13ea:	8f 81       	ldd	r24, Y+7	; 0x07
    13ec:	98 85       	ldd	r25, Y+8	; 0x08
    13ee:	fc 01       	movw	r30, r24
    13f0:	80 81       	ld	r24, Z
    13f2:	88 2f       	mov	r24, r24
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	0e 94 45 1f 	call	0x3e8a	; 0x3e8a <tolower>
    13fa:	98 01       	movw	r18, r16
    13fc:	28 1b       	sub	r18, r24
    13fe:	39 0b       	sbc	r19, r25
    1400:	c9 01       	movw	r24, r18
    1402:	9a 83       	std	Y+2, r25	; 0x02
    1404:	89 83       	std	Y+1, r24	; 0x01
    if (d != 0 || !*a)
    1406:	89 81       	ldd	r24, Y+1	; 0x01
    1408:	9a 81       	ldd	r25, Y+2	; 0x02
    140a:	89 2b       	or	r24, r25
    140c:	31 f4       	brne	.+12     	; 0x141a <_ZN17Serial_Processing8strcicmpEPKcS1_+0x66>
    140e:	8d 81       	ldd	r24, Y+5	; 0x05
    1410:	9e 81       	ldd	r25, Y+6	; 0x06
    1412:	fc 01       	movw	r30, r24
    1414:	80 81       	ld	r24, Z
    1416:	88 23       	and	r24, r24
    1418:	19 f4       	brne	.+6      	; 0x1420 <_ZN17Serial_Processing8strcicmpEPKcS1_+0x6c>
    return d;
    141a:	89 81       	ldd	r24, Y+1	; 0x01
    141c:	9a 81       	ldd	r25, Y+2	; 0x02
    141e:	0b c0       	rjmp	.+22     	; 0x1436 <_ZN17Serial_Processing8strcicmpEPKcS1_+0x82>
  return 1;
}

int Serial_Processing::strcicmp(char const *a, char const *b)
{
  for (;; a++, b++) {
    1420:	8d 81       	ldd	r24, Y+5	; 0x05
    1422:	9e 81       	ldd	r25, Y+6	; 0x06
    1424:	01 96       	adiw	r24, 0x01	; 1
    1426:	9e 83       	std	Y+6, r25	; 0x06
    1428:	8d 83       	std	Y+5, r24	; 0x05
    142a:	8f 81       	ldd	r24, Y+7	; 0x07
    142c:	98 85       	ldd	r25, Y+8	; 0x08
    142e:	01 96       	adiw	r24, 0x01	; 1
    1430:	98 87       	std	Y+8, r25	; 0x08
    1432:	8f 83       	std	Y+7, r24	; 0x07
    1434:	d1 cf       	rjmp	.-94     	; 0x13d8 <_ZN17Serial_Processing8strcicmpEPKcS1_+0x24>
    int d = tolower(*a) - tolower(*b);
    if (d != 0 || !*a)
    return d;
  }
}
    1436:	28 96       	adiw	r28, 0x08	; 8
    1438:	0f b6       	in	r0, 0x3f	; 63
    143a:	f8 94       	cli
    143c:	de bf       	out	0x3e, r29	; 62
    143e:	0f be       	out	0x3f, r0	; 63
    1440:	cd bf       	out	0x3d, r28	; 61
    1442:	df 91       	pop	r29
    1444:	cf 91       	pop	r28
    1446:	1f 91       	pop	r17
    1448:	0f 91       	pop	r16
    144a:	08 95       	ret

0000144c <_ZN17Serial_ProcessingD1Ev>:


// default destructor
Serial_Processing::~Serial_Processing()
    144c:	cf 93       	push	r28
    144e:	df 93       	push	r29
    1450:	00 d0       	rcall	.+0      	; 0x1452 <_ZN17Serial_ProcessingD1Ev+0x6>
    1452:	cd b7       	in	r28, 0x3d	; 61
    1454:	de b7       	in	r29, 0x3e	; 62
    1456:	9a 83       	std	Y+2, r25	; 0x02
    1458:	89 83       	std	Y+1, r24	; 0x01
{
} //~Serial_Processing
    145a:	00 00       	nop
    145c:	0f 90       	pop	r0
    145e:	0f 90       	pop	r0
    1460:	df 91       	pop	r29
    1462:	cf 91       	pop	r28
    1464:	08 95       	ret

00001466 <_ZN14HardwareSerial5beginEm>:
	position = position / MOTOR_STEPS_PER_REV;
	position = position * SCREW_PITCH_MM;
	position = (float)(position / 1000) + 1;

	return position;
}
    1466:	cf 93       	push	r28
    1468:	df 93       	push	r29
    146a:	00 d0       	rcall	.+0      	; 0x146c <_ZN14HardwareSerial5beginEm+0x6>
    146c:	00 d0       	rcall	.+0      	; 0x146e <_ZN14HardwareSerial5beginEm+0x8>
    146e:	00 d0       	rcall	.+0      	; 0x1470 <_ZN14HardwareSerial5beginEm+0xa>
    1470:	cd b7       	in	r28, 0x3d	; 61
    1472:	de b7       	in	r29, 0x3e	; 62
    1474:	9a 83       	std	Y+2, r25	; 0x02
    1476:	89 83       	std	Y+1, r24	; 0x01
    1478:	4b 83       	std	Y+3, r20	; 0x03
    147a:	5c 83       	std	Y+4, r21	; 0x04
    147c:	6d 83       	std	Y+5, r22	; 0x05
    147e:	7e 83       	std	Y+6, r23	; 0x06
    1480:	8b 81       	ldd	r24, Y+3	; 0x03
    1482:	9c 81       	ldd	r25, Y+4	; 0x04
    1484:	ad 81       	ldd	r26, Y+5	; 0x05
    1486:	be 81       	ldd	r27, Y+6	; 0x06
    1488:	e9 81       	ldd	r30, Y+1	; 0x01
    148a:	fa 81       	ldd	r31, Y+2	; 0x02
    148c:	26 e0       	ldi	r18, 0x06	; 6
    148e:	ac 01       	movw	r20, r24
    1490:	bd 01       	movw	r22, r26
    1492:	cf 01       	movw	r24, r30
    1494:	0e 94 5b 1a 	call	0x34b6	; 0x34b6 <_ZN14HardwareSerial5beginEmh>
    1498:	00 00       	nop
    149a:	26 96       	adiw	r28, 0x06	; 6
    149c:	0f b6       	in	r0, 0x3f	; 63
    149e:	f8 94       	cli
    14a0:	de bf       	out	0x3e, r29	; 62
    14a2:	0f be       	out	0x3f, r0	; 63
    14a4:	cd bf       	out	0x3d, r28	; 61
    14a6:	df 91       	pop	r29
    14a8:	cf 91       	pop	r28
    14aa:	08 95       	ret

000014ac <_Z15enableInterrupthPFvvEh>:
    14ac:	cf 93       	push	r28
    14ae:	df 93       	push	r29
    14b0:	cd b7       	in	r28, 0x3d	; 61
    14b2:	de b7       	in	r29, 0x3e	; 62
    14b4:	a0 97       	sbiw	r28, 0x20	; 32
    14b6:	0f b6       	in	r0, 0x3f	; 63
    14b8:	f8 94       	cli
    14ba:	de bf       	out	0x3e, r29	; 62
    14bc:	0f be       	out	0x3f, r0	; 63
    14be:	cd bf       	out	0x3d, r28	; 61
    14c0:	8d 8f       	std	Y+29, r24	; 0x1d
    14c2:	7f 8f       	std	Y+31, r23	; 0x1f
    14c4:	6e 8f       	std	Y+30, r22	; 0x1e
    14c6:	48 a3       	std	Y+32, r20	; 0x20
    14c8:	19 82       	std	Y+1, r1	; 0x01
    14ca:	1a 82       	std	Y+2, r1	; 0x02
    14cc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    14ce:	8f 77       	andi	r24, 0x7F	; 127
    14d0:	8b 83       	std	Y+3, r24	; 0x03
    14d2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    14d4:	88 23       	and	r24, r24
    14d6:	44 f0       	brlt	.+16     	; 0x14e8 <_Z15enableInterrupthPFvvEh+0x3c>
    14d8:	8b 81       	ldd	r24, Y+3	; 0x03
    14da:	82 30       	cpi	r24, 0x02	; 2
    14dc:	09 f4       	brne	.+2      	; 0x14e0 <_Z15enableInterrupthPFvvEh+0x34>
    14de:	30 c1       	rjmp	.+608    	; 0x1740 <_Z15enableInterrupthPFvvEh+0x294>
    14e0:	8b 81       	ldd	r24, Y+3	; 0x03
    14e2:	83 30       	cpi	r24, 0x03	; 3
    14e4:	09 f4       	brne	.+2      	; 0x14e8 <_Z15enableInterrupthPFvvEh+0x3c>
    14e6:	2c c1       	rjmp	.+600    	; 0x1740 <_Z15enableInterrupthPFvvEh+0x294>
    14e8:	8b 81       	ldd	r24, Y+3	; 0x03
    14ea:	88 2f       	mov	r24, r24
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	84 58       	subi	r24, 0x84	; 132
    14f0:	9f 4f       	sbci	r25, 0xFF	; 255
    14f2:	9e 83       	std	Y+6, r25	; 0x06
    14f4:	8d 83       	std	Y+5, r24	; 0x05
    14f6:	8d 81       	ldd	r24, Y+5	; 0x05
    14f8:	9e 81       	ldd	r25, Y+6	; 0x06
    14fa:	fc 01       	movw	r30, r24
    14fc:	84 91       	lpm	r24, Z
    14fe:	8f 83       	std	Y+7, r24	; 0x07
    1500:	8f 81       	ldd	r24, Y+7	; 0x07
    1502:	8a 83       	std	Y+2, r24	; 0x02
    1504:	8b 81       	ldd	r24, Y+3	; 0x03
    1506:	88 2f       	mov	r24, r24
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	80 57       	subi	r24, 0x70	; 112
    150c:	9f 4f       	sbci	r25, 0xFF	; 255
    150e:	99 87       	std	Y+9, r25	; 0x09
    1510:	88 87       	std	Y+8, r24	; 0x08
    1512:	88 85       	ldd	r24, Y+8	; 0x08
    1514:	99 85       	ldd	r25, Y+9	; 0x09
    1516:	fc 01       	movw	r30, r24
    1518:	84 91       	lpm	r24, Z
    151a:	8a 87       	std	Y+10, r24	; 0x0a
    151c:	8a 85       	ldd	r24, Y+10	; 0x0a
    151e:	89 83       	std	Y+1, r24	; 0x01
    1520:	88 a1       	ldd	r24, Y+32	; 0x20
    1522:	83 30       	cpi	r24, 0x03	; 3
    1524:	19 f0       	breq	.+6      	; 0x152c <_Z15enableInterrupthPFvvEh+0x80>
    1526:	88 a1       	ldd	r24, Y+32	; 0x20
    1528:	81 30       	cpi	r24, 0x01	; 1
    152a:	d9 f4       	brne	.+54     	; 0x1562 <_Z15enableInterrupthPFvvEh+0xb6>
    152c:	89 81       	ldd	r24, Y+1	; 0x01
    152e:	82 30       	cpi	r24, 0x02	; 2
    1530:	31 f4       	brne	.+12     	; 0x153e <_Z15enableInterrupthPFvvEh+0x92>
    1532:	90 91 e4 03 	lds	r25, 0x03E4	; 0x8003e4 <risingPinsPORTB>
    1536:	8a 81       	ldd	r24, Y+2	; 0x02
    1538:	89 2b       	or	r24, r25
    153a:	80 93 e4 03 	sts	0x03E4, r24	; 0x8003e4 <risingPinsPORTB>
    153e:	89 81       	ldd	r24, Y+1	; 0x01
    1540:	83 30       	cpi	r24, 0x03	; 3
    1542:	31 f4       	brne	.+12     	; 0x1550 <_Z15enableInterrupthPFvvEh+0xa4>
    1544:	90 91 e7 03 	lds	r25, 0x03E7	; 0x8003e7 <risingPinsPORTC>
    1548:	8a 81       	ldd	r24, Y+2	; 0x02
    154a:	89 2b       	or	r24, r25
    154c:	80 93 e7 03 	sts	0x03E7, r24	; 0x8003e7 <risingPinsPORTC>
    1550:	89 81       	ldd	r24, Y+1	; 0x01
    1552:	84 30       	cpi	r24, 0x04	; 4
    1554:	31 f4       	brne	.+12     	; 0x1562 <_Z15enableInterrupthPFvvEh+0xb6>
    1556:	90 91 ea 03 	lds	r25, 0x03EA	; 0x8003ea <risingPinsPORTD>
    155a:	8a 81       	ldd	r24, Y+2	; 0x02
    155c:	89 2b       	or	r24, r25
    155e:	80 93 ea 03 	sts	0x03EA, r24	; 0x8003ea <risingPinsPORTD>
    1562:	88 a1       	ldd	r24, Y+32	; 0x20
    1564:	82 30       	cpi	r24, 0x02	; 2
    1566:	19 f0       	breq	.+6      	; 0x156e <_Z15enableInterrupthPFvvEh+0xc2>
    1568:	88 a1       	ldd	r24, Y+32	; 0x20
    156a:	81 30       	cpi	r24, 0x01	; 1
    156c:	d9 f4       	brne	.+54     	; 0x15a4 <_Z15enableInterrupthPFvvEh+0xf8>
    156e:	89 81       	ldd	r24, Y+1	; 0x01
    1570:	82 30       	cpi	r24, 0x02	; 2
    1572:	31 f4       	brne	.+12     	; 0x1580 <_Z15enableInterrupthPFvvEh+0xd4>
    1574:	90 91 e5 03 	lds	r25, 0x03E5	; 0x8003e5 <fallingPinsPORTB>
    1578:	8a 81       	ldd	r24, Y+2	; 0x02
    157a:	89 2b       	or	r24, r25
    157c:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <fallingPinsPORTB>
    1580:	89 81       	ldd	r24, Y+1	; 0x01
    1582:	83 30       	cpi	r24, 0x03	; 3
    1584:	31 f4       	brne	.+12     	; 0x1592 <_Z15enableInterrupthPFvvEh+0xe6>
    1586:	90 91 e8 03 	lds	r25, 0x03E8	; 0x8003e8 <fallingPinsPORTC>
    158a:	8a 81       	ldd	r24, Y+2	; 0x02
    158c:	89 2b       	or	r24, r25
    158e:	80 93 e8 03 	sts	0x03E8, r24	; 0x8003e8 <fallingPinsPORTC>
    1592:	89 81       	ldd	r24, Y+1	; 0x01
    1594:	84 30       	cpi	r24, 0x04	; 4
    1596:	31 f4       	brne	.+12     	; 0x15a4 <_Z15enableInterrupthPFvvEh+0xf8>
    1598:	90 91 eb 03 	lds	r25, 0x03EB	; 0x8003eb <fallingPinsPORTD>
    159c:	8a 81       	ldd	r24, Y+2	; 0x02
    159e:	89 2b       	or	r24, r25
    15a0:	80 93 eb 03 	sts	0x03EB, r24	; 0x8003eb <fallingPinsPORTD>
    15a4:	8b 81       	ldd	r24, Y+3	; 0x03
    15a6:	88 2f       	mov	r24, r24
    15a8:	90 e0       	ldi	r25, 0x00	; 0
    15aa:	88 59       	subi	r24, 0x98	; 152
    15ac:	9f 4f       	sbci	r25, 0xFF	; 255
    15ae:	9c 87       	std	Y+12, r25	; 0x0c
    15b0:	8b 87       	std	Y+11, r24	; 0x0b
    15b2:	8b 85       	ldd	r24, Y+11	; 0x0b
    15b4:	9c 85       	ldd	r25, Y+12	; 0x0c
    15b6:	fc 01       	movw	r30, r24
    15b8:	84 91       	lpm	r24, Z
    15ba:	8d 87       	std	Y+13, r24	; 0x0d
    15bc:	8d 85       	ldd	r24, Y+13	; 0x0d
    15be:	8e 87       	std	Y+14, r24	; 0x0e
    15c0:	89 81       	ldd	r24, Y+1	; 0x01
    15c2:	82 30       	cpi	r24, 0x02	; 2
    15c4:	c1 f5       	brne	.+112    	; 0x1636 <_Z15enableInterrupthPFvvEh+0x18a>
    15c6:	8e 85       	ldd	r24, Y+14	; 0x0e
    15c8:	88 2f       	mov	r24, r24
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	88 0f       	add	r24, r24
    15ce:	99 1f       	adc	r25, r25
    15d0:	84 54       	subi	r24, 0x44	; 68
    15d2:	9c 4f       	sbci	r25, 0xFC	; 252
    15d4:	98 8b       	std	Y+16, r25	; 0x10
    15d6:	8f 87       	std	Y+15, r24	; 0x0f
    15d8:	8f 85       	ldd	r24, Y+15	; 0x0f
    15da:	98 89       	ldd	r25, Y+16	; 0x10
    15dc:	2e 8d       	ldd	r18, Y+30	; 0x1e
    15de:	3f 8d       	ldd	r19, Y+31	; 0x1f
    15e0:	fc 01       	movw	r30, r24
    15e2:	31 83       	std	Z+1, r19	; 0x01
    15e4:	20 83       	st	Z, r18
    15e6:	89 81       	ldd	r24, Y+1	; 0x01
    15e8:	88 2f       	mov	r24, r24
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	88 0f       	add	r24, r24
    15ee:	99 1f       	adc	r25, r25
    15f0:	8c 55       	subi	r24, 0x5C	; 92
    15f2:	9f 4f       	sbci	r25, 0xFF	; 255
    15f4:	9a 8b       	std	Y+18, r25	; 0x12
    15f6:	89 8b       	std	Y+17, r24	; 0x11
    15f8:	89 89       	ldd	r24, Y+17	; 0x11
    15fa:	9a 89       	ldd	r25, Y+18	; 0x12
    15fc:	fc 01       	movw	r30, r24
    15fe:	25 91       	lpm	r18, Z+
    1600:	34 91       	lpm	r19, Z
    1602:	cf 01       	movw	r24, r30
    1604:	3c 8b       	std	Y+20, r19	; 0x14
    1606:	2b 8b       	std	Y+19, r18	; 0x13
    1608:	9a 8b       	std	Y+18, r25	; 0x12
    160a:	89 8b       	std	Y+17, r24	; 0x11
    160c:	8b 89       	ldd	r24, Y+19	; 0x13
    160e:	9c 89       	ldd	r25, Y+20	; 0x14
    1610:	fc 01       	movw	r30, r24
    1612:	80 81       	ld	r24, Z
    1614:	80 93 e6 03 	sts	0x03E6, r24	; 0x8003e6 <_ZL13portSnapshotB>
    1618:	8b e6       	ldi	r24, 0x6B	; 107
    161a:	90 e0       	ldi	r25, 0x00	; 0
    161c:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <pcmsk+0x1>
    1620:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <pcmsk>
    1624:	88 e6       	ldi	r24, 0x68	; 104
    1626:	90 e0       	ldi	r25, 0x00	; 0
    1628:	28 e6       	ldi	r18, 0x68	; 104
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	f9 01       	movw	r30, r18
    162e:	20 81       	ld	r18, Z
    1630:	21 60       	ori	r18, 0x01	; 1
    1632:	fc 01       	movw	r30, r24
    1634:	20 83       	st	Z, r18
    1636:	89 81       	ldd	r24, Y+1	; 0x01
    1638:	83 30       	cpi	r24, 0x03	; 3
    163a:	c1 f5       	brne	.+112    	; 0x16ac <_Z15enableInterrupthPFvvEh+0x200>
    163c:	8e 85       	ldd	r24, Y+14	; 0x0e
    163e:	88 2f       	mov	r24, r24
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	88 0f       	add	r24, r24
    1644:	99 1f       	adc	r25, r25
    1646:	88 53       	subi	r24, 0x38	; 56
    1648:	9c 4f       	sbci	r25, 0xFC	; 252
    164a:	98 8b       	std	Y+16, r25	; 0x10
    164c:	8f 87       	std	Y+15, r24	; 0x0f
    164e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1650:	98 89       	ldd	r25, Y+16	; 0x10
    1652:	2e 8d       	ldd	r18, Y+30	; 0x1e
    1654:	3f 8d       	ldd	r19, Y+31	; 0x1f
    1656:	fc 01       	movw	r30, r24
    1658:	31 83       	std	Z+1, r19	; 0x01
    165a:	20 83       	st	Z, r18
    165c:	89 81       	ldd	r24, Y+1	; 0x01
    165e:	88 2f       	mov	r24, r24
    1660:	90 e0       	ldi	r25, 0x00	; 0
    1662:	88 0f       	add	r24, r24
    1664:	99 1f       	adc	r25, r25
    1666:	8c 55       	subi	r24, 0x5C	; 92
    1668:	9f 4f       	sbci	r25, 0xFF	; 255
    166a:	9e 8b       	std	Y+22, r25	; 0x16
    166c:	8d 8b       	std	Y+21, r24	; 0x15
    166e:	8d 89       	ldd	r24, Y+21	; 0x15
    1670:	9e 89       	ldd	r25, Y+22	; 0x16
    1672:	fc 01       	movw	r30, r24
    1674:	25 91       	lpm	r18, Z+
    1676:	34 91       	lpm	r19, Z
    1678:	cf 01       	movw	r24, r30
    167a:	38 8f       	std	Y+24, r19	; 0x18
    167c:	2f 8b       	std	Y+23, r18	; 0x17
    167e:	9e 8b       	std	Y+22, r25	; 0x16
    1680:	8d 8b       	std	Y+21, r24	; 0x15
    1682:	8f 89       	ldd	r24, Y+23	; 0x17
    1684:	98 8d       	ldd	r25, Y+24	; 0x18
    1686:	fc 01       	movw	r30, r24
    1688:	80 81       	ld	r24, Z
    168a:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <_ZL13portSnapshotC>
    168e:	8c e6       	ldi	r24, 0x6C	; 108
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <pcmsk+0x1>
    1696:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <pcmsk>
    169a:	88 e6       	ldi	r24, 0x68	; 104
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	28 e6       	ldi	r18, 0x68	; 104
    16a0:	30 e0       	ldi	r19, 0x00	; 0
    16a2:	f9 01       	movw	r30, r18
    16a4:	20 81       	ld	r18, Z
    16a6:	22 60       	ori	r18, 0x02	; 2
    16a8:	fc 01       	movw	r30, r24
    16aa:	20 83       	st	Z, r18
    16ac:	89 81       	ldd	r24, Y+1	; 0x01
    16ae:	84 30       	cpi	r24, 0x04	; 4
    16b0:	c1 f5       	brne	.+112    	; 0x1722 <_Z15enableInterrupthPFvvEh+0x276>
    16b2:	8e 85       	ldd	r24, Y+14	; 0x0e
    16b4:	88 2f       	mov	r24, r24
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	88 0f       	add	r24, r24
    16ba:	99 1f       	adc	r25, r25
    16bc:	8c 52       	subi	r24, 0x2C	; 44
    16be:	9c 4f       	sbci	r25, 0xFC	; 252
    16c0:	98 8b       	std	Y+16, r25	; 0x10
    16c2:	8f 87       	std	Y+15, r24	; 0x0f
    16c4:	8f 85       	ldd	r24, Y+15	; 0x0f
    16c6:	98 89       	ldd	r25, Y+16	; 0x10
    16c8:	2e 8d       	ldd	r18, Y+30	; 0x1e
    16ca:	3f 8d       	ldd	r19, Y+31	; 0x1f
    16cc:	fc 01       	movw	r30, r24
    16ce:	31 83       	std	Z+1, r19	; 0x01
    16d0:	20 83       	st	Z, r18
    16d2:	89 81       	ldd	r24, Y+1	; 0x01
    16d4:	88 2f       	mov	r24, r24
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	88 0f       	add	r24, r24
    16da:	99 1f       	adc	r25, r25
    16dc:	8c 55       	subi	r24, 0x5C	; 92
    16de:	9f 4f       	sbci	r25, 0xFF	; 255
    16e0:	9a 8f       	std	Y+26, r25	; 0x1a
    16e2:	89 8f       	std	Y+25, r24	; 0x19
    16e4:	89 8d       	ldd	r24, Y+25	; 0x19
    16e6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    16e8:	fc 01       	movw	r30, r24
    16ea:	25 91       	lpm	r18, Z+
    16ec:	34 91       	lpm	r19, Z
    16ee:	cf 01       	movw	r24, r30
    16f0:	3c 8f       	std	Y+28, r19	; 0x1c
    16f2:	2b 8f       	std	Y+27, r18	; 0x1b
    16f4:	9a 8f       	std	Y+26, r25	; 0x1a
    16f6:	89 8f       	std	Y+25, r24	; 0x19
    16f8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    16fa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    16fc:	fc 01       	movw	r30, r24
    16fe:	80 81       	ld	r24, Z
    1700:	80 93 ec 03 	sts	0x03EC, r24	; 0x8003ec <_ZL13portSnapshotD>
    1704:	8d e6       	ldi	r24, 0x6D	; 109
    1706:	90 e0       	ldi	r25, 0x00	; 0
    1708:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <pcmsk+0x1>
    170c:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <pcmsk>
    1710:	88 e6       	ldi	r24, 0x68	; 104
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	28 e6       	ldi	r18, 0x68	; 104
    1716:	30 e0       	ldi	r19, 0x00	; 0
    1718:	f9 01       	movw	r30, r18
    171a:	20 81       	ld	r18, Z
    171c:	24 60       	ori	r18, 0x04	; 4
    171e:	fc 01       	movw	r30, r24
    1720:	20 83       	st	Z, r18
    1722:	80 91 b6 03 	lds	r24, 0x03B6	; 0x8003b6 <pcmsk>
    1726:	90 91 b7 03 	lds	r25, 0x03B7	; 0x8003b7 <pcmsk+0x1>
    172a:	20 91 b6 03 	lds	r18, 0x03B6	; 0x8003b6 <pcmsk>
    172e:	30 91 b7 03 	lds	r19, 0x03B7	; 0x8003b7 <pcmsk+0x1>
    1732:	f9 01       	movw	r30, r18
    1734:	30 81       	ld	r19, Z
    1736:	2a 81       	ldd	r18, Y+2	; 0x02
    1738:	23 2b       	or	r18, r19
    173a:	fc 01       	movw	r30, r24
    173c:	20 83       	st	Z, r18
    173e:	80 c0       	rjmp	.+256    	; 0x1840 <_Z15enableInterrupthPFvvEh+0x394>
    1740:	8f e5       	ldi	r24, 0x5F	; 95
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	fc 01       	movw	r30, r24
    1746:	80 81       	ld	r24, Z
    1748:	8c 83       	std	Y+4, r24	; 0x04
    174a:	f8 94       	cli
    174c:	8b 81       	ldd	r24, Y+3	; 0x03
    174e:	82 30       	cpi	r24, 0x02	; 2
    1750:	a1 f5       	brne	.+104    	; 0x17ba <_Z15enableInterrupthPFvvEh+0x30e>
    1752:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1754:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1756:	90 93 b9 03 	sts	0x03B9, r25	; 0x8003b9 <functionPointerArrayEXTERNAL+0x1>
    175a:	80 93 b8 03 	sts	0x03B8, r24	; 0x8003b8 <functionPointerArrayEXTERNAL>
    175e:	8d e3       	ldi	r24, 0x3D	; 61
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	2d e3       	ldi	r18, 0x3D	; 61
    1764:	30 e0       	ldi	r19, 0x00	; 0
    1766:	f9 01       	movw	r30, r18
    1768:	20 81       	ld	r18, Z
    176a:	2e 7f       	andi	r18, 0xFE	; 254
    176c:	fc 01       	movw	r30, r24
    176e:	20 83       	st	Z, r18
    1770:	89 e6       	ldi	r24, 0x69	; 105
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	29 e6       	ldi	r18, 0x69	; 105
    1776:	30 e0       	ldi	r19, 0x00	; 0
    1778:	f9 01       	movw	r30, r18
    177a:	20 81       	ld	r18, Z
    177c:	2c 7f       	andi	r18, 0xFC	; 252
    177e:	fc 01       	movw	r30, r24
    1780:	20 83       	st	Z, r18
    1782:	89 e6       	ldi	r24, 0x69	; 105
    1784:	90 e0       	ldi	r25, 0x00	; 0
    1786:	29 e6       	ldi	r18, 0x69	; 105
    1788:	30 e0       	ldi	r19, 0x00	; 0
    178a:	f9 01       	movw	r30, r18
    178c:	30 81       	ld	r19, Z
    178e:	28 a1       	ldd	r18, Y+32	; 0x20
    1790:	23 2b       	or	r18, r19
    1792:	fc 01       	movw	r30, r24
    1794:	20 83       	st	Z, r18
    1796:	8c e3       	ldi	r24, 0x3C	; 60
    1798:	90 e0       	ldi	r25, 0x00	; 0
    179a:	2c e3       	ldi	r18, 0x3C	; 60
    179c:	30 e0       	ldi	r19, 0x00	; 0
    179e:	f9 01       	movw	r30, r18
    17a0:	20 81       	ld	r18, Z
    17a2:	21 60       	ori	r18, 0x01	; 1
    17a4:	fc 01       	movw	r30, r24
    17a6:	20 83       	st	Z, r18
    17a8:	8d e3       	ldi	r24, 0x3D	; 61
    17aa:	90 e0       	ldi	r25, 0x00	; 0
    17ac:	2d e3       	ldi	r18, 0x3D	; 61
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	f9 01       	movw	r30, r18
    17b2:	20 81       	ld	r18, Z
    17b4:	21 60       	ori	r18, 0x01	; 1
    17b6:	fc 01       	movw	r30, r24
    17b8:	20 83       	st	Z, r18
    17ba:	8b 81       	ldd	r24, Y+3	; 0x03
    17bc:	83 30       	cpi	r24, 0x03	; 3
    17be:	d9 f5       	brne	.+118    	; 0x1836 <_Z15enableInterrupthPFvvEh+0x38a>
    17c0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    17c2:	9f 8d       	ldd	r25, Y+31	; 0x1f
    17c4:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <functionPointerArrayEXTERNAL+0x3>
    17c8:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <functionPointerArrayEXTERNAL+0x2>
    17cc:	8d e3       	ldi	r24, 0x3D	; 61
    17ce:	90 e0       	ldi	r25, 0x00	; 0
    17d0:	2d e3       	ldi	r18, 0x3D	; 61
    17d2:	30 e0       	ldi	r19, 0x00	; 0
    17d4:	f9 01       	movw	r30, r18
    17d6:	20 81       	ld	r18, Z
    17d8:	2d 7f       	andi	r18, 0xFD	; 253
    17da:	fc 01       	movw	r30, r24
    17dc:	20 83       	st	Z, r18
    17de:	89 e6       	ldi	r24, 0x69	; 105
    17e0:	90 e0       	ldi	r25, 0x00	; 0
    17e2:	29 e6       	ldi	r18, 0x69	; 105
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	f9 01       	movw	r30, r18
    17e8:	20 81       	ld	r18, Z
    17ea:	23 7f       	andi	r18, 0xF3	; 243
    17ec:	fc 01       	movw	r30, r24
    17ee:	20 83       	st	Z, r18
    17f0:	89 e6       	ldi	r24, 0x69	; 105
    17f2:	90 e0       	ldi	r25, 0x00	; 0
    17f4:	29 e6       	ldi	r18, 0x69	; 105
    17f6:	30 e0       	ldi	r19, 0x00	; 0
    17f8:	f9 01       	movw	r30, r18
    17fa:	20 81       	ld	r18, Z
    17fc:	42 2f       	mov	r20, r18
    17fe:	28 a1       	ldd	r18, Y+32	; 0x20
    1800:	22 2f       	mov	r18, r18
    1802:	30 e0       	ldi	r19, 0x00	; 0
    1804:	22 0f       	add	r18, r18
    1806:	33 1f       	adc	r19, r19
    1808:	22 0f       	add	r18, r18
    180a:	33 1f       	adc	r19, r19
    180c:	24 2b       	or	r18, r20
    180e:	fc 01       	movw	r30, r24
    1810:	20 83       	st	Z, r18
    1812:	8c e3       	ldi	r24, 0x3C	; 60
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	2c e3       	ldi	r18, 0x3C	; 60
    1818:	30 e0       	ldi	r19, 0x00	; 0
    181a:	f9 01       	movw	r30, r18
    181c:	20 81       	ld	r18, Z
    181e:	22 60       	ori	r18, 0x02	; 2
    1820:	fc 01       	movw	r30, r24
    1822:	20 83       	st	Z, r18
    1824:	8d e3       	ldi	r24, 0x3D	; 61
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	2d e3       	ldi	r18, 0x3D	; 61
    182a:	30 e0       	ldi	r19, 0x00	; 0
    182c:	f9 01       	movw	r30, r18
    182e:	20 81       	ld	r18, Z
    1830:	22 60       	ori	r18, 0x02	; 2
    1832:	fc 01       	movw	r30, r24
    1834:	20 83       	st	Z, r18
    1836:	8f e5       	ldi	r24, 0x5F	; 95
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	2c 81       	ldd	r18, Y+4	; 0x04
    183c:	fc 01       	movw	r30, r24
    183e:	20 83       	st	Z, r18
    1840:	00 00       	nop
    1842:	a0 96       	adiw	r28, 0x20	; 32
    1844:	0f b6       	in	r0, 0x3f	; 63
    1846:	f8 94       	cli
    1848:	de bf       	out	0x3e, r29	; 62
    184a:	0f be       	out	0x3f, r0	; 63
    184c:	cd bf       	out	0x3d, r28	; 61
    184e:	df 91       	pop	r29
    1850:	cf 91       	pop	r28
    1852:	08 95       	ret

00001854 <__vector_1>:
    1854:	1f 92       	push	r1
    1856:	0f 92       	push	r0
    1858:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    185c:	0f 92       	push	r0
    185e:	11 24       	eor	r1, r1
    1860:	2f 93       	push	r18
    1862:	3f 93       	push	r19
    1864:	4f 93       	push	r20
    1866:	5f 93       	push	r21
    1868:	6f 93       	push	r22
    186a:	7f 93       	push	r23
    186c:	8f 93       	push	r24
    186e:	9f 93       	push	r25
    1870:	af 93       	push	r26
    1872:	bf 93       	push	r27
    1874:	ef 93       	push	r30
    1876:	ff 93       	push	r31
    1878:	cf 93       	push	r28
    187a:	df 93       	push	r29
    187c:	cd b7       	in	r28, 0x3d	; 61
    187e:	de b7       	in	r29, 0x3e	; 62
    1880:	80 91 b8 03 	lds	r24, 0x03B8	; 0x8003b8 <functionPointerArrayEXTERNAL>
    1884:	90 91 b9 03 	lds	r25, 0x03B9	; 0x8003b9 <functionPointerArrayEXTERNAL+0x1>
    1888:	fc 01       	movw	r30, r24
    188a:	09 95       	icall
    188c:	00 00       	nop
    188e:	df 91       	pop	r29
    1890:	cf 91       	pop	r28
    1892:	ff 91       	pop	r31
    1894:	ef 91       	pop	r30
    1896:	bf 91       	pop	r27
    1898:	af 91       	pop	r26
    189a:	9f 91       	pop	r25
    189c:	8f 91       	pop	r24
    189e:	7f 91       	pop	r23
    18a0:	6f 91       	pop	r22
    18a2:	5f 91       	pop	r21
    18a4:	4f 91       	pop	r20
    18a6:	3f 91       	pop	r19
    18a8:	2f 91       	pop	r18
    18aa:	0f 90       	pop	r0
    18ac:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    18b0:	0f 90       	pop	r0
    18b2:	1f 90       	pop	r1
    18b4:	18 95       	reti

000018b6 <__vector_2>:
    18b6:	1f 92       	push	r1
    18b8:	0f 92       	push	r0
    18ba:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    18be:	0f 92       	push	r0
    18c0:	11 24       	eor	r1, r1
    18c2:	2f 93       	push	r18
    18c4:	3f 93       	push	r19
    18c6:	4f 93       	push	r20
    18c8:	5f 93       	push	r21
    18ca:	6f 93       	push	r22
    18cc:	7f 93       	push	r23
    18ce:	8f 93       	push	r24
    18d0:	9f 93       	push	r25
    18d2:	af 93       	push	r26
    18d4:	bf 93       	push	r27
    18d6:	ef 93       	push	r30
    18d8:	ff 93       	push	r31
    18da:	cf 93       	push	r28
    18dc:	df 93       	push	r29
    18de:	cd b7       	in	r28, 0x3d	; 61
    18e0:	de b7       	in	r29, 0x3e	; 62
    18e2:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <functionPointerArrayEXTERNAL+0x2>
    18e6:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <functionPointerArrayEXTERNAL+0x3>
    18ea:	fc 01       	movw	r30, r24
    18ec:	09 95       	icall
    18ee:	00 00       	nop
    18f0:	df 91       	pop	r29
    18f2:	cf 91       	pop	r28
    18f4:	ff 91       	pop	r31
    18f6:	ef 91       	pop	r30
    18f8:	bf 91       	pop	r27
    18fa:	af 91       	pop	r26
    18fc:	9f 91       	pop	r25
    18fe:	8f 91       	pop	r24
    1900:	7f 91       	pop	r23
    1902:	6f 91       	pop	r22
    1904:	5f 91       	pop	r21
    1906:	4f 91       	pop	r20
    1908:	3f 91       	pop	r19
    190a:	2f 91       	pop	r18
    190c:	0f 90       	pop	r0
    190e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1912:	0f 90       	pop	r0
    1914:	1f 90       	pop	r1
    1916:	18 95       	reti

00001918 <__vector_3>:
    1918:	1f 92       	push	r1
    191a:	0f 92       	push	r0
    191c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1920:	0f 92       	push	r0
    1922:	11 24       	eor	r1, r1
    1924:	2f 93       	push	r18
    1926:	3f 93       	push	r19
    1928:	4f 93       	push	r20
    192a:	5f 93       	push	r21
    192c:	6f 93       	push	r22
    192e:	7f 93       	push	r23
    1930:	8f 93       	push	r24
    1932:	9f 93       	push	r25
    1934:	af 93       	push	r26
    1936:	bf 93       	push	r27
    1938:	ef 93       	push	r30
    193a:	ff 93       	push	r31
    193c:	cf 93       	push	r28
    193e:	df 93       	push	r29
    1940:	00 d0       	rcall	.+0      	; 0x1942 <__vector_3+0x2a>
    1942:	00 d0       	rcall	.+0      	; 0x1944 <__vector_3+0x2c>
    1944:	cd b7       	in	r28, 0x3d	; 61
    1946:	de b7       	in	r29, 0x3e	; 62
    1948:	83 e2       	ldi	r24, 0x23	; 35
    194a:	90 e0       	ldi	r25, 0x00	; 0
    194c:	fc 01       	movw	r30, r24
    194e:	80 81       	ld	r24, Z
    1950:	89 83       	std	Y+1, r24	; 0x01
    1952:	90 91 e6 03 	lds	r25, 0x03E6	; 0x8003e6 <_ZL13portSnapshotB>
    1956:	89 81       	ldd	r24, Y+1	; 0x01
    1958:	89 27       	eor	r24, r25
    195a:	8a 83       	std	Y+2, r24	; 0x02
    195c:	90 91 e4 03 	lds	r25, 0x03E4	; 0x8003e4 <risingPinsPORTB>
    1960:	89 81       	ldd	r24, Y+1	; 0x01
    1962:	89 23       	and	r24, r25
    1964:	8b 83       	std	Y+3, r24	; 0x03
    1966:	89 81       	ldd	r24, Y+1	; 0x01
    1968:	80 95       	com	r24
    196a:	90 91 e5 03 	lds	r25, 0x03E5	; 0x8003e5 <fallingPinsPORTB>
    196e:	89 23       	and	r24, r25
    1970:	8c 83       	std	Y+4, r24	; 0x04
    1972:	9c 81       	ldd	r25, Y+4	; 0x04
    1974:	8b 81       	ldd	r24, Y+3	; 0x03
    1976:	89 2b       	or	r24, r25
    1978:	8c 83       	std	Y+4, r24	; 0x04
    197a:	9c 81       	ldd	r25, Y+4	; 0x04
    197c:	8a 81       	ldd	r24, Y+2	; 0x02
    197e:	89 23       	and	r24, r25
    1980:	8c 83       	std	Y+4, r24	; 0x04
    1982:	8b e6       	ldi	r24, 0x6B	; 107
    1984:	90 e0       	ldi	r25, 0x00	; 0
    1986:	fc 01       	movw	r30, r24
    1988:	80 81       	ld	r24, Z
    198a:	9c 81       	ldd	r25, Y+4	; 0x04
    198c:	89 23       	and	r24, r25
    198e:	8c 83       	std	Y+4, r24	; 0x04
    1990:	89 81       	ldd	r24, Y+1	; 0x01
    1992:	80 93 e6 03 	sts	0x03E6, r24	; 0x8003e6 <_ZL13portSnapshotB>
    1996:	8c 81       	ldd	r24, Y+4	; 0x04
    1998:	88 23       	and	r24, r24
    199a:	09 f4       	brne	.+2      	; 0x199e <__vector_3+0x86>
    199c:	4f c0       	rjmp	.+158    	; 0x1a3c <__vector_3+0x124>
    199e:	8c 81       	ldd	r24, Y+4	; 0x04
    19a0:	88 2f       	mov	r24, r24
    19a2:	90 e0       	ldi	r25, 0x00	; 0
    19a4:	81 70       	andi	r24, 0x01	; 1
    19a6:	99 27       	eor	r25, r25
    19a8:	89 2b       	or	r24, r25
    19aa:	31 f0       	breq	.+12     	; 0x19b8 <__vector_3+0xa0>
    19ac:	80 91 bc 03 	lds	r24, 0x03BC	; 0x8003bc <portBFunctions>
    19b0:	90 91 bd 03 	lds	r25, 0x03BD	; 0x8003bd <portBFunctions+0x1>
    19b4:	fc 01       	movw	r30, r24
    19b6:	09 95       	icall
    19b8:	8c 81       	ldd	r24, Y+4	; 0x04
    19ba:	88 2f       	mov	r24, r24
    19bc:	90 e0       	ldi	r25, 0x00	; 0
    19be:	82 70       	andi	r24, 0x02	; 2
    19c0:	99 27       	eor	r25, r25
    19c2:	89 2b       	or	r24, r25
    19c4:	31 f0       	breq	.+12     	; 0x19d2 <__vector_3+0xba>
    19c6:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <portBFunctions+0x2>
    19ca:	90 91 bf 03 	lds	r25, 0x03BF	; 0x8003bf <portBFunctions+0x3>
    19ce:	fc 01       	movw	r30, r24
    19d0:	09 95       	icall
    19d2:	8c 81       	ldd	r24, Y+4	; 0x04
    19d4:	88 2f       	mov	r24, r24
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	84 70       	andi	r24, 0x04	; 4
    19da:	99 27       	eor	r25, r25
    19dc:	89 2b       	or	r24, r25
    19de:	31 f0       	breq	.+12     	; 0x19ec <__vector_3+0xd4>
    19e0:	80 91 c0 03 	lds	r24, 0x03C0	; 0x8003c0 <portBFunctions+0x4>
    19e4:	90 91 c1 03 	lds	r25, 0x03C1	; 0x8003c1 <portBFunctions+0x5>
    19e8:	fc 01       	movw	r30, r24
    19ea:	09 95       	icall
    19ec:	8c 81       	ldd	r24, Y+4	; 0x04
    19ee:	88 2f       	mov	r24, r24
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	88 70       	andi	r24, 0x08	; 8
    19f4:	99 27       	eor	r25, r25
    19f6:	89 2b       	or	r24, r25
    19f8:	31 f0       	breq	.+12     	; 0x1a06 <__vector_3+0xee>
    19fa:	80 91 c2 03 	lds	r24, 0x03C2	; 0x8003c2 <portBFunctions+0x6>
    19fe:	90 91 c3 03 	lds	r25, 0x03C3	; 0x8003c3 <portBFunctions+0x7>
    1a02:	fc 01       	movw	r30, r24
    1a04:	09 95       	icall
    1a06:	8c 81       	ldd	r24, Y+4	; 0x04
    1a08:	88 2f       	mov	r24, r24
    1a0a:	90 e0       	ldi	r25, 0x00	; 0
    1a0c:	80 71       	andi	r24, 0x10	; 16
    1a0e:	99 27       	eor	r25, r25
    1a10:	89 2b       	or	r24, r25
    1a12:	31 f0       	breq	.+12     	; 0x1a20 <__vector_3+0x108>
    1a14:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <portBFunctions+0x8>
    1a18:	90 91 c5 03 	lds	r25, 0x03C5	; 0x8003c5 <portBFunctions+0x9>
    1a1c:	fc 01       	movw	r30, r24
    1a1e:	09 95       	icall
    1a20:	8c 81       	ldd	r24, Y+4	; 0x04
    1a22:	88 2f       	mov	r24, r24
    1a24:	90 e0       	ldi	r25, 0x00	; 0
    1a26:	80 72       	andi	r24, 0x20	; 32
    1a28:	99 27       	eor	r25, r25
    1a2a:	89 2b       	or	r24, r25
    1a2c:	49 f0       	breq	.+18     	; 0x1a40 <__vector_3+0x128>
    1a2e:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <portBFunctions+0xa>
    1a32:	90 91 c7 03 	lds	r25, 0x03C7	; 0x8003c7 <portBFunctions+0xb>
    1a36:	fc 01       	movw	r30, r24
    1a38:	09 95       	icall
    1a3a:	01 c0       	rjmp	.+2      	; 0x1a3e <__vector_3+0x126>
    1a3c:	00 00       	nop
    1a3e:	00 00       	nop
    1a40:	00 00       	nop
    1a42:	0f 90       	pop	r0
    1a44:	0f 90       	pop	r0
    1a46:	0f 90       	pop	r0
    1a48:	0f 90       	pop	r0
    1a4a:	df 91       	pop	r29
    1a4c:	cf 91       	pop	r28
    1a4e:	ff 91       	pop	r31
    1a50:	ef 91       	pop	r30
    1a52:	bf 91       	pop	r27
    1a54:	af 91       	pop	r26
    1a56:	9f 91       	pop	r25
    1a58:	8f 91       	pop	r24
    1a5a:	7f 91       	pop	r23
    1a5c:	6f 91       	pop	r22
    1a5e:	5f 91       	pop	r21
    1a60:	4f 91       	pop	r20
    1a62:	3f 91       	pop	r19
    1a64:	2f 91       	pop	r18
    1a66:	0f 90       	pop	r0
    1a68:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1a6c:	0f 90       	pop	r0
    1a6e:	1f 90       	pop	r1
    1a70:	18 95       	reti

00001a72 <__vector_4>:
    1a72:	1f 92       	push	r1
    1a74:	0f 92       	push	r0
    1a76:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1a7a:	0f 92       	push	r0
    1a7c:	11 24       	eor	r1, r1
    1a7e:	2f 93       	push	r18
    1a80:	3f 93       	push	r19
    1a82:	4f 93       	push	r20
    1a84:	5f 93       	push	r21
    1a86:	6f 93       	push	r22
    1a88:	7f 93       	push	r23
    1a8a:	8f 93       	push	r24
    1a8c:	9f 93       	push	r25
    1a8e:	af 93       	push	r26
    1a90:	bf 93       	push	r27
    1a92:	ef 93       	push	r30
    1a94:	ff 93       	push	r31
    1a96:	cf 93       	push	r28
    1a98:	df 93       	push	r29
    1a9a:	00 d0       	rcall	.+0      	; 0x1a9c <__vector_4+0x2a>
    1a9c:	00 d0       	rcall	.+0      	; 0x1a9e <__vector_4+0x2c>
    1a9e:	cd b7       	in	r28, 0x3d	; 61
    1aa0:	de b7       	in	r29, 0x3e	; 62
    1aa2:	86 e2       	ldi	r24, 0x26	; 38
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	fc 01       	movw	r30, r24
    1aa8:	80 81       	ld	r24, Z
    1aaa:	89 83       	std	Y+1, r24	; 0x01
    1aac:	90 91 e9 03 	lds	r25, 0x03E9	; 0x8003e9 <_ZL13portSnapshotC>
    1ab0:	89 81       	ldd	r24, Y+1	; 0x01
    1ab2:	89 27       	eor	r24, r25
    1ab4:	8a 83       	std	Y+2, r24	; 0x02
    1ab6:	90 91 e7 03 	lds	r25, 0x03E7	; 0x8003e7 <risingPinsPORTC>
    1aba:	89 81       	ldd	r24, Y+1	; 0x01
    1abc:	89 23       	and	r24, r25
    1abe:	8b 83       	std	Y+3, r24	; 0x03
    1ac0:	89 81       	ldd	r24, Y+1	; 0x01
    1ac2:	80 95       	com	r24
    1ac4:	90 91 e8 03 	lds	r25, 0x03E8	; 0x8003e8 <fallingPinsPORTC>
    1ac8:	89 23       	and	r24, r25
    1aca:	8c 83       	std	Y+4, r24	; 0x04
    1acc:	9c 81       	ldd	r25, Y+4	; 0x04
    1ace:	8b 81       	ldd	r24, Y+3	; 0x03
    1ad0:	89 2b       	or	r24, r25
    1ad2:	8c 83       	std	Y+4, r24	; 0x04
    1ad4:	9c 81       	ldd	r25, Y+4	; 0x04
    1ad6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ad8:	89 23       	and	r24, r25
    1ada:	8c 83       	std	Y+4, r24	; 0x04
    1adc:	8c e6       	ldi	r24, 0x6C	; 108
    1ade:	90 e0       	ldi	r25, 0x00	; 0
    1ae0:	fc 01       	movw	r30, r24
    1ae2:	80 81       	ld	r24, Z
    1ae4:	9c 81       	ldd	r25, Y+4	; 0x04
    1ae6:	89 23       	and	r24, r25
    1ae8:	8c 83       	std	Y+4, r24	; 0x04
    1aea:	89 81       	ldd	r24, Y+1	; 0x01
    1aec:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <_ZL13portSnapshotC>
    1af0:	8c 81       	ldd	r24, Y+4	; 0x04
    1af2:	88 23       	and	r24, r24
    1af4:	09 f4       	brne	.+2      	; 0x1af8 <__vector_4+0x86>
    1af6:	4f c0       	rjmp	.+158    	; 0x1b96 <__vector_4+0x124>
    1af8:	8c 81       	ldd	r24, Y+4	; 0x04
    1afa:	88 2f       	mov	r24, r24
    1afc:	90 e0       	ldi	r25, 0x00	; 0
    1afe:	81 70       	andi	r24, 0x01	; 1
    1b00:	99 27       	eor	r25, r25
    1b02:	89 2b       	or	r24, r25
    1b04:	31 f0       	breq	.+12     	; 0x1b12 <__vector_4+0xa0>
    1b06:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <portCFunctions>
    1b0a:	90 91 c9 03 	lds	r25, 0x03C9	; 0x8003c9 <portCFunctions+0x1>
    1b0e:	fc 01       	movw	r30, r24
    1b10:	09 95       	icall
    1b12:	8c 81       	ldd	r24, Y+4	; 0x04
    1b14:	88 2f       	mov	r24, r24
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	82 70       	andi	r24, 0x02	; 2
    1b1a:	99 27       	eor	r25, r25
    1b1c:	89 2b       	or	r24, r25
    1b1e:	31 f0       	breq	.+12     	; 0x1b2c <__vector_4+0xba>
    1b20:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <portCFunctions+0x2>
    1b24:	90 91 cb 03 	lds	r25, 0x03CB	; 0x8003cb <portCFunctions+0x3>
    1b28:	fc 01       	movw	r30, r24
    1b2a:	09 95       	icall
    1b2c:	8c 81       	ldd	r24, Y+4	; 0x04
    1b2e:	88 2f       	mov	r24, r24
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	84 70       	andi	r24, 0x04	; 4
    1b34:	99 27       	eor	r25, r25
    1b36:	89 2b       	or	r24, r25
    1b38:	31 f0       	breq	.+12     	; 0x1b46 <__vector_4+0xd4>
    1b3a:	80 91 cc 03 	lds	r24, 0x03CC	; 0x8003cc <portCFunctions+0x4>
    1b3e:	90 91 cd 03 	lds	r25, 0x03CD	; 0x8003cd <portCFunctions+0x5>
    1b42:	fc 01       	movw	r30, r24
    1b44:	09 95       	icall
    1b46:	8c 81       	ldd	r24, Y+4	; 0x04
    1b48:	88 2f       	mov	r24, r24
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	88 70       	andi	r24, 0x08	; 8
    1b4e:	99 27       	eor	r25, r25
    1b50:	89 2b       	or	r24, r25
    1b52:	31 f0       	breq	.+12     	; 0x1b60 <__vector_4+0xee>
    1b54:	80 91 ce 03 	lds	r24, 0x03CE	; 0x8003ce <portCFunctions+0x6>
    1b58:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <portCFunctions+0x7>
    1b5c:	fc 01       	movw	r30, r24
    1b5e:	09 95       	icall
    1b60:	8c 81       	ldd	r24, Y+4	; 0x04
    1b62:	88 2f       	mov	r24, r24
    1b64:	90 e0       	ldi	r25, 0x00	; 0
    1b66:	80 71       	andi	r24, 0x10	; 16
    1b68:	99 27       	eor	r25, r25
    1b6a:	89 2b       	or	r24, r25
    1b6c:	31 f0       	breq	.+12     	; 0x1b7a <__vector_4+0x108>
    1b6e:	80 91 d0 03 	lds	r24, 0x03D0	; 0x8003d0 <portCFunctions+0x8>
    1b72:	90 91 d1 03 	lds	r25, 0x03D1	; 0x8003d1 <portCFunctions+0x9>
    1b76:	fc 01       	movw	r30, r24
    1b78:	09 95       	icall
    1b7a:	8c 81       	ldd	r24, Y+4	; 0x04
    1b7c:	88 2f       	mov	r24, r24
    1b7e:	90 e0       	ldi	r25, 0x00	; 0
    1b80:	80 72       	andi	r24, 0x20	; 32
    1b82:	99 27       	eor	r25, r25
    1b84:	89 2b       	or	r24, r25
    1b86:	49 f0       	breq	.+18     	; 0x1b9a <__vector_4+0x128>
    1b88:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <portCFunctions+0xa>
    1b8c:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <portCFunctions+0xb>
    1b90:	fc 01       	movw	r30, r24
    1b92:	09 95       	icall
    1b94:	01 c0       	rjmp	.+2      	; 0x1b98 <__vector_4+0x126>
    1b96:	00 00       	nop
    1b98:	00 00       	nop
    1b9a:	00 00       	nop
    1b9c:	0f 90       	pop	r0
    1b9e:	0f 90       	pop	r0
    1ba0:	0f 90       	pop	r0
    1ba2:	0f 90       	pop	r0
    1ba4:	df 91       	pop	r29
    1ba6:	cf 91       	pop	r28
    1ba8:	ff 91       	pop	r31
    1baa:	ef 91       	pop	r30
    1bac:	bf 91       	pop	r27
    1bae:	af 91       	pop	r26
    1bb0:	9f 91       	pop	r25
    1bb2:	8f 91       	pop	r24
    1bb4:	7f 91       	pop	r23
    1bb6:	6f 91       	pop	r22
    1bb8:	5f 91       	pop	r21
    1bba:	4f 91       	pop	r20
    1bbc:	3f 91       	pop	r19
    1bbe:	2f 91       	pop	r18
    1bc0:	0f 90       	pop	r0
    1bc2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1bc6:	0f 90       	pop	r0
    1bc8:	1f 90       	pop	r1
    1bca:	18 95       	reti

00001bcc <__vector_5>:
    1bcc:	1f 92       	push	r1
    1bce:	0f 92       	push	r0
    1bd0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1bd4:	0f 92       	push	r0
    1bd6:	11 24       	eor	r1, r1
    1bd8:	2f 93       	push	r18
    1bda:	3f 93       	push	r19
    1bdc:	4f 93       	push	r20
    1bde:	5f 93       	push	r21
    1be0:	6f 93       	push	r22
    1be2:	7f 93       	push	r23
    1be4:	8f 93       	push	r24
    1be6:	9f 93       	push	r25
    1be8:	af 93       	push	r26
    1bea:	bf 93       	push	r27
    1bec:	ef 93       	push	r30
    1bee:	ff 93       	push	r31
    1bf0:	cf 93       	push	r28
    1bf2:	df 93       	push	r29
    1bf4:	00 d0       	rcall	.+0      	; 0x1bf6 <__vector_5+0x2a>
    1bf6:	00 d0       	rcall	.+0      	; 0x1bf8 <__vector_5+0x2c>
    1bf8:	cd b7       	in	r28, 0x3d	; 61
    1bfa:	de b7       	in	r29, 0x3e	; 62
    1bfc:	89 e2       	ldi	r24, 0x29	; 41
    1bfe:	90 e0       	ldi	r25, 0x00	; 0
    1c00:	fc 01       	movw	r30, r24
    1c02:	80 81       	ld	r24, Z
    1c04:	89 83       	std	Y+1, r24	; 0x01
    1c06:	90 91 ec 03 	lds	r25, 0x03EC	; 0x8003ec <_ZL13portSnapshotD>
    1c0a:	89 81       	ldd	r24, Y+1	; 0x01
    1c0c:	89 27       	eor	r24, r25
    1c0e:	8a 83       	std	Y+2, r24	; 0x02
    1c10:	90 91 ea 03 	lds	r25, 0x03EA	; 0x8003ea <risingPinsPORTD>
    1c14:	89 81       	ldd	r24, Y+1	; 0x01
    1c16:	89 23       	and	r24, r25
    1c18:	8b 83       	std	Y+3, r24	; 0x03
    1c1a:	89 81       	ldd	r24, Y+1	; 0x01
    1c1c:	80 95       	com	r24
    1c1e:	90 91 eb 03 	lds	r25, 0x03EB	; 0x8003eb <fallingPinsPORTD>
    1c22:	89 23       	and	r24, r25
    1c24:	8c 83       	std	Y+4, r24	; 0x04
    1c26:	9c 81       	ldd	r25, Y+4	; 0x04
    1c28:	8b 81       	ldd	r24, Y+3	; 0x03
    1c2a:	89 2b       	or	r24, r25
    1c2c:	8c 83       	std	Y+4, r24	; 0x04
    1c2e:	9c 81       	ldd	r25, Y+4	; 0x04
    1c30:	8a 81       	ldd	r24, Y+2	; 0x02
    1c32:	89 23       	and	r24, r25
    1c34:	8c 83       	std	Y+4, r24	; 0x04
    1c36:	8d e6       	ldi	r24, 0x6D	; 109
    1c38:	90 e0       	ldi	r25, 0x00	; 0
    1c3a:	fc 01       	movw	r30, r24
    1c3c:	80 81       	ld	r24, Z
    1c3e:	9c 81       	ldd	r25, Y+4	; 0x04
    1c40:	89 23       	and	r24, r25
    1c42:	8c 83       	std	Y+4, r24	; 0x04
    1c44:	89 81       	ldd	r24, Y+1	; 0x01
    1c46:	80 93 ec 03 	sts	0x03EC, r24	; 0x8003ec <_ZL13portSnapshotD>
    1c4a:	8c 81       	ldd	r24, Y+4	; 0x04
    1c4c:	88 23       	and	r24, r24
    1c4e:	09 f4       	brne	.+2      	; 0x1c52 <__vector_5+0x86>
    1c50:	65 c0       	rjmp	.+202    	; 0x1d1c <__vector_5+0x150>
    1c52:	8c 81       	ldd	r24, Y+4	; 0x04
    1c54:	88 2f       	mov	r24, r24
    1c56:	90 e0       	ldi	r25, 0x00	; 0
    1c58:	81 70       	andi	r24, 0x01	; 1
    1c5a:	99 27       	eor	r25, r25
    1c5c:	89 2b       	or	r24, r25
    1c5e:	31 f0       	breq	.+12     	; 0x1c6c <__vector_5+0xa0>
    1c60:	80 91 d4 03 	lds	r24, 0x03D4	; 0x8003d4 <portDFunctions>
    1c64:	90 91 d5 03 	lds	r25, 0x03D5	; 0x8003d5 <portDFunctions+0x1>
    1c68:	fc 01       	movw	r30, r24
    1c6a:	09 95       	icall
    1c6c:	8c 81       	ldd	r24, Y+4	; 0x04
    1c6e:	88 2f       	mov	r24, r24
    1c70:	90 e0       	ldi	r25, 0x00	; 0
    1c72:	82 70       	andi	r24, 0x02	; 2
    1c74:	99 27       	eor	r25, r25
    1c76:	89 2b       	or	r24, r25
    1c78:	31 f0       	breq	.+12     	; 0x1c86 <__vector_5+0xba>
    1c7a:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <portDFunctions+0x2>
    1c7e:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <portDFunctions+0x3>
    1c82:	fc 01       	movw	r30, r24
    1c84:	09 95       	icall
    1c86:	8c 81       	ldd	r24, Y+4	; 0x04
    1c88:	88 2f       	mov	r24, r24
    1c8a:	90 e0       	ldi	r25, 0x00	; 0
    1c8c:	84 70       	andi	r24, 0x04	; 4
    1c8e:	99 27       	eor	r25, r25
    1c90:	89 2b       	or	r24, r25
    1c92:	31 f0       	breq	.+12     	; 0x1ca0 <__vector_5+0xd4>
    1c94:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <portDFunctions+0x4>
    1c98:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <portDFunctions+0x5>
    1c9c:	fc 01       	movw	r30, r24
    1c9e:	09 95       	icall
    1ca0:	8c 81       	ldd	r24, Y+4	; 0x04
    1ca2:	88 2f       	mov	r24, r24
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	88 70       	andi	r24, 0x08	; 8
    1ca8:	99 27       	eor	r25, r25
    1caa:	89 2b       	or	r24, r25
    1cac:	31 f0       	breq	.+12     	; 0x1cba <__vector_5+0xee>
    1cae:	80 91 da 03 	lds	r24, 0x03DA	; 0x8003da <portDFunctions+0x6>
    1cb2:	90 91 db 03 	lds	r25, 0x03DB	; 0x8003db <portDFunctions+0x7>
    1cb6:	fc 01       	movw	r30, r24
    1cb8:	09 95       	icall
    1cba:	8c 81       	ldd	r24, Y+4	; 0x04
    1cbc:	88 2f       	mov	r24, r24
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	80 71       	andi	r24, 0x10	; 16
    1cc2:	99 27       	eor	r25, r25
    1cc4:	89 2b       	or	r24, r25
    1cc6:	31 f0       	breq	.+12     	; 0x1cd4 <__vector_5+0x108>
    1cc8:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <portDFunctions+0x8>
    1ccc:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <portDFunctions+0x9>
    1cd0:	fc 01       	movw	r30, r24
    1cd2:	09 95       	icall
    1cd4:	8c 81       	ldd	r24, Y+4	; 0x04
    1cd6:	88 2f       	mov	r24, r24
    1cd8:	90 e0       	ldi	r25, 0x00	; 0
    1cda:	80 72       	andi	r24, 0x20	; 32
    1cdc:	99 27       	eor	r25, r25
    1cde:	89 2b       	or	r24, r25
    1ce0:	31 f0       	breq	.+12     	; 0x1cee <__vector_5+0x122>
    1ce2:	80 91 de 03 	lds	r24, 0x03DE	; 0x8003de <portDFunctions+0xa>
    1ce6:	90 91 df 03 	lds	r25, 0x03DF	; 0x8003df <portDFunctions+0xb>
    1cea:	fc 01       	movw	r30, r24
    1cec:	09 95       	icall
    1cee:	8c 81       	ldd	r24, Y+4	; 0x04
    1cf0:	88 2f       	mov	r24, r24
    1cf2:	90 e0       	ldi	r25, 0x00	; 0
    1cf4:	80 74       	andi	r24, 0x40	; 64
    1cf6:	99 27       	eor	r25, r25
    1cf8:	89 2b       	or	r24, r25
    1cfa:	31 f0       	breq	.+12     	; 0x1d08 <__vector_5+0x13c>
    1cfc:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <portDFunctions+0xc>
    1d00:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <portDFunctions+0xd>
    1d04:	fc 01       	movw	r30, r24
    1d06:	09 95       	icall
    1d08:	8c 81       	ldd	r24, Y+4	; 0x04
    1d0a:	88 23       	and	r24, r24
    1d0c:	4c f4       	brge	.+18     	; 0x1d20 <__vector_5+0x154>
    1d0e:	80 91 e2 03 	lds	r24, 0x03E2	; 0x8003e2 <portDFunctions+0xe>
    1d12:	90 91 e3 03 	lds	r25, 0x03E3	; 0x8003e3 <portDFunctions+0xf>
    1d16:	fc 01       	movw	r30, r24
    1d18:	09 95       	icall
    1d1a:	01 c0       	rjmp	.+2      	; 0x1d1e <__vector_5+0x152>
    1d1c:	00 00       	nop
    1d1e:	00 00       	nop
    1d20:	00 00       	nop
    1d22:	0f 90       	pop	r0
    1d24:	0f 90       	pop	r0
    1d26:	0f 90       	pop	r0
    1d28:	0f 90       	pop	r0
    1d2a:	df 91       	pop	r29
    1d2c:	cf 91       	pop	r28
    1d2e:	ff 91       	pop	r31
    1d30:	ef 91       	pop	r30
    1d32:	bf 91       	pop	r27
    1d34:	af 91       	pop	r26
    1d36:	9f 91       	pop	r25
    1d38:	8f 91       	pop	r24
    1d3a:	7f 91       	pop	r23
    1d3c:	6f 91       	pop	r22
    1d3e:	5f 91       	pop	r21
    1d40:	4f 91       	pop	r20
    1d42:	3f 91       	pop	r19
    1d44:	2f 91       	pop	r18
    1d46:	0f 90       	pop	r0
    1d48:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1d4c:	0f 90       	pop	r0
    1d4e:	1f 90       	pop	r1
    1d50:	18 95       	reti

00001d52 <__vector_13>:
    1d52:	1f 92       	push	r1
    1d54:	0f 92       	push	r0
    1d56:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1d5a:	0f 92       	push	r0
    1d5c:	11 24       	eor	r1, r1
    1d5e:	2f 93       	push	r18
    1d60:	3f 93       	push	r19
    1d62:	4f 93       	push	r20
    1d64:	5f 93       	push	r21
    1d66:	6f 93       	push	r22
    1d68:	7f 93       	push	r23
    1d6a:	8f 93       	push	r24
    1d6c:	9f 93       	push	r25
    1d6e:	af 93       	push	r26
    1d70:	bf 93       	push	r27
    1d72:	ef 93       	push	r30
    1d74:	ff 93       	push	r31
    1d76:	cf 93       	push	r28
    1d78:	df 93       	push	r29
    1d7a:	cd b7       	in	r28, 0x3d	; 61
    1d7c:	de b7       	in	r29, 0x3e	; 62
    1d7e:	26 97       	sbiw	r28, 0x06	; 6
    1d80:	de bf       	out	0x3e, r29	; 62
    1d82:	cd bf       	out	0x3d, r28	; 61
    1d84:	24 e8       	ldi	r18, 0x84	; 132
    1d86:	30 e0       	ldi	r19, 0x00	; 0
    1d88:	80 91 e3 01 	lds	r24, 0x01E3	; 0x8001e3 <stepDelay>
    1d8c:	90 91 e4 01 	lds	r25, 0x01E4	; 0x8001e4 <stepDelay+0x1>
    1d90:	a0 91 e5 01 	lds	r26, 0x01E5	; 0x8001e5 <stepDelay+0x2>
    1d94:	b0 91 e6 01 	lds	r27, 0x01E6	; 0x8001e6 <stepDelay+0x3>
    1d98:	80 95       	com	r24
    1d9a:	90 95       	com	r25
    1d9c:	f9 01       	movw	r30, r18
    1d9e:	91 83       	std	Z+1, r25	; 0x01
    1da0:	80 83       	st	Z, r24
    1da2:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <RUN_MODE>
    1da6:	81 e0       	ldi	r24, 0x01	; 1
    1da8:	91 30       	cpi	r25, 0x01	; 1
    1daa:	09 f4       	brne	.+2      	; 0x1dae <__vector_13+0x5c>
    1dac:	80 e0       	ldi	r24, 0x00	; 0
    1dae:	88 23       	and	r24, r24
    1db0:	09 f4       	brne	.+2      	; 0x1db4 <__vector_13+0x62>
    1db2:	a8 c0       	rjmp	.+336    	; 0x1f04 <__vector_13+0x1b2>
    1db4:	20 91 16 04 	lds	r18, 0x0416	; 0x800416 <DESIRED_POSITION>
    1db8:	30 91 17 04 	lds	r19, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    1dbc:	40 91 18 04 	lds	r20, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    1dc0:	50 91 19 04 	lds	r21, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    1dc4:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <STEPS>
    1dc8:	90 91 13 04 	lds	r25, 0x0413	; 0x800413 <STEPS+0x1>
    1dcc:	a0 91 14 04 	lds	r26, 0x0414	; 0x800414 <STEPS+0x2>
    1dd0:	b0 91 15 04 	lds	r27, 0x0415	; 0x800415 <STEPS+0x3>
    1dd4:	61 e0       	ldi	r22, 0x01	; 1
    1dd6:	28 17       	cp	r18, r24
    1dd8:	39 07       	cpc	r19, r25
    1dda:	4a 07       	cpc	r20, r26
    1ddc:	5b 07       	cpc	r21, r27
    1dde:	09 f4       	brne	.+2      	; 0x1de2 <__vector_13+0x90>
    1de0:	60 e0       	ldi	r22, 0x00	; 0
    1de2:	66 23       	and	r22, r22
    1de4:	11 f0       	breq	.+4      	; 0x1dea <__vector_13+0x98>
    1de6:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <_Z16ToggleStepOutputv>
    1dea:	20 91 16 04 	lds	r18, 0x0416	; 0x800416 <DESIRED_POSITION>
    1dee:	30 91 17 04 	lds	r19, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    1df2:	40 91 18 04 	lds	r20, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    1df6:	50 91 19 04 	lds	r21, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    1dfa:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <STEPS>
    1dfe:	90 91 13 04 	lds	r25, 0x0413	; 0x800413 <STEPS+0x1>
    1e02:	a0 91 14 04 	lds	r26, 0x0414	; 0x800414 <STEPS+0x2>
    1e06:	b0 91 15 04 	lds	r27, 0x0415	; 0x800415 <STEPS+0x3>
    1e0a:	61 e0       	ldi	r22, 0x01	; 1
    1e0c:	82 17       	cp	r24, r18
    1e0e:	93 07       	cpc	r25, r19
    1e10:	a4 07       	cpc	r26, r20
    1e12:	b5 07       	cpc	r27, r21
    1e14:	0c f0       	brlt	.+2      	; 0x1e18 <__vector_13+0xc6>
    1e16:	60 e0       	ldi	r22, 0x00	; 0
    1e18:	66 23       	and	r22, r22
    1e1a:	51 f1       	breq	.+84     	; 0x1e70 <__vector_13+0x11e>
    1e1c:	80 91 e1 01 	lds	r24, 0x01E1	; 0x8001e1 <_ZL18directionOutputPin>
    1e20:	90 91 e2 01 	lds	r25, 0x01E2	; 0x8001e2 <_ZL18directionOutputPin+0x1>
    1e24:	84 58       	subi	r24, 0x84	; 132
    1e26:	9f 4f       	sbci	r25, 0xFF	; 255
    1e28:	9a 83       	std	Y+2, r25	; 0x02
    1e2a:	89 83       	std	Y+1, r24	; 0x01
    1e2c:	89 81       	ldd	r24, Y+1	; 0x01
    1e2e:	9a 81       	ldd	r25, Y+2	; 0x02
    1e30:	fc 01       	movw	r30, r24
    1e32:	84 91       	lpm	r24, Z
    1e34:	8b 83       	std	Y+3, r24	; 0x03
    1e36:	4b 81       	ldd	r20, Y+3	; 0x03
    1e38:	8b e2       	ldi	r24, 0x2B	; 43
    1e3a:	90 e0       	ldi	r25, 0x00	; 0
    1e3c:	2b e2       	ldi	r18, 0x2B	; 43
    1e3e:	30 e0       	ldi	r19, 0x00	; 0
    1e40:	f9 01       	movw	r30, r18
    1e42:	20 81       	ld	r18, Z
    1e44:	24 2b       	or	r18, r20
    1e46:	fc 01       	movw	r30, r24
    1e48:	20 83       	st	Z, r18
    1e4a:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <STEPS>
    1e4e:	90 91 13 04 	lds	r25, 0x0413	; 0x800413 <STEPS+0x1>
    1e52:	a0 91 14 04 	lds	r26, 0x0414	; 0x800414 <STEPS+0x2>
    1e56:	b0 91 15 04 	lds	r27, 0x0415	; 0x800415 <STEPS+0x3>
    1e5a:	01 96       	adiw	r24, 0x01	; 1
    1e5c:	a1 1d       	adc	r26, r1
    1e5e:	b1 1d       	adc	r27, r1
    1e60:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <STEPS>
    1e64:	90 93 13 04 	sts	0x0413, r25	; 0x800413 <STEPS+0x1>
    1e68:	a0 93 14 04 	sts	0x0414, r26	; 0x800414 <STEPS+0x2>
    1e6c:	b0 93 15 04 	sts	0x0415, r27	; 0x800415 <STEPS+0x3>
    1e70:	20 91 16 04 	lds	r18, 0x0416	; 0x800416 <DESIRED_POSITION>
    1e74:	30 91 17 04 	lds	r19, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    1e78:	40 91 18 04 	lds	r20, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    1e7c:	50 91 19 04 	lds	r21, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    1e80:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <STEPS>
    1e84:	90 91 13 04 	lds	r25, 0x0413	; 0x800413 <STEPS+0x1>
    1e88:	a0 91 14 04 	lds	r26, 0x0414	; 0x800414 <STEPS+0x2>
    1e8c:	b0 91 15 04 	lds	r27, 0x0415	; 0x800415 <STEPS+0x3>
    1e90:	61 e0       	ldi	r22, 0x01	; 1
    1e92:	28 17       	cp	r18, r24
    1e94:	39 07       	cpc	r19, r25
    1e96:	4a 07       	cpc	r20, r26
    1e98:	5b 07       	cpc	r21, r27
    1e9a:	0c f0       	brlt	.+2      	; 0x1e9e <__vector_13+0x14c>
    1e9c:	60 e0       	ldi	r22, 0x00	; 0
    1e9e:	66 23       	and	r22, r22
    1ea0:	89 f1       	breq	.+98     	; 0x1f04 <__vector_13+0x1b2>
    1ea2:	80 91 e1 01 	lds	r24, 0x01E1	; 0x8001e1 <_ZL18directionOutputPin>
    1ea6:	90 91 e2 01 	lds	r25, 0x01E2	; 0x8001e2 <_ZL18directionOutputPin+0x1>
    1eaa:	84 58       	subi	r24, 0x84	; 132
    1eac:	9f 4f       	sbci	r25, 0xFF	; 255
    1eae:	9d 83       	std	Y+5, r25	; 0x05
    1eb0:	8c 83       	std	Y+4, r24	; 0x04
    1eb2:	8c 81       	ldd	r24, Y+4	; 0x04
    1eb4:	9d 81       	ldd	r25, Y+5	; 0x05
    1eb6:	fc 01       	movw	r30, r24
    1eb8:	84 91       	lpm	r24, Z
    1eba:	8e 83       	std	Y+6, r24	; 0x06
    1ebc:	8e 81       	ldd	r24, Y+6	; 0x06
    1ebe:	88 2f       	mov	r24, r24
    1ec0:	90 e0       	ldi	r25, 0x00	; 0
    1ec2:	ac 01       	movw	r20, r24
    1ec4:	40 95       	com	r20
    1ec6:	50 95       	com	r21
    1ec8:	8b e2       	ldi	r24, 0x2B	; 43
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	2b e2       	ldi	r18, 0x2B	; 43
    1ece:	30 e0       	ldi	r19, 0x00	; 0
    1ed0:	f9 01       	movw	r30, r18
    1ed2:	20 81       	ld	r18, Z
    1ed4:	32 2f       	mov	r19, r18
    1ed6:	24 2f       	mov	r18, r20
    1ed8:	23 23       	and	r18, r19
    1eda:	fc 01       	movw	r30, r24
    1edc:	20 83       	st	Z, r18
    1ede:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <STEPS>
    1ee2:	90 91 13 04 	lds	r25, 0x0413	; 0x800413 <STEPS+0x1>
    1ee6:	a0 91 14 04 	lds	r26, 0x0414	; 0x800414 <STEPS+0x2>
    1eea:	b0 91 15 04 	lds	r27, 0x0415	; 0x800415 <STEPS+0x3>
    1eee:	01 97       	sbiw	r24, 0x01	; 1
    1ef0:	a1 09       	sbc	r26, r1
    1ef2:	b1 09       	sbc	r27, r1
    1ef4:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <STEPS>
    1ef8:	90 93 13 04 	sts	0x0413, r25	; 0x800413 <STEPS+0x1>
    1efc:	a0 93 14 04 	sts	0x0414, r26	; 0x800414 <STEPS+0x2>
    1f00:	b0 93 15 04 	sts	0x0415, r27	; 0x800415 <STEPS+0x3>
    1f04:	00 00       	nop
    1f06:	26 96       	adiw	r28, 0x06	; 6
    1f08:	0f b6       	in	r0, 0x3f	; 63
    1f0a:	f8 94       	cli
    1f0c:	de bf       	out	0x3e, r29	; 62
    1f0e:	0f be       	out	0x3f, r0	; 63
    1f10:	cd bf       	out	0x3d, r28	; 61
    1f12:	df 91       	pop	r29
    1f14:	cf 91       	pop	r28
    1f16:	ff 91       	pop	r31
    1f18:	ef 91       	pop	r30
    1f1a:	bf 91       	pop	r27
    1f1c:	af 91       	pop	r26
    1f1e:	9f 91       	pop	r25
    1f20:	8f 91       	pop	r24
    1f22:	7f 91       	pop	r23
    1f24:	6f 91       	pop	r22
    1f26:	5f 91       	pop	r21
    1f28:	4f 91       	pop	r20
    1f2a:	3f 91       	pop	r19
    1f2c:	2f 91       	pop	r18
    1f2e:	0f 90       	pop	r0
    1f30:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1f34:	0f 90       	pop	r0
    1f36:	1f 90       	pop	r1
    1f38:	18 95       	reti

00001f3a <_Z17spoolPulse_Vectorv>:
    1f3a:	cf 93       	push	r28
    1f3c:	df 93       	push	r29
    1f3e:	cd b7       	in	r28, 0x3d	; 61
    1f40:	de b7       	in	r29, 0x3e	; 62
    1f42:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <millis>
    1f46:	dc 01       	movw	r26, r24
    1f48:	cb 01       	movw	r24, r22
    1f4a:	80 93 0e 04 	sts	0x040E, r24	; 0x80040e <m>
    1f4e:	90 93 0f 04 	sts	0x040F, r25	; 0x80040f <m+0x1>
    1f52:	a0 93 10 04 	sts	0x0410, r26	; 0x800410 <m+0x2>
    1f56:	b0 93 11 04 	sts	0x0411, r27	; 0x800411 <m+0x3>
    1f5a:	20 91 0e 04 	lds	r18, 0x040E	; 0x80040e <m>
    1f5e:	30 91 0f 04 	lds	r19, 0x040F	; 0x80040f <m+0x1>
    1f62:	40 91 10 04 	lds	r20, 0x0410	; 0x800410 <m+0x2>
    1f66:	50 91 11 04 	lds	r21, 0x0411	; 0x800411 <m+0x3>
    1f6a:	80 91 0a 04 	lds	r24, 0x040A	; 0x80040a <_ZL11last_millis>
    1f6e:	90 91 0b 04 	lds	r25, 0x040B	; 0x80040b <_ZL11last_millis+0x1>
    1f72:	a0 91 0c 04 	lds	r26, 0x040C	; 0x80040c <_ZL11last_millis+0x2>
    1f76:	b0 91 0d 04 	lds	r27, 0x040D	; 0x80040d <_ZL11last_millis+0x3>
    1f7a:	28 17       	cp	r18, r24
    1f7c:	39 07       	cpc	r19, r25
    1f7e:	4a 07       	cpc	r20, r26
    1f80:	5b 07       	cpc	r21, r27
    1f82:	09 f4       	brne	.+2      	; 0x1f86 <_Z17spoolPulse_Vectorv+0x4c>
    1f84:	7f c0       	rjmp	.+254    	; 0x2084 <_Z17spoolPulse_Vectorv+0x14a>
    1f86:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <m>
    1f8a:	90 91 0f 04 	lds	r25, 0x040F	; 0x80040f <m+0x1>
    1f8e:	a0 91 10 04 	lds	r26, 0x0410	; 0x800410 <m+0x2>
    1f92:	b0 91 11 04 	lds	r27, 0x0411	; 0x800411 <m+0x3>
    1f96:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <_ZL11last_millis>
    1f9a:	90 93 0b 04 	sts	0x040B, r25	; 0x80040b <_ZL11last_millis+0x1>
    1f9e:	a0 93 0c 04 	sts	0x040C, r26	; 0x80040c <_ZL11last_millis+0x2>
    1fa2:	b0 93 0d 04 	sts	0x040D, r27	; 0x80040d <_ZL11last_millis+0x3>
    1fa6:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <rpmSpoolTicks>
    1faa:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <rpmSpoolTicks+0x1>
    1fae:	a0 91 f4 03 	lds	r26, 0x03F4	; 0x8003f4 <rpmSpoolTicks+0x2>
    1fb2:	b0 91 f5 03 	lds	r27, 0x03F5	; 0x8003f5 <rpmSpoolTicks+0x3>
    1fb6:	21 e0       	ldi	r18, 0x01	; 1
    1fb8:	89 2b       	or	r24, r25
    1fba:	8a 2b       	or	r24, r26
    1fbc:	8b 2b       	or	r24, r27
    1fbe:	09 f0       	breq	.+2      	; 0x1fc2 <_Z17spoolPulse_Vectorv+0x88>
    1fc0:	20 e0       	ldi	r18, 0x00	; 0
    1fc2:	22 23       	and	r18, r18
    1fc4:	61 f0       	breq	.+24     	; 0x1fde <_Z17spoolPulse_Vectorv+0xa4>
    1fc6:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <millis>
    1fca:	dc 01       	movw	r26, r24
    1fcc:	cb 01       	movw	r24, r22
    1fce:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <spoolTime>
    1fd2:	90 93 f7 03 	sts	0x03F7, r25	; 0x8003f7 <spoolTime+0x1>
    1fd6:	a0 93 f8 03 	sts	0x03F8, r26	; 0x8003f8 <spoolTime+0x2>
    1fda:	b0 93 f9 03 	sts	0x03F9, r27	; 0x8003f9 <spoolTime+0x3>
    1fde:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <rpmSpoolTicks>
    1fe2:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <rpmSpoolTicks+0x1>
    1fe6:	a0 91 f4 03 	lds	r26, 0x03F4	; 0x8003f4 <rpmSpoolTicks+0x2>
    1fea:	b0 91 f5 03 	lds	r27, 0x03F5	; 0x8003f5 <rpmSpoolTicks+0x3>
    1fee:	01 96       	adiw	r24, 0x01	; 1
    1ff0:	a1 1d       	adc	r26, r1
    1ff2:	b1 1d       	adc	r27, r1
    1ff4:	80 93 f2 03 	sts	0x03F2, r24	; 0x8003f2 <rpmSpoolTicks>
    1ff8:	90 93 f3 03 	sts	0x03F3, r25	; 0x8003f3 <rpmSpoolTicks+0x1>
    1ffc:	a0 93 f4 03 	sts	0x03F4, r26	; 0x8003f4 <rpmSpoolTicks+0x2>
    2000:	b0 93 f5 03 	sts	0x03F5, r27	; 0x8003f5 <rpmSpoolTicks+0x3>
    2004:	90 91 27 04 	lds	r25, 0x0427	; 0x800427 <tickFlag>
    2008:	81 e0       	ldi	r24, 0x01	; 1
    200a:	89 27       	eor	r24, r25
    200c:	88 23       	and	r24, r24
    200e:	71 f0       	breq	.+28     	; 0x202c <_Z17spoolPulse_Vectorv+0xf2>
    2010:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <rpmSpoolTicks>
    2014:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <rpmSpoolTicks+0x1>
    2018:	a0 91 f4 03 	lds	r26, 0x03F4	; 0x8003f4 <rpmSpoolTicks+0x2>
    201c:	b0 91 f5 03 	lds	r27, 0x03F5	; 0x8003f5 <rpmSpoolTicks+0x3>
    2020:	0a 97       	sbiw	r24, 0x0a	; 10
    2022:	a1 05       	cpc	r26, r1
    2024:	b1 05       	cpc	r27, r1
    2026:	14 f0       	brlt	.+4      	; 0x202c <_Z17spoolPulse_Vectorv+0xf2>
    2028:	81 e0       	ldi	r24, 0x01	; 1
    202a:	01 c0       	rjmp	.+2      	; 0x202e <_Z17spoolPulse_Vectorv+0xf4>
    202c:	80 e0       	ldi	r24, 0x00	; 0
    202e:	88 23       	and	r24, r24
    2030:	19 f0       	breq	.+6      	; 0x2038 <_Z17spoolPulse_Vectorv+0xfe>
    2032:	81 e0       	ldi	r24, 0x01	; 1
    2034:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <tickFlag>
    2038:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <fullAutoSpoolTicks>
    203c:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <fullAutoSpoolTicks+0x1>
    2040:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <fullAutoSpoolTicks+0x2>
    2044:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <fullAutoSpoolTicks+0x3>
    2048:	01 96       	adiw	r24, 0x01	; 1
    204a:	a1 1d       	adc	r26, r1
    204c:	b1 1d       	adc	r27, r1
    204e:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <fullAutoSpoolTicks>
    2052:	90 93 03 04 	sts	0x0403, r25	; 0x800403 <fullAutoSpoolTicks+0x1>
    2056:	a0 93 04 04 	sts	0x0404, r26	; 0x800404 <fullAutoSpoolTicks+0x2>
    205a:	b0 93 05 04 	sts	0x0405, r27	; 0x800405 <fullAutoSpoolTicks+0x3>
    205e:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <SPOOL_TICKS>
    2062:	90 91 24 04 	lds	r25, 0x0424	; 0x800424 <SPOOL_TICKS+0x1>
    2066:	a0 91 25 04 	lds	r26, 0x0425	; 0x800425 <SPOOL_TICKS+0x2>
    206a:	b0 91 26 04 	lds	r27, 0x0426	; 0x800426 <SPOOL_TICKS+0x3>
    206e:	01 96       	adiw	r24, 0x01	; 1
    2070:	a1 1d       	adc	r26, r1
    2072:	b1 1d       	adc	r27, r1
    2074:	80 93 23 04 	sts	0x0423, r24	; 0x800423 <SPOOL_TICKS>
    2078:	90 93 24 04 	sts	0x0424, r25	; 0x800424 <SPOOL_TICKS+0x1>
    207c:	a0 93 25 04 	sts	0x0425, r26	; 0x800425 <SPOOL_TICKS+0x2>
    2080:	b0 93 26 04 	sts	0x0426, r27	; 0x800426 <SPOOL_TICKS+0x3>
    2084:	00 00       	nop
    2086:	df 91       	pop	r29
    2088:	cf 91       	pop	r28
    208a:	08 95       	ret

0000208c <setup>:
    208c:	cf 93       	push	r28
    208e:	df 93       	push	r29
    2090:	00 d0       	rcall	.+0      	; 0x2092 <setup+0x6>
    2092:	cd b7       	in	r28, 0x3d	; 61
    2094:	de b7       	in	r29, 0x3e	; 62
    2096:	61 e0       	ldi	r22, 0x01	; 1
    2098:	83 e0       	ldi	r24, 0x03	; 3
    209a:	0e 94 5b 1d 	call	0x3ab6	; 0x3ab6 <pinMode>
    209e:	80 91 e1 01 	lds	r24, 0x01E1	; 0x8001e1 <_ZL18directionOutputPin>
    20a2:	90 91 e2 01 	lds	r25, 0x01E2	; 0x8001e2 <_ZL18directionOutputPin+0x1>
    20a6:	61 e0       	ldi	r22, 0x01	; 1
    20a8:	0e 94 5b 1d 	call	0x3ab6	; 0x3ab6 <pinMode>
    20ac:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <_ZL14directionInput>
    20b0:	90 91 e0 01 	lds	r25, 0x01E0	; 0x8001e0 <_ZL14directionInput+0x1>
    20b4:	60 e0       	ldi	r22, 0x00	; 0
    20b6:	0e 94 5b 1d 	call	0x3ab6	; 0x3ab6 <pinMode>
    20ba:	60 e0       	ldi	r22, 0x00	; 0
    20bc:	86 e0       	ldi	r24, 0x06	; 6
    20be:	0e 94 5b 1d 	call	0x3ab6	; 0x3ab6 <pinMode>
    20c2:	41 e0       	ldi	r20, 0x01	; 1
    20c4:	6d e9       	ldi	r22, 0x9D	; 157
    20c6:	7f e0       	ldi	r23, 0x0F	; 15
    20c8:	86 e0       	ldi	r24, 0x06	; 6
    20ca:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_Z15enableInterrupthPFvvEh>
    20ce:	ce 01       	movw	r24, r28
    20d0:	01 96       	adiw	r24, 0x01	; 1
    20d2:	0e 94 8e 00 	call	0x11c	; 0x11c <_ZN17ADC_ConfigurationC1Ev>
    20d6:	ce 01       	movw	r24, r28
    20d8:	02 96       	adiw	r24, 0x02	; 2
    20da:	0e 94 15 18 	call	0x302a	; 0x302a <_ZN25Step_Output_ConfigurationC1Ev>
    20de:	0e 94 9b 00 	call	0x136	; 0x136 <_ZN17ADC_Configuration8SetupADCEv>
    20e2:	0e 94 22 18 	call	0x3044	; 0x3044 <_ZN25Step_Output_Configuration15SetupStepOutputEv>
    20e6:	40 e0       	ldi	r20, 0x00	; 0
    20e8:	52 ec       	ldi	r21, 0xC2	; 194
    20ea:	61 e0       	ldi	r22, 0x01	; 1
    20ec:	70 e0       	ldi	r23, 0x00	; 0
    20ee:	8c e2       	ldi	r24, 0x2C	; 44
    20f0:	94 e0       	ldi	r25, 0x04	; 4
    20f2:	0e 94 33 0a 	call	0x1466	; 0x1466 <_ZN14HardwareSerial5beginEm>
    20f6:	42 e3       	ldi	r20, 0x32	; 50
    20f8:	50 e0       	ldi	r21, 0x00	; 0
    20fa:	60 e0       	ldi	r22, 0x00	; 0
    20fc:	70 e0       	ldi	r23, 0x00	; 0
    20fe:	8c e2       	ldi	r24, 0x2C	; 44
    2100:	94 e0       	ldi	r25, 0x04	; 4
    2102:	0e 94 90 1c 	call	0x3920	; 0x3920 <_ZN6Stream10setTimeoutEm>
    2106:	10 92 f7 01 	sts	0x01F7, r1	; 0x8001f7 <RUN_MODE>
    210a:	ce 01       	movw	r24, r28
    210c:	02 96       	adiw	r24, 0x02	; 2
    210e:	0e 94 41 18 	call	0x3082	; 0x3082 <_ZN25Step_Output_ConfigurationD1Ev>
    2112:	ce 01       	movw	r24, r28
    2114:	01 96       	adiw	r24, 0x01	; 1
    2116:	0e 94 be 00 	call	0x17c	; 0x17c <_ZN17ADC_ConfigurationD1Ev>
    211a:	00 00       	nop
    211c:	0f 90       	pop	r0
    211e:	0f 90       	pop	r0
    2120:	df 91       	pop	r29
    2122:	cf 91       	pop	r28
    2124:	08 95       	ret

00002126 <loop>:
    2126:	cf 92       	push	r12
    2128:	df 92       	push	r13
    212a:	ef 92       	push	r14
    212c:	ff 92       	push	r15
    212e:	0f 93       	push	r16
    2130:	1f 93       	push	r17
    2132:	cf 93       	push	r28
    2134:	df 93       	push	r29
    2136:	cd b7       	in	r28, 0x3d	; 61
    2138:	de b7       	in	r29, 0x3e	; 62
    213a:	2c 97       	sbiw	r28, 0x0c	; 12
    213c:	0f b6       	in	r0, 0x3f	; 63
    213e:	f8 94       	cli
    2140:	de bf       	out	0x3e, r29	; 62
    2142:	0f be       	out	0x3f, r0	; 63
    2144:	cd bf       	out	0x3d, r28	; 61
    2146:	8a e2       	ldi	r24, 0x2A	; 42
    2148:	94 e0       	ldi	r25, 0x04	; 4
    214a:	0e 94 da 07 	call	0xfb4	; 0xfb4 <_ZN15Serial_Commands15commandsProcessEv>
    214e:	89 e2       	ldi	r24, 0x29	; 41
    2150:	90 e0       	ldi	r25, 0x00	; 0
    2152:	fc 01       	movw	r30, r24
    2154:	80 81       	ld	r24, Z
    2156:	88 2f       	mov	r24, r24
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	80 72       	andi	r24, 0x20	; 32
    215c:	99 27       	eor	r25, r25
    215e:	21 e0       	ldi	r18, 0x01	; 1
    2160:	89 2b       	or	r24, r25
    2162:	09 f4       	brne	.+2      	; 0x2166 <loop+0x40>
    2164:	20 e0       	ldi	r18, 0x00	; 0
    2166:	20 93 f1 03 	sts	0x03F1, r18	; 0x8003f1 <directionInputState>
    216a:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <RUN_MODE>
    216e:	81 e0       	ldi	r24, 0x01	; 1
    2170:	92 30       	cpi	r25, 0x02	; 2
    2172:	09 f0       	breq	.+2      	; 0x2176 <loop+0x50>
    2174:	80 e0       	ldi	r24, 0x00	; 0
    2176:	88 23       	and	r24, r24
    2178:	29 f1       	breq	.+74     	; 0x21c4 <loop+0x9e>
    217a:	80 91 1a 04 	lds	r24, 0x041A	; 0x80041a <TRAVERSE_RPM>
    217e:	90 91 1b 04 	lds	r25, 0x041B	; 0x80041b <TRAVERSE_RPM+0x1>
    2182:	a0 91 1c 04 	lds	r26, 0x041C	; 0x80041c <TRAVERSE_RPM+0x2>
    2186:	b0 91 1d 04 	lds	r27, 0x041D	; 0x80041d <TRAVERSE_RPM+0x3>
    218a:	20 91 ed 03 	lds	r18, 0x03ED	; 0x8003ed <traverse_rpm>
    218e:	30 91 ee 03 	lds	r19, 0x03EE	; 0x8003ee <traverse_rpm+0x1>
    2192:	40 91 ef 03 	lds	r20, 0x03EF	; 0x8003ef <traverse_rpm+0x2>
    2196:	50 91 f0 03 	lds	r21, 0x03F0	; 0x8003f0 <traverse_rpm+0x3>
    219a:	61 e0       	ldi	r22, 0x01	; 1
    219c:	82 17       	cp	r24, r18
    219e:	93 07       	cpc	r25, r19
    21a0:	a4 07       	cpc	r26, r20
    21a2:	b5 07       	cpc	r27, r21
    21a4:	09 f4       	brne	.+2      	; 0x21a8 <loop+0x82>
    21a6:	60 e0       	ldi	r22, 0x00	; 0
    21a8:	66 23       	and	r22, r22
    21aa:	61 f0       	breq	.+24     	; 0x21c4 <loop+0x9e>
    21ac:	80 91 1a 04 	lds	r24, 0x041A	; 0x80041a <TRAVERSE_RPM>
    21b0:	90 91 1b 04 	lds	r25, 0x041B	; 0x80041b <TRAVERSE_RPM+0x1>
    21b4:	a0 91 1c 04 	lds	r26, 0x041C	; 0x80041c <TRAVERSE_RPM+0x2>
    21b8:	b0 91 1d 04 	lds	r27, 0x041D	; 0x80041d <TRAVERSE_RPM+0x3>
    21bc:	bc 01       	movw	r22, r24
    21be:	cd 01       	movw	r24, r26
    21c0:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <_Z16Set_Traverse_RPMl>
    21c4:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <RUN_MODE>
    21c8:	81 e0       	ldi	r24, 0x01	; 1
    21ca:	93 30       	cpi	r25, 0x03	; 3
    21cc:	09 f0       	breq	.+2      	; 0x21d0 <loop+0xaa>
    21ce:	80 e0       	ldi	r24, 0x00	; 0
    21d0:	88 23       	and	r24, r24
    21d2:	09 f4       	brne	.+2      	; 0x21d6 <loop+0xb0>
    21d4:	75 c0       	rjmp	.+234    	; 0x22c0 <loop+0x19a>
    21d6:	90 91 f8 01 	lds	r25, 0x01F8	; 0x8001f8 <TRAVERSE_DIRECTION>
    21da:	81 e0       	ldi	r24, 0x01	; 1
    21dc:	91 30       	cpi	r25, 0x01	; 1
    21de:	09 f0       	breq	.+2      	; 0x21e2 <loop+0xbc>
    21e0:	80 e0       	ldi	r24, 0x00	; 0
    21e2:	88 23       	and	r24, r24
    21e4:	41 f1       	breq	.+80     	; 0x2236 <loop+0x110>
    21e6:	c0 90 1a 04 	lds	r12, 0x041A	; 0x80041a <TRAVERSE_RPM>
    21ea:	d0 90 1b 04 	lds	r13, 0x041B	; 0x80041b <TRAVERSE_RPM+0x1>
    21ee:	e0 90 1c 04 	lds	r14, 0x041C	; 0x80041c <TRAVERSE_RPM+0x2>
    21f2:	f0 90 1d 04 	lds	r15, 0x041D	; 0x80041d <TRAVERSE_RPM+0x3>
    21f6:	20 91 ef 01 	lds	r18, 0x01EF	; 0x8001ef <SPOOL_WIDTH>
    21fa:	30 91 f0 01 	lds	r19, 0x01F0	; 0x8001f0 <SPOOL_WIDTH+0x1>
    21fe:	40 91 f1 01 	lds	r20, 0x01F1	; 0x8001f1 <SPOOL_WIDTH+0x2>
    2202:	50 91 f2 01 	lds	r21, 0x01F2	; 0x8001f2 <SPOOL_WIDTH+0x3>
    2206:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
    220a:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
    220e:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
    2212:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
    2216:	82 0f       	add	r24, r18
    2218:	93 1f       	adc	r25, r19
    221a:	a4 1f       	adc	r26, r20
    221c:	b5 1f       	adc	r27, r21
    221e:	bc 01       	movw	r22, r24
    2220:	cd 01       	movw	r24, r26
    2222:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <_Z9MMToStepsm>
    2226:	dc 01       	movw	r26, r24
    2228:	cb 01       	movw	r24, r22
    222a:	a7 01       	movw	r20, r14
    222c:	96 01       	movw	r18, r12
    222e:	bc 01       	movw	r22, r24
    2230:	cd 01       	movw	r24, r26
    2232:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <_Z20MoveAbsolutePositionmm>
    2236:	90 91 f8 01 	lds	r25, 0x01F8	; 0x8001f8 <TRAVERSE_DIRECTION>
    223a:	81 e0       	ldi	r24, 0x01	; 1
    223c:	99 23       	and	r25, r25
    223e:	09 f0       	breq	.+2      	; 0x2242 <loop+0x11c>
    2240:	80 e0       	ldi	r24, 0x00	; 0
    2242:	88 23       	and	r24, r24
    2244:	e1 f0       	breq	.+56     	; 0x227e <loop+0x158>
    2246:	c0 90 1a 04 	lds	r12, 0x041A	; 0x80041a <TRAVERSE_RPM>
    224a:	d0 90 1b 04 	lds	r13, 0x041B	; 0x80041b <TRAVERSE_RPM+0x1>
    224e:	e0 90 1c 04 	lds	r14, 0x041C	; 0x80041c <TRAVERSE_RPM+0x2>
    2252:	f0 90 1d 04 	lds	r15, 0x041D	; 0x80041d <TRAVERSE_RPM+0x3>
    2256:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
    225a:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
    225e:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
    2262:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
    2266:	bc 01       	movw	r22, r24
    2268:	cd 01       	movw	r24, r26
    226a:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <_Z9MMToStepsm>
    226e:	dc 01       	movw	r26, r24
    2270:	cb 01       	movw	r24, r22
    2272:	a7 01       	movw	r20, r14
    2274:	96 01       	movw	r18, r12
    2276:	bc 01       	movw	r22, r24
    2278:	cd 01       	movw	r24, r26
    227a:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <_Z20MoveAbsolutePositionmm>
    227e:	20 91 12 04 	lds	r18, 0x0412	; 0x800412 <STEPS>
    2282:	30 91 13 04 	lds	r19, 0x0413	; 0x800413 <STEPS+0x1>
    2286:	40 91 14 04 	lds	r20, 0x0414	; 0x800414 <STEPS+0x2>
    228a:	50 91 15 04 	lds	r21, 0x0415	; 0x800415 <STEPS+0x3>
    228e:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <DESIRED_POSITION>
    2292:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    2296:	a0 91 18 04 	lds	r26, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    229a:	b0 91 19 04 	lds	r27, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    229e:	61 e0       	ldi	r22, 0x01	; 1
    22a0:	28 17       	cp	r18, r24
    22a2:	39 07       	cpc	r19, r25
    22a4:	4a 07       	cpc	r20, r26
    22a6:	5b 07       	cpc	r21, r27
    22a8:	09 f0       	breq	.+2      	; 0x22ac <loop+0x186>
    22aa:	60 e0       	ldi	r22, 0x00	; 0
    22ac:	66 23       	and	r22, r22
    22ae:	41 f0       	breq	.+16     	; 0x22c0 <loop+0x19a>
    22b0:	90 91 f8 01 	lds	r25, 0x01F8	; 0x8001f8 <TRAVERSE_DIRECTION>
    22b4:	81 e0       	ldi	r24, 0x01	; 1
    22b6:	91 30       	cpi	r25, 0x01	; 1
    22b8:	09 f4       	brne	.+2      	; 0x22bc <loop+0x196>
    22ba:	80 e0       	ldi	r24, 0x00	; 0
    22bc:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <TRAVERSE_DIRECTION>
    22c0:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <RUN_MODE>
    22c4:	81 e0       	ldi	r24, 0x01	; 1
    22c6:	94 30       	cpi	r25, 0x04	; 4
    22c8:	09 f0       	breq	.+2      	; 0x22cc <loop+0x1a6>
    22ca:	80 e0       	ldi	r24, 0x00	; 0
    22cc:	88 23       	and	r24, r24
    22ce:	09 f4       	brne	.+2      	; 0x22d2 <loop+0x1ac>
    22d0:	b1 c2       	rjmp	.+1378   	; 0x2834 <loop+0x70e>
    22d2:	90 91 28 04 	lds	r25, 0x0428	; 0x800428 <previousCaptureState>
    22d6:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <FILAMENT_CAPTURE>
    22da:	98 17       	cp	r25, r24
    22dc:	31 f4       	brne	.+12     	; 0x22ea <loop+0x1c4>
    22de:	90 91 29 04 	lds	r25, 0x0429	; 0x800429 <previousStartPosition>
    22e2:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <START_POSITION>
    22e6:	98 17       	cp	r25, r24
    22e8:	11 f0       	breq	.+4      	; 0x22ee <loop+0x1c8>
    22ea:	81 e0       	ldi	r24, 0x01	; 1
    22ec:	01 c0       	rjmp	.+2      	; 0x22f0 <loop+0x1ca>
    22ee:	80 e0       	ldi	r24, 0x00	; 0
    22f0:	88 23       	and	r24, r24
    22f2:	09 f4       	brne	.+2      	; 0x22f6 <loop+0x1d0>
    22f4:	c5 c0       	rjmp	.+394    	; 0x2480 <loop+0x35a>
    22f6:	90 91 22 04 	lds	r25, 0x0422	; 0x800422 <FILAMENT_CAPTURE>
    22fa:	81 e0       	ldi	r24, 0x01	; 1
    22fc:	89 27       	eor	r24, r25
    22fe:	88 23       	and	r24, r24
    2300:	09 f4       	brne	.+2      	; 0x2304 <loop+0x1de>
    2302:	ba c0       	rjmp	.+372    	; 0x2478 <loop+0x352>
    2304:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <START_POSITION>
    2308:	88 2f       	mov	r24, r24
    230a:	90 e0       	ldi	r25, 0x00	; 0
    230c:	81 30       	cpi	r24, 0x01	; 1
    230e:	91 05       	cpc	r25, r1
    2310:	09 f1       	breq	.+66     	; 0x2354 <loop+0x22e>
    2312:	82 30       	cpi	r24, 0x02	; 2
    2314:	91 05       	cpc	r25, r1
    2316:	09 f4       	brne	.+2      	; 0x231a <loop+0x1f4>
    2318:	8a c0       	rjmp	.+276    	; 0x242e <loop+0x308>
    231a:	89 2b       	or	r24, r25
    231c:	09 f0       	breq	.+2      	; 0x2320 <loop+0x1fa>
    231e:	ac c0       	rjmp	.+344    	; 0x2478 <loop+0x352>
    2320:	81 e0       	ldi	r24, 0x01	; 1
    2322:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <TRAVERSE_DIRECTION>
    2326:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
    232a:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
    232e:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
    2332:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
    2336:	bc 01       	movw	r22, r24
    2338:	cd 01       	movw	r24, r26
    233a:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <_Z9MMToStepsm>
    233e:	dc 01       	movw	r26, r24
    2340:	cb 01       	movw	r24, r22
    2342:	28 e5       	ldi	r18, 0x58	; 88
    2344:	32 e0       	ldi	r19, 0x02	; 2
    2346:	40 e0       	ldi	r20, 0x00	; 0
    2348:	50 e0       	ldi	r21, 0x00	; 0
    234a:	bc 01       	movw	r22, r24
    234c:	cd 01       	movw	r24, r26
    234e:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <_Z20MoveAbsolutePositionmm>
    2352:	92 c0       	rjmp	.+292    	; 0x2478 <loop+0x352>
    2354:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <TRAVERSE_DIRECTION>
    2358:	20 91 ef 01 	lds	r18, 0x01EF	; 0x8001ef <SPOOL_WIDTH>
    235c:	30 91 f0 01 	lds	r19, 0x01F0	; 0x8001f0 <SPOOL_WIDTH+0x1>
    2360:	40 91 f1 01 	lds	r20, 0x01F1	; 0x8001f1 <SPOOL_WIDTH+0x2>
    2364:	50 91 f2 01 	lds	r21, 0x01F2	; 0x8001f2 <SPOOL_WIDTH+0x3>
    2368:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
    236c:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
    2370:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
    2374:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
    2378:	79 01       	movw	r14, r18
    237a:	8a 01       	movw	r16, r20
    237c:	e8 1a       	sub	r14, r24
    237e:	f9 0a       	sbc	r15, r25
    2380:	0a 0b       	sbc	r16, r26
    2382:	1b 0b       	sbc	r17, r27
    2384:	d8 01       	movw	r26, r16
    2386:	c7 01       	movw	r24, r14
    2388:	02 97       	sbiw	r24, 0x02	; 2
    238a:	a1 05       	cpc	r26, r1
    238c:	b1 05       	cpc	r27, r1
    238e:	e8 f0       	brcs	.+58     	; 0x23ca <loop+0x2a4>
    2390:	20 91 ef 01 	lds	r18, 0x01EF	; 0x8001ef <SPOOL_WIDTH>
    2394:	30 91 f0 01 	lds	r19, 0x01F0	; 0x8001f0 <SPOOL_WIDTH+0x1>
    2398:	40 91 f1 01 	lds	r20, 0x01F1	; 0x8001f1 <SPOOL_WIDTH+0x2>
    239c:	50 91 f2 01 	lds	r21, 0x01F2	; 0x8001f2 <SPOOL_WIDTH+0x3>
    23a0:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
    23a4:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
    23a8:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
    23ac:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
    23b0:	79 01       	movw	r14, r18
    23b2:	8a 01       	movw	r16, r20
    23b4:	e8 1a       	sub	r14, r24
    23b6:	f9 0a       	sbc	r15, r25
    23b8:	0a 0b       	sbc	r16, r26
    23ba:	1b 0b       	sbc	r17, r27
    23bc:	d8 01       	movw	r26, r16
    23be:	c7 01       	movw	r24, r14
    23c0:	b6 95       	lsr	r27
    23c2:	a7 95       	ror	r26
    23c4:	97 95       	ror	r25
    23c6:	87 95       	ror	r24
    23c8:	23 c0       	rjmp	.+70     	; 0x2410 <loop+0x2ea>
    23ca:	20 91 ef 01 	lds	r18, 0x01EF	; 0x8001ef <SPOOL_WIDTH>
    23ce:	30 91 f0 01 	lds	r19, 0x01F0	; 0x8001f0 <SPOOL_WIDTH+0x1>
    23d2:	40 91 f1 01 	lds	r20, 0x01F1	; 0x8001f1 <SPOOL_WIDTH+0x2>
    23d6:	50 91 f2 01 	lds	r21, 0x01F2	; 0x8001f2 <SPOOL_WIDTH+0x3>
    23da:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
    23de:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
    23e2:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
    23e6:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
    23ea:	79 01       	movw	r14, r18
    23ec:	8a 01       	movw	r16, r20
    23ee:	e8 1a       	sub	r14, r24
    23f0:	f9 0a       	sbc	r15, r25
    23f2:	0a 0b       	sbc	r16, r26
    23f4:	1b 0b       	sbc	r17, r27
    23f6:	d8 01       	movw	r26, r16
    23f8:	c7 01       	movw	r24, r14
    23fa:	b6 95       	lsr	r27
    23fc:	a7 95       	ror	r26
    23fe:	97 95       	ror	r25
    2400:	87 95       	ror	r24
    2402:	b0 95       	com	r27
    2404:	a0 95       	com	r26
    2406:	90 95       	com	r25
    2408:	81 95       	neg	r24
    240a:	9f 4f       	sbci	r25, 0xFF	; 255
    240c:	af 4f       	sbci	r26, 0xFF	; 255
    240e:	bf 4f       	sbci	r27, 0xFF	; 255
    2410:	bc 01       	movw	r22, r24
    2412:	cd 01       	movw	r24, r26
    2414:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <_Z9MMToStepsm>
    2418:	dc 01       	movw	r26, r24
    241a:	cb 01       	movw	r24, r22
    241c:	28 e5       	ldi	r18, 0x58	; 88
    241e:	32 e0       	ldi	r19, 0x02	; 2
    2420:	40 e0       	ldi	r20, 0x00	; 0
    2422:	50 e0       	ldi	r21, 0x00	; 0
    2424:	bc 01       	movw	r22, r24
    2426:	cd 01       	movw	r24, r26
    2428:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <_Z20MoveAbsolutePositionmm>
    242c:	25 c0       	rjmp	.+74     	; 0x2478 <loop+0x352>
    242e:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <TRAVERSE_DIRECTION>
    2432:	20 91 eb 01 	lds	r18, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
    2436:	30 91 ec 01 	lds	r19, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
    243a:	40 91 ed 01 	lds	r20, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
    243e:	50 91 ee 01 	lds	r21, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
    2442:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <SPOOL_WIDTH>
    2446:	90 91 f0 01 	lds	r25, 0x01F0	; 0x8001f0 <SPOOL_WIDTH+0x1>
    244a:	a0 91 f1 01 	lds	r26, 0x01F1	; 0x8001f1 <SPOOL_WIDTH+0x2>
    244e:	b0 91 f2 01 	lds	r27, 0x01F2	; 0x8001f2 <SPOOL_WIDTH+0x3>
    2452:	82 0f       	add	r24, r18
    2454:	93 1f       	adc	r25, r19
    2456:	a4 1f       	adc	r26, r20
    2458:	b5 1f       	adc	r27, r21
    245a:	bc 01       	movw	r22, r24
    245c:	cd 01       	movw	r24, r26
    245e:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <_Z9MMToStepsm>
    2462:	dc 01       	movw	r26, r24
    2464:	cb 01       	movw	r24, r22
    2466:	28 e5       	ldi	r18, 0x58	; 88
    2468:	32 e0       	ldi	r19, 0x02	; 2
    246a:	40 e0       	ldi	r20, 0x00	; 0
    246c:	50 e0       	ldi	r21, 0x00	; 0
    246e:	bc 01       	movw	r22, r24
    2470:	cd 01       	movw	r24, r26
    2472:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <_Z20MoveAbsolutePositionmm>
    2476:	00 00       	nop
    2478:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <FILAMENT_CAPTURE>
    247c:	80 93 28 04 	sts	0x0428, r24	; 0x800428 <previousCaptureState>
    2480:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <millis>
    2484:	7b 01       	movw	r14, r22
    2486:	8c 01       	movw	r16, r24
    2488:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <fullAutoUpdateInterval>
    248c:	90 91 ea 01 	lds	r25, 0x01EA	; 0x8001ea <fullAutoUpdateInterval+0x1>
    2490:	9c 01       	movw	r18, r24
    2492:	99 0f       	add	r25, r25
    2494:	44 0b       	sbc	r20, r20
    2496:	55 0b       	sbc	r21, r21
    2498:	80 91 fa 03 	lds	r24, 0x03FA	; 0x8003fa <previousFullAutoTime>
    249c:	90 91 fb 03 	lds	r25, 0x03FB	; 0x8003fb <previousFullAutoTime+0x1>
    24a0:	a0 91 fc 03 	lds	r26, 0x03FC	; 0x8003fc <previousFullAutoTime+0x2>
    24a4:	b0 91 fd 03 	lds	r27, 0x03FD	; 0x8003fd <previousFullAutoTime+0x3>
    24a8:	82 0f       	add	r24, r18
    24aa:	93 1f       	adc	r25, r19
    24ac:	a4 1f       	adc	r26, r20
    24ae:	b5 1f       	adc	r27, r21
    24b0:	8e 15       	cp	r24, r14
    24b2:	9f 05       	cpc	r25, r15
    24b4:	a0 07       	cpc	r26, r16
    24b6:	b1 07       	cpc	r27, r17
    24b8:	30 f4       	brcc	.+12     	; 0x24c6 <loop+0x3a0>
    24ba:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <FILAMENT_CAPTURE>
    24be:	88 23       	and	r24, r24
    24c0:	11 f0       	breq	.+4      	; 0x24c6 <loop+0x3a0>
    24c2:	81 e0       	ldi	r24, 0x01	; 1
    24c4:	01 c0       	rjmp	.+2      	; 0x24c8 <loop+0x3a2>
    24c6:	80 e0       	ldi	r24, 0x00	; 0
    24c8:	88 23       	and	r24, r24
    24ca:	09 f4       	brne	.+2      	; 0x24ce <loop+0x3a8>
    24cc:	b3 c1       	rjmp	.+870    	; 0x2834 <loop+0x70e>
    24ce:	90 91 21 04 	lds	r25, 0x0421	; 0x800421 <MOVE_TO_END>
    24d2:	81 e0       	ldi	r24, 0x01	; 1
    24d4:	89 27       	eor	r24, r25
    24d6:	88 23       	and	r24, r24
    24d8:	09 f4       	brne	.+2      	; 0x24dc <loop+0x3b6>
    24da:	40 c1       	rjmp	.+640    	; 0x275c <loop+0x636>
    24dc:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
    24e0:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
    24e4:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
    24e8:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
    24ec:	bc 01       	movw	r22, r24
    24ee:	cd 01       	movw	r24, r26
    24f0:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <_Z9MMToStepsm>
    24f4:	dc 01       	movw	r26, r24
    24f6:	cb 01       	movw	r24, r22
    24f8:	9c 01       	movw	r18, r24
    24fa:	ad 01       	movw	r20, r26
    24fc:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <STEPS>
    2500:	90 91 13 04 	lds	r25, 0x0413	; 0x800413 <STEPS+0x1>
    2504:	a0 91 14 04 	lds	r26, 0x0414	; 0x800414 <STEPS+0x2>
    2508:	b0 91 15 04 	lds	r27, 0x0415	; 0x800415 <STEPS+0x3>
    250c:	61 e0       	ldi	r22, 0x01	; 1
    250e:	82 17       	cp	r24, r18
    2510:	93 07       	cpc	r25, r19
    2512:	a4 07       	cpc	r26, r20
    2514:	b5 07       	cpc	r27, r21
    2516:	0c f0       	brlt	.+2      	; 0x251a <loop+0x3f4>
    2518:	60 e0       	ldi	r22, 0x00	; 0
    251a:	66 23       	and	r22, r22
    251c:	51 f1       	breq	.+84     	; 0x2572 <loop+0x44c>
    251e:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
    2522:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
    2526:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
    252a:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
    252e:	bc 01       	movw	r22, r24
    2530:	cd 01       	movw	r24, r26
    2532:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <_Z9MMToStepsm>
    2536:	dc 01       	movw	r26, r24
    2538:	cb 01       	movw	r24, r22
    253a:	28 e5       	ldi	r18, 0x58	; 88
    253c:	32 e0       	ldi	r19, 0x02	; 2
    253e:	40 e0       	ldi	r20, 0x00	; 0
    2540:	50 e0       	ldi	r21, 0x00	; 0
    2542:	bc 01       	movw	r22, r24
    2544:	cd 01       	movw	r24, r26
    2546:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <_Z20MoveAbsolutePositionmm>
    254a:	81 e0       	ldi	r24, 0x01	; 1
    254c:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <TRAVERSE_DIRECTION>
    2550:	10 92 06 04 	sts	0x0406, r1	; 0x800406 <previousSpoolTicks>
    2554:	10 92 07 04 	sts	0x0407, r1	; 0x800407 <previousSpoolTicks+0x1>
    2558:	10 92 08 04 	sts	0x0408, r1	; 0x800408 <previousSpoolTicks+0x2>
    255c:	10 92 09 04 	sts	0x0409, r1	; 0x800409 <previousSpoolTicks+0x3>
    2560:	10 92 02 04 	sts	0x0402, r1	; 0x800402 <fullAutoSpoolTicks>
    2564:	10 92 03 04 	sts	0x0403, r1	; 0x800403 <fullAutoSpoolTicks+0x1>
    2568:	10 92 04 04 	sts	0x0404, r1	; 0x800404 <fullAutoSpoolTicks+0x2>
    256c:	10 92 05 04 	sts	0x0405, r1	; 0x800405 <fullAutoSpoolTicks+0x3>
    2570:	55 c1       	rjmp	.+682    	; 0x281c <loop+0x6f6>
    2572:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <FILAMENT_DIAMETER>
    2576:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <FILAMENT_DIAMETER+0x1>
    257a:	a0 91 f5 01 	lds	r26, 0x01F5	; 0x8001f5 <FILAMENT_DIAMETER+0x2>
    257e:	b0 91 f6 01 	lds	r27, 0x01F6	; 0x8001f6 <FILAMENT_DIAMETER+0x3>
    2582:	bc 01       	movw	r22, r24
    2584:	cd 01       	movw	r24, r26
    2586:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <_Z9MMToStepsm>
    258a:	dc 01       	movw	r26, r24
    258c:	cb 01       	movw	r24, r22
    258e:	24 e6       	ldi	r18, 0x64	; 100
    2590:	30 e0       	ldi	r19, 0x00	; 0
    2592:	40 e0       	ldi	r20, 0x00	; 0
    2594:	50 e0       	ldi	r21, 0x00	; 0
    2596:	bc 01       	movw	r22, r24
    2598:	cd 01       	movw	r24, r26
    259a:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <__udivmodsi4>
    259e:	da 01       	movw	r26, r20
    25a0:	c9 01       	movw	r24, r18
    25a2:	89 83       	std	Y+1, r24	; 0x01
    25a4:	9a 83       	std	Y+2, r25	; 0x02
    25a6:	ab 83       	std	Y+3, r26	; 0x03
    25a8:	bc 83       	std	Y+4, r27	; 0x04
    25aa:	20 91 02 04 	lds	r18, 0x0402	; 0x800402 <fullAutoSpoolTicks>
    25ae:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <fullAutoSpoolTicks+0x1>
    25b2:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <fullAutoSpoolTicks+0x2>
    25b6:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <fullAutoSpoolTicks+0x3>
    25ba:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <previousSpoolTicks>
    25be:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <previousSpoolTicks+0x1>
    25c2:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <previousSpoolTicks+0x2>
    25c6:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <previousSpoolTicks+0x3>
    25ca:	79 01       	movw	r14, r18
    25cc:	8a 01       	movw	r16, r20
    25ce:	e8 1a       	sub	r14, r24
    25d0:	f9 0a       	sbc	r15, r25
    25d2:	0a 0b       	sbc	r16, r26
    25d4:	1b 0b       	sbc	r17, r27
    25d6:	d8 01       	movw	r26, r16
    25d8:	c7 01       	movw	r24, r14
    25da:	8d 83       	std	Y+5, r24	; 0x05
    25dc:	9e 83       	std	Y+6, r25	; 0x06
    25de:	af 83       	std	Y+7, r26	; 0x07
    25e0:	b8 87       	std	Y+8, r27	; 0x08
    25e2:	90 91 f8 01 	lds	r25, 0x01F8	; 0x8001f8 <TRAVERSE_DIRECTION>
    25e6:	81 e0       	ldi	r24, 0x01	; 1
    25e8:	91 30       	cpi	r25, 0x01	; 1
    25ea:	09 f0       	breq	.+2      	; 0x25ee <loop+0x4c8>
    25ec:	80 e0       	ldi	r24, 0x00	; 0
    25ee:	88 23       	and	r24, r24
    25f0:	89 f1       	breq	.+98     	; 0x2654 <loop+0x52e>
    25f2:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <SPOOLRPM>
    25f6:	90 91 1f 04 	lds	r25, 0x041F	; 0x80041f <SPOOLRPM+0x1>
    25fa:	cc 01       	movw	r24, r24
    25fc:	a0 e0       	ldi	r26, 0x00	; 0
    25fe:	b0 e0       	ldi	r27, 0x00	; 0
    2600:	bc 01       	movw	r22, r24
    2602:	cd 01       	movw	r24, r26
    2604:	0e 94 84 18 	call	0x3108	; 0x3108 <__floatunsisf>
    2608:	dc 01       	movw	r26, r24
    260a:	cb 01       	movw	r24, r22
    260c:	20 e0       	ldi	r18, 0x00	; 0
    260e:	30 e0       	ldi	r19, 0x00	; 0
    2610:	40 ee       	ldi	r20, 0xE0	; 224
    2612:	5f e3       	ldi	r21, 0x3F	; 63
    2614:	bc 01       	movw	r22, r24
    2616:	cd 01       	movw	r24, r26
    2618:	0e 94 12 19 	call	0x3224	; 0x3224 <__mulsf3>
    261c:	dc 01       	movw	r26, r24
    261e:	cb 01       	movw	r24, r22
    2620:	bc 01       	movw	r22, r24
    2622:	cd 01       	movw	r24, r26
    2624:	0e 94 4e 18 	call	0x309c	; 0x309c <__fixsfsi>
    2628:	7b 01       	movw	r14, r22
    262a:	8c 01       	movw	r16, r24
    262c:	2d 81       	ldd	r18, Y+5	; 0x05
    262e:	3e 81       	ldd	r19, Y+6	; 0x06
    2630:	4f 81       	ldd	r20, Y+7	; 0x07
    2632:	58 85       	ldd	r21, Y+8	; 0x08
    2634:	89 81       	ldd	r24, Y+1	; 0x01
    2636:	9a 81       	ldd	r25, Y+2	; 0x02
    2638:	ab 81       	ldd	r26, Y+3	; 0x03
    263a:	bc 81       	ldd	r27, Y+4	; 0x04
    263c:	bc 01       	movw	r22, r24
    263e:	cd 01       	movw	r24, r26
    2640:	0e 94 97 1d 	call	0x3b2e	; 0x3b2e <__mulsi3>
    2644:	dc 01       	movw	r26, r24
    2646:	cb 01       	movw	r24, r22
    2648:	a8 01       	movw	r20, r16
    264a:	97 01       	movw	r18, r14
    264c:	bc 01       	movw	r22, r24
    264e:	cd 01       	movw	r24, r26
    2650:	0e 94 21 15 	call	0x2a42	; 0x2a42 <_Z20MoveRelativePositionll>
    2654:	90 91 f8 01 	lds	r25, 0x01F8	; 0x8001f8 <TRAVERSE_DIRECTION>
    2658:	81 e0       	ldi	r24, 0x01	; 1
    265a:	99 23       	and	r25, r25
    265c:	09 f0       	breq	.+2      	; 0x2660 <loop+0x53a>
    265e:	80 e0       	ldi	r24, 0x00	; 0
    2660:	88 23       	and	r24, r24
    2662:	c1 f1       	breq	.+112    	; 0x26d4 <loop+0x5ae>
    2664:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <SPOOLRPM>
    2668:	90 91 1f 04 	lds	r25, 0x041F	; 0x80041f <SPOOLRPM+0x1>
    266c:	cc 01       	movw	r24, r24
    266e:	a0 e0       	ldi	r26, 0x00	; 0
    2670:	b0 e0       	ldi	r27, 0x00	; 0
    2672:	bc 01       	movw	r22, r24
    2674:	cd 01       	movw	r24, r26
    2676:	0e 94 84 18 	call	0x3108	; 0x3108 <__floatunsisf>
    267a:	dc 01       	movw	r26, r24
    267c:	cb 01       	movw	r24, r22
    267e:	20 e0       	ldi	r18, 0x00	; 0
    2680:	30 e0       	ldi	r19, 0x00	; 0
    2682:	40 ee       	ldi	r20, 0xE0	; 224
    2684:	5f e3       	ldi	r21, 0x3F	; 63
    2686:	bc 01       	movw	r22, r24
    2688:	cd 01       	movw	r24, r26
    268a:	0e 94 12 19 	call	0x3224	; 0x3224 <__mulsf3>
    268e:	dc 01       	movw	r26, r24
    2690:	cb 01       	movw	r24, r22
    2692:	bc 01       	movw	r22, r24
    2694:	cd 01       	movw	r24, r26
    2696:	0e 94 4e 18 	call	0x309c	; 0x309c <__fixsfsi>
    269a:	7b 01       	movw	r14, r22
    269c:	8c 01       	movw	r16, r24
    269e:	2d 81       	ldd	r18, Y+5	; 0x05
    26a0:	3e 81       	ldd	r19, Y+6	; 0x06
    26a2:	4f 81       	ldd	r20, Y+7	; 0x07
    26a4:	58 85       	ldd	r21, Y+8	; 0x08
    26a6:	89 81       	ldd	r24, Y+1	; 0x01
    26a8:	9a 81       	ldd	r25, Y+2	; 0x02
    26aa:	ab 81       	ldd	r26, Y+3	; 0x03
    26ac:	bc 81       	ldd	r27, Y+4	; 0x04
    26ae:	bc 01       	movw	r22, r24
    26b0:	cd 01       	movw	r24, r26
    26b2:	0e 94 97 1d 	call	0x3b2e	; 0x3b2e <__mulsi3>
    26b6:	dc 01       	movw	r26, r24
    26b8:	cb 01       	movw	r24, r22
    26ba:	b0 95       	com	r27
    26bc:	a0 95       	com	r26
    26be:	90 95       	com	r25
    26c0:	81 95       	neg	r24
    26c2:	9f 4f       	sbci	r25, 0xFF	; 255
    26c4:	af 4f       	sbci	r26, 0xFF	; 255
    26c6:	bf 4f       	sbci	r27, 0xFF	; 255
    26c8:	a8 01       	movw	r20, r16
    26ca:	97 01       	movw	r18, r14
    26cc:	bc 01       	movw	r22, r24
    26ce:	cd 01       	movw	r24, r26
    26d0:	0e 94 21 15 	call	0x2a42	; 0x2a42 <_Z20MoveRelativePositionll>
    26d4:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
    26d8:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
    26dc:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
    26e0:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
    26e4:	bc 01       	movw	r22, r24
    26e6:	cd 01       	movw	r24, r26
    26e8:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <_Z9MMToStepsm>
    26ec:	6b 01       	movw	r12, r22
    26ee:	7c 01       	movw	r14, r24
    26f0:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <SPOOL_WIDTH>
    26f4:	90 91 f0 01 	lds	r25, 0x01F0	; 0x8001f0 <SPOOL_WIDTH+0x1>
    26f8:	a0 91 f1 01 	lds	r26, 0x01F1	; 0x8001f1 <SPOOL_WIDTH+0x2>
    26fc:	b0 91 f2 01 	lds	r27, 0x01F2	; 0x8001f2 <SPOOL_WIDTH+0x3>
    2700:	bc 01       	movw	r22, r24
    2702:	cd 01       	movw	r24, r26
    2704:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <_Z9MMToStepsm>
    2708:	dc 01       	movw	r26, r24
    270a:	cb 01       	movw	r24, r22
    270c:	8c 0d       	add	r24, r12
    270e:	9d 1d       	adc	r25, r13
    2710:	ae 1d       	adc	r26, r14
    2712:	bf 1d       	adc	r27, r15
    2714:	20 91 12 04 	lds	r18, 0x0412	; 0x800412 <STEPS>
    2718:	30 91 13 04 	lds	r19, 0x0413	; 0x800413 <STEPS+0x1>
    271c:	40 91 14 04 	lds	r20, 0x0414	; 0x800414 <STEPS+0x2>
    2720:	50 91 15 04 	lds	r21, 0x0415	; 0x800415 <STEPS+0x3>
    2724:	61 e0       	ldi	r22, 0x01	; 1
    2726:	28 17       	cp	r18, r24
    2728:	39 07       	cpc	r19, r25
    272a:	4a 07       	cpc	r20, r26
    272c:	5b 07       	cpc	r21, r27
    272e:	08 f4       	brcc	.+2      	; 0x2732 <loop+0x60c>
    2730:	60 e0       	ldi	r22, 0x00	; 0
    2732:	66 23       	and	r22, r22
    2734:	11 f0       	breq	.+4      	; 0x273a <loop+0x614>
    2736:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <TRAVERSE_DIRECTION>
    273a:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <fullAutoSpoolTicks>
    273e:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <fullAutoSpoolTicks+0x1>
    2742:	a0 91 04 04 	lds	r26, 0x0404	; 0x800404 <fullAutoSpoolTicks+0x2>
    2746:	b0 91 05 04 	lds	r27, 0x0405	; 0x800405 <fullAutoSpoolTicks+0x3>
    274a:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <previousSpoolTicks>
    274e:	90 93 07 04 	sts	0x0407, r25	; 0x800407 <previousSpoolTicks+0x1>
    2752:	a0 93 08 04 	sts	0x0408, r26	; 0x800408 <previousSpoolTicks+0x2>
    2756:	b0 93 09 04 	sts	0x0409, r27	; 0x800409 <previousSpoolTicks+0x3>
    275a:	60 c0       	rjmp	.+192    	; 0x281c <loop+0x6f6>
    275c:	20 91 ef 01 	lds	r18, 0x01EF	; 0x8001ef <SPOOL_WIDTH>
    2760:	30 91 f0 01 	lds	r19, 0x01F0	; 0x8001f0 <SPOOL_WIDTH+0x1>
    2764:	40 91 f1 01 	lds	r20, 0x01F1	; 0x8001f1 <SPOOL_WIDTH+0x2>
    2768:	50 91 f2 01 	lds	r21, 0x01F2	; 0x8001f2 <SPOOL_WIDTH+0x3>
    276c:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
    2770:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
    2774:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
    2778:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
    277c:	82 0f       	add	r24, r18
    277e:	93 1f       	adc	r25, r19
    2780:	a4 1f       	adc	r26, r20
    2782:	b5 1f       	adc	r27, r21
    2784:	bc 01       	movw	r22, r24
    2786:	cd 01       	movw	r24, r26
    2788:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <_Z9MMToStepsm>
    278c:	dc 01       	movw	r26, r24
    278e:	cb 01       	movw	r24, r22
    2790:	28 e5       	ldi	r18, 0x58	; 88
    2792:	32 e0       	ldi	r19, 0x02	; 2
    2794:	40 e0       	ldi	r20, 0x00	; 0
    2796:	50 e0       	ldi	r21, 0x00	; 0
    2798:	bc 01       	movw	r22, r24
    279a:	cd 01       	movw	r24, r26
    279c:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <_Z20MoveAbsolutePositionmm>
    27a0:	20 91 12 04 	lds	r18, 0x0412	; 0x800412 <STEPS>
    27a4:	30 91 13 04 	lds	r19, 0x0413	; 0x800413 <STEPS+0x1>
    27a8:	40 91 14 04 	lds	r20, 0x0414	; 0x800414 <STEPS+0x2>
    27ac:	50 91 15 04 	lds	r21, 0x0415	; 0x800415 <STEPS+0x3>
    27b0:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <DESIRED_POSITION>
    27b4:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    27b8:	a0 91 18 04 	lds	r26, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    27bc:	b0 91 19 04 	lds	r27, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    27c0:	61 e0       	ldi	r22, 0x01	; 1
    27c2:	28 17       	cp	r18, r24
    27c4:	39 07       	cpc	r19, r25
    27c6:	4a 07       	cpc	r20, r26
    27c8:	5b 07       	cpc	r21, r27
    27ca:	09 f4       	brne	.+2      	; 0x27ce <loop+0x6a8>
    27cc:	60 e0       	ldi	r22, 0x00	; 0
    27ce:	66 23       	and	r22, r22
    27d0:	19 f1       	breq	.+70     	; 0x2818 <loop+0x6f2>
    27d2:	20 91 ef 01 	lds	r18, 0x01EF	; 0x8001ef <SPOOL_WIDTH>
    27d6:	30 91 f0 01 	lds	r19, 0x01F0	; 0x8001f0 <SPOOL_WIDTH+0x1>
    27da:	40 91 f1 01 	lds	r20, 0x01F1	; 0x8001f1 <SPOOL_WIDTH+0x2>
    27de:	50 91 f2 01 	lds	r21, 0x01F2	; 0x8001f2 <SPOOL_WIDTH+0x3>
    27e2:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <INNER_TRAVERSE_OFFSET>
    27e6:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <INNER_TRAVERSE_OFFSET+0x1>
    27ea:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <INNER_TRAVERSE_OFFSET+0x2>
    27ee:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <INNER_TRAVERSE_OFFSET+0x3>
    27f2:	82 0f       	add	r24, r18
    27f4:	93 1f       	adc	r25, r19
    27f6:	a4 1f       	adc	r26, r20
    27f8:	b5 1f       	adc	r27, r21
    27fa:	bc 01       	movw	r22, r24
    27fc:	cd 01       	movw	r24, r26
    27fe:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <_Z9MMToStepsm>
    2802:	dc 01       	movw	r26, r24
    2804:	cb 01       	movw	r24, r22
    2806:	28 e5       	ldi	r18, 0x58	; 88
    2808:	32 e0       	ldi	r19, 0x02	; 2
    280a:	40 e0       	ldi	r20, 0x00	; 0
    280c:	50 e0       	ldi	r21, 0x00	; 0
    280e:	bc 01       	movw	r22, r24
    2810:	cd 01       	movw	r24, r26
    2812:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <_Z20MoveAbsolutePositionmm>
    2816:	c4 cf       	rjmp	.-120    	; 0x27a0 <loop+0x67a>
    2818:	10 92 21 04 	sts	0x0421, r1	; 0x800421 <MOVE_TO_END>
    281c:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <millis>
    2820:	dc 01       	movw	r26, r24
    2822:	cb 01       	movw	r24, r22
    2824:	80 93 fa 03 	sts	0x03FA, r24	; 0x8003fa <previousFullAutoTime>
    2828:	90 93 fb 03 	sts	0x03FB, r25	; 0x8003fb <previousFullAutoTime+0x1>
    282c:	a0 93 fc 03 	sts	0x03FC, r26	; 0x8003fc <previousFullAutoTime+0x2>
    2830:	b0 93 fd 03 	sts	0x03FD, r27	; 0x8003fd <previousFullAutoTime+0x3>
    2834:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <RUN_MODE>
    2838:	81 e0       	ldi	r24, 0x01	; 1
    283a:	99 23       	and	r25, r25
    283c:	09 f0       	breq	.+2      	; 0x2840 <loop+0x71a>
    283e:	80 e0       	ldi	r24, 0x00	; 0
    2840:	88 23       	and	r24, r24
    2842:	41 f0       	breq	.+16     	; 0x2854 <loop+0x72e>
    2844:	68 e5       	ldi	r22, 0x58	; 88
    2846:	72 e0       	ldi	r23, 0x02	; 2
    2848:	80 e0       	ldi	r24, 0x00	; 0
    284a:	90 e0       	ldi	r25, 0x00	; 0
    284c:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <_Z16Set_Traverse_RPMl>
    2850:	0e 94 5d 15 	call	0x2aba	; 0x2aba <_Z4homev>
    2854:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <tickFlag>
    2858:	88 23       	and	r24, r24
    285a:	e9 f4       	brne	.+58     	; 0x2896 <loop+0x770>
    285c:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <millis>
    2860:	7b 01       	movw	r14, r22
    2862:	8c 01       	movw	r16, r24
    2864:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <spoolUpdateInterval>
    2868:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <spoolUpdateInterval+0x1>
    286c:	9c 01       	movw	r18, r24
    286e:	99 0f       	add	r25, r25
    2870:	44 0b       	sbc	r20, r20
    2872:	55 0b       	sbc	r21, r21
    2874:	80 91 fe 03 	lds	r24, 0x03FE	; 0x8003fe <previousSpoolTime>
    2878:	90 91 ff 03 	lds	r25, 0x03FF	; 0x8003ff <previousSpoolTime+0x1>
    287c:	a0 91 00 04 	lds	r26, 0x0400	; 0x800400 <previousSpoolTime+0x2>
    2880:	b0 91 01 04 	lds	r27, 0x0401	; 0x800401 <previousSpoolTime+0x3>
    2884:	82 0f       	add	r24, r18
    2886:	93 1f       	adc	r25, r19
    2888:	a4 1f       	adc	r26, r20
    288a:	b5 1f       	adc	r27, r21
    288c:	8e 15       	cp	r24, r14
    288e:	9f 05       	cpc	r25, r15
    2890:	a0 07       	cpc	r26, r16
    2892:	b1 07       	cpc	r27, r17
    2894:	10 f4       	brcc	.+4      	; 0x289a <loop+0x774>
    2896:	81 e0       	ldi	r24, 0x01	; 1
    2898:	01 c0       	rjmp	.+2      	; 0x289c <loop+0x776>
    289a:	80 e0       	ldi	r24, 0x00	; 0
    289c:	88 23       	and	r24, r24
    289e:	09 f4       	brne	.+2      	; 0x28a2 <loop+0x77c>
    28a0:	57 c0       	rjmp	.+174    	; 0x2950 <loop+0x82a>
    28a2:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <millis>
    28a6:	9b 01       	movw	r18, r22
    28a8:	ac 01       	movw	r20, r24
    28aa:	80 91 fe 03 	lds	r24, 0x03FE	; 0x8003fe <previousSpoolTime>
    28ae:	90 91 ff 03 	lds	r25, 0x03FF	; 0x8003ff <previousSpoolTime+0x1>
    28b2:	a0 91 00 04 	lds	r26, 0x0400	; 0x800400 <previousSpoolTime+0x2>
    28b6:	b0 91 01 04 	lds	r27, 0x0401	; 0x800401 <previousSpoolTime+0x3>
    28ba:	79 01       	movw	r14, r18
    28bc:	8a 01       	movw	r16, r20
    28be:	e8 1a       	sub	r14, r24
    28c0:	f9 0a       	sbc	r15, r25
    28c2:	0a 0b       	sbc	r16, r26
    28c4:	1b 0b       	sbc	r17, r27
    28c6:	d8 01       	movw	r26, r16
    28c8:	c7 01       	movw	r24, r14
    28ca:	89 87       	std	Y+9, r24	; 0x09
    28cc:	9a 87       	std	Y+10, r25	; 0x0a
    28ce:	ab 87       	std	Y+11, r26	; 0x0b
    28d0:	bc 87       	std	Y+12, r27	; 0x0c
    28d2:	f8 94       	cli
    28d4:	20 91 f2 03 	lds	r18, 0x03F2	; 0x8003f2 <rpmSpoolTicks>
    28d8:	30 91 f3 03 	lds	r19, 0x03F3	; 0x8003f3 <rpmSpoolTicks+0x1>
    28dc:	40 91 f4 03 	lds	r20, 0x03F4	; 0x8003f4 <rpmSpoolTicks+0x2>
    28e0:	50 91 f5 03 	lds	r21, 0x03F5	; 0x8003f5 <rpmSpoolTicks+0x3>
    28e4:	80 e6       	ldi	r24, 0x60	; 96
    28e6:	9a ee       	ldi	r25, 0xEA	; 234
    28e8:	dc 01       	movw	r26, r24
    28ea:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <__muluhisi3>
    28ee:	dc 01       	movw	r26, r24
    28f0:	cb 01       	movw	r24, r22
    28f2:	29 85       	ldd	r18, Y+9	; 0x09
    28f4:	3a 85       	ldd	r19, Y+10	; 0x0a
    28f6:	4b 85       	ldd	r20, Y+11	; 0x0b
    28f8:	5c 85       	ldd	r21, Y+12	; 0x0c
    28fa:	bc 01       	movw	r22, r24
    28fc:	cd 01       	movw	r24, r26
    28fe:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <__udivmodsi4>
    2902:	da 01       	movw	r26, r20
    2904:	c9 01       	movw	r24, r18
    2906:	24 e6       	ldi	r18, 0x64	; 100
    2908:	30 e0       	ldi	r19, 0x00	; 0
    290a:	40 e0       	ldi	r20, 0x00	; 0
    290c:	50 e0       	ldi	r21, 0x00	; 0
    290e:	bc 01       	movw	r22, r24
    2910:	cd 01       	movw	r24, r26
    2912:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <__udivmodsi4>
    2916:	da 01       	movw	r26, r20
    2918:	c9 01       	movw	r24, r18
    291a:	90 93 1f 04 	sts	0x041F, r25	; 0x80041f <SPOOLRPM+0x1>
    291e:	80 93 1e 04 	sts	0x041E, r24	; 0x80041e <SPOOLRPM>
    2922:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <rpmSpoolTicks>
    2926:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <rpmSpoolTicks+0x1>
    292a:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <rpmSpoolTicks+0x2>
    292e:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <rpmSpoolTicks+0x3>
    2932:	10 92 27 04 	sts	0x0427, r1	; 0x800427 <tickFlag>
    2936:	78 94       	sei
    2938:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <millis>
    293c:	dc 01       	movw	r26, r24
    293e:	cb 01       	movw	r24, r22
    2940:	80 93 fe 03 	sts	0x03FE, r24	; 0x8003fe <previousSpoolTime>
    2944:	90 93 ff 03 	sts	0x03FF, r25	; 0x8003ff <previousSpoolTime+0x1>
    2948:	a0 93 00 04 	sts	0x0400, r26	; 0x800400 <previousSpoolTime+0x2>
    294c:	b0 93 01 04 	sts	0x0401, r27	; 0x800401 <previousSpoolTime+0x3>
    2950:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <SPOOL_TICKS>
    2954:	90 91 24 04 	lds	r25, 0x0424	; 0x800424 <SPOOL_TICKS+0x1>
    2958:	a0 91 25 04 	lds	r26, 0x0425	; 0x800425 <SPOOL_TICKS+0x2>
    295c:	b0 91 26 04 	lds	r27, 0x0426	; 0x800426 <SPOOL_TICKS+0x3>
    2960:	21 e0       	ldi	r18, 0x01	; 1
    2962:	8a 3f       	cpi	r24, 0xFA	; 250
    2964:	9f 4f       	sbci	r25, 0xFF	; 255
    2966:	af 4f       	sbci	r26, 0xFF	; 255
    2968:	bf 4f       	sbci	r27, 0xFF	; 255
    296a:	08 f4       	brcc	.+2      	; 0x296e <loop+0x848>
    296c:	20 e0       	ldi	r18, 0x00	; 0
    296e:	22 23       	and	r18, r18
    2970:	41 f0       	breq	.+16     	; 0x2982 <loop+0x85c>
    2972:	10 92 23 04 	sts	0x0423, r1	; 0x800423 <SPOOL_TICKS>
    2976:	10 92 24 04 	sts	0x0424, r1	; 0x800424 <SPOOL_TICKS+0x1>
    297a:	10 92 25 04 	sts	0x0425, r1	; 0x800425 <SPOOL_TICKS+0x2>
    297e:	10 92 26 04 	sts	0x0426, r1	; 0x800426 <SPOOL_TICKS+0x3>
    2982:	00 00       	nop
    2984:	2c 96       	adiw	r28, 0x0c	; 12
    2986:	0f b6       	in	r0, 0x3f	; 63
    2988:	f8 94       	cli
    298a:	de bf       	out	0x3e, r29	; 62
    298c:	0f be       	out	0x3f, r0	; 63
    298e:	cd bf       	out	0x3d, r28	; 61
    2990:	df 91       	pop	r29
    2992:	cf 91       	pop	r28
    2994:	1f 91       	pop	r17
    2996:	0f 91       	pop	r16
    2998:	ff 90       	pop	r15
    299a:	ef 90       	pop	r14
    299c:	df 90       	pop	r13
    299e:	cf 90       	pop	r12
    29a0:	08 95       	ret

000029a2 <_Z16ToggleStepOutputv>:
    29a2:	cf 93       	push	r28
    29a4:	df 93       	push	r29
    29a6:	cd b7       	in	r28, 0x3d	; 61
    29a8:	de b7       	in	r29, 0x3e	; 62
    29aa:	89 e2       	ldi	r24, 0x29	; 41
    29ac:	90 e0       	ldi	r25, 0x00	; 0
    29ae:	fc 01       	movw	r30, r24
    29b0:	80 81       	ld	r24, Z
    29b2:	88 2f       	mov	r24, r24
    29b4:	90 e0       	ldi	r25, 0x00	; 0
    29b6:	88 70       	andi	r24, 0x08	; 8
    29b8:	99 27       	eor	r25, r25
    29ba:	89 2b       	or	r24, r25
    29bc:	19 f4       	brne	.+6      	; 0x29c4 <_Z16ToggleStepOutputv+0x22>
    29be:	89 e0       	ldi	r24, 0x09	; 9
    29c0:	90 e0       	ldi	r25, 0x00	; 0
    29c2:	02 c0       	rjmp	.+4      	; 0x29c8 <_Z16ToggleStepOutputv+0x26>
    29c4:	88 e0       	ldi	r24, 0x08	; 8
    29c6:	90 e0       	ldi	r25, 0x00	; 0
    29c8:	2b e2       	ldi	r18, 0x2B	; 43
    29ca:	30 e0       	ldi	r19, 0x00	; 0
    29cc:	4b e2       	ldi	r20, 0x2B	; 43
    29ce:	50 e0       	ldi	r21, 0x00	; 0
    29d0:	fa 01       	movw	r30, r20
    29d2:	40 81       	ld	r20, Z
    29d4:	84 27       	eor	r24, r20
    29d6:	f9 01       	movw	r30, r18
    29d8:	80 83       	st	Z, r24
    29da:	00 00       	nop
    29dc:	df 91       	pop	r29
    29de:	cf 91       	pop	r28
    29e0:	08 95       	ret

000029e2 <_Z20MoveAbsolutePositionmm>:
    29e2:	cf 93       	push	r28
    29e4:	df 93       	push	r29
    29e6:	cd b7       	in	r28, 0x3d	; 61
    29e8:	de b7       	in	r29, 0x3e	; 62
    29ea:	28 97       	sbiw	r28, 0x08	; 8
    29ec:	0f b6       	in	r0, 0x3f	; 63
    29ee:	f8 94       	cli
    29f0:	de bf       	out	0x3e, r29	; 62
    29f2:	0f be       	out	0x3f, r0	; 63
    29f4:	cd bf       	out	0x3d, r28	; 61
    29f6:	69 83       	std	Y+1, r22	; 0x01
    29f8:	7a 83       	std	Y+2, r23	; 0x02
    29fa:	8b 83       	std	Y+3, r24	; 0x03
    29fc:	9c 83       	std	Y+4, r25	; 0x04
    29fe:	2d 83       	std	Y+5, r18	; 0x05
    2a00:	3e 83       	std	Y+6, r19	; 0x06
    2a02:	4f 83       	std	Y+7, r20	; 0x07
    2a04:	58 87       	std	Y+8, r21	; 0x08
    2a06:	8d 81       	ldd	r24, Y+5	; 0x05
    2a08:	9e 81       	ldd	r25, Y+6	; 0x06
    2a0a:	af 81       	ldd	r26, Y+7	; 0x07
    2a0c:	b8 85       	ldd	r27, Y+8	; 0x08
    2a0e:	bc 01       	movw	r22, r24
    2a10:	cd 01       	movw	r24, r26
    2a12:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <_Z16Set_Traverse_RPMl>
    2a16:	89 81       	ldd	r24, Y+1	; 0x01
    2a18:	9a 81       	ldd	r25, Y+2	; 0x02
    2a1a:	ab 81       	ldd	r26, Y+3	; 0x03
    2a1c:	bc 81       	ldd	r27, Y+4	; 0x04
    2a1e:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <DESIRED_POSITION>
    2a22:	90 93 17 04 	sts	0x0417, r25	; 0x800417 <DESIRED_POSITION+0x1>
    2a26:	a0 93 18 04 	sts	0x0418, r26	; 0x800418 <DESIRED_POSITION+0x2>
    2a2a:	b0 93 19 04 	sts	0x0419, r27	; 0x800419 <DESIRED_POSITION+0x3>
    2a2e:	00 00       	nop
    2a30:	28 96       	adiw	r28, 0x08	; 8
    2a32:	0f b6       	in	r0, 0x3f	; 63
    2a34:	f8 94       	cli
    2a36:	de bf       	out	0x3e, r29	; 62
    2a38:	0f be       	out	0x3f, r0	; 63
    2a3a:	cd bf       	out	0x3d, r28	; 61
    2a3c:	df 91       	pop	r29
    2a3e:	cf 91       	pop	r28
    2a40:	08 95       	ret

00002a42 <_Z20MoveRelativePositionll>:
    2a42:	cf 93       	push	r28
    2a44:	df 93       	push	r29
    2a46:	cd b7       	in	r28, 0x3d	; 61
    2a48:	de b7       	in	r29, 0x3e	; 62
    2a4a:	28 97       	sbiw	r28, 0x08	; 8
    2a4c:	0f b6       	in	r0, 0x3f	; 63
    2a4e:	f8 94       	cli
    2a50:	de bf       	out	0x3e, r29	; 62
    2a52:	0f be       	out	0x3f, r0	; 63
    2a54:	cd bf       	out	0x3d, r28	; 61
    2a56:	69 83       	std	Y+1, r22	; 0x01
    2a58:	7a 83       	std	Y+2, r23	; 0x02
    2a5a:	8b 83       	std	Y+3, r24	; 0x03
    2a5c:	9c 83       	std	Y+4, r25	; 0x04
    2a5e:	2d 83       	std	Y+5, r18	; 0x05
    2a60:	3e 83       	std	Y+6, r19	; 0x06
    2a62:	4f 83       	std	Y+7, r20	; 0x07
    2a64:	58 87       	std	Y+8, r21	; 0x08
    2a66:	8d 81       	ldd	r24, Y+5	; 0x05
    2a68:	9e 81       	ldd	r25, Y+6	; 0x06
    2a6a:	af 81       	ldd	r26, Y+7	; 0x07
    2a6c:	b8 85       	ldd	r27, Y+8	; 0x08
    2a6e:	bc 01       	movw	r22, r24
    2a70:	cd 01       	movw	r24, r26
    2a72:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <_Z16Set_Traverse_RPMl>
    2a76:	20 91 16 04 	lds	r18, 0x0416	; 0x800416 <DESIRED_POSITION>
    2a7a:	30 91 17 04 	lds	r19, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    2a7e:	40 91 18 04 	lds	r20, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    2a82:	50 91 19 04 	lds	r21, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    2a86:	89 81       	ldd	r24, Y+1	; 0x01
    2a88:	9a 81       	ldd	r25, Y+2	; 0x02
    2a8a:	ab 81       	ldd	r26, Y+3	; 0x03
    2a8c:	bc 81       	ldd	r27, Y+4	; 0x04
    2a8e:	82 0f       	add	r24, r18
    2a90:	93 1f       	adc	r25, r19
    2a92:	a4 1f       	adc	r26, r20
    2a94:	b5 1f       	adc	r27, r21
    2a96:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <DESIRED_POSITION>
    2a9a:	90 93 17 04 	sts	0x0417, r25	; 0x800417 <DESIRED_POSITION+0x1>
    2a9e:	a0 93 18 04 	sts	0x0418, r26	; 0x800418 <DESIRED_POSITION+0x2>
    2aa2:	b0 93 19 04 	sts	0x0419, r27	; 0x800419 <DESIRED_POSITION+0x3>
    2aa6:	00 00       	nop
    2aa8:	28 96       	adiw	r28, 0x08	; 8
    2aaa:	0f b6       	in	r0, 0x3f	; 63
    2aac:	f8 94       	cli
    2aae:	de bf       	out	0x3e, r29	; 62
    2ab0:	0f be       	out	0x3f, r0	; 63
    2ab2:	cd bf       	out	0x3d, r28	; 61
    2ab4:	df 91       	pop	r29
    2ab6:	cf 91       	pop	r28
    2ab8:	08 95       	ret

00002aba <_Z4homev>:
    2aba:	cf 93       	push	r28
    2abc:	df 93       	push	r29
    2abe:	cd b7       	in	r28, 0x3d	; 61
    2ac0:	de b7       	in	r29, 0x3e	; 62
    2ac2:	10 92 16 04 	sts	0x0416, r1	; 0x800416 <DESIRED_POSITION>
    2ac6:	10 92 17 04 	sts	0x0417, r1	; 0x800417 <DESIRED_POSITION+0x1>
    2aca:	10 92 18 04 	sts	0x0418, r1	; 0x800418 <DESIRED_POSITION+0x2>
    2ace:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <DESIRED_POSITION+0x3>
    2ad2:	90 91 f1 03 	lds	r25, 0x03F1	; 0x8003f1 <directionInputState>
    2ad6:	81 e0       	ldi	r24, 0x01	; 1
    2ad8:	89 27       	eor	r24, r25
    2ada:	88 23       	and	r24, r24
    2adc:	91 f1       	breq	.+100    	; 0x2b42 <_Z4homev+0x88>
    2ade:	89 e2       	ldi	r24, 0x29	; 41
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	fc 01       	movw	r30, r24
    2ae4:	80 81       	ld	r24, Z
    2ae6:	88 2f       	mov	r24, r24
    2ae8:	90 e0       	ldi	r25, 0x00	; 0
    2aea:	80 72       	andi	r24, 0x20	; 32
    2aec:	99 27       	eor	r25, r25
    2aee:	21 e0       	ldi	r18, 0x01	; 1
    2af0:	89 2b       	or	r24, r25
    2af2:	09 f4       	brne	.+2      	; 0x2af6 <_Z4homev+0x3c>
    2af4:	20 e0       	ldi	r18, 0x00	; 0
    2af6:	20 93 f1 03 	sts	0x03F1, r18	; 0x8003f1 <directionInputState>
    2afa:	20 91 12 04 	lds	r18, 0x0412	; 0x800412 <STEPS>
    2afe:	30 91 13 04 	lds	r19, 0x0413	; 0x800413 <STEPS+0x1>
    2b02:	40 91 14 04 	lds	r20, 0x0414	; 0x800414 <STEPS+0x2>
    2b06:	50 91 15 04 	lds	r21, 0x0415	; 0x800415 <STEPS+0x3>
    2b0a:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <DESIRED_POSITION>
    2b0e:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    2b12:	a0 91 18 04 	lds	r26, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    2b16:	b0 91 19 04 	lds	r27, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    2b1a:	61 e0       	ldi	r22, 0x01	; 1
    2b1c:	28 17       	cp	r18, r24
    2b1e:	39 07       	cpc	r19, r25
    2b20:	4a 07       	cpc	r20, r26
    2b22:	5b 07       	cpc	r21, r27
    2b24:	09 f0       	breq	.+2      	; 0x2b28 <_Z4homev+0x6e>
    2b26:	60 e0       	ldi	r22, 0x00	; 0
    2b28:	66 23       	and	r22, r22
    2b2a:	99 f2       	breq	.-90     	; 0x2ad2 <_Z4homev+0x18>
    2b2c:	28 e5       	ldi	r18, 0x58	; 88
    2b2e:	32 e0       	ldi	r19, 0x02	; 2
    2b30:	40 e0       	ldi	r20, 0x00	; 0
    2b32:	50 e0       	ldi	r21, 0x00	; 0
    2b34:	6c e9       	ldi	r22, 0x9C	; 156
    2b36:	7f ef       	ldi	r23, 0xFF	; 255
    2b38:	8f ef       	ldi	r24, 0xFF	; 255
    2b3a:	9f ef       	ldi	r25, 0xFF	; 255
    2b3c:	0e 94 21 15 	call	0x2a42	; 0x2a42 <_Z20MoveRelativePositionll>
    2b40:	c8 cf       	rjmp	.-112    	; 0x2ad2 <_Z4homev+0x18>
    2b42:	28 e5       	ldi	r18, 0x58	; 88
    2b44:	32 e0       	ldi	r19, 0x02	; 2
    2b46:	40 e0       	ldi	r20, 0x00	; 0
    2b48:	50 e0       	ldi	r21, 0x00	; 0
    2b4a:	68 e1       	ldi	r22, 0x18	; 24
    2b4c:	7c ef       	ldi	r23, 0xFC	; 252
    2b4e:	8f ef       	ldi	r24, 0xFF	; 255
    2b50:	9f ef       	ldi	r25, 0xFF	; 255
    2b52:	0e 94 21 15 	call	0x2a42	; 0x2a42 <_Z20MoveRelativePositionll>
    2b56:	20 91 12 04 	lds	r18, 0x0412	; 0x800412 <STEPS>
    2b5a:	30 91 13 04 	lds	r19, 0x0413	; 0x800413 <STEPS+0x1>
    2b5e:	40 91 14 04 	lds	r20, 0x0414	; 0x800414 <STEPS+0x2>
    2b62:	50 91 15 04 	lds	r21, 0x0415	; 0x800415 <STEPS+0x3>
    2b66:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <DESIRED_POSITION>
    2b6a:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    2b6e:	a0 91 18 04 	lds	r26, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    2b72:	b0 91 19 04 	lds	r27, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    2b76:	61 e0       	ldi	r22, 0x01	; 1
    2b78:	28 17       	cp	r18, r24
    2b7a:	39 07       	cpc	r19, r25
    2b7c:	4a 07       	cpc	r20, r26
    2b7e:	5b 07       	cpc	r21, r27
    2b80:	09 f4       	brne	.+2      	; 0x2b84 <_Z4homev+0xca>
    2b82:	60 e0       	ldi	r22, 0x00	; 0
    2b84:	66 23       	and	r22, r22
    2b86:	09 f0       	breq	.+2      	; 0x2b8a <_Z4homev+0xd0>
    2b88:	e6 cf       	rjmp	.-52     	; 0x2b56 <_Z4homev+0x9c>
    2b8a:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <directionInputState>
    2b8e:	88 23       	and	r24, r24
    2b90:	91 f1       	breq	.+100    	; 0x2bf6 <_Z4homev+0x13c>
    2b92:	89 e2       	ldi	r24, 0x29	; 41
    2b94:	90 e0       	ldi	r25, 0x00	; 0
    2b96:	fc 01       	movw	r30, r24
    2b98:	80 81       	ld	r24, Z
    2b9a:	88 2f       	mov	r24, r24
    2b9c:	90 e0       	ldi	r25, 0x00	; 0
    2b9e:	80 72       	andi	r24, 0x20	; 32
    2ba0:	99 27       	eor	r25, r25
    2ba2:	21 e0       	ldi	r18, 0x01	; 1
    2ba4:	89 2b       	or	r24, r25
    2ba6:	09 f4       	brne	.+2      	; 0x2baa <_Z4homev+0xf0>
    2ba8:	20 e0       	ldi	r18, 0x00	; 0
    2baa:	20 93 f1 03 	sts	0x03F1, r18	; 0x8003f1 <directionInputState>
    2bae:	20 91 12 04 	lds	r18, 0x0412	; 0x800412 <STEPS>
    2bb2:	30 91 13 04 	lds	r19, 0x0413	; 0x800413 <STEPS+0x1>
    2bb6:	40 91 14 04 	lds	r20, 0x0414	; 0x800414 <STEPS+0x2>
    2bba:	50 91 15 04 	lds	r21, 0x0415	; 0x800415 <STEPS+0x3>
    2bbe:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <DESIRED_POSITION>
    2bc2:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    2bc6:	a0 91 18 04 	lds	r26, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    2bca:	b0 91 19 04 	lds	r27, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    2bce:	61 e0       	ldi	r22, 0x01	; 1
    2bd0:	28 17       	cp	r18, r24
    2bd2:	39 07       	cpc	r19, r25
    2bd4:	4a 07       	cpc	r20, r26
    2bd6:	5b 07       	cpc	r21, r27
    2bd8:	09 f0       	breq	.+2      	; 0x2bdc <_Z4homev+0x122>
    2bda:	60 e0       	ldi	r22, 0x00	; 0
    2bdc:	66 23       	and	r22, r22
    2bde:	a9 f2       	breq	.-86     	; 0x2b8a <_Z4homev+0xd0>
    2be0:	28 e5       	ldi	r18, 0x58	; 88
    2be2:	32 e0       	ldi	r19, 0x02	; 2
    2be4:	40 e0       	ldi	r20, 0x00	; 0
    2be6:	50 e0       	ldi	r21, 0x00	; 0
    2be8:	64 e6       	ldi	r22, 0x64	; 100
    2bea:	70 e0       	ldi	r23, 0x00	; 0
    2bec:	80 e0       	ldi	r24, 0x00	; 0
    2bee:	90 e0       	ldi	r25, 0x00	; 0
    2bf0:	0e 94 21 15 	call	0x2a42	; 0x2a42 <_Z20MoveRelativePositionll>
    2bf4:	ca cf       	rjmp	.-108    	; 0x2b8a <_Z4homev+0xd0>
    2bf6:	28 e5       	ldi	r18, 0x58	; 88
    2bf8:	32 e0       	ldi	r19, 0x02	; 2
    2bfa:	40 e0       	ldi	r20, 0x00	; 0
    2bfc:	50 e0       	ldi	r21, 0x00	; 0
    2bfe:	68 e8       	ldi	r22, 0x88	; 136
    2c00:	73 e1       	ldi	r23, 0x13	; 19
    2c02:	80 e0       	ldi	r24, 0x00	; 0
    2c04:	90 e0       	ldi	r25, 0x00	; 0
    2c06:	0e 94 21 15 	call	0x2a42	; 0x2a42 <_Z20MoveRelativePositionll>
    2c0a:	20 91 12 04 	lds	r18, 0x0412	; 0x800412 <STEPS>
    2c0e:	30 91 13 04 	lds	r19, 0x0413	; 0x800413 <STEPS+0x1>
    2c12:	40 91 14 04 	lds	r20, 0x0414	; 0x800414 <STEPS+0x2>
    2c16:	50 91 15 04 	lds	r21, 0x0415	; 0x800415 <STEPS+0x3>
    2c1a:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <DESIRED_POSITION>
    2c1e:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    2c22:	a0 91 18 04 	lds	r26, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    2c26:	b0 91 19 04 	lds	r27, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    2c2a:	61 e0       	ldi	r22, 0x01	; 1
    2c2c:	28 17       	cp	r18, r24
    2c2e:	39 07       	cpc	r19, r25
    2c30:	4a 07       	cpc	r20, r26
    2c32:	5b 07       	cpc	r21, r27
    2c34:	09 f4       	brne	.+2      	; 0x2c38 <_Z4homev+0x17e>
    2c36:	60 e0       	ldi	r22, 0x00	; 0
    2c38:	66 23       	and	r22, r22
    2c3a:	09 f0       	breq	.+2      	; 0x2c3e <_Z4homev+0x184>
    2c3c:	e6 cf       	rjmp	.-52     	; 0x2c0a <_Z4homev+0x150>
    2c3e:	90 91 f1 03 	lds	r25, 0x03F1	; 0x8003f1 <directionInputState>
    2c42:	81 e0       	ldi	r24, 0x01	; 1
    2c44:	89 27       	eor	r24, r25
    2c46:	88 23       	and	r24, r24
    2c48:	91 f1       	breq	.+100    	; 0x2cae <_Z4homev+0x1f4>
    2c4a:	89 e2       	ldi	r24, 0x29	; 41
    2c4c:	90 e0       	ldi	r25, 0x00	; 0
    2c4e:	fc 01       	movw	r30, r24
    2c50:	80 81       	ld	r24, Z
    2c52:	88 2f       	mov	r24, r24
    2c54:	90 e0       	ldi	r25, 0x00	; 0
    2c56:	80 72       	andi	r24, 0x20	; 32
    2c58:	99 27       	eor	r25, r25
    2c5a:	21 e0       	ldi	r18, 0x01	; 1
    2c5c:	89 2b       	or	r24, r25
    2c5e:	09 f4       	brne	.+2      	; 0x2c62 <_Z4homev+0x1a8>
    2c60:	20 e0       	ldi	r18, 0x00	; 0
    2c62:	20 93 f1 03 	sts	0x03F1, r18	; 0x8003f1 <directionInputState>
    2c66:	20 91 12 04 	lds	r18, 0x0412	; 0x800412 <STEPS>
    2c6a:	30 91 13 04 	lds	r19, 0x0413	; 0x800413 <STEPS+0x1>
    2c6e:	40 91 14 04 	lds	r20, 0x0414	; 0x800414 <STEPS+0x2>
    2c72:	50 91 15 04 	lds	r21, 0x0415	; 0x800415 <STEPS+0x3>
    2c76:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <DESIRED_POSITION>
    2c7a:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    2c7e:	a0 91 18 04 	lds	r26, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    2c82:	b0 91 19 04 	lds	r27, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    2c86:	61 e0       	ldi	r22, 0x01	; 1
    2c88:	28 17       	cp	r18, r24
    2c8a:	39 07       	cpc	r19, r25
    2c8c:	4a 07       	cpc	r20, r26
    2c8e:	5b 07       	cpc	r21, r27
    2c90:	09 f0       	breq	.+2      	; 0x2c94 <_Z4homev+0x1da>
    2c92:	60 e0       	ldi	r22, 0x00	; 0
    2c94:	66 23       	and	r22, r22
    2c96:	99 f2       	breq	.-90     	; 0x2c3e <_Z4homev+0x184>
    2c98:	26 e9       	ldi	r18, 0x96	; 150
    2c9a:	30 e0       	ldi	r19, 0x00	; 0
    2c9c:	40 e0       	ldi	r20, 0x00	; 0
    2c9e:	50 e0       	ldi	r21, 0x00	; 0
    2ca0:	6c e9       	ldi	r22, 0x9C	; 156
    2ca2:	7f ef       	ldi	r23, 0xFF	; 255
    2ca4:	8f ef       	ldi	r24, 0xFF	; 255
    2ca6:	9f ef       	ldi	r25, 0xFF	; 255
    2ca8:	0e 94 21 15 	call	0x2a42	; 0x2a42 <_Z20MoveRelativePositionll>
    2cac:	c8 cf       	rjmp	.-112    	; 0x2c3e <_Z4homev+0x184>
    2cae:	26 e9       	ldi	r18, 0x96	; 150
    2cb0:	30 e0       	ldi	r19, 0x00	; 0
    2cb2:	40 e0       	ldi	r20, 0x00	; 0
    2cb4:	50 e0       	ldi	r21, 0x00	; 0
    2cb6:	68 e1       	ldi	r22, 0x18	; 24
    2cb8:	7c ef       	ldi	r23, 0xFC	; 252
    2cba:	8f ef       	ldi	r24, 0xFF	; 255
    2cbc:	9f ef       	ldi	r25, 0xFF	; 255
    2cbe:	0e 94 21 15 	call	0x2a42	; 0x2a42 <_Z20MoveRelativePositionll>
    2cc2:	20 91 12 04 	lds	r18, 0x0412	; 0x800412 <STEPS>
    2cc6:	30 91 13 04 	lds	r19, 0x0413	; 0x800413 <STEPS+0x1>
    2cca:	40 91 14 04 	lds	r20, 0x0414	; 0x800414 <STEPS+0x2>
    2cce:	50 91 15 04 	lds	r21, 0x0415	; 0x800415 <STEPS+0x3>
    2cd2:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <DESIRED_POSITION>
    2cd6:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    2cda:	a0 91 18 04 	lds	r26, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    2cde:	b0 91 19 04 	lds	r27, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    2ce2:	61 e0       	ldi	r22, 0x01	; 1
    2ce4:	28 17       	cp	r18, r24
    2ce6:	39 07       	cpc	r19, r25
    2ce8:	4a 07       	cpc	r20, r26
    2cea:	5b 07       	cpc	r21, r27
    2cec:	09 f4       	brne	.+2      	; 0x2cf0 <_Z4homev+0x236>
    2cee:	60 e0       	ldi	r22, 0x00	; 0
    2cf0:	66 23       	and	r22, r22
    2cf2:	09 f0       	breq	.+2      	; 0x2cf6 <_Z4homev+0x23c>
    2cf4:	e6 cf       	rjmp	.-52     	; 0x2cc2 <_Z4homev+0x208>
    2cf6:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <directionInputState>
    2cfa:	88 23       	and	r24, r24
    2cfc:	91 f1       	breq	.+100    	; 0x2d62 <_Z4homev+0x2a8>
    2cfe:	89 e2       	ldi	r24, 0x29	; 41
    2d00:	90 e0       	ldi	r25, 0x00	; 0
    2d02:	fc 01       	movw	r30, r24
    2d04:	80 81       	ld	r24, Z
    2d06:	88 2f       	mov	r24, r24
    2d08:	90 e0       	ldi	r25, 0x00	; 0
    2d0a:	80 72       	andi	r24, 0x20	; 32
    2d0c:	99 27       	eor	r25, r25
    2d0e:	21 e0       	ldi	r18, 0x01	; 1
    2d10:	89 2b       	or	r24, r25
    2d12:	09 f4       	brne	.+2      	; 0x2d16 <_Z4homev+0x25c>
    2d14:	20 e0       	ldi	r18, 0x00	; 0
    2d16:	20 93 f1 03 	sts	0x03F1, r18	; 0x8003f1 <directionInputState>
    2d1a:	20 91 12 04 	lds	r18, 0x0412	; 0x800412 <STEPS>
    2d1e:	30 91 13 04 	lds	r19, 0x0413	; 0x800413 <STEPS+0x1>
    2d22:	40 91 14 04 	lds	r20, 0x0414	; 0x800414 <STEPS+0x2>
    2d26:	50 91 15 04 	lds	r21, 0x0415	; 0x800415 <STEPS+0x3>
    2d2a:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <DESIRED_POSITION>
    2d2e:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    2d32:	a0 91 18 04 	lds	r26, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    2d36:	b0 91 19 04 	lds	r27, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    2d3a:	61 e0       	ldi	r22, 0x01	; 1
    2d3c:	28 17       	cp	r18, r24
    2d3e:	39 07       	cpc	r19, r25
    2d40:	4a 07       	cpc	r20, r26
    2d42:	5b 07       	cpc	r21, r27
    2d44:	09 f0       	breq	.+2      	; 0x2d48 <_Z4homev+0x28e>
    2d46:	60 e0       	ldi	r22, 0x00	; 0
    2d48:	66 23       	and	r22, r22
    2d4a:	a9 f2       	breq	.-86     	; 0x2cf6 <_Z4homev+0x23c>
    2d4c:	26 e9       	ldi	r18, 0x96	; 150
    2d4e:	30 e0       	ldi	r19, 0x00	; 0
    2d50:	40 e0       	ldi	r20, 0x00	; 0
    2d52:	50 e0       	ldi	r21, 0x00	; 0
    2d54:	64 e6       	ldi	r22, 0x64	; 100
    2d56:	70 e0       	ldi	r23, 0x00	; 0
    2d58:	80 e0       	ldi	r24, 0x00	; 0
    2d5a:	90 e0       	ldi	r25, 0x00	; 0
    2d5c:	0e 94 21 15 	call	0x2a42	; 0x2a42 <_Z20MoveRelativePositionll>
    2d60:	ca cf       	rjmp	.-108    	; 0x2cf6 <_Z4homev+0x23c>
    2d62:	26 e9       	ldi	r18, 0x96	; 150
    2d64:	30 e0       	ldi	r19, 0x00	; 0
    2d66:	40 e0       	ldi	r20, 0x00	; 0
    2d68:	50 e0       	ldi	r21, 0x00	; 0
    2d6a:	68 ee       	ldi	r22, 0xE8	; 232
    2d6c:	73 e0       	ldi	r23, 0x03	; 3
    2d6e:	80 e0       	ldi	r24, 0x00	; 0
    2d70:	90 e0       	ldi	r25, 0x00	; 0
    2d72:	0e 94 21 15 	call	0x2a42	; 0x2a42 <_Z20MoveRelativePositionll>
    2d76:	20 91 12 04 	lds	r18, 0x0412	; 0x800412 <STEPS>
    2d7a:	30 91 13 04 	lds	r19, 0x0413	; 0x800413 <STEPS+0x1>
    2d7e:	40 91 14 04 	lds	r20, 0x0414	; 0x800414 <STEPS+0x2>
    2d82:	50 91 15 04 	lds	r21, 0x0415	; 0x800415 <STEPS+0x3>
    2d86:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <DESIRED_POSITION>
    2d8a:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <DESIRED_POSITION+0x1>
    2d8e:	a0 91 18 04 	lds	r26, 0x0418	; 0x800418 <DESIRED_POSITION+0x2>
    2d92:	b0 91 19 04 	lds	r27, 0x0419	; 0x800419 <DESIRED_POSITION+0x3>
    2d96:	61 e0       	ldi	r22, 0x01	; 1
    2d98:	28 17       	cp	r18, r24
    2d9a:	39 07       	cpc	r19, r25
    2d9c:	4a 07       	cpc	r20, r26
    2d9e:	5b 07       	cpc	r21, r27
    2da0:	09 f4       	brne	.+2      	; 0x2da4 <_Z4homev+0x2ea>
    2da2:	60 e0       	ldi	r22, 0x00	; 0
    2da4:	66 23       	and	r22, r22
    2da6:	09 f0       	breq	.+2      	; 0x2daa <_Z4homev+0x2f0>
    2da8:	e6 cf       	rjmp	.-52     	; 0x2d76 <_Z4homev+0x2bc>
    2daa:	10 92 12 04 	sts	0x0412, r1	; 0x800412 <STEPS>
    2dae:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <STEPS+0x1>
    2db2:	10 92 14 04 	sts	0x0414, r1	; 0x800414 <STEPS+0x2>
    2db6:	10 92 15 04 	sts	0x0415, r1	; 0x800415 <STEPS+0x3>
    2dba:	10 92 16 04 	sts	0x0416, r1	; 0x800416 <DESIRED_POSITION>
    2dbe:	10 92 17 04 	sts	0x0417, r1	; 0x800417 <DESIRED_POSITION+0x1>
    2dc2:	10 92 18 04 	sts	0x0418, r1	; 0x800418 <DESIRED_POSITION+0x2>
    2dc6:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <DESIRED_POSITION+0x3>
    2dca:	81 e0       	ldi	r24, 0x01	; 1
    2dcc:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <RUN_MODE>
    2dd0:	00 00       	nop
    2dd2:	df 91       	pop	r29
    2dd4:	cf 91       	pop	r28
    2dd6:	08 95       	ret

00002dd8 <_Z9MMToStepsm>:

uint32_t MMToSteps(uint32_t mm)
{
    2dd8:	cf 93       	push	r28
    2dda:	df 93       	push	r29
    2ddc:	cd b7       	in	r28, 0x3d	; 61
    2dde:	de b7       	in	r29, 0x3e	; 62
    2de0:	28 97       	sbiw	r28, 0x08	; 8
    2de2:	0f b6       	in	r0, 0x3f	; 63
    2de4:	f8 94       	cli
    2de6:	de bf       	out	0x3e, r29	; 62
    2de8:	0f be       	out	0x3f, r0	; 63
    2dea:	cd bf       	out	0x3d, r28	; 61
    2dec:	6d 83       	std	Y+5, r22	; 0x05
    2dee:	7e 83       	std	Y+6, r23	; 0x06
    2df0:	8f 83       	std	Y+7, r24	; 0x07
    2df2:	98 87       	std	Y+8, r25	; 0x08
	uint32_t position = (mm * 1000) / SCREW_PITCH_MM;
    2df4:	2d 81       	ldd	r18, Y+5	; 0x05
    2df6:	3e 81       	ldd	r19, Y+6	; 0x06
    2df8:	4f 81       	ldd	r20, Y+7	; 0x07
    2dfa:	58 85       	ldd	r21, Y+8	; 0x08
    2dfc:	88 ee       	ldi	r24, 0xE8	; 232
    2dfe:	93 e0       	ldi	r25, 0x03	; 3
    2e00:	dc 01       	movw	r26, r24
    2e02:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <__muluhisi3>
    2e06:	dc 01       	movw	r26, r24
    2e08:	cb 01       	movw	r24, r22
    2e0a:	24 e3       	ldi	r18, 0x34	; 52
    2e0c:	36 e0       	ldi	r19, 0x06	; 6
    2e0e:	40 e0       	ldi	r20, 0x00	; 0
    2e10:	50 e0       	ldi	r21, 0x00	; 0
    2e12:	bc 01       	movw	r22, r24
    2e14:	cd 01       	movw	r24, r26
    2e16:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <__udivmodsi4>
    2e1a:	da 01       	movw	r26, r20
    2e1c:	c9 01       	movw	r24, r18
    2e1e:	89 83       	std	Y+1, r24	; 0x01
    2e20:	9a 83       	std	Y+2, r25	; 0x02
    2e22:	ab 83       	std	Y+3, r26	; 0x03
    2e24:	bc 83       	std	Y+4, r27	; 0x04
	position = (position * MOTOR_STEPS_PER_REV) / 1000;
    2e26:	29 81       	ldd	r18, Y+1	; 0x01
    2e28:	3a 81       	ldd	r19, Y+2	; 0x02
    2e2a:	4b 81       	ldd	r20, Y+3	; 0x03
    2e2c:	5c 81       	ldd	r21, Y+4	; 0x04
    2e2e:	80 e8       	ldi	r24, 0x80	; 128
    2e30:	9c e0       	ldi	r25, 0x0C	; 12
    2e32:	dc 01       	movw	r26, r24
    2e34:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <__muluhisi3>
    2e38:	dc 01       	movw	r26, r24
    2e3a:	cb 01       	movw	r24, r22
    2e3c:	28 ee       	ldi	r18, 0xE8	; 232
    2e3e:	33 e0       	ldi	r19, 0x03	; 3
    2e40:	40 e0       	ldi	r20, 0x00	; 0
    2e42:	50 e0       	ldi	r21, 0x00	; 0
    2e44:	bc 01       	movw	r22, r24
    2e46:	cd 01       	movw	r24, r26
    2e48:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <__udivmodsi4>
    2e4c:	da 01       	movw	r26, r20
    2e4e:	c9 01       	movw	r24, r18
    2e50:	89 83       	std	Y+1, r24	; 0x01
    2e52:	9a 83       	std	Y+2, r25	; 0x02
    2e54:	ab 83       	std	Y+3, r26	; 0x03
    2e56:	bc 83       	std	Y+4, r27	; 0x04
	position = position * 2;
    2e58:	89 81       	ldd	r24, Y+1	; 0x01
    2e5a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e5c:	ab 81       	ldd	r26, Y+3	; 0x03
    2e5e:	bc 81       	ldd	r27, Y+4	; 0x04
    2e60:	88 0f       	add	r24, r24
    2e62:	99 1f       	adc	r25, r25
    2e64:	aa 1f       	adc	r26, r26
    2e66:	bb 1f       	adc	r27, r27
    2e68:	89 83       	std	Y+1, r24	; 0x01
    2e6a:	9a 83       	std	Y+2, r25	; 0x02
    2e6c:	ab 83       	std	Y+3, r26	; 0x03
    2e6e:	bc 83       	std	Y+4, r27	; 0x04

	return position;
    2e70:	89 81       	ldd	r24, Y+1	; 0x01
    2e72:	9a 81       	ldd	r25, Y+2	; 0x02
    2e74:	ab 81       	ldd	r26, Y+3	; 0x03
    2e76:	bc 81       	ldd	r27, Y+4	; 0x04
}
    2e78:	bc 01       	movw	r22, r24
    2e7a:	cd 01       	movw	r24, r26
    2e7c:	28 96       	adiw	r28, 0x08	; 8
    2e7e:	0f b6       	in	r0, 0x3f	; 63
    2e80:	f8 94       	cli
    2e82:	de bf       	out	0x3e, r29	; 62
    2e84:	0f be       	out	0x3f, r0	; 63
    2e86:	cd bf       	out	0x3d, r28	; 61
    2e88:	df 91       	pop	r29
    2e8a:	cf 91       	pop	r28
    2e8c:	08 95       	ret

00002e8e <_Z16Set_Traverse_RPMl>:



void Set_Traverse_RPM(long rpm)
{
    2e8e:	cf 93       	push	r28
    2e90:	df 93       	push	r29
    2e92:	cd b7       	in	r28, 0x3d	; 61
    2e94:	de b7       	in	r29, 0x3e	; 62
    2e96:	28 97       	sbiw	r28, 0x08	; 8
    2e98:	0f b6       	in	r0, 0x3f	; 63
    2e9a:	f8 94       	cli
    2e9c:	de bf       	out	0x3e, r29	; 62
    2e9e:	0f be       	out	0x3f, r0	; 63
    2ea0:	cd bf       	out	0x3d, r28	; 61
    2ea2:	6d 83       	std	Y+5, r22	; 0x05
    2ea4:	7e 83       	std	Y+6, r23	; 0x06
    2ea6:	8f 83       	std	Y+7, r24	; 0x07
    2ea8:	98 87       	std	Y+8, r25	; 0x08
	
	uint32_t pps = (rpm * MOTOR_STEPS_PER_REV) / 60; // pps is also the frequency, 60 is minutes to seconds
    2eaa:	2d 81       	ldd	r18, Y+5	; 0x05
    2eac:	3e 81       	ldd	r19, Y+6	; 0x06
    2eae:	4f 81       	ldd	r20, Y+7	; 0x07
    2eb0:	58 85       	ldd	r21, Y+8	; 0x08
    2eb2:	80 e8       	ldi	r24, 0x80	; 128
    2eb4:	9c e0       	ldi	r25, 0x0C	; 12
    2eb6:	dc 01       	movw	r26, r24
    2eb8:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <__muluhisi3>
    2ebc:	dc 01       	movw	r26, r24
    2ebe:	cb 01       	movw	r24, r22
    2ec0:	2c e3       	ldi	r18, 0x3C	; 60
    2ec2:	30 e0       	ldi	r19, 0x00	; 0
    2ec4:	40 e0       	ldi	r20, 0x00	; 0
    2ec6:	50 e0       	ldi	r21, 0x00	; 0
    2ec8:	bc 01       	movw	r22, r24
    2eca:	cd 01       	movw	r24, r26
    2ecc:	0e 94 c9 1d 	call	0x3b92	; 0x3b92 <__divmodsi4>
    2ed0:	da 01       	movw	r26, r20
    2ed2:	c9 01       	movw	r24, r18
    2ed4:	89 83       	std	Y+1, r24	; 0x01
    2ed6:	9a 83       	std	Y+2, r25	; 0x02
    2ed8:	ab 83       	std	Y+3, r26	; 0x03
    2eda:	bc 83       	std	Y+4, r27	; 0x04
	pps = pps * 2; //* 2 to get two half period waves
    2edc:	89 81       	ldd	r24, Y+1	; 0x01
    2ede:	9a 81       	ldd	r25, Y+2	; 0x02
    2ee0:	ab 81       	ldd	r26, Y+3	; 0x03
    2ee2:	bc 81       	ldd	r27, Y+4	; 0x04
    2ee4:	88 0f       	add	r24, r24
    2ee6:	99 1f       	adc	r25, r25
    2ee8:	aa 1f       	adc	r26, r26
    2eea:	bb 1f       	adc	r27, r27
    2eec:	89 83       	std	Y+1, r24	; 0x01
    2eee:	9a 83       	std	Y+2, r25	; 0x02
    2ef0:	ab 83       	std	Y+3, r26	; 0x03
    2ef2:	bc 83       	std	Y+4, r27	; 0x04
	stepDelay = F_CPU / (1 * pps) - 1;
    2ef4:	80 e0       	ldi	r24, 0x00	; 0
    2ef6:	94 e2       	ldi	r25, 0x24	; 36
    2ef8:	a4 ef       	ldi	r26, 0xF4	; 244
    2efa:	b0 e0       	ldi	r27, 0x00	; 0
    2efc:	29 81       	ldd	r18, Y+1	; 0x01
    2efe:	3a 81       	ldd	r19, Y+2	; 0x02
    2f00:	4b 81       	ldd	r20, Y+3	; 0x03
    2f02:	5c 81       	ldd	r21, Y+4	; 0x04
    2f04:	bc 01       	movw	r22, r24
    2f06:	cd 01       	movw	r24, r26
    2f08:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <__udivmodsi4>
    2f0c:	da 01       	movw	r26, r20
    2f0e:	c9 01       	movw	r24, r18
    2f10:	01 97       	sbiw	r24, 0x01	; 1
    2f12:	a1 09       	sbc	r26, r1
    2f14:	b1 09       	sbc	r27, r1
    2f16:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <stepDelay>
    2f1a:	90 93 e4 01 	sts	0x01E4, r25	; 0x8001e4 <stepDelay+0x1>
    2f1e:	a0 93 e5 01 	sts	0x01E5, r26	; 0x8001e5 <stepDelay+0x2>
    2f22:	b0 93 e6 01 	sts	0x01E6, r27	; 0x8001e6 <stepDelay+0x3>
	}
    2f26:	00 00       	nop
    2f28:	28 96       	adiw	r28, 0x08	; 8
    2f2a:	0f b6       	in	r0, 0x3f	; 63
    2f2c:	f8 94       	cli
    2f2e:	de bf       	out	0x3e, r29	; 62
    2f30:	0f be       	out	0x3f, r0	; 63
    2f32:	cd bf       	out	0x3d, r28	; 61
    2f34:	df 91       	pop	r29
    2f36:	cf 91       	pop	r28
    2f38:	08 95       	ret

00002f3a <_Z41__static_initialization_and_destruction_0ii>:
    2f3a:	cf 93       	push	r28
    2f3c:	df 93       	push	r29
    2f3e:	00 d0       	rcall	.+0      	; 0x2f40 <_Z41__static_initialization_and_destruction_0ii+0x6>
    2f40:	00 d0       	rcall	.+0      	; 0x2f42 <_Z41__static_initialization_and_destruction_0ii+0x8>
    2f42:	cd b7       	in	r28, 0x3d	; 61
    2f44:	de b7       	in	r29, 0x3e	; 62
    2f46:	9a 83       	std	Y+2, r25	; 0x02
    2f48:	89 83       	std	Y+1, r24	; 0x01
    2f4a:	7c 83       	std	Y+4, r23	; 0x04
    2f4c:	6b 83       	std	Y+3, r22	; 0x03
    2f4e:	89 81       	ldd	r24, Y+1	; 0x01
    2f50:	9a 81       	ldd	r25, Y+2	; 0x02
    2f52:	01 97       	sbiw	r24, 0x01	; 1
    2f54:	c1 f5       	brne	.+112    	; 0x2fc6 <_Z41__static_initialization_and_destruction_0ii+0x8c>
    2f56:	8b 81       	ldd	r24, Y+3	; 0x03
    2f58:	9c 81       	ldd	r25, Y+4	; 0x04
    2f5a:	01 96       	adiw	r24, 0x01	; 1
    2f5c:	a1 f5       	brne	.+104    	; 0x2fc6 <_Z41__static_initialization_and_destruction_0ii+0x8c>



int spoolUpdateInterval = 2000;
int fullAutoUpdateInterval = 50;
long previousFullAutoTime = fullAutoUpdateInterval;
    2f5e:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <fullAutoUpdateInterval>
    2f62:	90 91 ea 01 	lds	r25, 0x01EA	; 0x8001ea <fullAutoUpdateInterval+0x1>
    2f66:	09 2e       	mov	r0, r25
    2f68:	00 0c       	add	r0, r0
    2f6a:	aa 0b       	sbc	r26, r26
    2f6c:	bb 0b       	sbc	r27, r27
    2f6e:	80 93 fa 03 	sts	0x03FA, r24	; 0x8003fa <previousFullAutoTime>
    2f72:	90 93 fb 03 	sts	0x03FB, r25	; 0x8003fb <previousFullAutoTime+0x1>
    2f76:	a0 93 fc 03 	sts	0x03FC, r26	; 0x8003fc <previousFullAutoTime+0x2>
    2f7a:	b0 93 fd 03 	sts	0x03FD, r27	; 0x8003fd <previousFullAutoTime+0x3>
long previousSpoolTime = spoolUpdateInterval;
    2f7e:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <spoolUpdateInterval>
    2f82:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <spoolUpdateInterval+0x1>
    2f86:	09 2e       	mov	r0, r25
    2f88:	00 0c       	add	r0, r0
    2f8a:	aa 0b       	sbc	r26, r26
    2f8c:	bb 0b       	sbc	r27, r27
    2f8e:	80 93 fe 03 	sts	0x03FE, r24	; 0x8003fe <previousSpoolTime>
    2f92:	90 93 ff 03 	sts	0x03FF, r25	; 0x8003ff <previousSpoolTime+0x1>
    2f96:	a0 93 00 04 	sts	0x0400, r26	; 0x800400 <previousSpoolTime+0x2>
    2f9a:	b0 93 01 04 	sts	0x0401, r27	; 0x800401 <previousSpoolTime+0x3>
uint32_t serialTimerMillis = 1000; //Serial output scheduler delay time
uint32_t serialTimerPreviousMillis = 0; //Current delay time
volatile uint32_t fullAutoSpoolTicks = 0;
volatile uint32_t previousSpoolTicks = 0;
static unsigned long last_millis = 0;
unsigned long m = millis();
    2f9e:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <millis>
    2fa2:	dc 01       	movw	r26, r24
    2fa4:	cb 01       	movw	r24, r22
    2fa6:	80 93 0e 04 	sts	0x040E, r24	; 0x80040e <m>
    2faa:	90 93 0f 04 	sts	0x040F, r25	; 0x80040f <m+0x1>
    2fae:	a0 93 10 04 	sts	0x0410, r26	; 0x800410 <m+0x2>
    2fb2:	b0 93 11 04 	sts	0x0411, r27	; 0x800411 <m+0x3>
volatile bool potEnabled = true;
#else
volatile bool potEnabled = false;
#endif

Serial_Commands _Serial_Commands;
    2fb6:	8a e2       	ldi	r24, 0x2A	; 42
    2fb8:	94 e0       	ldi	r25, 0x04	; 4
    2fba:	0e 94 4b 08 	call	0x1096	; 0x1096 <_ZN15Serial_CommandsC1Ev>
Math_Helpers _Math_Helpers;
    2fbe:	8b e2       	ldi	r24, 0x2B	; 43
    2fc0:	94 e0       	ldi	r25, 0x04	; 4
    2fc2:	0e 94 cb 00 	call	0x196	; 0x196 <_ZN12Math_HelpersC1Ev>
    2fc6:	89 81       	ldd	r24, Y+1	; 0x01
    2fc8:	9a 81       	ldd	r25, Y+2	; 0x02
    2fca:	89 2b       	or	r24, r25
    2fcc:	61 f4       	brne	.+24     	; 0x2fe6 <_Z41__static_initialization_and_destruction_0ii+0xac>
    2fce:	8b 81       	ldd	r24, Y+3	; 0x03
    2fd0:	9c 81       	ldd	r25, Y+4	; 0x04
    2fd2:	01 96       	adiw	r24, 0x01	; 1
    2fd4:	41 f4       	brne	.+16     	; 0x2fe6 <_Z41__static_initialization_and_destruction_0ii+0xac>
    2fd6:	8b e2       	ldi	r24, 0x2B	; 43
    2fd8:	94 e0       	ldi	r25, 0x04	; 4
    2fda:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <_ZN12Math_HelpersD1Ev>
volatile bool potEnabled = true;
#else
volatile bool potEnabled = false;
#endif

Serial_Commands _Serial_Commands;
    2fde:	8a e2       	ldi	r24, 0x2A	; 42
    2fe0:	94 e0       	ldi	r25, 0x04	; 4
    2fe2:	0e 94 58 08 	call	0x10b0	; 0x10b0 <_ZN15Serial_CommandsD1Ev>
{
	
	uint32_t pps = (rpm * MOTOR_STEPS_PER_REV) / 60; // pps is also the frequency, 60 is minutes to seconds
	pps = pps * 2; //* 2 to get two half period waves
	stepDelay = F_CPU / (1 * pps) - 1;
	}
    2fe6:	00 00       	nop
    2fe8:	0f 90       	pop	r0
    2fea:	0f 90       	pop	r0
    2fec:	0f 90       	pop	r0
    2fee:	0f 90       	pop	r0
    2ff0:	df 91       	pop	r29
    2ff2:	cf 91       	pop	r28
    2ff4:	08 95       	ret

00002ff6 <_GLOBAL__sub_I_pcmsk>:
    2ff6:	cf 93       	push	r28
    2ff8:	df 93       	push	r29
    2ffa:	cd b7       	in	r28, 0x3d	; 61
    2ffc:	de b7       	in	r29, 0x3e	; 62
    2ffe:	6f ef       	ldi	r22, 0xFF	; 255
    3000:	7f ef       	ldi	r23, 0xFF	; 255
    3002:	81 e0       	ldi	r24, 0x01	; 1
    3004:	90 e0       	ldi	r25, 0x00	; 0
    3006:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <_Z41__static_initialization_and_destruction_0ii>
    300a:	df 91       	pop	r29
    300c:	cf 91       	pop	r28
    300e:	08 95       	ret

00003010 <_GLOBAL__sub_D_pcmsk>:
    3010:	cf 93       	push	r28
    3012:	df 93       	push	r29
    3014:	cd b7       	in	r28, 0x3d	; 61
    3016:	de b7       	in	r29, 0x3e	; 62
    3018:	6f ef       	ldi	r22, 0xFF	; 255
    301a:	7f ef       	ldi	r23, 0xFF	; 255
    301c:	80 e0       	ldi	r24, 0x00	; 0
    301e:	90 e0       	ldi	r25, 0x00	; 0
    3020:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <_Z41__static_initialization_and_destruction_0ii>
    3024:	df 91       	pop	r29
    3026:	cf 91       	pop	r28
    3028:	08 95       	ret

0000302a <_ZN25Step_Output_ConfigurationC1Ev>:
#include <Arduino.h>
#include "Step_Output_Configuration.h"


// default constructor
Step_Output_Configuration::Step_Output_Configuration()
    302a:	cf 93       	push	r28
    302c:	df 93       	push	r29
    302e:	00 d0       	rcall	.+0      	; 0x3030 <_ZN25Step_Output_ConfigurationC1Ev+0x6>
    3030:	cd b7       	in	r28, 0x3d	; 61
    3032:	de b7       	in	r29, 0x3e	; 62
    3034:	9a 83       	std	Y+2, r25	; 0x02
    3036:	89 83       	std	Y+1, r24	; 0x01
{
} //Step_Output_Configuration
    3038:	00 00       	nop
    303a:	0f 90       	pop	r0
    303c:	0f 90       	pop	r0
    303e:	df 91       	pop	r29
    3040:	cf 91       	pop	r28
    3042:	08 95       	ret

00003044 <_ZN25Step_Output_Configuration15SetupStepOutputEv>:

void Step_Output_Configuration::SetupStepOutput(void)
{
    3044:	cf 93       	push	r28
    3046:	df 93       	push	r29
    3048:	cd b7       	in	r28, 0x3d	; 61
    304a:	de b7       	in	r29, 0x3e	; 62
  //normal mode
  TCCR1A = 0x00;
    304c:	80 e8       	ldi	r24, 0x80	; 128
    304e:	90 e0       	ldi	r25, 0x00	; 0
    3050:	fc 01       	movw	r30, r24
    3052:	10 82       	st	Z, r1
  OCR1A   = 0;
    3054:	88 e8       	ldi	r24, 0x88	; 136
    3056:	90 e0       	ldi	r25, 0x00	; 0
    3058:	fc 01       	movw	r30, r24
    305a:	11 82       	std	Z+1, r1	; 0x01
    305c:	10 82       	st	Z, r1
  TCCR1B = (1<<CS10);
    305e:	81 e8       	ldi	r24, 0x81	; 129
    3060:	90 e0       	ldi	r25, 0x00	; 0
    3062:	21 e0       	ldi	r18, 0x01	; 1
    3064:	fc 01       	movw	r30, r24
    3066:	20 83       	st	Z, r18
  TIMSK1 |= bit (TOIE1);
    3068:	8f e6       	ldi	r24, 0x6F	; 111
    306a:	90 e0       	ldi	r25, 0x00	; 0
    306c:	2f e6       	ldi	r18, 0x6F	; 111
    306e:	30 e0       	ldi	r19, 0x00	; 0
    3070:	f9 01       	movw	r30, r18
    3072:	20 81       	ld	r18, Z
    3074:	21 60       	ori	r18, 0x01	; 1
    3076:	fc 01       	movw	r30, r24
    3078:	20 83       	st	Z, r18
}
    307a:	00 00       	nop
    307c:	df 91       	pop	r29
    307e:	cf 91       	pop	r28
    3080:	08 95       	ret

00003082 <_ZN25Step_Output_ConfigurationD1Ev>:

// default destructor
Step_Output_Configuration::~Step_Output_Configuration()
    3082:	cf 93       	push	r28
    3084:	df 93       	push	r29
    3086:	00 d0       	rcall	.+0      	; 0x3088 <_ZN25Step_Output_ConfigurationD1Ev+0x6>
    3088:	cd b7       	in	r28, 0x3d	; 61
    308a:	de b7       	in	r29, 0x3e	; 62
    308c:	9a 83       	std	Y+2, r25	; 0x02
    308e:	89 83       	std	Y+1, r24	; 0x01
{
} //~Step_Output_Configuration
    3090:	00 00       	nop
    3092:	0f 90       	pop	r0
    3094:	0f 90       	pop	r0
    3096:	df 91       	pop	r29
    3098:	cf 91       	pop	r28
    309a:	08 95       	ret

0000309c <__fixsfsi>:
    309c:	0e 94 55 18 	call	0x30aa	; 0x30aa <__fixunssfsi>
    30a0:	68 94       	set
    30a2:	b1 11       	cpse	r27, r1
    30a4:	0c 94 0c 19 	jmp	0x3218	; 0x3218 <__fp_szero>
    30a8:	08 95       	ret

000030aa <__fixunssfsi>:
    30aa:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__fp_splitA>
    30ae:	88 f0       	brcs	.+34     	; 0x30d2 <__fixunssfsi+0x28>
    30b0:	9f 57       	subi	r25, 0x7F	; 127
    30b2:	98 f0       	brcs	.+38     	; 0x30da <__fixunssfsi+0x30>
    30b4:	b9 2f       	mov	r27, r25
    30b6:	99 27       	eor	r25, r25
    30b8:	b7 51       	subi	r27, 0x17	; 23
    30ba:	b0 f0       	brcs	.+44     	; 0x30e8 <__fixunssfsi+0x3e>
    30bc:	e1 f0       	breq	.+56     	; 0x30f6 <__fixunssfsi+0x4c>
    30be:	66 0f       	add	r22, r22
    30c0:	77 1f       	adc	r23, r23
    30c2:	88 1f       	adc	r24, r24
    30c4:	99 1f       	adc	r25, r25
    30c6:	1a f0       	brmi	.+6      	; 0x30ce <__fixunssfsi+0x24>
    30c8:	ba 95       	dec	r27
    30ca:	c9 f7       	brne	.-14     	; 0x30be <__fixunssfsi+0x14>
    30cc:	14 c0       	rjmp	.+40     	; 0x30f6 <__fixunssfsi+0x4c>
    30ce:	b1 30       	cpi	r27, 0x01	; 1
    30d0:	91 f0       	breq	.+36     	; 0x30f6 <__fixunssfsi+0x4c>
    30d2:	0e 94 0b 19 	call	0x3216	; 0x3216 <__fp_zero>
    30d6:	b1 e0       	ldi	r27, 0x01	; 1
    30d8:	08 95       	ret
    30da:	0c 94 0b 19 	jmp	0x3216	; 0x3216 <__fp_zero>
    30de:	67 2f       	mov	r22, r23
    30e0:	78 2f       	mov	r23, r24
    30e2:	88 27       	eor	r24, r24
    30e4:	b8 5f       	subi	r27, 0xF8	; 248
    30e6:	39 f0       	breq	.+14     	; 0x30f6 <__fixunssfsi+0x4c>
    30e8:	b9 3f       	cpi	r27, 0xF9	; 249
    30ea:	cc f3       	brlt	.-14     	; 0x30de <__fixunssfsi+0x34>
    30ec:	86 95       	lsr	r24
    30ee:	77 95       	ror	r23
    30f0:	67 95       	ror	r22
    30f2:	b3 95       	inc	r27
    30f4:	d9 f7       	brne	.-10     	; 0x30ec <__fixunssfsi+0x42>
    30f6:	3e f4       	brtc	.+14     	; 0x3106 <__fixunssfsi+0x5c>
    30f8:	90 95       	com	r25
    30fa:	80 95       	com	r24
    30fc:	70 95       	com	r23
    30fe:	61 95       	neg	r22
    3100:	7f 4f       	sbci	r23, 0xFF	; 255
    3102:	8f 4f       	sbci	r24, 0xFF	; 255
    3104:	9f 4f       	sbci	r25, 0xFF	; 255
    3106:	08 95       	ret

00003108 <__floatunsisf>:
    3108:	e8 94       	clt
    310a:	09 c0       	rjmp	.+18     	; 0x311e <__floatsisf+0x12>

0000310c <__floatsisf>:
    310c:	97 fb       	bst	r25, 7
    310e:	3e f4       	brtc	.+14     	; 0x311e <__floatsisf+0x12>
    3110:	90 95       	com	r25
    3112:	80 95       	com	r24
    3114:	70 95       	com	r23
    3116:	61 95       	neg	r22
    3118:	7f 4f       	sbci	r23, 0xFF	; 255
    311a:	8f 4f       	sbci	r24, 0xFF	; 255
    311c:	9f 4f       	sbci	r25, 0xFF	; 255
    311e:	99 23       	and	r25, r25
    3120:	a9 f0       	breq	.+42     	; 0x314c <__floatsisf+0x40>
    3122:	f9 2f       	mov	r31, r25
    3124:	96 e9       	ldi	r25, 0x96	; 150
    3126:	bb 27       	eor	r27, r27
    3128:	93 95       	inc	r25
    312a:	f6 95       	lsr	r31
    312c:	87 95       	ror	r24
    312e:	77 95       	ror	r23
    3130:	67 95       	ror	r22
    3132:	b7 95       	ror	r27
    3134:	f1 11       	cpse	r31, r1
    3136:	f8 cf       	rjmp	.-16     	; 0x3128 <__floatsisf+0x1c>
    3138:	fa f4       	brpl	.+62     	; 0x3178 <__floatsisf+0x6c>
    313a:	bb 0f       	add	r27, r27
    313c:	11 f4       	brne	.+4      	; 0x3142 <__floatsisf+0x36>
    313e:	60 ff       	sbrs	r22, 0
    3140:	1b c0       	rjmp	.+54     	; 0x3178 <__floatsisf+0x6c>
    3142:	6f 5f       	subi	r22, 0xFF	; 255
    3144:	7f 4f       	sbci	r23, 0xFF	; 255
    3146:	8f 4f       	sbci	r24, 0xFF	; 255
    3148:	9f 4f       	sbci	r25, 0xFF	; 255
    314a:	16 c0       	rjmp	.+44     	; 0x3178 <__floatsisf+0x6c>
    314c:	88 23       	and	r24, r24
    314e:	11 f0       	breq	.+4      	; 0x3154 <__floatsisf+0x48>
    3150:	96 e9       	ldi	r25, 0x96	; 150
    3152:	11 c0       	rjmp	.+34     	; 0x3176 <__floatsisf+0x6a>
    3154:	77 23       	and	r23, r23
    3156:	21 f0       	breq	.+8      	; 0x3160 <__floatsisf+0x54>
    3158:	9e e8       	ldi	r25, 0x8E	; 142
    315a:	87 2f       	mov	r24, r23
    315c:	76 2f       	mov	r23, r22
    315e:	05 c0       	rjmp	.+10     	; 0x316a <__floatsisf+0x5e>
    3160:	66 23       	and	r22, r22
    3162:	71 f0       	breq	.+28     	; 0x3180 <__floatsisf+0x74>
    3164:	96 e8       	ldi	r25, 0x86	; 134
    3166:	86 2f       	mov	r24, r22
    3168:	70 e0       	ldi	r23, 0x00	; 0
    316a:	60 e0       	ldi	r22, 0x00	; 0
    316c:	2a f0       	brmi	.+10     	; 0x3178 <__floatsisf+0x6c>
    316e:	9a 95       	dec	r25
    3170:	66 0f       	add	r22, r22
    3172:	77 1f       	adc	r23, r23
    3174:	88 1f       	adc	r24, r24
    3176:	da f7       	brpl	.-10     	; 0x316e <__floatsisf+0x62>
    3178:	88 0f       	add	r24, r24
    317a:	96 95       	lsr	r25
    317c:	87 95       	ror	r24
    317e:	97 f9       	bld	r25, 7
    3180:	08 95       	ret

00003182 <__fp_inf>:
    3182:	97 f9       	bld	r25, 7
    3184:	9f 67       	ori	r25, 0x7F	; 127
    3186:	80 e8       	ldi	r24, 0x80	; 128
    3188:	70 e0       	ldi	r23, 0x00	; 0
    318a:	60 e0       	ldi	r22, 0x00	; 0
    318c:	08 95       	ret

0000318e <__fp_nan>:
    318e:	9f ef       	ldi	r25, 0xFF	; 255
    3190:	80 ec       	ldi	r24, 0xC0	; 192
    3192:	08 95       	ret

00003194 <__fp_pscA>:
    3194:	00 24       	eor	r0, r0
    3196:	0a 94       	dec	r0
    3198:	16 16       	cp	r1, r22
    319a:	17 06       	cpc	r1, r23
    319c:	18 06       	cpc	r1, r24
    319e:	09 06       	cpc	r0, r25
    31a0:	08 95       	ret

000031a2 <__fp_pscB>:
    31a2:	00 24       	eor	r0, r0
    31a4:	0a 94       	dec	r0
    31a6:	12 16       	cp	r1, r18
    31a8:	13 06       	cpc	r1, r19
    31aa:	14 06       	cpc	r1, r20
    31ac:	05 06       	cpc	r0, r21
    31ae:	08 95       	ret

000031b0 <__fp_round>:
    31b0:	09 2e       	mov	r0, r25
    31b2:	03 94       	inc	r0
    31b4:	00 0c       	add	r0, r0
    31b6:	11 f4       	brne	.+4      	; 0x31bc <__fp_round+0xc>
    31b8:	88 23       	and	r24, r24
    31ba:	52 f0       	brmi	.+20     	; 0x31d0 <__fp_round+0x20>
    31bc:	bb 0f       	add	r27, r27
    31be:	40 f4       	brcc	.+16     	; 0x31d0 <__fp_round+0x20>
    31c0:	bf 2b       	or	r27, r31
    31c2:	11 f4       	brne	.+4      	; 0x31c8 <__fp_round+0x18>
    31c4:	60 ff       	sbrs	r22, 0
    31c6:	04 c0       	rjmp	.+8      	; 0x31d0 <__fp_round+0x20>
    31c8:	6f 5f       	subi	r22, 0xFF	; 255
    31ca:	7f 4f       	sbci	r23, 0xFF	; 255
    31cc:	8f 4f       	sbci	r24, 0xFF	; 255
    31ce:	9f 4f       	sbci	r25, 0xFF	; 255
    31d0:	08 95       	ret

000031d2 <__fp_split3>:
    31d2:	57 fd       	sbrc	r21, 7
    31d4:	90 58       	subi	r25, 0x80	; 128
    31d6:	44 0f       	add	r20, r20
    31d8:	55 1f       	adc	r21, r21
    31da:	59 f0       	breq	.+22     	; 0x31f2 <__fp_splitA+0x10>
    31dc:	5f 3f       	cpi	r21, 0xFF	; 255
    31de:	71 f0       	breq	.+28     	; 0x31fc <__fp_splitA+0x1a>
    31e0:	47 95       	ror	r20

000031e2 <__fp_splitA>:
    31e2:	88 0f       	add	r24, r24
    31e4:	97 fb       	bst	r25, 7
    31e6:	99 1f       	adc	r25, r25
    31e8:	61 f0       	breq	.+24     	; 0x3202 <__fp_splitA+0x20>
    31ea:	9f 3f       	cpi	r25, 0xFF	; 255
    31ec:	79 f0       	breq	.+30     	; 0x320c <__fp_splitA+0x2a>
    31ee:	87 95       	ror	r24
    31f0:	08 95       	ret
    31f2:	12 16       	cp	r1, r18
    31f4:	13 06       	cpc	r1, r19
    31f6:	14 06       	cpc	r1, r20
    31f8:	55 1f       	adc	r21, r21
    31fa:	f2 cf       	rjmp	.-28     	; 0x31e0 <__fp_split3+0xe>
    31fc:	46 95       	lsr	r20
    31fe:	f1 df       	rcall	.-30     	; 0x31e2 <__fp_splitA>
    3200:	08 c0       	rjmp	.+16     	; 0x3212 <__fp_splitA+0x30>
    3202:	16 16       	cp	r1, r22
    3204:	17 06       	cpc	r1, r23
    3206:	18 06       	cpc	r1, r24
    3208:	99 1f       	adc	r25, r25
    320a:	f1 cf       	rjmp	.-30     	; 0x31ee <__fp_splitA+0xc>
    320c:	86 95       	lsr	r24
    320e:	71 05       	cpc	r23, r1
    3210:	61 05       	cpc	r22, r1
    3212:	08 94       	sec
    3214:	08 95       	ret

00003216 <__fp_zero>:
    3216:	e8 94       	clt

00003218 <__fp_szero>:
    3218:	bb 27       	eor	r27, r27
    321a:	66 27       	eor	r22, r22
    321c:	77 27       	eor	r23, r23
    321e:	cb 01       	movw	r24, r22
    3220:	97 f9       	bld	r25, 7
    3222:	08 95       	ret

00003224 <__mulsf3>:
    3224:	0e 94 25 19 	call	0x324a	; 0x324a <__mulsf3x>
    3228:	0c 94 d8 18 	jmp	0x31b0	; 0x31b0 <__fp_round>
    322c:	0e 94 ca 18 	call	0x3194	; 0x3194 <__fp_pscA>
    3230:	38 f0       	brcs	.+14     	; 0x3240 <__mulsf3+0x1c>
    3232:	0e 94 d1 18 	call	0x31a2	; 0x31a2 <__fp_pscB>
    3236:	20 f0       	brcs	.+8      	; 0x3240 <__mulsf3+0x1c>
    3238:	95 23       	and	r25, r21
    323a:	11 f0       	breq	.+4      	; 0x3240 <__mulsf3+0x1c>
    323c:	0c 94 c1 18 	jmp	0x3182	; 0x3182 <__fp_inf>
    3240:	0c 94 c7 18 	jmp	0x318e	; 0x318e <__fp_nan>
    3244:	11 24       	eor	r1, r1
    3246:	0c 94 0c 19 	jmp	0x3218	; 0x3218 <__fp_szero>

0000324a <__mulsf3x>:
    324a:	0e 94 e9 18 	call	0x31d2	; 0x31d2 <__fp_split3>
    324e:	70 f3       	brcs	.-36     	; 0x322c <__mulsf3+0x8>

00003250 <__mulsf3_pse>:
    3250:	95 9f       	mul	r25, r21
    3252:	c1 f3       	breq	.-16     	; 0x3244 <__mulsf3+0x20>
    3254:	95 0f       	add	r25, r21
    3256:	50 e0       	ldi	r21, 0x00	; 0
    3258:	55 1f       	adc	r21, r21
    325a:	62 9f       	mul	r22, r18
    325c:	f0 01       	movw	r30, r0
    325e:	72 9f       	mul	r23, r18
    3260:	bb 27       	eor	r27, r27
    3262:	f0 0d       	add	r31, r0
    3264:	b1 1d       	adc	r27, r1
    3266:	63 9f       	mul	r22, r19
    3268:	aa 27       	eor	r26, r26
    326a:	f0 0d       	add	r31, r0
    326c:	b1 1d       	adc	r27, r1
    326e:	aa 1f       	adc	r26, r26
    3270:	64 9f       	mul	r22, r20
    3272:	66 27       	eor	r22, r22
    3274:	b0 0d       	add	r27, r0
    3276:	a1 1d       	adc	r26, r1
    3278:	66 1f       	adc	r22, r22
    327a:	82 9f       	mul	r24, r18
    327c:	22 27       	eor	r18, r18
    327e:	b0 0d       	add	r27, r0
    3280:	a1 1d       	adc	r26, r1
    3282:	62 1f       	adc	r22, r18
    3284:	73 9f       	mul	r23, r19
    3286:	b0 0d       	add	r27, r0
    3288:	a1 1d       	adc	r26, r1
    328a:	62 1f       	adc	r22, r18
    328c:	83 9f       	mul	r24, r19
    328e:	a0 0d       	add	r26, r0
    3290:	61 1d       	adc	r22, r1
    3292:	22 1f       	adc	r18, r18
    3294:	74 9f       	mul	r23, r20
    3296:	33 27       	eor	r19, r19
    3298:	a0 0d       	add	r26, r0
    329a:	61 1d       	adc	r22, r1
    329c:	23 1f       	adc	r18, r19
    329e:	84 9f       	mul	r24, r20
    32a0:	60 0d       	add	r22, r0
    32a2:	21 1d       	adc	r18, r1
    32a4:	82 2f       	mov	r24, r18
    32a6:	76 2f       	mov	r23, r22
    32a8:	6a 2f       	mov	r22, r26
    32aa:	11 24       	eor	r1, r1
    32ac:	9f 57       	subi	r25, 0x7F	; 127
    32ae:	50 40       	sbci	r21, 0x00	; 0
    32b0:	9a f0       	brmi	.+38     	; 0x32d8 <__mulsf3_pse+0x88>
    32b2:	f1 f0       	breq	.+60     	; 0x32f0 <__mulsf3_pse+0xa0>
    32b4:	88 23       	and	r24, r24
    32b6:	4a f0       	brmi	.+18     	; 0x32ca <__mulsf3_pse+0x7a>
    32b8:	ee 0f       	add	r30, r30
    32ba:	ff 1f       	adc	r31, r31
    32bc:	bb 1f       	adc	r27, r27
    32be:	66 1f       	adc	r22, r22
    32c0:	77 1f       	adc	r23, r23
    32c2:	88 1f       	adc	r24, r24
    32c4:	91 50       	subi	r25, 0x01	; 1
    32c6:	50 40       	sbci	r21, 0x00	; 0
    32c8:	a9 f7       	brne	.-22     	; 0x32b4 <__mulsf3_pse+0x64>
    32ca:	9e 3f       	cpi	r25, 0xFE	; 254
    32cc:	51 05       	cpc	r21, r1
    32ce:	80 f0       	brcs	.+32     	; 0x32f0 <__mulsf3_pse+0xa0>
    32d0:	0c 94 c1 18 	jmp	0x3182	; 0x3182 <__fp_inf>
    32d4:	0c 94 0c 19 	jmp	0x3218	; 0x3218 <__fp_szero>
    32d8:	5f 3f       	cpi	r21, 0xFF	; 255
    32da:	e4 f3       	brlt	.-8      	; 0x32d4 <__mulsf3_pse+0x84>
    32dc:	98 3e       	cpi	r25, 0xE8	; 232
    32de:	d4 f3       	brlt	.-12     	; 0x32d4 <__mulsf3_pse+0x84>
    32e0:	86 95       	lsr	r24
    32e2:	77 95       	ror	r23
    32e4:	67 95       	ror	r22
    32e6:	b7 95       	ror	r27
    32e8:	f7 95       	ror	r31
    32ea:	e7 95       	ror	r30
    32ec:	9f 5f       	subi	r25, 0xFF	; 255
    32ee:	c1 f7       	brne	.-16     	; 0x32e0 <__mulsf3_pse+0x90>
    32f0:	fe 2b       	or	r31, r30
    32f2:	88 0f       	add	r24, r24
    32f4:	91 1d       	adc	r25, r1
    32f6:	96 95       	lsr	r25
    32f8:	87 95       	ror	r24
    32fa:	97 f9       	bld	r25, 7
    32fc:	08 95       	ret

000032fe <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    32fe:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    3300:	91 8d       	ldd	r25, Z+25	; 0x19
    3302:	22 8d       	ldd	r18, Z+26	; 0x1a
    3304:	89 2f       	mov	r24, r25
    3306:	90 e0       	ldi	r25, 0x00	; 0
    3308:	80 5c       	subi	r24, 0xC0	; 192
    330a:	9f 4f       	sbci	r25, 0xFF	; 255
    330c:	82 1b       	sub	r24, r18
    330e:	91 09       	sbc	r25, r1
}
    3310:	8f 73       	andi	r24, 0x3F	; 63
    3312:	99 27       	eor	r25, r25
    3314:	08 95       	ret

00003316 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    3316:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    3318:	91 8d       	ldd	r25, Z+25	; 0x19
    331a:	82 8d       	ldd	r24, Z+26	; 0x1a
    331c:	98 17       	cp	r25, r24
    331e:	31 f0       	breq	.+12     	; 0x332c <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    3320:	82 8d       	ldd	r24, Z+26	; 0x1a
    3322:	e8 0f       	add	r30, r24
    3324:	f1 1d       	adc	r31, r1
    3326:	85 8d       	ldd	r24, Z+29	; 0x1d
    3328:	90 e0       	ldi	r25, 0x00	; 0
    332a:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    332c:	8f ef       	ldi	r24, 0xFF	; 255
    332e:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    3330:	08 95       	ret

00003332 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    3332:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    3334:	91 8d       	ldd	r25, Z+25	; 0x19
    3336:	82 8d       	ldd	r24, Z+26	; 0x1a
    3338:	98 17       	cp	r25, r24
    333a:	61 f0       	breq	.+24     	; 0x3354 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    333c:	82 8d       	ldd	r24, Z+26	; 0x1a
    333e:	df 01       	movw	r26, r30
    3340:	a8 0f       	add	r26, r24
    3342:	b1 1d       	adc	r27, r1
    3344:	5d 96       	adiw	r26, 0x1d	; 29
    3346:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    3348:	92 8d       	ldd	r25, Z+26	; 0x1a
    334a:	9f 5f       	subi	r25, 0xFF	; 255
    334c:	9f 73       	andi	r25, 0x3F	; 63
    334e:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    3350:	90 e0       	ldi	r25, 0x00	; 0
    3352:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    3354:	8f ef       	ldi	r24, 0xFF	; 255
    3356:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    3358:	08 95       	ret

0000335a <_ZN14HardwareSerial17availableForWriteEv>:
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    335a:	fc 01       	movw	r30, r24
    335c:	53 8d       	ldd	r21, Z+27	; 0x1b
    tail = _tx_buffer_tail;
    335e:	44 8d       	ldd	r20, Z+28	; 0x1c
    3360:	25 2f       	mov	r18, r21
    3362:	30 e0       	ldi	r19, 0x00	; 0
    3364:	84 2f       	mov	r24, r20
    3366:	90 e0       	ldi	r25, 0x00	; 0
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    3368:	82 1b       	sub	r24, r18
    336a:	93 0b       	sbc	r25, r19
    336c:	54 17       	cp	r21, r20
    336e:	10 f0       	brcs	.+4      	; 0x3374 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    3370:	cf 96       	adiw	r24, 0x3f	; 63
    3372:	08 95       	ret
  return tail - head - 1;
    3374:	01 97       	sbiw	r24, 0x01	; 1
}
    3376:	08 95       	ret

00003378 <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    3378:	88 e1       	ldi	r24, 0x18	; 24
    337a:	9b e1       	ldi	r25, 0x1B	; 27
    337c:	89 2b       	or	r24, r25
    337e:	49 f0       	breq	.+18     	; 0x3392 <_Z14serialEventRunv+0x1a>
    3380:	80 e0       	ldi	r24, 0x00	; 0
    3382:	90 e0       	ldi	r25, 0x00	; 0
    3384:	89 2b       	or	r24, r25
    3386:	29 f0       	breq	.+10     	; 0x3392 <_Z14serialEventRunv+0x1a>
    3388:	0e 94 18 1b 	call	0x3630	; 0x3630 <_Z17Serial0_availablev>
    338c:	81 11       	cpse	r24, r1
    338e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    3392:	08 95       	ret

00003394 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    3394:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    3396:	84 8d       	ldd	r24, Z+28	; 0x1c
    3398:	df 01       	movw	r26, r30
    339a:	a8 0f       	add	r26, r24
    339c:	b1 1d       	adc	r27, r1
    339e:	a3 5a       	subi	r26, 0xA3	; 163
    33a0:	bf 4f       	sbci	r27, 0xFF	; 255
    33a2:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    33a4:	84 8d       	ldd	r24, Z+28	; 0x1c
    33a6:	90 e0       	ldi	r25, 0x00	; 0
    33a8:	01 96       	adiw	r24, 0x01	; 1
    33aa:	8f 73       	andi	r24, 0x3F	; 63
    33ac:	99 27       	eor	r25, r25
    33ae:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    33b0:	a6 89       	ldd	r26, Z+22	; 0x16
    33b2:	b7 89       	ldd	r27, Z+23	; 0x17
    33b4:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    33b6:	a0 89       	ldd	r26, Z+16	; 0x10
    33b8:	b1 89       	ldd	r27, Z+17	; 0x11
    33ba:	8c 91       	ld	r24, X
    33bc:	83 70       	andi	r24, 0x03	; 3
    33be:	80 64       	ori	r24, 0x40	; 64
    33c0:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    33c2:	93 8d       	ldd	r25, Z+27	; 0x1b
    33c4:	84 8d       	ldd	r24, Z+28	; 0x1c
    33c6:	98 13       	cpse	r25, r24
    33c8:	06 c0       	rjmp	.+12     	; 0x33d6 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    33ca:	02 88       	ldd	r0, Z+18	; 0x12
    33cc:	f3 89       	ldd	r31, Z+19	; 0x13
    33ce:	e0 2d       	mov	r30, r0
    33d0:	80 81       	ld	r24, Z
    33d2:	8f 7d       	andi	r24, 0xDF	; 223
    33d4:	80 83       	st	Z, r24
    33d6:	08 95       	ret

000033d8 <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    33d8:	ef 92       	push	r14
    33da:	ff 92       	push	r15
    33dc:	0f 93       	push	r16
    33de:	1f 93       	push	r17
    33e0:	cf 93       	push	r28
    33e2:	df 93       	push	r29
    33e4:	ec 01       	movw	r28, r24
  _written = true;
    33e6:	81 e0       	ldi	r24, 0x01	; 1
    33e8:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    33ea:	9b 8d       	ldd	r25, Y+27	; 0x1b
    33ec:	8c 8d       	ldd	r24, Y+28	; 0x1c
    33ee:	98 13       	cpse	r25, r24
    33f0:	05 c0       	rjmp	.+10     	; 0x33fc <_ZN14HardwareSerial5writeEh+0x24>
    33f2:	e8 89       	ldd	r30, Y+16	; 0x10
    33f4:	f9 89       	ldd	r31, Y+17	; 0x11
    33f6:	80 81       	ld	r24, Z
    33f8:	85 fd       	sbrc	r24, 5
    33fa:	26 c0       	rjmp	.+76     	; 0x3448 <_ZN14HardwareSerial5writeEh+0x70>
    33fc:	f6 2e       	mov	r15, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    33fe:	0b 8d       	ldd	r16, Y+27	; 0x1b
    3400:	10 e0       	ldi	r17, 0x00	; 0
    3402:	0f 5f       	subi	r16, 0xFF	; 255
    3404:	1f 4f       	sbci	r17, 0xFF	; 255
    3406:	0f 73       	andi	r16, 0x3F	; 63
    3408:	11 27       	eor	r17, r17
    340a:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    340c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    340e:	e8 12       	cpse	r14, r24
    3410:	0c c0       	rjmp	.+24     	; 0x342a <_ZN14HardwareSerial5writeEh+0x52>
    if (bit_is_clear(SREG, SREG_I)) {
    3412:	0f b6       	in	r0, 0x3f	; 63
    3414:	07 fc       	sbrc	r0, 7
    3416:	fa cf       	rjmp	.-12     	; 0x340c <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    3418:	e8 89       	ldd	r30, Y+16	; 0x10
    341a:	f9 89       	ldd	r31, Y+17	; 0x11
    341c:	80 81       	ld	r24, Z
    341e:	85 ff       	sbrs	r24, 5
    3420:	f5 cf       	rjmp	.-22     	; 0x340c <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    3422:	ce 01       	movw	r24, r28
    3424:	0e 94 ca 19 	call	0x3394	; 0x3394 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    3428:	f1 cf       	rjmp	.-30     	; 0x340c <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    342a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    342c:	fe 01       	movw	r30, r28
    342e:	e8 0f       	add	r30, r24
    3430:	f1 1d       	adc	r31, r1
    3432:	e3 5a       	subi	r30, 0xA3	; 163
    3434:	ff 4f       	sbci	r31, 0xFF	; 255
    3436:	f0 82       	st	Z, r15

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    3438:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    343a:	f8 94       	cli
    _tx_buffer_head = i;
    343c:	0b 8f       	std	Y+27, r16	; 0x1b
    sbi(*_ucsrb, UDRIE0);
    343e:	ea 89       	ldd	r30, Y+18	; 0x12
    3440:	fb 89       	ldd	r31, Y+19	; 0x13
    3442:	80 81       	ld	r24, Z
    3444:	80 62       	ori	r24, 0x20	; 32
    3446:	0a c0       	rjmp	.+20     	; 0x345c <_ZN14HardwareSerial5writeEh+0x84>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    3448:	9f b7       	in	r25, 0x3f	; 63
    344a:	f8 94       	cli
      *_udr = c;
    344c:	ee 89       	ldd	r30, Y+22	; 0x16
    344e:	ff 89       	ldd	r31, Y+23	; 0x17
    3450:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    3452:	e8 89       	ldd	r30, Y+16	; 0x10
    3454:	f9 89       	ldd	r31, Y+17	; 0x11
    3456:	80 81       	ld	r24, Z
    3458:	83 70       	andi	r24, 0x03	; 3
    345a:	80 64       	ori	r24, 0x40	; 64
    345c:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    345e:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
    3460:	81 e0       	ldi	r24, 0x01	; 1
    3462:	90 e0       	ldi	r25, 0x00	; 0
    3464:	df 91       	pop	r29
    3466:	cf 91       	pop	r28
    3468:	1f 91       	pop	r17
    346a:	0f 91       	pop	r16
    346c:	ff 90       	pop	r15
    346e:	ef 90       	pop	r14
    3470:	08 95       	ret

00003472 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    3472:	cf 93       	push	r28
    3474:	df 93       	push	r29
    3476:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    3478:	88 8d       	ldd	r24, Y+24	; 0x18
    347a:	88 23       	and	r24, r24
    347c:	c9 f0       	breq	.+50     	; 0x34b0 <_ZN14HardwareSerial5flushEv+0x3e>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    347e:	ea 89       	ldd	r30, Y+18	; 0x12
    3480:	fb 89       	ldd	r31, Y+19	; 0x13
    3482:	80 81       	ld	r24, Z
    3484:	85 fd       	sbrc	r24, 5
    3486:	05 c0       	rjmp	.+10     	; 0x3492 <_ZN14HardwareSerial5flushEv+0x20>
    3488:	a8 89       	ldd	r26, Y+16	; 0x10
    348a:	b9 89       	ldd	r27, Y+17	; 0x11
    348c:	8c 91       	ld	r24, X
    348e:	86 fd       	sbrc	r24, 6
    3490:	0f c0       	rjmp	.+30     	; 0x34b0 <_ZN14HardwareSerial5flushEv+0x3e>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    3492:	0f b6       	in	r0, 0x3f	; 63
    3494:	07 fc       	sbrc	r0, 7
    3496:	f5 cf       	rjmp	.-22     	; 0x3482 <_ZN14HardwareSerial5flushEv+0x10>
    3498:	80 81       	ld	r24, Z
    349a:	85 ff       	sbrs	r24, 5
    349c:	f2 cf       	rjmp	.-28     	; 0x3482 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    349e:	a8 89       	ldd	r26, Y+16	; 0x10
    34a0:	b9 89       	ldd	r27, Y+17	; 0x11
    34a2:	8c 91       	ld	r24, X
    34a4:	85 ff       	sbrs	r24, 5
    34a6:	ed cf       	rjmp	.-38     	; 0x3482 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    34a8:	ce 01       	movw	r24, r28
    34aa:	0e 94 ca 19 	call	0x3394	; 0x3394 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    34ae:	e7 cf       	rjmp	.-50     	; 0x347e <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    34b0:	df 91       	pop	r29
    34b2:	cf 91       	pop	r28
    34b4:	08 95       	ret

000034b6 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    34b6:	cf 92       	push	r12
    34b8:	df 92       	push	r13
    34ba:	ef 92       	push	r14
    34bc:	ff 92       	push	r15
    34be:	1f 93       	push	r17
    34c0:	cf 93       	push	r28
    34c2:	df 93       	push	r29
    34c4:	ec 01       	movw	r28, r24
    34c6:	6a 01       	movw	r12, r20
    34c8:	7b 01       	movw	r14, r22
    34ca:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    34cc:	e8 89       	ldd	r30, Y+16	; 0x10
    34ce:	f9 89       	ldd	r31, Y+17	; 0x11
    34d0:	82 e0       	ldi	r24, 0x02	; 2
    34d2:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    34d4:	41 15       	cp	r20, r1
    34d6:	51 4e       	sbci	r21, 0xE1	; 225
    34d8:	61 05       	cpc	r22, r1
    34da:	71 05       	cpc	r23, r1
    34dc:	b1 f0       	breq	.+44     	; 0x350a <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    34de:	60 e0       	ldi	r22, 0x00	; 0
    34e0:	79 e0       	ldi	r23, 0x09	; 9
    34e2:	8d e3       	ldi	r24, 0x3D	; 61
    34e4:	90 e0       	ldi	r25, 0x00	; 0
    34e6:	a7 01       	movw	r20, r14
    34e8:	96 01       	movw	r18, r12
    34ea:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <__udivmodsi4>
    34ee:	da 01       	movw	r26, r20
    34f0:	c9 01       	movw	r24, r18
    34f2:	01 97       	sbiw	r24, 0x01	; 1
    34f4:	a1 09       	sbc	r26, r1
    34f6:	b1 09       	sbc	r27, r1
    34f8:	b6 95       	lsr	r27
    34fa:	a7 95       	ror	r26
    34fc:	97 95       	ror	r25
    34fe:	87 95       	ror	r24
    3500:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    3502:	21 15       	cp	r18, r1
    3504:	80 e1       	ldi	r24, 0x10	; 16
    3506:	38 07       	cpc	r19, r24
    3508:	a8 f0       	brcs	.+42     	; 0x3534 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
    350a:	e8 89       	ldd	r30, Y+16	; 0x10
    350c:	f9 89       	ldd	r31, Y+17	; 0x11
    350e:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    3510:	60 e8       	ldi	r22, 0x80	; 128
    3512:	74 e8       	ldi	r23, 0x84	; 132
    3514:	8e e1       	ldi	r24, 0x1E	; 30
    3516:	90 e0       	ldi	r25, 0x00	; 0
    3518:	a7 01       	movw	r20, r14
    351a:	96 01       	movw	r18, r12
    351c:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <__udivmodsi4>
    3520:	da 01       	movw	r26, r20
    3522:	c9 01       	movw	r24, r18
    3524:	01 97       	sbiw	r24, 0x01	; 1
    3526:	a1 09       	sbc	r26, r1
    3528:	b1 09       	sbc	r27, r1
    352a:	b6 95       	lsr	r27
    352c:	a7 95       	ror	r26
    352e:	97 95       	ror	r25
    3530:	87 95       	ror	r24
    3532:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    3534:	ec 85       	ldd	r30, Y+12	; 0x0c
    3536:	fd 85       	ldd	r31, Y+13	; 0x0d
    3538:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    353a:	ee 85       	ldd	r30, Y+14	; 0x0e
    353c:	ff 85       	ldd	r31, Y+15	; 0x0f
    353e:	20 83       	st	Z, r18

  _written = false;
    3540:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    3542:	ec 89       	ldd	r30, Y+20	; 0x14
    3544:	fd 89       	ldd	r31, Y+21	; 0x15
    3546:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    3548:	ea 89       	ldd	r30, Y+18	; 0x12
    354a:	fb 89       	ldd	r31, Y+19	; 0x13
    354c:	80 81       	ld	r24, Z
    354e:	80 61       	ori	r24, 0x10	; 16
    3550:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    3552:	ea 89       	ldd	r30, Y+18	; 0x12
    3554:	fb 89       	ldd	r31, Y+19	; 0x13
    3556:	80 81       	ld	r24, Z
    3558:	88 60       	ori	r24, 0x08	; 8
    355a:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    355c:	ea 89       	ldd	r30, Y+18	; 0x12
    355e:	fb 89       	ldd	r31, Y+19	; 0x13
    3560:	80 81       	ld	r24, Z
    3562:	80 68       	ori	r24, 0x80	; 128
    3564:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    3566:	ea 89       	ldd	r30, Y+18	; 0x12
    3568:	fb 89       	ldd	r31, Y+19	; 0x13
    356a:	80 81       	ld	r24, Z
    356c:	8f 7d       	andi	r24, 0xDF	; 223
    356e:	80 83       	st	Z, r24
}
    3570:	df 91       	pop	r29
    3572:	cf 91       	pop	r28
    3574:	1f 91       	pop	r17
    3576:	ff 90       	pop	r15
    3578:	ef 90       	pop	r14
    357a:	df 90       	pop	r13
    357c:	cf 90       	pop	r12
    357e:	08 95       	ret

00003580 <__vector_18>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    3580:	1f 92       	push	r1
    3582:	0f 92       	push	r0
    3584:	0f b6       	in	r0, 0x3f	; 63
    3586:	0f 92       	push	r0
    3588:	11 24       	eor	r1, r1
    358a:	2f 93       	push	r18
    358c:	8f 93       	push	r24
    358e:	9f 93       	push	r25
    3590:	ef 93       	push	r30
    3592:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    3594:	e0 91 3c 04 	lds	r30, 0x043C	; 0x80043c <Serial+0x10>
    3598:	f0 91 3d 04 	lds	r31, 0x043D	; 0x80043d <Serial+0x11>
    359c:	80 81       	ld	r24, Z
    359e:	e0 91 42 04 	lds	r30, 0x0442	; 0x800442 <Serial+0x16>
    35a2:	f0 91 43 04 	lds	r31, 0x0443	; 0x800443 <Serial+0x17>
    35a6:	82 fd       	sbrc	r24, 2
    35a8:	12 c0       	rjmp	.+36     	; 0x35ce <__vector_18+0x4e>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    35aa:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    35ac:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <Serial+0x19>
    35b0:	8f 5f       	subi	r24, 0xFF	; 255
    35b2:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    35b4:	20 91 46 04 	lds	r18, 0x0446	; 0x800446 <Serial+0x1a>
    35b8:	82 17       	cp	r24, r18
    35ba:	51 f0       	breq	.+20     	; 0x35d0 <__vector_18+0x50>
      _rx_buffer[_rx_buffer_head] = c;
    35bc:	e0 91 45 04 	lds	r30, 0x0445	; 0x800445 <Serial+0x19>
    35c0:	f0 e0       	ldi	r31, 0x00	; 0
    35c2:	e4 5d       	subi	r30, 0xD4	; 212
    35c4:	fb 4f       	sbci	r31, 0xFB	; 251
    35c6:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    35c8:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <Serial+0x19>
    35cc:	01 c0       	rjmp	.+2      	; 0x35d0 <__vector_18+0x50>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    35ce:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    35d0:	ff 91       	pop	r31
    35d2:	ef 91       	pop	r30
    35d4:	9f 91       	pop	r25
    35d6:	8f 91       	pop	r24
    35d8:	2f 91       	pop	r18
    35da:	0f 90       	pop	r0
    35dc:	0f be       	out	0x3f, r0	; 63
    35de:	0f 90       	pop	r0
    35e0:	1f 90       	pop	r1
    35e2:	18 95       	reti

000035e4 <__vector_19>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    35e4:	1f 92       	push	r1
    35e6:	0f 92       	push	r0
    35e8:	0f b6       	in	r0, 0x3f	; 63
    35ea:	0f 92       	push	r0
    35ec:	11 24       	eor	r1, r1
    35ee:	2f 93       	push	r18
    35f0:	3f 93       	push	r19
    35f2:	4f 93       	push	r20
    35f4:	5f 93       	push	r21
    35f6:	6f 93       	push	r22
    35f8:	7f 93       	push	r23
    35fa:	8f 93       	push	r24
    35fc:	9f 93       	push	r25
    35fe:	af 93       	push	r26
    3600:	bf 93       	push	r27
    3602:	ef 93       	push	r30
    3604:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    3606:	8c e2       	ldi	r24, 0x2C	; 44
    3608:	94 e0       	ldi	r25, 0x04	; 4
    360a:	0e 94 ca 19 	call	0x3394	; 0x3394 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    360e:	ff 91       	pop	r31
    3610:	ef 91       	pop	r30
    3612:	bf 91       	pop	r27
    3614:	af 91       	pop	r26
    3616:	9f 91       	pop	r25
    3618:	8f 91       	pop	r24
    361a:	7f 91       	pop	r23
    361c:	6f 91       	pop	r22
    361e:	5f 91       	pop	r21
    3620:	4f 91       	pop	r20
    3622:	3f 91       	pop	r19
    3624:	2f 91       	pop	r18
    3626:	0f 90       	pop	r0
    3628:	0f be       	out	0x3f, r0	; 63
    362a:	0f 90       	pop	r0
    362c:	1f 90       	pop	r1
    362e:	18 95       	reti

00003630 <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    3630:	8c e2       	ldi	r24, 0x2C	; 44
    3632:	94 e0       	ldi	r25, 0x04	; 4
    3634:	0e 94 7f 19 	call	0x32fe	; 0x32fe <_ZN14HardwareSerial9availableEv>
    3638:	21 e0       	ldi	r18, 0x01	; 1
    363a:	89 2b       	or	r24, r25
    363c:	09 f4       	brne	.+2      	; 0x3640 <_Z17Serial0_availablev+0x10>
    363e:	20 e0       	ldi	r18, 0x00	; 0
}
    3640:	82 2f       	mov	r24, r18
    3642:	08 95       	ret

00003644 <_GLOBAL__sub_I___vector_18>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    3644:	ec e2       	ldi	r30, 0x2C	; 44
    3646:	f4 e0       	ldi	r31, 0x04	; 4
    3648:	13 82       	std	Z+3, r1	; 0x03
    364a:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    364c:	88 ee       	ldi	r24, 0xE8	; 232
    364e:	93 e0       	ldi	r25, 0x03	; 3
    3650:	a0 e0       	ldi	r26, 0x00	; 0
    3652:	b0 e0       	ldi	r27, 0x00	; 0
    3654:	84 83       	std	Z+4, r24	; 0x04
    3656:	95 83       	std	Z+5, r25	; 0x05
    3658:	a6 83       	std	Z+6, r26	; 0x06
    365a:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    365c:	86 e9       	ldi	r24, 0x96	; 150
    365e:	93 e0       	ldi	r25, 0x03	; 3
    3660:	91 83       	std	Z+1, r25	; 0x01
    3662:	80 83       	st	Z, r24
    3664:	85 ec       	ldi	r24, 0xC5	; 197
    3666:	90 e0       	ldi	r25, 0x00	; 0
    3668:	95 87       	std	Z+13, r25	; 0x0d
    366a:	84 87       	std	Z+12, r24	; 0x0c
    366c:	84 ec       	ldi	r24, 0xC4	; 196
    366e:	90 e0       	ldi	r25, 0x00	; 0
    3670:	97 87       	std	Z+15, r25	; 0x0f
    3672:	86 87       	std	Z+14, r24	; 0x0e
    3674:	80 ec       	ldi	r24, 0xC0	; 192
    3676:	90 e0       	ldi	r25, 0x00	; 0
    3678:	91 8b       	std	Z+17, r25	; 0x11
    367a:	80 8b       	std	Z+16, r24	; 0x10
    367c:	81 ec       	ldi	r24, 0xC1	; 193
    367e:	90 e0       	ldi	r25, 0x00	; 0
    3680:	93 8b       	std	Z+19, r25	; 0x13
    3682:	82 8b       	std	Z+18, r24	; 0x12
    3684:	82 ec       	ldi	r24, 0xC2	; 194
    3686:	90 e0       	ldi	r25, 0x00	; 0
    3688:	95 8b       	std	Z+21, r25	; 0x15
    368a:	84 8b       	std	Z+20, r24	; 0x14
    368c:	86 ec       	ldi	r24, 0xC6	; 198
    368e:	90 e0       	ldi	r25, 0x00	; 0
    3690:	97 8b       	std	Z+23, r25	; 0x17
    3692:	86 8b       	std	Z+22, r24	; 0x16
    3694:	11 8e       	std	Z+25, r1	; 0x19
    3696:	12 8e       	std	Z+26, r1	; 0x1a
    3698:	13 8e       	std	Z+27, r1	; 0x1b
    369a:	14 8e       	std	Z+28, r1	; 0x1c
    369c:	08 95       	ret

0000369e <initVariant>:
    369e:	08 95       	ret

000036a0 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    36a0:	0e 94 20 1d 	call	0x3a40	; 0x3a40 <init>

	initVariant();
    36a4:	0e 94 4f 1b 	call	0x369e	; 0x369e <initVariant>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    36a8:	0e 94 46 10 	call	0x208c	; 0x208c <setup>
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    36ac:	cc eb       	ldi	r28, 0xBC	; 188
    36ae:	d9 e1       	ldi	r29, 0x19	; 25
#endif
	
	setup();
    
	for (;;) {
		loop();
    36b0:	0e 94 93 10 	call	0x2126	; 0x2126 <loop>
		if (serialEventRun) serialEventRun();
    36b4:	20 97       	sbiw	r28, 0x00	; 0
    36b6:	e1 f3       	breq	.-8      	; 0x36b0 <main+0x10>
    36b8:	0e 94 bc 19 	call	0x3378	; 0x3378 <_Z14serialEventRunv>
    36bc:	f9 cf       	rjmp	.-14     	; 0x36b0 <main+0x10>

000036be <_ZN5Print5writeEPKhj>:
size_t Print::println(int num, int base)
{
  size_t n = print(num, base);
  n += println();
  return n;
}
    36be:	cf 92       	push	r12
    36c0:	df 92       	push	r13
    36c2:	ef 92       	push	r14
    36c4:	ff 92       	push	r15
    36c6:	0f 93       	push	r16
    36c8:	1f 93       	push	r17
    36ca:	cf 93       	push	r28
    36cc:	df 93       	push	r29
    36ce:	6c 01       	movw	r12, r24
    36d0:	7a 01       	movw	r14, r20
    36d2:	8b 01       	movw	r16, r22
    36d4:	c0 e0       	ldi	r28, 0x00	; 0
    36d6:	d0 e0       	ldi	r29, 0x00	; 0
    36d8:	ce 15       	cp	r28, r14
    36da:	df 05       	cpc	r29, r15
    36dc:	81 f0       	breq	.+32     	; 0x36fe <_ZN5Print5writeEPKhj+0x40>
    36de:	d8 01       	movw	r26, r16
    36e0:	6d 91       	ld	r22, X+
    36e2:	8d 01       	movw	r16, r26
    36e4:	d6 01       	movw	r26, r12
    36e6:	ed 91       	ld	r30, X+
    36e8:	fc 91       	ld	r31, X
    36ea:	01 90       	ld	r0, Z+
    36ec:	f0 81       	ld	r31, Z
    36ee:	e0 2d       	mov	r30, r0
    36f0:	c6 01       	movw	r24, r12
    36f2:	09 95       	icall
    36f4:	89 2b       	or	r24, r25
    36f6:	11 f0       	breq	.+4      	; 0x36fc <_ZN5Print5writeEPKhj+0x3e>
    36f8:	21 96       	adiw	r28, 0x01	; 1
    36fa:	ee cf       	rjmp	.-36     	; 0x36d8 <_ZN5Print5writeEPKhj+0x1a>
    36fc:	7e 01       	movw	r14, r28
    36fe:	c7 01       	movw	r24, r14
    3700:	df 91       	pop	r29
    3702:	cf 91       	pop	r28
    3704:	1f 91       	pop	r17
    3706:	0f 91       	pop	r16
    3708:	ff 90       	pop	r15
    370a:	ef 90       	pop	r14
    370c:	df 90       	pop	r13
    370e:	cf 90       	pop	r12
    3710:	08 95       	ret

00003712 <_ZN5Print5writeEPKc>:
    3712:	61 15       	cp	r22, r1
    3714:	71 05       	cpc	r23, r1
    3716:	79 f0       	breq	.+30     	; 0x3736 <_ZN5Print5writeEPKc+0x24>
    3718:	fb 01       	movw	r30, r22
    371a:	01 90       	ld	r0, Z+
    371c:	00 20       	and	r0, r0
    371e:	e9 f7       	brne	.-6      	; 0x371a <_ZN5Print5writeEPKc+0x8>
    3720:	31 97       	sbiw	r30, 0x01	; 1
    3722:	af 01       	movw	r20, r30
    3724:	46 1b       	sub	r20, r22
    3726:	57 0b       	sbc	r21, r23
    3728:	dc 01       	movw	r26, r24
    372a:	ed 91       	ld	r30, X+
    372c:	fc 91       	ld	r31, X
    372e:	02 80       	ldd	r0, Z+2	; 0x02
    3730:	f3 81       	ldd	r31, Z+3	; 0x03
    3732:	e0 2d       	mov	r30, r0
    3734:	09 94       	ijmp
    3736:	80 e0       	ldi	r24, 0x00	; 0
    3738:	90 e0       	ldi	r25, 0x00	; 0
    373a:	08 95       	ret

0000373c <_ZN5Print5printEPKc>:
    373c:	0c 94 89 1b 	jmp	0x3712	; 0x3712 <_ZN5Print5writeEPKc>

00003740 <_ZN5Print5printEc>:
    3740:	dc 01       	movw	r26, r24
    3742:	ed 91       	ld	r30, X+
    3744:	fc 91       	ld	r31, X
    3746:	01 90       	ld	r0, Z+
    3748:	f0 81       	ld	r31, Z
    374a:	e0 2d       	mov	r30, r0
    374c:	09 94       	ijmp

0000374e <_ZN5Print7printlnEv>:
    374e:	64 ea       	ldi	r22, 0xA4	; 164
    3750:	73 e0       	ldi	r23, 0x03	; 3
    3752:	0c 94 89 1b 	jmp	0x3712	; 0x3712 <_ZN5Print5writeEPKc>

00003756 <_ZN5Print7printlnEPKc>:
    3756:	0f 93       	push	r16
    3758:	1f 93       	push	r17
    375a:	cf 93       	push	r28
    375c:	df 93       	push	r29
    375e:	ec 01       	movw	r28, r24
    3760:	0e 94 89 1b 	call	0x3712	; 0x3712 <_ZN5Print5writeEPKc>
    3764:	8c 01       	movw	r16, r24
    3766:	ce 01       	movw	r24, r28
    3768:	0e 94 a7 1b 	call	0x374e	; 0x374e <_ZN5Print7printlnEv>
    376c:	80 0f       	add	r24, r16
    376e:	91 1f       	adc	r25, r17
    3770:	df 91       	pop	r29
    3772:	cf 91       	pop	r28
    3774:	1f 91       	pop	r17
    3776:	0f 91       	pop	r16
    3778:	08 95       	ret

0000377a <_ZN5Print11printNumberEmh>:
    377a:	8f 92       	push	r8
    377c:	9f 92       	push	r9
    377e:	af 92       	push	r10
    3780:	bf 92       	push	r11
    3782:	ef 92       	push	r14
    3784:	ff 92       	push	r15
    3786:	0f 93       	push	r16
    3788:	1f 93       	push	r17
    378a:	cf 93       	push	r28
    378c:	df 93       	push	r29
    378e:	cd b7       	in	r28, 0x3d	; 61
    3790:	de b7       	in	r29, 0x3e	; 62
    3792:	a1 97       	sbiw	r28, 0x21	; 33
    3794:	0f b6       	in	r0, 0x3f	; 63
    3796:	f8 94       	cli
    3798:	de bf       	out	0x3e, r29	; 62
    379a:	0f be       	out	0x3f, r0	; 63
    379c:	cd bf       	out	0x3d, r28	; 61
    379e:	7c 01       	movw	r14, r24
    37a0:	fa 01       	movw	r30, r20
    37a2:	cb 01       	movw	r24, r22
    37a4:	19 a2       	std	Y+33, r1	; 0x21
    37a6:	22 30       	cpi	r18, 0x02	; 2
    37a8:	08 f4       	brcc	.+2      	; 0x37ac <_ZN5Print11printNumberEmh+0x32>
    37aa:	2a e0       	ldi	r18, 0x0A	; 10
    37ac:	8e 01       	movw	r16, r28
    37ae:	0f 5d       	subi	r16, 0xDF	; 223
    37b0:	1f 4f       	sbci	r17, 0xFF	; 255
    37b2:	82 2e       	mov	r8, r18
    37b4:	91 2c       	mov	r9, r1
    37b6:	a1 2c       	mov	r10, r1
    37b8:	b1 2c       	mov	r11, r1
    37ba:	bf 01       	movw	r22, r30
    37bc:	a5 01       	movw	r20, r10
    37be:	94 01       	movw	r18, r8
    37c0:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <__udivmodsi4>
    37c4:	f9 01       	movw	r30, r18
    37c6:	ca 01       	movw	r24, r20
    37c8:	01 50       	subi	r16, 0x01	; 1
    37ca:	11 09       	sbc	r17, r1
    37cc:	6a 30       	cpi	r22, 0x0A	; 10
    37ce:	10 f4       	brcc	.+4      	; 0x37d4 <_ZN5Print11printNumberEmh+0x5a>
    37d0:	60 5d       	subi	r22, 0xD0	; 208
    37d2:	01 c0       	rjmp	.+2      	; 0x37d6 <_ZN5Print11printNumberEmh+0x5c>
    37d4:	69 5c       	subi	r22, 0xC9	; 201
    37d6:	d8 01       	movw	r26, r16
    37d8:	6c 93       	st	X, r22
    37da:	23 2b       	or	r18, r19
    37dc:	24 2b       	or	r18, r20
    37de:	25 2b       	or	r18, r21
    37e0:	61 f7       	brne	.-40     	; 0x37ba <_ZN5Print11printNumberEmh+0x40>
    37e2:	b8 01       	movw	r22, r16
    37e4:	c7 01       	movw	r24, r14
    37e6:	0e 94 89 1b 	call	0x3712	; 0x3712 <_ZN5Print5writeEPKc>
    37ea:	a1 96       	adiw	r28, 0x21	; 33
    37ec:	0f b6       	in	r0, 0x3f	; 63
    37ee:	f8 94       	cli
    37f0:	de bf       	out	0x3e, r29	; 62
    37f2:	0f be       	out	0x3f, r0	; 63
    37f4:	cd bf       	out	0x3d, r28	; 61
    37f6:	df 91       	pop	r29
    37f8:	cf 91       	pop	r28
    37fa:	1f 91       	pop	r17
    37fc:	0f 91       	pop	r16
    37fe:	ff 90       	pop	r15
    3800:	ef 90       	pop	r14
    3802:	bf 90       	pop	r11
    3804:	af 90       	pop	r10
    3806:	9f 90       	pop	r9
    3808:	8f 90       	pop	r8
    380a:	08 95       	ret

0000380c <_ZN5Print5printEli>:
    380c:	cf 92       	push	r12
    380e:	df 92       	push	r13
    3810:	ef 92       	push	r14
    3812:	ff 92       	push	r15
    3814:	0f 93       	push	r16
    3816:	1f 93       	push	r17
    3818:	cf 93       	push	r28
    381a:	df 93       	push	r29
    381c:	21 15       	cp	r18, r1
    381e:	31 05       	cpc	r19, r1
    3820:	81 f4       	brne	.+32     	; 0x3842 <_ZN5Print5printEli+0x36>
    3822:	dc 01       	movw	r26, r24
    3824:	ed 91       	ld	r30, X+
    3826:	fc 91       	ld	r31, X
    3828:	01 90       	ld	r0, Z+
    382a:	f0 81       	ld	r31, Z
    382c:	e0 2d       	mov	r30, r0
    382e:	64 2f       	mov	r22, r20
    3830:	df 91       	pop	r29
    3832:	cf 91       	pop	r28
    3834:	1f 91       	pop	r17
    3836:	0f 91       	pop	r16
    3838:	ff 90       	pop	r15
    383a:	ef 90       	pop	r14
    383c:	df 90       	pop	r13
    383e:	cf 90       	pop	r12
    3840:	09 94       	ijmp
    3842:	2a 30       	cpi	r18, 0x0A	; 10
    3844:	31 05       	cpc	r19, r1
    3846:	01 f5       	brne	.+64     	; 0x3888 <_ZN5Print5printEli+0x7c>
    3848:	77 ff       	sbrs	r23, 7
    384a:	1d c0       	rjmp	.+58     	; 0x3886 <_ZN5Print5printEli+0x7a>
    384c:	6a 01       	movw	r12, r20
    384e:	7b 01       	movw	r14, r22
    3850:	ec 01       	movw	r28, r24
    3852:	6d e2       	ldi	r22, 0x2D	; 45
    3854:	0e 94 a0 1b 	call	0x3740	; 0x3740 <_ZN5Print5printEc>
    3858:	8c 01       	movw	r16, r24
    385a:	44 27       	eor	r20, r20
    385c:	55 27       	eor	r21, r21
    385e:	ba 01       	movw	r22, r20
    3860:	4c 19       	sub	r20, r12
    3862:	5d 09       	sbc	r21, r13
    3864:	6e 09       	sbc	r22, r14
    3866:	7f 09       	sbc	r23, r15
    3868:	2a e0       	ldi	r18, 0x0A	; 10
    386a:	ce 01       	movw	r24, r28
    386c:	0e 94 bd 1b 	call	0x377a	; 0x377a <_ZN5Print11printNumberEmh>
    3870:	80 0f       	add	r24, r16
    3872:	91 1f       	adc	r25, r17
    3874:	df 91       	pop	r29
    3876:	cf 91       	pop	r28
    3878:	1f 91       	pop	r17
    387a:	0f 91       	pop	r16
    387c:	ff 90       	pop	r15
    387e:	ef 90       	pop	r14
    3880:	df 90       	pop	r13
    3882:	cf 90       	pop	r12
    3884:	08 95       	ret
    3886:	2a e0       	ldi	r18, 0x0A	; 10
    3888:	df 91       	pop	r29
    388a:	cf 91       	pop	r28
    388c:	1f 91       	pop	r17
    388e:	0f 91       	pop	r16
    3890:	ff 90       	pop	r15
    3892:	ef 90       	pop	r14
    3894:	df 90       	pop	r13
    3896:	cf 90       	pop	r12
    3898:	0c 94 bd 1b 	jmp	0x377a	; 0x377a <_ZN5Print11printNumberEmh>

0000389c <_ZN5Print7printlnEli>:
  n += println();
  return n;
}

size_t Print::println(long num, int base)
{
    389c:	0f 93       	push	r16
    389e:	1f 93       	push	r17
    38a0:	cf 93       	push	r28
    38a2:	df 93       	push	r29
    38a4:	ec 01       	movw	r28, r24
  size_t n = print(num, base);
    38a6:	0e 94 06 1c 	call	0x380c	; 0x380c <_ZN5Print5printEli>
    38aa:	8c 01       	movw	r16, r24
  n += println();
    38ac:	ce 01       	movw	r24, r28
    38ae:	0e 94 a7 1b 	call	0x374e	; 0x374e <_ZN5Print7printlnEv>
  return n;
}
    38b2:	80 0f       	add	r24, r16
    38b4:	91 1f       	adc	r25, r17
    38b6:	df 91       	pop	r29
    38b8:	cf 91       	pop	r28
    38ba:	1f 91       	pop	r17
    38bc:	0f 91       	pop	r16
    38be:	08 95       	ret

000038c0 <_ZN6Stream9timedReadEv>:
    if (c < 0) break;
    *buffer++ = (char)c;
    count++;
  }
  return count;
}
    38c0:	0f 93       	push	r16
    38c2:	1f 93       	push	r17
    38c4:	cf 93       	push	r28
    38c6:	df 93       	push	r29
    38c8:	ec 01       	movw	r28, r24
    38ca:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <millis>
    38ce:	68 87       	std	Y+8, r22	; 0x08
    38d0:	79 87       	std	Y+9, r23	; 0x09
    38d2:	8a 87       	std	Y+10, r24	; 0x0a
    38d4:	9b 87       	std	Y+11, r25	; 0x0b
    38d6:	e8 81       	ld	r30, Y
    38d8:	f9 81       	ldd	r31, Y+1	; 0x01
    38da:	02 84       	ldd	r0, Z+10	; 0x0a
    38dc:	f3 85       	ldd	r31, Z+11	; 0x0b
    38de:	e0 2d       	mov	r30, r0
    38e0:	ce 01       	movw	r24, r28
    38e2:	09 95       	icall
    38e4:	97 ff       	sbrs	r25, 7
    38e6:	17 c0       	rjmp	.+46     	; 0x3916 <_ZN6Stream9timedReadEv+0x56>
    38e8:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <millis>
    38ec:	08 85       	ldd	r16, Y+8	; 0x08
    38ee:	19 85       	ldd	r17, Y+9	; 0x09
    38f0:	2a 85       	ldd	r18, Y+10	; 0x0a
    38f2:	3b 85       	ldd	r19, Y+11	; 0x0b
    38f4:	dc 01       	movw	r26, r24
    38f6:	cb 01       	movw	r24, r22
    38f8:	80 1b       	sub	r24, r16
    38fa:	91 0b       	sbc	r25, r17
    38fc:	a2 0b       	sbc	r26, r18
    38fe:	b3 0b       	sbc	r27, r19
    3900:	0c 81       	ldd	r16, Y+4	; 0x04
    3902:	1d 81       	ldd	r17, Y+5	; 0x05
    3904:	2e 81       	ldd	r18, Y+6	; 0x06
    3906:	3f 81       	ldd	r19, Y+7	; 0x07
    3908:	80 17       	cp	r24, r16
    390a:	91 07       	cpc	r25, r17
    390c:	a2 07       	cpc	r26, r18
    390e:	b3 07       	cpc	r27, r19
    3910:	10 f3       	brcs	.-60     	; 0x38d6 <_ZN6Stream9timedReadEv+0x16>
    3912:	8f ef       	ldi	r24, 0xFF	; 255
    3914:	9f ef       	ldi	r25, 0xFF	; 255
    3916:	df 91       	pop	r29
    3918:	cf 91       	pop	r28
    391a:	1f 91       	pop	r17
    391c:	0f 91       	pop	r16
    391e:	08 95       	ret

00003920 <_ZN6Stream10setTimeoutEm>:
    3920:	fc 01       	movw	r30, r24
    3922:	44 83       	std	Z+4, r20	; 0x04
    3924:	55 83       	std	Z+5, r21	; 0x05
    3926:	66 83       	std	Z+6, r22	; 0x06
    3928:	77 83       	std	Z+7, r23	; 0x07
    392a:	08 95       	ret

0000392c <_ZN6Stream14readBytesUntilEcPcj>:
// as readBytes with terminator character
// terminates if length characters have been read, timeout, or if the terminator character  detected
// returns the number of characters placed in the buffer (0 means no valid data found)

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
    392c:	af 92       	push	r10
    392e:	bf 92       	push	r11
    3930:	cf 92       	push	r12
    3932:	df 92       	push	r13
    3934:	ef 92       	push	r14
    3936:	ff 92       	push	r15
    3938:	0f 93       	push	r16
    393a:	1f 93       	push	r17
    393c:	cf 93       	push	r28
    393e:	df 93       	push	r29
  if (length < 1) return 0;
    3940:	21 15       	cp	r18, r1
    3942:	31 05       	cpc	r19, r1
    3944:	c1 f0       	breq	.+48     	; 0x3976 <_ZN6Stream14readBytesUntilEcPcj+0x4a>
    3946:	89 01       	movw	r16, r18
    3948:	5c 01       	movw	r10, r24
    394a:	6a 01       	movw	r12, r20
    394c:	c0 e0       	ldi	r28, 0x00	; 0
    394e:	d0 e0       	ldi	r29, 0x00	; 0
  size_t index = 0;
  while (index < length) {
    int c = timedRead();
    if (c < 0 || c == terminator) break;
    3950:	e6 2e       	mov	r14, r22
    3952:	f1 2c       	mov	r15, r1
size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
  if (length < 1) return 0;
  size_t index = 0;
  while (index < length) {
    int c = timedRead();
    3954:	c5 01       	movw	r24, r10
    3956:	0e 94 60 1c 	call	0x38c0	; 0x38c0 <_ZN6Stream9timedReadEv>
    if (c < 0 || c == terminator) break;
    395a:	97 fd       	sbrc	r25, 7
    395c:	0f c0       	rjmp	.+30     	; 0x397c <_ZN6Stream14readBytesUntilEcPcj+0x50>
    395e:	8e 15       	cp	r24, r14
    3960:	9f 05       	cpc	r25, r15
    3962:	61 f0       	breq	.+24     	; 0x397c <_ZN6Stream14readBytesUntilEcPcj+0x50>
    *buffer++ = (char)c;
    3964:	f6 01       	movw	r30, r12
    3966:	81 93       	st	Z+, r24
    3968:	6f 01       	movw	r12, r30
    index++;
    396a:	21 96       	adiw	r28, 0x01	; 1

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
  if (length < 1) return 0;
  size_t index = 0;
  while (index < length) {
    396c:	0c 17       	cp	r16, r28
    396e:	1d 07       	cpc	r17, r29
    3970:	89 f7       	brne	.-30     	; 0x3954 <_ZN6Stream14readBytesUntilEcPcj+0x28>
    3972:	c8 01       	movw	r24, r16
    3974:	04 c0       	rjmp	.+8      	; 0x397e <_ZN6Stream14readBytesUntilEcPcj+0x52>
// terminates if length characters have been read, timeout, or if the terminator character  detected
// returns the number of characters placed in the buffer (0 means no valid data found)

size_t Stream::readBytesUntil(char terminator, char *buffer, size_t length)
{
  if (length < 1) return 0;
    3976:	80 e0       	ldi	r24, 0x00	; 0
    3978:	90 e0       	ldi	r25, 0x00	; 0
    397a:	01 c0       	rjmp	.+2      	; 0x397e <_ZN6Stream14readBytesUntilEcPcj+0x52>
    397c:	ce 01       	movw	r24, r28
    if (c < 0 || c == terminator) break;
    *buffer++ = (char)c;
    index++;
  }
  return index; // return number of characters, not including null terminator
}
    397e:	df 91       	pop	r29
    3980:	cf 91       	pop	r28
    3982:	1f 91       	pop	r17
    3984:	0f 91       	pop	r16
    3986:	ff 90       	pop	r15
    3988:	ef 90       	pop	r14
    398a:	df 90       	pop	r13
    398c:	cf 90       	pop	r12
    398e:	bf 90       	pop	r11
    3990:	af 90       	pop	r10
    3992:	08 95       	ret

00003994 <__vector_16>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    3994:	1f 92       	push	r1
    3996:	0f 92       	push	r0
    3998:	0f b6       	in	r0, 0x3f	; 63
    399a:	0f 92       	push	r0
    399c:	11 24       	eor	r1, r1
    399e:	2f 93       	push	r18
    39a0:	3f 93       	push	r19
    39a2:	8f 93       	push	r24
    39a4:	9f 93       	push	r25
    39a6:	af 93       	push	r26
    39a8:	bf 93       	push	r27
    39aa:	80 91 ca 04 	lds	r24, 0x04CA	; 0x8004ca <timer0_millis>
    39ae:	90 91 cb 04 	lds	r25, 0x04CB	; 0x8004cb <timer0_millis+0x1>
    39b2:	a0 91 cc 04 	lds	r26, 0x04CC	; 0x8004cc <timer0_millis+0x2>
    39b6:	b0 91 cd 04 	lds	r27, 0x04CD	; 0x8004cd <timer0_millis+0x3>
    39ba:	30 91 c9 04 	lds	r19, 0x04C9	; 0x8004c9 <timer0_fract>
    39be:	23 e0       	ldi	r18, 0x03	; 3
    39c0:	23 0f       	add	r18, r19
    39c2:	2d 37       	cpi	r18, 0x7D	; 125
    39c4:	20 f4       	brcc	.+8      	; 0x39ce <__vector_16+0x3a>
    39c6:	01 96       	adiw	r24, 0x01	; 1
    39c8:	a1 1d       	adc	r26, r1
    39ca:	b1 1d       	adc	r27, r1
    39cc:	05 c0       	rjmp	.+10     	; 0x39d8 <__vector_16+0x44>
    39ce:	26 e8       	ldi	r18, 0x86	; 134
    39d0:	23 0f       	add	r18, r19
    39d2:	02 96       	adiw	r24, 0x02	; 2
    39d4:	a1 1d       	adc	r26, r1
    39d6:	b1 1d       	adc	r27, r1
    39d8:	20 93 c9 04 	sts	0x04C9, r18	; 0x8004c9 <timer0_fract>
    39dc:	80 93 ca 04 	sts	0x04CA, r24	; 0x8004ca <timer0_millis>
    39e0:	90 93 cb 04 	sts	0x04CB, r25	; 0x8004cb <timer0_millis+0x1>
    39e4:	a0 93 cc 04 	sts	0x04CC, r26	; 0x8004cc <timer0_millis+0x2>
    39e8:	b0 93 cd 04 	sts	0x04CD, r27	; 0x8004cd <timer0_millis+0x3>
    39ec:	80 91 ce 04 	lds	r24, 0x04CE	; 0x8004ce <timer0_overflow_count>
    39f0:	90 91 cf 04 	lds	r25, 0x04CF	; 0x8004cf <timer0_overflow_count+0x1>
    39f4:	a0 91 d0 04 	lds	r26, 0x04D0	; 0x8004d0 <timer0_overflow_count+0x2>
    39f8:	b0 91 d1 04 	lds	r27, 0x04D1	; 0x8004d1 <timer0_overflow_count+0x3>
    39fc:	01 96       	adiw	r24, 0x01	; 1
    39fe:	a1 1d       	adc	r26, r1
    3a00:	b1 1d       	adc	r27, r1
    3a02:	80 93 ce 04 	sts	0x04CE, r24	; 0x8004ce <timer0_overflow_count>
    3a06:	90 93 cf 04 	sts	0x04CF, r25	; 0x8004cf <timer0_overflow_count+0x1>
    3a0a:	a0 93 d0 04 	sts	0x04D0, r26	; 0x8004d0 <timer0_overflow_count+0x2>
    3a0e:	b0 93 d1 04 	sts	0x04D1, r27	; 0x8004d1 <timer0_overflow_count+0x3>
    3a12:	bf 91       	pop	r27
    3a14:	af 91       	pop	r26
    3a16:	9f 91       	pop	r25
    3a18:	8f 91       	pop	r24
    3a1a:	3f 91       	pop	r19
    3a1c:	2f 91       	pop	r18
    3a1e:	0f 90       	pop	r0
    3a20:	0f be       	out	0x3f, r0	; 63
    3a22:	0f 90       	pop	r0
    3a24:	1f 90       	pop	r1
    3a26:	18 95       	reti

00003a28 <millis>:
    3a28:	2f b7       	in	r18, 0x3f	; 63
    3a2a:	f8 94       	cli
    3a2c:	60 91 ca 04 	lds	r22, 0x04CA	; 0x8004ca <timer0_millis>
    3a30:	70 91 cb 04 	lds	r23, 0x04CB	; 0x8004cb <timer0_millis+0x1>
    3a34:	80 91 cc 04 	lds	r24, 0x04CC	; 0x8004cc <timer0_millis+0x2>
    3a38:	90 91 cd 04 	lds	r25, 0x04CD	; 0x8004cd <timer0_millis+0x3>
    3a3c:	2f bf       	out	0x3f, r18	; 63
    3a3e:	08 95       	ret

00003a40 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    3a40:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    3a42:	84 b5       	in	r24, 0x24	; 36
    3a44:	82 60       	ori	r24, 0x02	; 2
    3a46:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    3a48:	84 b5       	in	r24, 0x24	; 36
    3a4a:	81 60       	ori	r24, 0x01	; 1
    3a4c:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    3a4e:	85 b5       	in	r24, 0x25	; 37
    3a50:	82 60       	ori	r24, 0x02	; 2
    3a52:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    3a54:	85 b5       	in	r24, 0x25	; 37
    3a56:	81 60       	ori	r24, 0x01	; 1
    3a58:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    3a5a:	ee e6       	ldi	r30, 0x6E	; 110
    3a5c:	f0 e0       	ldi	r31, 0x00	; 0
    3a5e:	80 81       	ld	r24, Z
    3a60:	81 60       	ori	r24, 0x01	; 1
    3a62:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    3a64:	e1 e8       	ldi	r30, 0x81	; 129
    3a66:	f0 e0       	ldi	r31, 0x00	; 0
    3a68:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    3a6a:	80 81       	ld	r24, Z
    3a6c:	82 60       	ori	r24, 0x02	; 2
    3a6e:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    3a70:	80 81       	ld	r24, Z
    3a72:	81 60       	ori	r24, 0x01	; 1
    3a74:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    3a76:	e0 e8       	ldi	r30, 0x80	; 128
    3a78:	f0 e0       	ldi	r31, 0x00	; 0
    3a7a:	80 81       	ld	r24, Z
    3a7c:	81 60       	ori	r24, 0x01	; 1
    3a7e:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    3a80:	e1 eb       	ldi	r30, 0xB1	; 177
    3a82:	f0 e0       	ldi	r31, 0x00	; 0
    3a84:	80 81       	ld	r24, Z
    3a86:	84 60       	ori	r24, 0x04	; 4
    3a88:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    3a8a:	e0 eb       	ldi	r30, 0xB0	; 176
    3a8c:	f0 e0       	ldi	r31, 0x00	; 0
    3a8e:	80 81       	ld	r24, Z
    3a90:	81 60       	ori	r24, 0x01	; 1
    3a92:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    3a94:	ea e7       	ldi	r30, 0x7A	; 122
    3a96:	f0 e0       	ldi	r31, 0x00	; 0
    3a98:	80 81       	ld	r24, Z
    3a9a:	84 60       	ori	r24, 0x04	; 4
    3a9c:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    3a9e:	80 81       	ld	r24, Z
    3aa0:	82 60       	ori	r24, 0x02	; 2
    3aa2:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    3aa4:	80 81       	ld	r24, Z
    3aa6:	81 60       	ori	r24, 0x01	; 1
    3aa8:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    3aaa:	80 81       	ld	r24, Z
    3aac:	80 68       	ori	r24, 0x80	; 128
    3aae:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    3ab0:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    3ab4:	08 95       	ret

00003ab6 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    3ab6:	cf 93       	push	r28
    3ab8:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    3aba:	90 e0       	ldi	r25, 0x00	; 0
    3abc:	fc 01       	movw	r30, r24
    3abe:	e4 58       	subi	r30, 0x84	; 132
    3ac0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ac2:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    3ac4:	fc 01       	movw	r30, r24
    3ac6:	e0 57       	subi	r30, 0x70	; 112
    3ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    3aca:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    3acc:	88 23       	and	r24, r24
    3ace:	61 f1       	breq	.+88     	; 0x3b28 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    3ad0:	90 e0       	ldi	r25, 0x00	; 0
    3ad2:	88 0f       	add	r24, r24
    3ad4:	99 1f       	adc	r25, r25
    3ad6:	fc 01       	movw	r30, r24
    3ad8:	e8 54       	subi	r30, 0x48	; 72
    3ada:	ff 4f       	sbci	r31, 0xFF	; 255
    3adc:	c5 91       	lpm	r28, Z+
    3ade:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    3ae0:	fc 01       	movw	r30, r24
    3ae2:	e2 55       	subi	r30, 0x52	; 82
    3ae4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae6:	a5 91       	lpm	r26, Z+
    3ae8:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    3aea:	61 11       	cpse	r22, r1
    3aec:	09 c0       	rjmp	.+18     	; 0x3b00 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    3aee:	9f b7       	in	r25, 0x3f	; 63
                cli();
    3af0:	f8 94       	cli
		*reg &= ~bit;
    3af2:	88 81       	ld	r24, Y
    3af4:	20 95       	com	r18
    3af6:	82 23       	and	r24, r18
    3af8:	88 83       	st	Y, r24
		*out &= ~bit;
    3afa:	ec 91       	ld	r30, X
    3afc:	2e 23       	and	r18, r30
    3afe:	0b c0       	rjmp	.+22     	; 0x3b16 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    3b00:	62 30       	cpi	r22, 0x02	; 2
    3b02:	61 f4       	brne	.+24     	; 0x3b1c <pinMode+0x66>
		uint8_t oldSREG = SREG;
    3b04:	9f b7       	in	r25, 0x3f	; 63
                cli();
    3b06:	f8 94       	cli
		*reg &= ~bit;
    3b08:	88 81       	ld	r24, Y
    3b0a:	32 2f       	mov	r19, r18
    3b0c:	30 95       	com	r19
    3b0e:	83 23       	and	r24, r19
    3b10:	88 83       	st	Y, r24
		*out |= bit;
    3b12:	ec 91       	ld	r30, X
    3b14:	2e 2b       	or	r18, r30
    3b16:	2c 93       	st	X, r18
		SREG = oldSREG;
    3b18:	9f bf       	out	0x3f, r25	; 63
    3b1a:	06 c0       	rjmp	.+12     	; 0x3b28 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    3b1c:	8f b7       	in	r24, 0x3f	; 63
                cli();
    3b1e:	f8 94       	cli
		*reg |= bit;
    3b20:	e8 81       	ld	r30, Y
    3b22:	2e 2b       	or	r18, r30
    3b24:	28 83       	st	Y, r18
		SREG = oldSREG;
    3b26:	8f bf       	out	0x3f, r24	; 63
	}
}
    3b28:	df 91       	pop	r29
    3b2a:	cf 91       	pop	r28
    3b2c:	08 95       	ret

00003b2e <__mulsi3>:
    3b2e:	db 01       	movw	r26, r22
    3b30:	8f 93       	push	r24
    3b32:	9f 93       	push	r25
    3b34:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <__muluhisi3>
    3b38:	bf 91       	pop	r27
    3b3a:	af 91       	pop	r26
    3b3c:	a2 9f       	mul	r26, r18
    3b3e:	80 0d       	add	r24, r0
    3b40:	91 1d       	adc	r25, r1
    3b42:	a3 9f       	mul	r26, r19
    3b44:	90 0d       	add	r25, r0
    3b46:	b2 9f       	mul	r27, r18
    3b48:	90 0d       	add	r25, r0
    3b4a:	11 24       	eor	r1, r1
    3b4c:	08 95       	ret

00003b4e <__udivmodsi4>:
    3b4e:	a1 e2       	ldi	r26, 0x21	; 33
    3b50:	1a 2e       	mov	r1, r26
    3b52:	aa 1b       	sub	r26, r26
    3b54:	bb 1b       	sub	r27, r27
    3b56:	fd 01       	movw	r30, r26
    3b58:	0d c0       	rjmp	.+26     	; 0x3b74 <__udivmodsi4_ep>

00003b5a <__udivmodsi4_loop>:
    3b5a:	aa 1f       	adc	r26, r26
    3b5c:	bb 1f       	adc	r27, r27
    3b5e:	ee 1f       	adc	r30, r30
    3b60:	ff 1f       	adc	r31, r31
    3b62:	a2 17       	cp	r26, r18
    3b64:	b3 07       	cpc	r27, r19
    3b66:	e4 07       	cpc	r30, r20
    3b68:	f5 07       	cpc	r31, r21
    3b6a:	20 f0       	brcs	.+8      	; 0x3b74 <__udivmodsi4_ep>
    3b6c:	a2 1b       	sub	r26, r18
    3b6e:	b3 0b       	sbc	r27, r19
    3b70:	e4 0b       	sbc	r30, r20
    3b72:	f5 0b       	sbc	r31, r21

00003b74 <__udivmodsi4_ep>:
    3b74:	66 1f       	adc	r22, r22
    3b76:	77 1f       	adc	r23, r23
    3b78:	88 1f       	adc	r24, r24
    3b7a:	99 1f       	adc	r25, r25
    3b7c:	1a 94       	dec	r1
    3b7e:	69 f7       	brne	.-38     	; 0x3b5a <__udivmodsi4_loop>
    3b80:	60 95       	com	r22
    3b82:	70 95       	com	r23
    3b84:	80 95       	com	r24
    3b86:	90 95       	com	r25
    3b88:	9b 01       	movw	r18, r22
    3b8a:	ac 01       	movw	r20, r24
    3b8c:	bd 01       	movw	r22, r26
    3b8e:	cf 01       	movw	r24, r30
    3b90:	08 95       	ret

00003b92 <__divmodsi4>:
    3b92:	05 2e       	mov	r0, r21
    3b94:	97 fb       	bst	r25, 7
    3b96:	1e f4       	brtc	.+6      	; 0x3b9e <__divmodsi4+0xc>
    3b98:	00 94       	com	r0
    3b9a:	0e 94 e0 1d 	call	0x3bc0	; 0x3bc0 <__negsi2>
    3b9e:	57 fd       	sbrc	r21, 7
    3ba0:	07 d0       	rcall	.+14     	; 0x3bb0 <__divmodsi4_neg2>
    3ba2:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <__udivmodsi4>
    3ba6:	07 fc       	sbrc	r0, 7
    3ba8:	03 d0       	rcall	.+6      	; 0x3bb0 <__divmodsi4_neg2>
    3baa:	4e f4       	brtc	.+18     	; 0x3bbe <__divmodsi4_exit>
    3bac:	0c 94 e0 1d 	jmp	0x3bc0	; 0x3bc0 <__negsi2>

00003bb0 <__divmodsi4_neg2>:
    3bb0:	50 95       	com	r21
    3bb2:	40 95       	com	r20
    3bb4:	30 95       	com	r19
    3bb6:	21 95       	neg	r18
    3bb8:	3f 4f       	sbci	r19, 0xFF	; 255
    3bba:	4f 4f       	sbci	r20, 0xFF	; 255
    3bbc:	5f 4f       	sbci	r21, 0xFF	; 255

00003bbe <__divmodsi4_exit>:
    3bbe:	08 95       	ret

00003bc0 <__negsi2>:
    3bc0:	90 95       	com	r25
    3bc2:	80 95       	com	r24
    3bc4:	70 95       	com	r23
    3bc6:	61 95       	neg	r22
    3bc8:	7f 4f       	sbci	r23, 0xFF	; 255
    3bca:	8f 4f       	sbci	r24, 0xFF	; 255
    3bcc:	9f 4f       	sbci	r25, 0xFF	; 255
    3bce:	08 95       	ret

00003bd0 <__muluhisi3>:
    3bd0:	0e 94 f9 1d 	call	0x3bf2	; 0x3bf2 <__umulhisi3>
    3bd4:	a5 9f       	mul	r26, r21
    3bd6:	90 0d       	add	r25, r0
    3bd8:	b4 9f       	mul	r27, r20
    3bda:	90 0d       	add	r25, r0
    3bdc:	a4 9f       	mul	r26, r20
    3bde:	80 0d       	add	r24, r0
    3be0:	91 1d       	adc	r25, r1
    3be2:	11 24       	eor	r1, r1
    3be4:	08 95       	ret

00003be6 <__tablejump2__>:
    3be6:	ee 0f       	add	r30, r30
    3be8:	ff 1f       	adc	r31, r31
    3bea:	05 90       	lpm	r0, Z+
    3bec:	f4 91       	lpm	r31, Z
    3bee:	e0 2d       	mov	r30, r0
    3bf0:	09 94       	ijmp

00003bf2 <__umulhisi3>:
    3bf2:	a2 9f       	mul	r26, r18
    3bf4:	b0 01       	movw	r22, r0
    3bf6:	b3 9f       	mul	r27, r19
    3bf8:	c0 01       	movw	r24, r0
    3bfa:	a3 9f       	mul	r26, r19
    3bfc:	70 0d       	add	r23, r0
    3bfe:	81 1d       	adc	r24, r1
    3c00:	11 24       	eor	r1, r1
    3c02:	91 1d       	adc	r25, r1
    3c04:	b2 9f       	mul	r27, r18
    3c06:	70 0d       	add	r23, r0
    3c08:	81 1d       	adc	r24, r1
    3c0a:	11 24       	eor	r1, r1
    3c0c:	91 1d       	adc	r25, r1
    3c0e:	08 95       	ret

00003c10 <strtol>:
    3c10:	a0 e0       	ldi	r26, 0x00	; 0
    3c12:	b0 e0       	ldi	r27, 0x00	; 0
    3c14:	ee e0       	ldi	r30, 0x0E	; 14
    3c16:	fe e1       	ldi	r31, 0x1E	; 30
    3c18:	0c 94 38 22 	jmp	0x4470	; 0x4470 <__prologue_saves__+0x2>
    3c1c:	5c 01       	movw	r10, r24
    3c1e:	6b 01       	movw	r12, r22
    3c20:	7a 01       	movw	r14, r20
    3c22:	61 15       	cp	r22, r1
    3c24:	71 05       	cpc	r23, r1
    3c26:	19 f0       	breq	.+6      	; 0x3c2e <strtol+0x1e>
    3c28:	fb 01       	movw	r30, r22
    3c2a:	91 83       	std	Z+1, r25	; 0x01
    3c2c:	80 83       	st	Z, r24
    3c2e:	e1 14       	cp	r14, r1
    3c30:	f1 04       	cpc	r15, r1
    3c32:	29 f0       	breq	.+10     	; 0x3c3e <strtol+0x2e>
    3c34:	c7 01       	movw	r24, r14
    3c36:	02 97       	sbiw	r24, 0x02	; 2
    3c38:	83 97       	sbiw	r24, 0x23	; 35
    3c3a:	08 f0       	brcs	.+2      	; 0x3c3e <strtol+0x2e>
    3c3c:	e5 c0       	rjmp	.+458    	; 0x3e08 <strtol+0x1f8>
    3c3e:	e5 01       	movw	r28, r10
    3c40:	21 96       	adiw	r28, 0x01	; 1
    3c42:	f5 01       	movw	r30, r10
    3c44:	10 81       	ld	r17, Z
    3c46:	81 2f       	mov	r24, r17
    3c48:	90 e0       	ldi	r25, 0x00	; 0
    3c4a:	0e 94 3c 1f 	call	0x3e78	; 0x3e78 <isspace>
    3c4e:	89 2b       	or	r24, r25
    3c50:	11 f0       	breq	.+4      	; 0x3c56 <strtol+0x46>
    3c52:	5e 01       	movw	r10, r28
    3c54:	f4 cf       	rjmp	.-24     	; 0x3c3e <strtol+0x2e>
    3c56:	1d 32       	cpi	r17, 0x2D	; 45
    3c58:	29 f4       	brne	.+10     	; 0x3c64 <strtol+0x54>
    3c5a:	21 96       	adiw	r28, 0x01	; 1
    3c5c:	f5 01       	movw	r30, r10
    3c5e:	11 81       	ldd	r17, Z+1	; 0x01
    3c60:	01 e0       	ldi	r16, 0x01	; 1
    3c62:	07 c0       	rjmp	.+14     	; 0x3c72 <strtol+0x62>
    3c64:	1b 32       	cpi	r17, 0x2B	; 43
    3c66:	21 f4       	brne	.+8      	; 0x3c70 <strtol+0x60>
    3c68:	e5 01       	movw	r28, r10
    3c6a:	22 96       	adiw	r28, 0x02	; 2
    3c6c:	f5 01       	movw	r30, r10
    3c6e:	11 81       	ldd	r17, Z+1	; 0x01
    3c70:	00 e0       	ldi	r16, 0x00	; 0
    3c72:	e1 14       	cp	r14, r1
    3c74:	f1 04       	cpc	r15, r1
    3c76:	09 f1       	breq	.+66     	; 0x3cba <strtol+0xaa>
    3c78:	f0 e1       	ldi	r31, 0x10	; 16
    3c7a:	ef 16       	cp	r14, r31
    3c7c:	f1 04       	cpc	r15, r1
    3c7e:	29 f4       	brne	.+10     	; 0x3c8a <strtol+0x7a>
    3c80:	3f c0       	rjmp	.+126    	; 0x3d00 <strtol+0xf0>
    3c82:	10 e3       	ldi	r17, 0x30	; 48
    3c84:	e1 14       	cp	r14, r1
    3c86:	f1 04       	cpc	r15, r1
    3c88:	21 f1       	breq	.+72     	; 0x3cd2 <strtol+0xc2>
    3c8a:	28 e0       	ldi	r18, 0x08	; 8
    3c8c:	e2 16       	cp	r14, r18
    3c8e:	f1 04       	cpc	r15, r1
    3c90:	01 f1       	breq	.+64     	; 0x3cd2 <strtol+0xc2>
    3c92:	54 f4       	brge	.+20     	; 0x3ca8 <strtol+0x98>
    3c94:	e2 e0       	ldi	r30, 0x02	; 2
    3c96:	ee 16       	cp	r14, r30
    3c98:	f1 04       	cpc	r15, r1
    3c9a:	21 f5       	brne	.+72     	; 0x3ce4 <strtol+0xd4>
    3c9c:	81 2c       	mov	r8, r1
    3c9e:	91 2c       	mov	r9, r1
    3ca0:	a1 2c       	mov	r10, r1
    3ca2:	b0 e4       	ldi	r27, 0x40	; 64
    3ca4:	bb 2e       	mov	r11, r27
    3ca6:	3e c0       	rjmp	.+124    	; 0x3d24 <strtol+0x114>
    3ca8:	fa e0       	ldi	r31, 0x0A	; 10
    3caa:	ef 16       	cp	r14, r31
    3cac:	f1 04       	cpc	r15, r1
    3cae:	39 f0       	breq	.+14     	; 0x3cbe <strtol+0xae>
    3cb0:	20 e1       	ldi	r18, 0x10	; 16
    3cb2:	e2 16       	cp	r14, r18
    3cb4:	f1 04       	cpc	r15, r1
    3cb6:	b1 f4       	brne	.+44     	; 0x3ce4 <strtol+0xd4>
    3cb8:	30 c0       	rjmp	.+96     	; 0x3d1a <strtol+0x10a>
    3cba:	10 33       	cpi	r17, 0x30	; 48
    3cbc:	19 f1       	breq	.+70     	; 0x3d04 <strtol+0xf4>
    3cbe:	fa e0       	ldi	r31, 0x0A	; 10
    3cc0:	ef 2e       	mov	r14, r31
    3cc2:	f1 2c       	mov	r15, r1
    3cc4:	ac ec       	ldi	r26, 0xCC	; 204
    3cc6:	8a 2e       	mov	r8, r26
    3cc8:	98 2c       	mov	r9, r8
    3cca:	a8 2c       	mov	r10, r8
    3ccc:	ac e0       	ldi	r26, 0x0C	; 12
    3cce:	ba 2e       	mov	r11, r26
    3cd0:	29 c0       	rjmp	.+82     	; 0x3d24 <strtol+0x114>
    3cd2:	78 e0       	ldi	r23, 0x08	; 8
    3cd4:	e7 2e       	mov	r14, r23
    3cd6:	f1 2c       	mov	r15, r1
    3cd8:	81 2c       	mov	r8, r1
    3cda:	91 2c       	mov	r9, r1
    3cdc:	a1 2c       	mov	r10, r1
    3cde:	e0 e1       	ldi	r30, 0x10	; 16
    3ce0:	be 2e       	mov	r11, r30
    3ce2:	20 c0       	rjmp	.+64     	; 0x3d24 <strtol+0x114>
    3ce4:	60 e0       	ldi	r22, 0x00	; 0
    3ce6:	70 e0       	ldi	r23, 0x00	; 0
    3ce8:	80 e0       	ldi	r24, 0x00	; 0
    3cea:	90 e8       	ldi	r25, 0x80	; 128
    3cec:	97 01       	movw	r18, r14
    3cee:	0f 2c       	mov	r0, r15
    3cf0:	00 0c       	add	r0, r0
    3cf2:	44 0b       	sbc	r20, r20
    3cf4:	55 0b       	sbc	r21, r21
    3cf6:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <__udivmodsi4>
    3cfa:	49 01       	movw	r8, r18
    3cfc:	5a 01       	movw	r10, r20
    3cfe:	12 c0       	rjmp	.+36     	; 0x3d24 <strtol+0x114>
    3d00:	10 33       	cpi	r17, 0x30	; 48
    3d02:	59 f4       	brne	.+22     	; 0x3d1a <strtol+0x10a>
    3d04:	88 81       	ld	r24, Y
    3d06:	8f 7d       	andi	r24, 0xDF	; 223
    3d08:	88 35       	cpi	r24, 0x58	; 88
    3d0a:	09 f0       	breq	.+2      	; 0x3d0e <strtol+0xfe>
    3d0c:	ba cf       	rjmp	.-140    	; 0x3c82 <strtol+0x72>
    3d0e:	19 81       	ldd	r17, Y+1	; 0x01
    3d10:	22 96       	adiw	r28, 0x02	; 2
    3d12:	02 60       	ori	r16, 0x02	; 2
    3d14:	80 e1       	ldi	r24, 0x10	; 16
    3d16:	e8 2e       	mov	r14, r24
    3d18:	f1 2c       	mov	r15, r1
    3d1a:	81 2c       	mov	r8, r1
    3d1c:	91 2c       	mov	r9, r1
    3d1e:	a1 2c       	mov	r10, r1
    3d20:	68 e0       	ldi	r22, 0x08	; 8
    3d22:	b6 2e       	mov	r11, r22
    3d24:	40 e0       	ldi	r20, 0x00	; 0
    3d26:	60 e0       	ldi	r22, 0x00	; 0
    3d28:	70 e0       	ldi	r23, 0x00	; 0
    3d2a:	cb 01       	movw	r24, r22
    3d2c:	27 01       	movw	r4, r14
    3d2e:	0f 2c       	mov	r0, r15
    3d30:	00 0c       	add	r0, r0
    3d32:	66 08       	sbc	r6, r6
    3d34:	77 08       	sbc	r7, r7
    3d36:	fe 01       	movw	r30, r28
    3d38:	50 ed       	ldi	r21, 0xD0	; 208
    3d3a:	35 2e       	mov	r3, r21
    3d3c:	31 0e       	add	r3, r17
    3d3e:	29 e0       	ldi	r18, 0x09	; 9
    3d40:	23 15       	cp	r18, r3
    3d42:	70 f4       	brcc	.+28     	; 0x3d60 <strtol+0x150>
    3d44:	2f eb       	ldi	r18, 0xBF	; 191
    3d46:	21 0f       	add	r18, r17
    3d48:	2a 31       	cpi	r18, 0x1A	; 26
    3d4a:	18 f4       	brcc	.+6      	; 0x3d52 <strtol+0x142>
    3d4c:	39 ec       	ldi	r19, 0xC9	; 201
    3d4e:	33 2e       	mov	r3, r19
    3d50:	06 c0       	rjmp	.+12     	; 0x3d5e <strtol+0x14e>
    3d52:	2f e9       	ldi	r18, 0x9F	; 159
    3d54:	21 0f       	add	r18, r17
    3d56:	2a 31       	cpi	r18, 0x1A	; 26
    3d58:	18 f5       	brcc	.+70     	; 0x3da0 <strtol+0x190>
    3d5a:	29 ea       	ldi	r18, 0xA9	; 169
    3d5c:	32 2e       	mov	r3, r18
    3d5e:	31 0e       	add	r3, r17
    3d60:	23 2d       	mov	r18, r3
    3d62:	30 e0       	ldi	r19, 0x00	; 0
    3d64:	2e 15       	cp	r18, r14
    3d66:	3f 05       	cpc	r19, r15
    3d68:	dc f4       	brge	.+54     	; 0x3da0 <strtol+0x190>
    3d6a:	47 fd       	sbrc	r20, 7
    3d6c:	16 c0       	rjmp	.+44     	; 0x3d9a <strtol+0x18a>
    3d6e:	86 16       	cp	r8, r22
    3d70:	97 06       	cpc	r9, r23
    3d72:	a8 06       	cpc	r10, r24
    3d74:	b9 06       	cpc	r11, r25
    3d76:	70 f0       	brcs	.+28     	; 0x3d94 <strtol+0x184>
    3d78:	a3 01       	movw	r20, r6
    3d7a:	92 01       	movw	r18, r4
    3d7c:	0e 94 97 1d 	call	0x3b2e	; 0x3b2e <__mulsi3>
    3d80:	63 0d       	add	r22, r3
    3d82:	71 1d       	adc	r23, r1
    3d84:	81 1d       	adc	r24, r1
    3d86:	91 1d       	adc	r25, r1
    3d88:	61 30       	cpi	r22, 0x01	; 1
    3d8a:	71 05       	cpc	r23, r1
    3d8c:	81 05       	cpc	r24, r1
    3d8e:	20 e8       	ldi	r18, 0x80	; 128
    3d90:	92 07       	cpc	r25, r18
    3d92:	10 f0       	brcs	.+4      	; 0x3d98 <strtol+0x188>
    3d94:	4f ef       	ldi	r20, 0xFF	; 255
    3d96:	01 c0       	rjmp	.+2      	; 0x3d9a <strtol+0x18a>
    3d98:	41 e0       	ldi	r20, 0x01	; 1
    3d9a:	21 96       	adiw	r28, 0x01	; 1
    3d9c:	10 81       	ld	r17, Z
    3d9e:	cb cf       	rjmp	.-106    	; 0x3d36 <strtol+0x126>
    3da0:	20 2f       	mov	r18, r16
    3da2:	21 70       	andi	r18, 0x01	; 1
    3da4:	c1 14       	cp	r12, r1
    3da6:	d1 04       	cpc	r13, r1
    3da8:	71 f0       	breq	.+28     	; 0x3dc6 <strtol+0x1b6>
    3daa:	44 23       	and	r20, r20
    3dac:	29 f0       	breq	.+10     	; 0x3db8 <strtol+0x1a8>
    3dae:	21 97       	sbiw	r28, 0x01	; 1
    3db0:	f6 01       	movw	r30, r12
    3db2:	d1 83       	std	Z+1, r29	; 0x01
    3db4:	c0 83       	st	Z, r28
    3db6:	07 c0       	rjmp	.+14     	; 0x3dc6 <strtol+0x1b6>
    3db8:	01 ff       	sbrs	r16, 1
    3dba:	19 c0       	rjmp	.+50     	; 0x3dee <strtol+0x1de>
    3dbc:	22 97       	sbiw	r28, 0x02	; 2
    3dbe:	f6 01       	movw	r30, r12
    3dc0:	d1 83       	std	Z+1, r29	; 0x01
    3dc2:	c0 83       	st	Z, r28
    3dc4:	14 c0       	rjmp	.+40     	; 0x3dee <strtol+0x1de>
    3dc6:	47 ff       	sbrs	r20, 7
    3dc8:	12 c0       	rjmp	.+36     	; 0x3dee <strtol+0x1de>
    3dca:	22 23       	and	r18, r18
    3dcc:	29 f0       	breq	.+10     	; 0x3dd8 <strtol+0x1c8>
    3dce:	60 e0       	ldi	r22, 0x00	; 0
    3dd0:	70 e0       	ldi	r23, 0x00	; 0
    3dd2:	80 e0       	ldi	r24, 0x00	; 0
    3dd4:	90 e8       	ldi	r25, 0x80	; 128
    3dd6:	04 c0       	rjmp	.+8      	; 0x3de0 <strtol+0x1d0>
    3dd8:	6f ef       	ldi	r22, 0xFF	; 255
    3dda:	7f ef       	ldi	r23, 0xFF	; 255
    3ddc:	8f ef       	ldi	r24, 0xFF	; 255
    3dde:	9f e7       	ldi	r25, 0x7F	; 127
    3de0:	22 e2       	ldi	r18, 0x22	; 34
    3de2:	30 e0       	ldi	r19, 0x00	; 0
    3de4:	30 93 d3 04 	sts	0x04D3, r19	; 0x8004d3 <errno+0x1>
    3de8:	20 93 d2 04 	sts	0x04D2, r18	; 0x8004d2 <errno>
    3dec:	09 c0       	rjmp	.+18     	; 0x3e00 <strtol+0x1f0>
    3dee:	22 23       	and	r18, r18
    3df0:	81 f0       	breq	.+32     	; 0x3e12 <strtol+0x202>
    3df2:	90 95       	com	r25
    3df4:	80 95       	com	r24
    3df6:	70 95       	com	r23
    3df8:	61 95       	neg	r22
    3dfa:	7f 4f       	sbci	r23, 0xFF	; 255
    3dfc:	8f 4f       	sbci	r24, 0xFF	; 255
    3dfe:	9f 4f       	sbci	r25, 0xFF	; 255
    3e00:	46 2f       	mov	r20, r22
    3e02:	37 2f       	mov	r19, r23
    3e04:	28 2f       	mov	r18, r24
    3e06:	12 c0       	rjmp	.+36     	; 0x3e2c <strtol+0x21c>
    3e08:	40 e0       	ldi	r20, 0x00	; 0
    3e0a:	30 e0       	ldi	r19, 0x00	; 0
    3e0c:	20 e0       	ldi	r18, 0x00	; 0
    3e0e:	90 e0       	ldi	r25, 0x00	; 0
    3e10:	0d c0       	rjmp	.+26     	; 0x3e2c <strtol+0x21c>
    3e12:	97 ff       	sbrs	r25, 7
    3e14:	f5 cf       	rjmp	.-22     	; 0x3e00 <strtol+0x1f0>
    3e16:	82 e2       	ldi	r24, 0x22	; 34
    3e18:	90 e0       	ldi	r25, 0x00	; 0
    3e1a:	90 93 d3 04 	sts	0x04D3, r25	; 0x8004d3 <errno+0x1>
    3e1e:	80 93 d2 04 	sts	0x04D2, r24	; 0x8004d2 <errno>
    3e22:	6f ef       	ldi	r22, 0xFF	; 255
    3e24:	7f ef       	ldi	r23, 0xFF	; 255
    3e26:	8f ef       	ldi	r24, 0xFF	; 255
    3e28:	9f e7       	ldi	r25, 0x7F	; 127
    3e2a:	ea cf       	rjmp	.-44     	; 0x3e00 <strtol+0x1f0>
    3e2c:	64 2f       	mov	r22, r20
    3e2e:	73 2f       	mov	r23, r19
    3e30:	82 2f       	mov	r24, r18
    3e32:	cd b7       	in	r28, 0x3d	; 61
    3e34:	de b7       	in	r29, 0x3e	; 62
    3e36:	e1 e1       	ldi	r30, 0x11	; 17
    3e38:	0c 94 54 22 	jmp	0x44a8	; 0x44a8 <__epilogue_restores__+0x2>

00003e3c <atoi>:
    3e3c:	fc 01       	movw	r30, r24
    3e3e:	88 27       	eor	r24, r24
    3e40:	99 27       	eor	r25, r25
    3e42:	e8 94       	clt
    3e44:	21 91       	ld	r18, Z+
    3e46:	20 32       	cpi	r18, 0x20	; 32
    3e48:	e9 f3       	breq	.-6      	; 0x3e44 <atoi+0x8>
    3e4a:	29 30       	cpi	r18, 0x09	; 9
    3e4c:	10 f0       	brcs	.+4      	; 0x3e52 <atoi+0x16>
    3e4e:	2e 30       	cpi	r18, 0x0E	; 14
    3e50:	c8 f3       	brcs	.-14     	; 0x3e44 <atoi+0x8>
    3e52:	2b 32       	cpi	r18, 0x2B	; 43
    3e54:	41 f0       	breq	.+16     	; 0x3e66 <atoi+0x2a>
    3e56:	2d 32       	cpi	r18, 0x2D	; 45
    3e58:	39 f4       	brne	.+14     	; 0x3e68 <atoi+0x2c>
    3e5a:	68 94       	set
    3e5c:	04 c0       	rjmp	.+8      	; 0x3e66 <atoi+0x2a>
    3e5e:	0e 94 79 1f 	call	0x3ef2	; 0x3ef2 <__mulhi_const_10>
    3e62:	82 0f       	add	r24, r18
    3e64:	91 1d       	adc	r25, r1
    3e66:	21 91       	ld	r18, Z+
    3e68:	20 53       	subi	r18, 0x30	; 48
    3e6a:	2a 30       	cpi	r18, 0x0A	; 10
    3e6c:	c0 f3       	brcs	.-16     	; 0x3e5e <atoi+0x22>
    3e6e:	1e f4       	brtc	.+6      	; 0x3e76 <atoi+0x3a>
    3e70:	90 95       	com	r25
    3e72:	81 95       	neg	r24
    3e74:	9f 4f       	sbci	r25, 0xFF	; 255
    3e76:	08 95       	ret

00003e78 <isspace>:
    3e78:	91 11       	cpse	r25, r1
    3e7a:	0c 94 84 21 	jmp	0x4308	; 0x4308 <__ctype_isfalse>
    3e7e:	80 32       	cpi	r24, 0x20	; 32
    3e80:	19 f0       	breq	.+6      	; 0x3e88 <isspace+0x10>
    3e82:	89 50       	subi	r24, 0x09	; 9
    3e84:	85 50       	subi	r24, 0x05	; 5
    3e86:	c8 f7       	brcc	.-14     	; 0x3e7a <isspace+0x2>
    3e88:	08 95       	ret

00003e8a <tolower>:
    3e8a:	91 11       	cpse	r25, r1
    3e8c:	08 95       	ret
    3e8e:	81 54       	subi	r24, 0x41	; 65
    3e90:	8a 51       	subi	r24, 0x1A	; 26
    3e92:	08 f4       	brcc	.+2      	; 0x3e96 <tolower+0xc>
    3e94:	80 5e       	subi	r24, 0xE0	; 224
    3e96:	85 5a       	subi	r24, 0xA5	; 165
    3e98:	08 95       	ret

00003e9a <strtok>:
    3e9a:	44 eb       	ldi	r20, 0xB4	; 180
    3e9c:	53 e0       	ldi	r21, 0x03	; 3
    3e9e:	0e 94 52 1f 	call	0x3ea4	; 0x3ea4 <strtok_r>
    3ea2:	08 95       	ret

00003ea4 <strtok_r>:
    3ea4:	fa 01       	movw	r30, r20
    3ea6:	a1 91       	ld	r26, Z+
    3ea8:	b0 81       	ld	r27, Z
    3eaa:	00 97       	sbiw	r24, 0x00	; 0
    3eac:	19 f4       	brne	.+6      	; 0x3eb4 <strtok_r+0x10>
    3eae:	10 97       	sbiw	r26, 0x00	; 0
    3eb0:	e1 f0       	breq	.+56     	; 0x3eea <strtok_r+0x46>
    3eb2:	cd 01       	movw	r24, r26
    3eb4:	dc 01       	movw	r26, r24
    3eb6:	cd 01       	movw	r24, r26
    3eb8:	0d 90       	ld	r0, X+
    3eba:	00 20       	and	r0, r0
    3ebc:	11 f4       	brne	.+4      	; 0x3ec2 <strtok_r+0x1e>
    3ebe:	c0 01       	movw	r24, r0
    3ec0:	13 c0       	rjmp	.+38     	; 0x3ee8 <strtok_r+0x44>
    3ec2:	fb 01       	movw	r30, r22
    3ec4:	21 91       	ld	r18, Z+
    3ec6:	22 23       	and	r18, r18
    3ec8:	19 f0       	breq	.+6      	; 0x3ed0 <strtok_r+0x2c>
    3eca:	20 15       	cp	r18, r0
    3ecc:	d9 f7       	brne	.-10     	; 0x3ec4 <strtok_r+0x20>
    3ece:	f3 cf       	rjmp	.-26     	; 0x3eb6 <strtok_r+0x12>
    3ed0:	fb 01       	movw	r30, r22
    3ed2:	21 91       	ld	r18, Z+
    3ed4:	20 15       	cp	r18, r0
    3ed6:	19 f4       	brne	.+6      	; 0x3ede <strtok_r+0x3a>
    3ed8:	1e 92       	st	-X, r1
    3eda:	11 96       	adiw	r26, 0x01	; 1
    3edc:	06 c0       	rjmp	.+12     	; 0x3eea <strtok_r+0x46>
    3ede:	22 23       	and	r18, r18
    3ee0:	c1 f7       	brne	.-16     	; 0x3ed2 <strtok_r+0x2e>
    3ee2:	0d 90       	ld	r0, X+
    3ee4:	00 20       	and	r0, r0
    3ee6:	a1 f7       	brne	.-24     	; 0x3ed0 <strtok_r+0x2c>
    3ee8:	d0 01       	movw	r26, r0
    3eea:	fa 01       	movw	r30, r20
    3eec:	a1 93       	st	Z+, r26
    3eee:	b0 83       	st	Z, r27
    3ef0:	08 95       	ret

00003ef2 <__mulhi_const_10>:
    3ef2:	7a e0       	ldi	r23, 0x0A	; 10
    3ef4:	97 9f       	mul	r25, r23
    3ef6:	90 2d       	mov	r25, r0
    3ef8:	87 9f       	mul	r24, r23
    3efa:	80 2d       	mov	r24, r0
    3efc:	91 0d       	add	r25, r1
    3efe:	11 24       	eor	r1, r1
    3f00:	08 95       	ret

00003f02 <sprintf>:
    3f02:	ae e0       	ldi	r26, 0x0E	; 14
    3f04:	b0 e0       	ldi	r27, 0x00	; 0
    3f06:	e7 e8       	ldi	r30, 0x87	; 135
    3f08:	ff e1       	ldi	r31, 0x1F	; 31
    3f0a:	0c 94 45 22 	jmp	0x448a	; 0x448a <__prologue_saves__+0x1c>
    3f0e:	0d 89       	ldd	r16, Y+21	; 0x15
    3f10:	1e 89       	ldd	r17, Y+22	; 0x16
    3f12:	86 e0       	ldi	r24, 0x06	; 6
    3f14:	8c 83       	std	Y+4, r24	; 0x04
    3f16:	1a 83       	std	Y+2, r17	; 0x02
    3f18:	09 83       	std	Y+1, r16	; 0x01
    3f1a:	8f ef       	ldi	r24, 0xFF	; 255
    3f1c:	9f e7       	ldi	r25, 0x7F	; 127
    3f1e:	9e 83       	std	Y+6, r25	; 0x06
    3f20:	8d 83       	std	Y+5, r24	; 0x05
    3f22:	ae 01       	movw	r20, r28
    3f24:	47 5e       	subi	r20, 0xE7	; 231
    3f26:	5f 4f       	sbci	r21, 0xFF	; 255
    3f28:	6f 89       	ldd	r22, Y+23	; 0x17
    3f2a:	78 8d       	ldd	r23, Y+24	; 0x18
    3f2c:	ce 01       	movw	r24, r28
    3f2e:	01 96       	adiw	r24, 0x01	; 1
    3f30:	0e 94 a3 1f 	call	0x3f46	; 0x3f46 <vfprintf>
    3f34:	ef 81       	ldd	r30, Y+7	; 0x07
    3f36:	f8 85       	ldd	r31, Y+8	; 0x08
    3f38:	e0 0f       	add	r30, r16
    3f3a:	f1 1f       	adc	r31, r17
    3f3c:	10 82       	st	Z, r1
    3f3e:	2e 96       	adiw	r28, 0x0e	; 14
    3f40:	e4 e0       	ldi	r30, 0x04	; 4
    3f42:	0c 94 61 22 	jmp	0x44c2	; 0x44c2 <__epilogue_restores__+0x1c>

00003f46 <vfprintf>:
    3f46:	ab e0       	ldi	r26, 0x0B	; 11
    3f48:	b0 e0       	ldi	r27, 0x00	; 0
    3f4a:	e9 ea       	ldi	r30, 0xA9	; 169
    3f4c:	ff e1       	ldi	r31, 0x1F	; 31
    3f4e:	0c 94 37 22 	jmp	0x446e	; 0x446e <__prologue_saves__>
    3f52:	6c 01       	movw	r12, r24
    3f54:	7b 01       	movw	r14, r22
    3f56:	8a 01       	movw	r16, r20
    3f58:	fc 01       	movw	r30, r24
    3f5a:	17 82       	std	Z+7, r1	; 0x07
    3f5c:	16 82       	std	Z+6, r1	; 0x06
    3f5e:	83 81       	ldd	r24, Z+3	; 0x03
    3f60:	81 ff       	sbrs	r24, 1
    3f62:	cc c1       	rjmp	.+920    	; 0x42fc <vfprintf+0x3b6>
    3f64:	ce 01       	movw	r24, r28
    3f66:	01 96       	adiw	r24, 0x01	; 1
    3f68:	3c 01       	movw	r6, r24
    3f6a:	f6 01       	movw	r30, r12
    3f6c:	93 81       	ldd	r25, Z+3	; 0x03
    3f6e:	f7 01       	movw	r30, r14
    3f70:	93 fd       	sbrc	r25, 3
    3f72:	85 91       	lpm	r24, Z+
    3f74:	93 ff       	sbrs	r25, 3
    3f76:	81 91       	ld	r24, Z+
    3f78:	7f 01       	movw	r14, r30
    3f7a:	88 23       	and	r24, r24
    3f7c:	09 f4       	brne	.+2      	; 0x3f80 <vfprintf+0x3a>
    3f7e:	ba c1       	rjmp	.+884    	; 0x42f4 <vfprintf+0x3ae>
    3f80:	85 32       	cpi	r24, 0x25	; 37
    3f82:	39 f4       	brne	.+14     	; 0x3f92 <vfprintf+0x4c>
    3f84:	93 fd       	sbrc	r25, 3
    3f86:	85 91       	lpm	r24, Z+
    3f88:	93 ff       	sbrs	r25, 3
    3f8a:	81 91       	ld	r24, Z+
    3f8c:	7f 01       	movw	r14, r30
    3f8e:	85 32       	cpi	r24, 0x25	; 37
    3f90:	29 f4       	brne	.+10     	; 0x3f9c <vfprintf+0x56>
    3f92:	b6 01       	movw	r22, r12
    3f94:	90 e0       	ldi	r25, 0x00	; 0
    3f96:	0e 94 9d 21 	call	0x433a	; 0x433a <fputc>
    3f9a:	e7 cf       	rjmp	.-50     	; 0x3f6a <vfprintf+0x24>
    3f9c:	91 2c       	mov	r9, r1
    3f9e:	21 2c       	mov	r2, r1
    3fa0:	31 2c       	mov	r3, r1
    3fa2:	ff e1       	ldi	r31, 0x1F	; 31
    3fa4:	f3 15       	cp	r31, r3
    3fa6:	d8 f0       	brcs	.+54     	; 0x3fde <vfprintf+0x98>
    3fa8:	8b 32       	cpi	r24, 0x2B	; 43
    3faa:	79 f0       	breq	.+30     	; 0x3fca <vfprintf+0x84>
    3fac:	38 f4       	brcc	.+14     	; 0x3fbc <vfprintf+0x76>
    3fae:	80 32       	cpi	r24, 0x20	; 32
    3fb0:	79 f0       	breq	.+30     	; 0x3fd0 <vfprintf+0x8a>
    3fb2:	83 32       	cpi	r24, 0x23	; 35
    3fb4:	a1 f4       	brne	.+40     	; 0x3fde <vfprintf+0x98>
    3fb6:	23 2d       	mov	r18, r3
    3fb8:	20 61       	ori	r18, 0x10	; 16
    3fba:	1d c0       	rjmp	.+58     	; 0x3ff6 <vfprintf+0xb0>
    3fbc:	8d 32       	cpi	r24, 0x2D	; 45
    3fbe:	61 f0       	breq	.+24     	; 0x3fd8 <vfprintf+0x92>
    3fc0:	80 33       	cpi	r24, 0x30	; 48
    3fc2:	69 f4       	brne	.+26     	; 0x3fde <vfprintf+0x98>
    3fc4:	23 2d       	mov	r18, r3
    3fc6:	21 60       	ori	r18, 0x01	; 1
    3fc8:	16 c0       	rjmp	.+44     	; 0x3ff6 <vfprintf+0xb0>
    3fca:	83 2d       	mov	r24, r3
    3fcc:	82 60       	ori	r24, 0x02	; 2
    3fce:	38 2e       	mov	r3, r24
    3fd0:	e3 2d       	mov	r30, r3
    3fd2:	e4 60       	ori	r30, 0x04	; 4
    3fd4:	3e 2e       	mov	r3, r30
    3fd6:	2a c0       	rjmp	.+84     	; 0x402c <vfprintf+0xe6>
    3fd8:	f3 2d       	mov	r31, r3
    3fda:	f8 60       	ori	r31, 0x08	; 8
    3fdc:	1d c0       	rjmp	.+58     	; 0x4018 <vfprintf+0xd2>
    3fde:	37 fc       	sbrc	r3, 7
    3fe0:	2d c0       	rjmp	.+90     	; 0x403c <vfprintf+0xf6>
    3fe2:	20 ed       	ldi	r18, 0xD0	; 208
    3fe4:	28 0f       	add	r18, r24
    3fe6:	2a 30       	cpi	r18, 0x0A	; 10
    3fe8:	40 f0       	brcs	.+16     	; 0x3ffa <vfprintf+0xb4>
    3fea:	8e 32       	cpi	r24, 0x2E	; 46
    3fec:	b9 f4       	brne	.+46     	; 0x401c <vfprintf+0xd6>
    3fee:	36 fc       	sbrc	r3, 6
    3ff0:	81 c1       	rjmp	.+770    	; 0x42f4 <vfprintf+0x3ae>
    3ff2:	23 2d       	mov	r18, r3
    3ff4:	20 64       	ori	r18, 0x40	; 64
    3ff6:	32 2e       	mov	r3, r18
    3ff8:	19 c0       	rjmp	.+50     	; 0x402c <vfprintf+0xe6>
    3ffa:	36 fe       	sbrs	r3, 6
    3ffc:	06 c0       	rjmp	.+12     	; 0x400a <vfprintf+0xc4>
    3ffe:	8a e0       	ldi	r24, 0x0A	; 10
    4000:	98 9e       	mul	r9, r24
    4002:	20 0d       	add	r18, r0
    4004:	11 24       	eor	r1, r1
    4006:	92 2e       	mov	r9, r18
    4008:	11 c0       	rjmp	.+34     	; 0x402c <vfprintf+0xe6>
    400a:	ea e0       	ldi	r30, 0x0A	; 10
    400c:	2e 9e       	mul	r2, r30
    400e:	20 0d       	add	r18, r0
    4010:	11 24       	eor	r1, r1
    4012:	22 2e       	mov	r2, r18
    4014:	f3 2d       	mov	r31, r3
    4016:	f0 62       	ori	r31, 0x20	; 32
    4018:	3f 2e       	mov	r3, r31
    401a:	08 c0       	rjmp	.+16     	; 0x402c <vfprintf+0xe6>
    401c:	8c 36       	cpi	r24, 0x6C	; 108
    401e:	21 f4       	brne	.+8      	; 0x4028 <vfprintf+0xe2>
    4020:	83 2d       	mov	r24, r3
    4022:	80 68       	ori	r24, 0x80	; 128
    4024:	38 2e       	mov	r3, r24
    4026:	02 c0       	rjmp	.+4      	; 0x402c <vfprintf+0xe6>
    4028:	88 36       	cpi	r24, 0x68	; 104
    402a:	41 f4       	brne	.+16     	; 0x403c <vfprintf+0xf6>
    402c:	f7 01       	movw	r30, r14
    402e:	93 fd       	sbrc	r25, 3
    4030:	85 91       	lpm	r24, Z+
    4032:	93 ff       	sbrs	r25, 3
    4034:	81 91       	ld	r24, Z+
    4036:	7f 01       	movw	r14, r30
    4038:	81 11       	cpse	r24, r1
    403a:	b3 cf       	rjmp	.-154    	; 0x3fa2 <vfprintf+0x5c>
    403c:	98 2f       	mov	r25, r24
    403e:	9f 7d       	andi	r25, 0xDF	; 223
    4040:	95 54       	subi	r25, 0x45	; 69
    4042:	93 30       	cpi	r25, 0x03	; 3
    4044:	28 f4       	brcc	.+10     	; 0x4050 <vfprintf+0x10a>
    4046:	0c 5f       	subi	r16, 0xFC	; 252
    4048:	1f 4f       	sbci	r17, 0xFF	; 255
    404a:	9f e3       	ldi	r25, 0x3F	; 63
    404c:	99 83       	std	Y+1, r25	; 0x01
    404e:	0d c0       	rjmp	.+26     	; 0x406a <vfprintf+0x124>
    4050:	83 36       	cpi	r24, 0x63	; 99
    4052:	31 f0       	breq	.+12     	; 0x4060 <vfprintf+0x11a>
    4054:	83 37       	cpi	r24, 0x73	; 115
    4056:	71 f0       	breq	.+28     	; 0x4074 <vfprintf+0x12e>
    4058:	83 35       	cpi	r24, 0x53	; 83
    405a:	09 f0       	breq	.+2      	; 0x405e <vfprintf+0x118>
    405c:	59 c0       	rjmp	.+178    	; 0x4110 <vfprintf+0x1ca>
    405e:	21 c0       	rjmp	.+66     	; 0x40a2 <vfprintf+0x15c>
    4060:	f8 01       	movw	r30, r16
    4062:	80 81       	ld	r24, Z
    4064:	89 83       	std	Y+1, r24	; 0x01
    4066:	0e 5f       	subi	r16, 0xFE	; 254
    4068:	1f 4f       	sbci	r17, 0xFF	; 255
    406a:	88 24       	eor	r8, r8
    406c:	83 94       	inc	r8
    406e:	91 2c       	mov	r9, r1
    4070:	53 01       	movw	r10, r6
    4072:	13 c0       	rjmp	.+38     	; 0x409a <vfprintf+0x154>
    4074:	28 01       	movw	r4, r16
    4076:	f2 e0       	ldi	r31, 0x02	; 2
    4078:	4f 0e       	add	r4, r31
    407a:	51 1c       	adc	r5, r1
    407c:	f8 01       	movw	r30, r16
    407e:	a0 80       	ld	r10, Z
    4080:	b1 80       	ldd	r11, Z+1	; 0x01
    4082:	36 fe       	sbrs	r3, 6
    4084:	03 c0       	rjmp	.+6      	; 0x408c <vfprintf+0x146>
    4086:	69 2d       	mov	r22, r9
    4088:	70 e0       	ldi	r23, 0x00	; 0
    408a:	02 c0       	rjmp	.+4      	; 0x4090 <vfprintf+0x14a>
    408c:	6f ef       	ldi	r22, 0xFF	; 255
    408e:	7f ef       	ldi	r23, 0xFF	; 255
    4090:	c5 01       	movw	r24, r10
    4092:	0e 94 92 21 	call	0x4324	; 0x4324 <strnlen>
    4096:	4c 01       	movw	r8, r24
    4098:	82 01       	movw	r16, r4
    409a:	f3 2d       	mov	r31, r3
    409c:	ff 77       	andi	r31, 0x7F	; 127
    409e:	3f 2e       	mov	r3, r31
    40a0:	16 c0       	rjmp	.+44     	; 0x40ce <vfprintf+0x188>
    40a2:	28 01       	movw	r4, r16
    40a4:	22 e0       	ldi	r18, 0x02	; 2
    40a6:	42 0e       	add	r4, r18
    40a8:	51 1c       	adc	r5, r1
    40aa:	f8 01       	movw	r30, r16
    40ac:	a0 80       	ld	r10, Z
    40ae:	b1 80       	ldd	r11, Z+1	; 0x01
    40b0:	36 fe       	sbrs	r3, 6
    40b2:	03 c0       	rjmp	.+6      	; 0x40ba <vfprintf+0x174>
    40b4:	69 2d       	mov	r22, r9
    40b6:	70 e0       	ldi	r23, 0x00	; 0
    40b8:	02 c0       	rjmp	.+4      	; 0x40be <vfprintf+0x178>
    40ba:	6f ef       	ldi	r22, 0xFF	; 255
    40bc:	7f ef       	ldi	r23, 0xFF	; 255
    40be:	c5 01       	movw	r24, r10
    40c0:	0e 94 87 21 	call	0x430e	; 0x430e <strnlen_P>
    40c4:	4c 01       	movw	r8, r24
    40c6:	f3 2d       	mov	r31, r3
    40c8:	f0 68       	ori	r31, 0x80	; 128
    40ca:	3f 2e       	mov	r3, r31
    40cc:	82 01       	movw	r16, r4
    40ce:	33 fc       	sbrc	r3, 3
    40d0:	1b c0       	rjmp	.+54     	; 0x4108 <vfprintf+0x1c2>
    40d2:	82 2d       	mov	r24, r2
    40d4:	90 e0       	ldi	r25, 0x00	; 0
    40d6:	88 16       	cp	r8, r24
    40d8:	99 06       	cpc	r9, r25
    40da:	b0 f4       	brcc	.+44     	; 0x4108 <vfprintf+0x1c2>
    40dc:	b6 01       	movw	r22, r12
    40de:	80 e2       	ldi	r24, 0x20	; 32
    40e0:	90 e0       	ldi	r25, 0x00	; 0
    40e2:	0e 94 9d 21 	call	0x433a	; 0x433a <fputc>
    40e6:	2a 94       	dec	r2
    40e8:	f4 cf       	rjmp	.-24     	; 0x40d2 <vfprintf+0x18c>
    40ea:	f5 01       	movw	r30, r10
    40ec:	37 fc       	sbrc	r3, 7
    40ee:	85 91       	lpm	r24, Z+
    40f0:	37 fe       	sbrs	r3, 7
    40f2:	81 91       	ld	r24, Z+
    40f4:	5f 01       	movw	r10, r30
    40f6:	b6 01       	movw	r22, r12
    40f8:	90 e0       	ldi	r25, 0x00	; 0
    40fa:	0e 94 9d 21 	call	0x433a	; 0x433a <fputc>
    40fe:	21 10       	cpse	r2, r1
    4100:	2a 94       	dec	r2
    4102:	21 e0       	ldi	r18, 0x01	; 1
    4104:	82 1a       	sub	r8, r18
    4106:	91 08       	sbc	r9, r1
    4108:	81 14       	cp	r8, r1
    410a:	91 04       	cpc	r9, r1
    410c:	71 f7       	brne	.-36     	; 0x40ea <vfprintf+0x1a4>
    410e:	e8 c0       	rjmp	.+464    	; 0x42e0 <vfprintf+0x39a>
    4110:	84 36       	cpi	r24, 0x64	; 100
    4112:	11 f0       	breq	.+4      	; 0x4118 <vfprintf+0x1d2>
    4114:	89 36       	cpi	r24, 0x69	; 105
    4116:	41 f5       	brne	.+80     	; 0x4168 <vfprintf+0x222>
    4118:	f8 01       	movw	r30, r16
    411a:	37 fe       	sbrs	r3, 7
    411c:	07 c0       	rjmp	.+14     	; 0x412c <vfprintf+0x1e6>
    411e:	60 81       	ld	r22, Z
    4120:	71 81       	ldd	r23, Z+1	; 0x01
    4122:	82 81       	ldd	r24, Z+2	; 0x02
    4124:	93 81       	ldd	r25, Z+3	; 0x03
    4126:	0c 5f       	subi	r16, 0xFC	; 252
    4128:	1f 4f       	sbci	r17, 0xFF	; 255
    412a:	08 c0       	rjmp	.+16     	; 0x413c <vfprintf+0x1f6>
    412c:	60 81       	ld	r22, Z
    412e:	71 81       	ldd	r23, Z+1	; 0x01
    4130:	07 2e       	mov	r0, r23
    4132:	00 0c       	add	r0, r0
    4134:	88 0b       	sbc	r24, r24
    4136:	99 0b       	sbc	r25, r25
    4138:	0e 5f       	subi	r16, 0xFE	; 254
    413a:	1f 4f       	sbci	r17, 0xFF	; 255
    413c:	f3 2d       	mov	r31, r3
    413e:	ff 76       	andi	r31, 0x6F	; 111
    4140:	3f 2e       	mov	r3, r31
    4142:	97 ff       	sbrs	r25, 7
    4144:	09 c0       	rjmp	.+18     	; 0x4158 <vfprintf+0x212>
    4146:	90 95       	com	r25
    4148:	80 95       	com	r24
    414a:	70 95       	com	r23
    414c:	61 95       	neg	r22
    414e:	7f 4f       	sbci	r23, 0xFF	; 255
    4150:	8f 4f       	sbci	r24, 0xFF	; 255
    4152:	9f 4f       	sbci	r25, 0xFF	; 255
    4154:	f0 68       	ori	r31, 0x80	; 128
    4156:	3f 2e       	mov	r3, r31
    4158:	2a e0       	ldi	r18, 0x0A	; 10
    415a:	30 e0       	ldi	r19, 0x00	; 0
    415c:	a3 01       	movw	r20, r6
    415e:	0e 94 d9 21 	call	0x43b2	; 0x43b2 <__ultoa_invert>
    4162:	88 2e       	mov	r8, r24
    4164:	86 18       	sub	r8, r6
    4166:	45 c0       	rjmp	.+138    	; 0x41f2 <vfprintf+0x2ac>
    4168:	85 37       	cpi	r24, 0x75	; 117
    416a:	31 f4       	brne	.+12     	; 0x4178 <vfprintf+0x232>
    416c:	23 2d       	mov	r18, r3
    416e:	2f 7e       	andi	r18, 0xEF	; 239
    4170:	b2 2e       	mov	r11, r18
    4172:	2a e0       	ldi	r18, 0x0A	; 10
    4174:	30 e0       	ldi	r19, 0x00	; 0
    4176:	25 c0       	rjmp	.+74     	; 0x41c2 <vfprintf+0x27c>
    4178:	93 2d       	mov	r25, r3
    417a:	99 7f       	andi	r25, 0xF9	; 249
    417c:	b9 2e       	mov	r11, r25
    417e:	8f 36       	cpi	r24, 0x6F	; 111
    4180:	c1 f0       	breq	.+48     	; 0x41b2 <vfprintf+0x26c>
    4182:	18 f4       	brcc	.+6      	; 0x418a <vfprintf+0x244>
    4184:	88 35       	cpi	r24, 0x58	; 88
    4186:	79 f0       	breq	.+30     	; 0x41a6 <vfprintf+0x260>
    4188:	b5 c0       	rjmp	.+362    	; 0x42f4 <vfprintf+0x3ae>
    418a:	80 37       	cpi	r24, 0x70	; 112
    418c:	19 f0       	breq	.+6      	; 0x4194 <vfprintf+0x24e>
    418e:	88 37       	cpi	r24, 0x78	; 120
    4190:	21 f0       	breq	.+8      	; 0x419a <vfprintf+0x254>
    4192:	b0 c0       	rjmp	.+352    	; 0x42f4 <vfprintf+0x3ae>
    4194:	e9 2f       	mov	r30, r25
    4196:	e0 61       	ori	r30, 0x10	; 16
    4198:	be 2e       	mov	r11, r30
    419a:	b4 fe       	sbrs	r11, 4
    419c:	0d c0       	rjmp	.+26     	; 0x41b8 <vfprintf+0x272>
    419e:	fb 2d       	mov	r31, r11
    41a0:	f4 60       	ori	r31, 0x04	; 4
    41a2:	bf 2e       	mov	r11, r31
    41a4:	09 c0       	rjmp	.+18     	; 0x41b8 <vfprintf+0x272>
    41a6:	34 fe       	sbrs	r3, 4
    41a8:	0a c0       	rjmp	.+20     	; 0x41be <vfprintf+0x278>
    41aa:	29 2f       	mov	r18, r25
    41ac:	26 60       	ori	r18, 0x06	; 6
    41ae:	b2 2e       	mov	r11, r18
    41b0:	06 c0       	rjmp	.+12     	; 0x41be <vfprintf+0x278>
    41b2:	28 e0       	ldi	r18, 0x08	; 8
    41b4:	30 e0       	ldi	r19, 0x00	; 0
    41b6:	05 c0       	rjmp	.+10     	; 0x41c2 <vfprintf+0x27c>
    41b8:	20 e1       	ldi	r18, 0x10	; 16
    41ba:	30 e0       	ldi	r19, 0x00	; 0
    41bc:	02 c0       	rjmp	.+4      	; 0x41c2 <vfprintf+0x27c>
    41be:	20 e1       	ldi	r18, 0x10	; 16
    41c0:	32 e0       	ldi	r19, 0x02	; 2
    41c2:	f8 01       	movw	r30, r16
    41c4:	b7 fe       	sbrs	r11, 7
    41c6:	07 c0       	rjmp	.+14     	; 0x41d6 <vfprintf+0x290>
    41c8:	60 81       	ld	r22, Z
    41ca:	71 81       	ldd	r23, Z+1	; 0x01
    41cc:	82 81       	ldd	r24, Z+2	; 0x02
    41ce:	93 81       	ldd	r25, Z+3	; 0x03
    41d0:	0c 5f       	subi	r16, 0xFC	; 252
    41d2:	1f 4f       	sbci	r17, 0xFF	; 255
    41d4:	06 c0       	rjmp	.+12     	; 0x41e2 <vfprintf+0x29c>
    41d6:	60 81       	ld	r22, Z
    41d8:	71 81       	ldd	r23, Z+1	; 0x01
    41da:	80 e0       	ldi	r24, 0x00	; 0
    41dc:	90 e0       	ldi	r25, 0x00	; 0
    41de:	0e 5f       	subi	r16, 0xFE	; 254
    41e0:	1f 4f       	sbci	r17, 0xFF	; 255
    41e2:	a3 01       	movw	r20, r6
    41e4:	0e 94 d9 21 	call	0x43b2	; 0x43b2 <__ultoa_invert>
    41e8:	88 2e       	mov	r8, r24
    41ea:	86 18       	sub	r8, r6
    41ec:	fb 2d       	mov	r31, r11
    41ee:	ff 77       	andi	r31, 0x7F	; 127
    41f0:	3f 2e       	mov	r3, r31
    41f2:	36 fe       	sbrs	r3, 6
    41f4:	0d c0       	rjmp	.+26     	; 0x4210 <vfprintf+0x2ca>
    41f6:	23 2d       	mov	r18, r3
    41f8:	2e 7f       	andi	r18, 0xFE	; 254
    41fa:	a2 2e       	mov	r10, r18
    41fc:	89 14       	cp	r8, r9
    41fe:	58 f4       	brcc	.+22     	; 0x4216 <vfprintf+0x2d0>
    4200:	34 fe       	sbrs	r3, 4
    4202:	0b c0       	rjmp	.+22     	; 0x421a <vfprintf+0x2d4>
    4204:	32 fc       	sbrc	r3, 2
    4206:	09 c0       	rjmp	.+18     	; 0x421a <vfprintf+0x2d4>
    4208:	83 2d       	mov	r24, r3
    420a:	8e 7e       	andi	r24, 0xEE	; 238
    420c:	a8 2e       	mov	r10, r24
    420e:	05 c0       	rjmp	.+10     	; 0x421a <vfprintf+0x2d4>
    4210:	b8 2c       	mov	r11, r8
    4212:	a3 2c       	mov	r10, r3
    4214:	03 c0       	rjmp	.+6      	; 0x421c <vfprintf+0x2d6>
    4216:	b8 2c       	mov	r11, r8
    4218:	01 c0       	rjmp	.+2      	; 0x421c <vfprintf+0x2d6>
    421a:	b9 2c       	mov	r11, r9
    421c:	a4 fe       	sbrs	r10, 4
    421e:	0f c0       	rjmp	.+30     	; 0x423e <vfprintf+0x2f8>
    4220:	fe 01       	movw	r30, r28
    4222:	e8 0d       	add	r30, r8
    4224:	f1 1d       	adc	r31, r1
    4226:	80 81       	ld	r24, Z
    4228:	80 33       	cpi	r24, 0x30	; 48
    422a:	21 f4       	brne	.+8      	; 0x4234 <vfprintf+0x2ee>
    422c:	9a 2d       	mov	r25, r10
    422e:	99 7e       	andi	r25, 0xE9	; 233
    4230:	a9 2e       	mov	r10, r25
    4232:	09 c0       	rjmp	.+18     	; 0x4246 <vfprintf+0x300>
    4234:	a2 fe       	sbrs	r10, 2
    4236:	06 c0       	rjmp	.+12     	; 0x4244 <vfprintf+0x2fe>
    4238:	b3 94       	inc	r11
    423a:	b3 94       	inc	r11
    423c:	04 c0       	rjmp	.+8      	; 0x4246 <vfprintf+0x300>
    423e:	8a 2d       	mov	r24, r10
    4240:	86 78       	andi	r24, 0x86	; 134
    4242:	09 f0       	breq	.+2      	; 0x4246 <vfprintf+0x300>
    4244:	b3 94       	inc	r11
    4246:	a3 fc       	sbrc	r10, 3
    4248:	11 c0       	rjmp	.+34     	; 0x426c <vfprintf+0x326>
    424a:	a0 fe       	sbrs	r10, 0
    424c:	06 c0       	rjmp	.+12     	; 0x425a <vfprintf+0x314>
    424e:	b2 14       	cp	r11, r2
    4250:	88 f4       	brcc	.+34     	; 0x4274 <vfprintf+0x32e>
    4252:	28 0c       	add	r2, r8
    4254:	92 2c       	mov	r9, r2
    4256:	9b 18       	sub	r9, r11
    4258:	0e c0       	rjmp	.+28     	; 0x4276 <vfprintf+0x330>
    425a:	b2 14       	cp	r11, r2
    425c:	60 f4       	brcc	.+24     	; 0x4276 <vfprintf+0x330>
    425e:	b6 01       	movw	r22, r12
    4260:	80 e2       	ldi	r24, 0x20	; 32
    4262:	90 e0       	ldi	r25, 0x00	; 0
    4264:	0e 94 9d 21 	call	0x433a	; 0x433a <fputc>
    4268:	b3 94       	inc	r11
    426a:	f7 cf       	rjmp	.-18     	; 0x425a <vfprintf+0x314>
    426c:	b2 14       	cp	r11, r2
    426e:	18 f4       	brcc	.+6      	; 0x4276 <vfprintf+0x330>
    4270:	2b 18       	sub	r2, r11
    4272:	02 c0       	rjmp	.+4      	; 0x4278 <vfprintf+0x332>
    4274:	98 2c       	mov	r9, r8
    4276:	21 2c       	mov	r2, r1
    4278:	a4 fe       	sbrs	r10, 4
    427a:	10 c0       	rjmp	.+32     	; 0x429c <vfprintf+0x356>
    427c:	b6 01       	movw	r22, r12
    427e:	80 e3       	ldi	r24, 0x30	; 48
    4280:	90 e0       	ldi	r25, 0x00	; 0
    4282:	0e 94 9d 21 	call	0x433a	; 0x433a <fputc>
    4286:	a2 fe       	sbrs	r10, 2
    4288:	17 c0       	rjmp	.+46     	; 0x42b8 <vfprintf+0x372>
    428a:	a1 fc       	sbrc	r10, 1
    428c:	03 c0       	rjmp	.+6      	; 0x4294 <vfprintf+0x34e>
    428e:	88 e7       	ldi	r24, 0x78	; 120
    4290:	90 e0       	ldi	r25, 0x00	; 0
    4292:	02 c0       	rjmp	.+4      	; 0x4298 <vfprintf+0x352>
    4294:	88 e5       	ldi	r24, 0x58	; 88
    4296:	90 e0       	ldi	r25, 0x00	; 0
    4298:	b6 01       	movw	r22, r12
    429a:	0c c0       	rjmp	.+24     	; 0x42b4 <vfprintf+0x36e>
    429c:	8a 2d       	mov	r24, r10
    429e:	86 78       	andi	r24, 0x86	; 134
    42a0:	59 f0       	breq	.+22     	; 0x42b8 <vfprintf+0x372>
    42a2:	a1 fe       	sbrs	r10, 1
    42a4:	02 c0       	rjmp	.+4      	; 0x42aa <vfprintf+0x364>
    42a6:	8b e2       	ldi	r24, 0x2B	; 43
    42a8:	01 c0       	rjmp	.+2      	; 0x42ac <vfprintf+0x366>
    42aa:	80 e2       	ldi	r24, 0x20	; 32
    42ac:	a7 fc       	sbrc	r10, 7
    42ae:	8d e2       	ldi	r24, 0x2D	; 45
    42b0:	b6 01       	movw	r22, r12
    42b2:	90 e0       	ldi	r25, 0x00	; 0
    42b4:	0e 94 9d 21 	call	0x433a	; 0x433a <fputc>
    42b8:	89 14       	cp	r8, r9
    42ba:	38 f4       	brcc	.+14     	; 0x42ca <vfprintf+0x384>
    42bc:	b6 01       	movw	r22, r12
    42be:	80 e3       	ldi	r24, 0x30	; 48
    42c0:	90 e0       	ldi	r25, 0x00	; 0
    42c2:	0e 94 9d 21 	call	0x433a	; 0x433a <fputc>
    42c6:	9a 94       	dec	r9
    42c8:	f7 cf       	rjmp	.-18     	; 0x42b8 <vfprintf+0x372>
    42ca:	8a 94       	dec	r8
    42cc:	f3 01       	movw	r30, r6
    42ce:	e8 0d       	add	r30, r8
    42d0:	f1 1d       	adc	r31, r1
    42d2:	80 81       	ld	r24, Z
    42d4:	b6 01       	movw	r22, r12
    42d6:	90 e0       	ldi	r25, 0x00	; 0
    42d8:	0e 94 9d 21 	call	0x433a	; 0x433a <fputc>
    42dc:	81 10       	cpse	r8, r1
    42de:	f5 cf       	rjmp	.-22     	; 0x42ca <vfprintf+0x384>
    42e0:	22 20       	and	r2, r2
    42e2:	09 f4       	brne	.+2      	; 0x42e6 <vfprintf+0x3a0>
    42e4:	42 ce       	rjmp	.-892    	; 0x3f6a <vfprintf+0x24>
    42e6:	b6 01       	movw	r22, r12
    42e8:	80 e2       	ldi	r24, 0x20	; 32
    42ea:	90 e0       	ldi	r25, 0x00	; 0
    42ec:	0e 94 9d 21 	call	0x433a	; 0x433a <fputc>
    42f0:	2a 94       	dec	r2
    42f2:	f6 cf       	rjmp	.-20     	; 0x42e0 <vfprintf+0x39a>
    42f4:	f6 01       	movw	r30, r12
    42f6:	86 81       	ldd	r24, Z+6	; 0x06
    42f8:	97 81       	ldd	r25, Z+7	; 0x07
    42fa:	02 c0       	rjmp	.+4      	; 0x4300 <vfprintf+0x3ba>
    42fc:	8f ef       	ldi	r24, 0xFF	; 255
    42fe:	9f ef       	ldi	r25, 0xFF	; 255
    4300:	2b 96       	adiw	r28, 0x0b	; 11
    4302:	e2 e1       	ldi	r30, 0x12	; 18
    4304:	0c 94 53 22 	jmp	0x44a6	; 0x44a6 <__epilogue_restores__>

00004308 <__ctype_isfalse>:
    4308:	99 27       	eor	r25, r25
    430a:	88 27       	eor	r24, r24

0000430c <__ctype_istrue>:
    430c:	08 95       	ret

0000430e <strnlen_P>:
    430e:	fc 01       	movw	r30, r24
    4310:	05 90       	lpm	r0, Z+
    4312:	61 50       	subi	r22, 0x01	; 1
    4314:	70 40       	sbci	r23, 0x00	; 0
    4316:	01 10       	cpse	r0, r1
    4318:	d8 f7       	brcc	.-10     	; 0x4310 <strnlen_P+0x2>
    431a:	80 95       	com	r24
    431c:	90 95       	com	r25
    431e:	8e 0f       	add	r24, r30
    4320:	9f 1f       	adc	r25, r31
    4322:	08 95       	ret

00004324 <strnlen>:
    4324:	fc 01       	movw	r30, r24
    4326:	61 50       	subi	r22, 0x01	; 1
    4328:	70 40       	sbci	r23, 0x00	; 0
    432a:	01 90       	ld	r0, Z+
    432c:	01 10       	cpse	r0, r1
    432e:	d8 f7       	brcc	.-10     	; 0x4326 <strnlen+0x2>
    4330:	80 95       	com	r24
    4332:	90 95       	com	r25
    4334:	8e 0f       	add	r24, r30
    4336:	9f 1f       	adc	r25, r31
    4338:	08 95       	ret

0000433a <fputc>:
    433a:	0f 93       	push	r16
    433c:	1f 93       	push	r17
    433e:	cf 93       	push	r28
    4340:	df 93       	push	r29
    4342:	fb 01       	movw	r30, r22
    4344:	23 81       	ldd	r18, Z+3	; 0x03
    4346:	21 fd       	sbrc	r18, 1
    4348:	03 c0       	rjmp	.+6      	; 0x4350 <fputc+0x16>
    434a:	8f ef       	ldi	r24, 0xFF	; 255
    434c:	9f ef       	ldi	r25, 0xFF	; 255
    434e:	2c c0       	rjmp	.+88     	; 0x43a8 <fputc+0x6e>
    4350:	22 ff       	sbrs	r18, 2
    4352:	16 c0       	rjmp	.+44     	; 0x4380 <fputc+0x46>
    4354:	46 81       	ldd	r20, Z+6	; 0x06
    4356:	57 81       	ldd	r21, Z+7	; 0x07
    4358:	24 81       	ldd	r18, Z+4	; 0x04
    435a:	35 81       	ldd	r19, Z+5	; 0x05
    435c:	42 17       	cp	r20, r18
    435e:	53 07       	cpc	r21, r19
    4360:	44 f4       	brge	.+16     	; 0x4372 <fputc+0x38>
    4362:	a0 81       	ld	r26, Z
    4364:	b1 81       	ldd	r27, Z+1	; 0x01
    4366:	9d 01       	movw	r18, r26
    4368:	2f 5f       	subi	r18, 0xFF	; 255
    436a:	3f 4f       	sbci	r19, 0xFF	; 255
    436c:	31 83       	std	Z+1, r19	; 0x01
    436e:	20 83       	st	Z, r18
    4370:	8c 93       	st	X, r24
    4372:	26 81       	ldd	r18, Z+6	; 0x06
    4374:	37 81       	ldd	r19, Z+7	; 0x07
    4376:	2f 5f       	subi	r18, 0xFF	; 255
    4378:	3f 4f       	sbci	r19, 0xFF	; 255
    437a:	37 83       	std	Z+7, r19	; 0x07
    437c:	26 83       	std	Z+6, r18	; 0x06
    437e:	14 c0       	rjmp	.+40     	; 0x43a8 <fputc+0x6e>
    4380:	8b 01       	movw	r16, r22
    4382:	ec 01       	movw	r28, r24
    4384:	fb 01       	movw	r30, r22
    4386:	00 84       	ldd	r0, Z+8	; 0x08
    4388:	f1 85       	ldd	r31, Z+9	; 0x09
    438a:	e0 2d       	mov	r30, r0
    438c:	09 95       	icall
    438e:	89 2b       	or	r24, r25
    4390:	e1 f6       	brne	.-72     	; 0x434a <fputc+0x10>
    4392:	d8 01       	movw	r26, r16
    4394:	16 96       	adiw	r26, 0x06	; 6
    4396:	8d 91       	ld	r24, X+
    4398:	9c 91       	ld	r25, X
    439a:	17 97       	sbiw	r26, 0x07	; 7
    439c:	01 96       	adiw	r24, 0x01	; 1
    439e:	17 96       	adiw	r26, 0x07	; 7
    43a0:	9c 93       	st	X, r25
    43a2:	8e 93       	st	-X, r24
    43a4:	16 97       	sbiw	r26, 0x06	; 6
    43a6:	ce 01       	movw	r24, r28
    43a8:	df 91       	pop	r29
    43aa:	cf 91       	pop	r28
    43ac:	1f 91       	pop	r17
    43ae:	0f 91       	pop	r16
    43b0:	08 95       	ret

000043b2 <__ultoa_invert>:
    43b2:	fa 01       	movw	r30, r20
    43b4:	aa 27       	eor	r26, r26
    43b6:	28 30       	cpi	r18, 0x08	; 8
    43b8:	51 f1       	breq	.+84     	; 0x440e <__ultoa_invert+0x5c>
    43ba:	20 31       	cpi	r18, 0x10	; 16
    43bc:	81 f1       	breq	.+96     	; 0x441e <__ultoa_invert+0x6c>
    43be:	e8 94       	clt
    43c0:	6f 93       	push	r22
    43c2:	6e 7f       	andi	r22, 0xFE	; 254
    43c4:	6e 5f       	subi	r22, 0xFE	; 254
    43c6:	7f 4f       	sbci	r23, 0xFF	; 255
    43c8:	8f 4f       	sbci	r24, 0xFF	; 255
    43ca:	9f 4f       	sbci	r25, 0xFF	; 255
    43cc:	af 4f       	sbci	r26, 0xFF	; 255
    43ce:	b1 e0       	ldi	r27, 0x01	; 1
    43d0:	3e d0       	rcall	.+124    	; 0x444e <__ultoa_invert+0x9c>
    43d2:	b4 e0       	ldi	r27, 0x04	; 4
    43d4:	3c d0       	rcall	.+120    	; 0x444e <__ultoa_invert+0x9c>
    43d6:	67 0f       	add	r22, r23
    43d8:	78 1f       	adc	r23, r24
    43da:	89 1f       	adc	r24, r25
    43dc:	9a 1f       	adc	r25, r26
    43de:	a1 1d       	adc	r26, r1
    43e0:	68 0f       	add	r22, r24
    43e2:	79 1f       	adc	r23, r25
    43e4:	8a 1f       	adc	r24, r26
    43e6:	91 1d       	adc	r25, r1
    43e8:	a1 1d       	adc	r26, r1
    43ea:	6a 0f       	add	r22, r26
    43ec:	71 1d       	adc	r23, r1
    43ee:	81 1d       	adc	r24, r1
    43f0:	91 1d       	adc	r25, r1
    43f2:	a1 1d       	adc	r26, r1
    43f4:	20 d0       	rcall	.+64     	; 0x4436 <__ultoa_invert+0x84>
    43f6:	09 f4       	brne	.+2      	; 0x43fa <__ultoa_invert+0x48>
    43f8:	68 94       	set
    43fa:	3f 91       	pop	r19
    43fc:	2a e0       	ldi	r18, 0x0A	; 10
    43fe:	26 9f       	mul	r18, r22
    4400:	11 24       	eor	r1, r1
    4402:	30 19       	sub	r19, r0
    4404:	30 5d       	subi	r19, 0xD0	; 208
    4406:	31 93       	st	Z+, r19
    4408:	de f6       	brtc	.-74     	; 0x43c0 <__ultoa_invert+0xe>
    440a:	cf 01       	movw	r24, r30
    440c:	08 95       	ret
    440e:	46 2f       	mov	r20, r22
    4410:	47 70       	andi	r20, 0x07	; 7
    4412:	40 5d       	subi	r20, 0xD0	; 208
    4414:	41 93       	st	Z+, r20
    4416:	b3 e0       	ldi	r27, 0x03	; 3
    4418:	0f d0       	rcall	.+30     	; 0x4438 <__ultoa_invert+0x86>
    441a:	c9 f7       	brne	.-14     	; 0x440e <__ultoa_invert+0x5c>
    441c:	f6 cf       	rjmp	.-20     	; 0x440a <__ultoa_invert+0x58>
    441e:	46 2f       	mov	r20, r22
    4420:	4f 70       	andi	r20, 0x0F	; 15
    4422:	40 5d       	subi	r20, 0xD0	; 208
    4424:	4a 33       	cpi	r20, 0x3A	; 58
    4426:	18 f0       	brcs	.+6      	; 0x442e <__ultoa_invert+0x7c>
    4428:	49 5d       	subi	r20, 0xD9	; 217
    442a:	31 fd       	sbrc	r19, 1
    442c:	40 52       	subi	r20, 0x20	; 32
    442e:	41 93       	st	Z+, r20
    4430:	02 d0       	rcall	.+4      	; 0x4436 <__ultoa_invert+0x84>
    4432:	a9 f7       	brne	.-22     	; 0x441e <__ultoa_invert+0x6c>
    4434:	ea cf       	rjmp	.-44     	; 0x440a <__ultoa_invert+0x58>
    4436:	b4 e0       	ldi	r27, 0x04	; 4
    4438:	a6 95       	lsr	r26
    443a:	97 95       	ror	r25
    443c:	87 95       	ror	r24
    443e:	77 95       	ror	r23
    4440:	67 95       	ror	r22
    4442:	ba 95       	dec	r27
    4444:	c9 f7       	brne	.-14     	; 0x4438 <__ultoa_invert+0x86>
    4446:	00 97       	sbiw	r24, 0x00	; 0
    4448:	61 05       	cpc	r22, r1
    444a:	71 05       	cpc	r23, r1
    444c:	08 95       	ret
    444e:	9b 01       	movw	r18, r22
    4450:	ac 01       	movw	r20, r24
    4452:	0a 2e       	mov	r0, r26
    4454:	06 94       	lsr	r0
    4456:	57 95       	ror	r21
    4458:	47 95       	ror	r20
    445a:	37 95       	ror	r19
    445c:	27 95       	ror	r18
    445e:	ba 95       	dec	r27
    4460:	c9 f7       	brne	.-14     	; 0x4454 <__ultoa_invert+0xa2>
    4462:	62 0f       	add	r22, r18
    4464:	73 1f       	adc	r23, r19
    4466:	84 1f       	adc	r24, r20
    4468:	95 1f       	adc	r25, r21
    446a:	a0 1d       	adc	r26, r0
    446c:	08 95       	ret

0000446e <__prologue_saves__>:
    446e:	2f 92       	push	r2
    4470:	3f 92       	push	r3
    4472:	4f 92       	push	r4
    4474:	5f 92       	push	r5
    4476:	6f 92       	push	r6
    4478:	7f 92       	push	r7
    447a:	8f 92       	push	r8
    447c:	9f 92       	push	r9
    447e:	af 92       	push	r10
    4480:	bf 92       	push	r11
    4482:	cf 92       	push	r12
    4484:	df 92       	push	r13
    4486:	ef 92       	push	r14
    4488:	ff 92       	push	r15
    448a:	0f 93       	push	r16
    448c:	1f 93       	push	r17
    448e:	cf 93       	push	r28
    4490:	df 93       	push	r29
    4492:	cd b7       	in	r28, 0x3d	; 61
    4494:	de b7       	in	r29, 0x3e	; 62
    4496:	ca 1b       	sub	r28, r26
    4498:	db 0b       	sbc	r29, r27
    449a:	0f b6       	in	r0, 0x3f	; 63
    449c:	f8 94       	cli
    449e:	de bf       	out	0x3e, r29	; 62
    44a0:	0f be       	out	0x3f, r0	; 63
    44a2:	cd bf       	out	0x3d, r28	; 61
    44a4:	09 94       	ijmp

000044a6 <__epilogue_restores__>:
    44a6:	2a 88       	ldd	r2, Y+18	; 0x12
    44a8:	39 88       	ldd	r3, Y+17	; 0x11
    44aa:	48 88       	ldd	r4, Y+16	; 0x10
    44ac:	5f 84       	ldd	r5, Y+15	; 0x0f
    44ae:	6e 84       	ldd	r6, Y+14	; 0x0e
    44b0:	7d 84       	ldd	r7, Y+13	; 0x0d
    44b2:	8c 84       	ldd	r8, Y+12	; 0x0c
    44b4:	9b 84       	ldd	r9, Y+11	; 0x0b
    44b6:	aa 84       	ldd	r10, Y+10	; 0x0a
    44b8:	b9 84       	ldd	r11, Y+9	; 0x09
    44ba:	c8 84       	ldd	r12, Y+8	; 0x08
    44bc:	df 80       	ldd	r13, Y+7	; 0x07
    44be:	ee 80       	ldd	r14, Y+6	; 0x06
    44c0:	fd 80       	ldd	r15, Y+5	; 0x05
    44c2:	0c 81       	ldd	r16, Y+4	; 0x04
    44c4:	1b 81       	ldd	r17, Y+3	; 0x03
    44c6:	aa 81       	ldd	r26, Y+2	; 0x02
    44c8:	b9 81       	ldd	r27, Y+1	; 0x01
    44ca:	ce 0f       	add	r28, r30
    44cc:	d1 1d       	adc	r29, r1
    44ce:	0f b6       	in	r0, 0x3f	; 63
    44d0:	f8 94       	cli
    44d2:	de bf       	out	0x3e, r29	; 62
    44d4:	0f be       	out	0x3f, r0	; 63
    44d6:	cd bf       	out	0x3d, r28	; 61
    44d8:	ed 01       	movw	r28, r26
    44da:	08 95       	ret

000044dc <__do_global_dtors>:
    44dc:	10 e0       	ldi	r17, 0x00	; 0
    44de:	c3 e6       	ldi	r28, 0x63	; 99
    44e0:	d0 e0       	ldi	r29, 0x00	; 0
    44e2:	04 c0       	rjmp	.+8      	; 0x44ec <__do_global_dtors+0x10>
    44e4:	fe 01       	movw	r30, r28
    44e6:	0e 94 f3 1d 	call	0x3be6	; 0x3be6 <__tablejump2__>
    44ea:	21 96       	adiw	r28, 0x01	; 1
    44ec:	c4 36       	cpi	r28, 0x64	; 100
    44ee:	d1 07       	cpc	r29, r17
    44f0:	c9 f7       	brne	.-14     	; 0x44e4 <__do_global_dtors+0x8>
    44f2:	f8 94       	cli

000044f4 <__stop_program>:
    44f4:	ff cf       	rjmp	.-2      	; 0x44f4 <__stop_program>
